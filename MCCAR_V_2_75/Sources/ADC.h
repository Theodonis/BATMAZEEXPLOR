/*
 * ADC.h
 *
 *  Created on: 17.01.2019
 *      Author: cc-isn
 */

#ifndef SOURCES_ADC_H_
#define SOURCES_ADC_H_

#include "ADC_0.h"
#include "ADC_1.h"
#include "PlatformConfiguration.h"



#define MIN_RAW_VALUE 		2.281
#define EXP_FIT 			25.37
#define MIDDLE_FIT 			41.22
#define FAR_FIT 			65

/* fit middle */
#define MIDDLE_FIT_COEF_1 	0.023806
#define MIDDLE_FIT_COEF_2 	-0.95409
#define MIDDLE_FIT_COEF_3 	43.8828

/* fit passage (exponential) */
#define EXP_FIT_COEF_A 		27.83
#define EXP_FIT_COEF_B 		0.008842
#define EXP_FIT_COEF_C 		-145.6
#define EXP_FIT_COEF_D 		-0.7865

/* fit far */
#define FAR_FIT_COEF_1 	3.5871e-5
#define FAR_FIT_COEF_2 	-0.0037334
#define FAR_FIT_COEF_3 	0.11943
#define FAR_FIT_COEF_4 	0
#define FAR_FIT_COEF_5 	0



typedef struct{
	uint16_t raw_Right;	/* Input	: */
	uint16_t raw_45Right;	/* Input	:  */
	uint16_t raw_MiddleL;	/* Output	: */
	uint16_t raw_MiddleR;	/* Output	: */
	uint16_t raw_45Left;	/* Output	: */
	uint16_t raw_Left;	/* Output	: */
	uint16_t raw_Right_old;	/* Input	: */
	uint16_t raw_Left_old;	/* Output	: */
	uint16_t raw_DRV1_IPROI;	/* Input	:  */
	uint16_t raw_DRV2_IPROI;	/* Output	: */
	uint16_t raw_HALF_U_BAT;	/* Output	: */
	uint16_t raw_I_TOT;	/* Output	: */
}raw_Values_t;

typedef struct ADC_data_{
	raw_Values_t raw_Values;
	//
	struct{
		float v_Right;	/* Input	: */
		float v_45Right;	/* Input	:  */
		float v_Middle;	/* Output	: */
		float v_45Left;	/* Output	: */
		float v_Left;	/* Output	: */
		float v_Bat;
		float I_Mot_R;
		float I_Mot_L;
	} voltage_Values;
	//
	struct{
		float mm_Right;	/* Input	: */
		uint8_t mm_45Right;	/* Input	:  */
		uint8_t mm_MiddleL;	/* Output	: */
		uint8_t mm_MiddleR;	/* Output	: */
		uint8_t mm_45Left;	/* Output	: */
		float mm_Left;	/* Output	: */
	}mm_Values;
}ADC_data_t;


void calcADC_data(ADC_data_t *pData);

float fitMiddle(float raw);
float fitExp(float raw);
float fitFar(float raw);
float get_half_U_Bat(void);

#ifdef DISTANCE_BIASED_ENABLE
	void set_dist_Bias(void);
#endif

static const uint8_t lookUpLeft[656] =
{
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		1,
		3,
		5,
		5,
		6,
		8,
		10,
		10,
		11,
		13,
		14,
		15,
		16,
		17,
		18,
		19,
		20,
		20,
		21,
		22,
		23,
		24,
		25,
		25,
		25,
		26,
		27,
		27,
		28,
		28,
		29,
		29,
		30,
		30,
		30,
		30,
		31,
		31,
		31,
		32,
		32,
		32,
		32,
		32,
		32,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		52,
		52,
		52,
		52,
		52,
		52,
		52,
		52,
		53,
		53,
		53,
		53,
		53,
		53,
		53,
		53,
		54,
		54,
		54,
		54,
		54,
		54,
		54,
		54,
		55,
		55,
		55,
		55,
		55,
		55,
		55,
		55,
		56,
		56,
		56,
		56,
		56,
		56,
		56,
		57,
		57,
		57,
		57,
		57,
		57,
		57,
		58,
		58,
		58,
		58,
		58,
		58,
		59,
		59,
		59,
		59,
		59,
		59,
		59,
		60,
		60,
		60,
		60,
		60,
		61,
		61,
		61,
		61,
		61,
		62,
		62,
		62,
		62,
		62,
		63,
		63,
		63,
		63,
		63,
		64,
		64,
		64,
		64,
		65,
		65,
		65,
		65,
		65,
		66,
		66,
		66,
		66,
		67,
		67,
		67,
		67,
		68,
		68,
		68,
		68,
		69,
		69,
		69,
		69,
		70,
		70,
		70,
		71,
		71,
		71,
		71,
		72,
		72,
		72,
		72,
		73,
		73,
		73,
		74,
		74,
		74,
		75,
		75,
		75,
		76,
		76,
		76,
		76,
		77,
		77,
		78,
		78,
		78,
		79,
		79,
		80,
		80,
		80,
		80,
		81,
		81,
		82,
		82,
		83,
		83,
		84,
		84,
		85,
		85,
		86,
		86,
		86,
		87,
		87,
		88,
		88,
		89,
		90,
		90,
		90,
		91,
		92,
		92,
		93,
		94,
		94,
		94,
		95,
		96,
		97,
		98,
		98,
		99,
		99,
		100,
		101,
		102,
		103,
		104,
		105,
		106,
		106,
		107,
		109,
		110,
		110,
		111,
		112,
		114,
		114,
		115,
		116,
		118,
		119,
		119,
		121,
		122,
		124,
		126,
		126,
		128,
		130,
		131,
		131,
		133,
		135,
		136,
		138,
		140,
		140,
		142,
		144,
		144,
		147,
		149,
		149,
		152,
		155,
		157,
		160,
		163,
		166,
		170,
		173,
		176,
		180,
		183,
		187,
		191,
		195,
		199,
		204,
		208,
		213,
		218,
		223,
		228,
		233,
		239,
		244,
		250,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,


};

static const uint8_t lookUpRight[656] =
{
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		3,
		5,
		5,
		6,
		8,
		10,
		10,
		11,
		13,
		14,
		15,
		16,
		17,
		18,
		19,
		20,
		20,
		21,
		22,
		23,
		24,
		25,
		25,
		25,
		26,
		27,
		27,
		28,
		28,
		29,
		29,
		30,
		30,
		30,
		30,
		31,
		31,
		31,
		32,
		32,
		32,
		32,
		32,
		32,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		33,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		34,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		52,
		52,
		52,
		52,
		52,
		52,
		52,
		52,
		53,
		53,
		53,
		53,
		53,
		53,
		53,
		53,
		54,
		54,
		54,
		54,
		54,
		54,
		54,
		54,
		55,
		55,
		55,
		55,
		55,
		55,
		55,
		55,
		56,
		56,
		56,
		56,
		56,
		56,
		56,
		57,
		57,
		57,
		57,
		57,
		57,
		57,
		58,
		58,
		58,
		58,
		58,
		58,
		59,
		59,
		59,
		59,
		59,
		59,
		59,
		60,
		60,
		60,
		60,
		60,
		61,
		61,
		61,
		61,
		61,
		62,
		62,
		62,
		62,
		62,
		63,
		63,
		63,
		63,
		63,
		64,
		64,
		64,
		64,
		65,
		65,
		65,
		65,
		65,
		66,
		66,
		66,
		66,
		67,
		67,
		67,
		67,
		68,
		68,
		68,
		68,
		69,
		69,
		69,
		69,
		70,
		70,
		70,
		71,
		71,
		71,
		71,
		72,
		72,
		72,
		72,
		73,
		73,
		73,
		74,
		74,
		74,
		75,
		75,
		75,
		76,
		76,
		76,
		76,
		77,
		77,
		78,
		78,
		78,
		79,
		79,
		80,
		80,
		80,
		80,
		81,
		81,
		82,
		82,
		83,
		83,
		84,
		84,
		85,
		85,
		86,
		86,
		86,
		87,
		87,
		88,
		88,
		89,
		90,
		90,
		90,
		91,
		92,
		92,
		93,
		94,
		94,
		94,
		95,
		96,
		97,
		98,
		98,
		99,
		99,
		100,
		101,
		102,
		103,
		104,
		105,
		106,
		106,
		107,
		109,
		110,
		110,
		111,
		112,
		114,
		114,
		115,
		116,
		118,
		119,
		119,
		121,
		122,
		124,
		126,
		126,
		128,
		130,
		131,
		131,
		133,
		135,
		136,
		138,
		140,
		140,
		142,
		144,
		144,
		147,
		149,
		149,
		152,
		155,
		157,
		160,
		163,
		166,
		170,
		173,
		176,
		180,
		183,
		187,
		191,
		195,
		199,
		204,
		208,
		213,
		218,
		223,
		228,
		233,
		239,
		244,
		250,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,

};




static const uint8_t lookUpMiddle[656] =
{
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		2,
		4,
		5,
		6,
		7,
		9,
		10,
		11,
		11,
		13,
		14,
		15,
		16,
		17,
		18,
		19,
		20,
		20,
		21,
		22,
		23,
		23,
		23,
		24,
		25,
		26,
		26,
		27,
		28,
		28,
		29,
		29,
		29,
		30,
		30,
		31,
		31,
		32,
		32,
		32,
		33,
		33,
		33,
		34,
		34,
		34,
		34,
		35,
		35,
		35,
		35,
		35,
		35,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		35,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		36,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		37,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		38,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		39,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		40,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		41,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		42,
		43,
		43,
		43,
		43,
		43,
		43,
		43,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		44,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		45,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		46,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		47,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		48,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		49,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		50,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		51,
		52,
		52,
		52,
		52,
		52,
		52,
		52,
		53,
		53,
		53,
		53,
		53,
		53,
		53,
		54,
		54,
		54,
		54,
		54,
		54,
		54,
		55,
		55,
		55,
		55,
		55,
		55,
		55,
		56,
		56,
		56,
		56,
		56,
		56,
		57,
		57,
		57,
		57,
		57,
		58,
		58,
		58,
		58,
		58,
		58,
		59,
		59,
		59,
		59,
		59,
		59,
		60,
		60,
		60,
		60,
		60,
		61,
		61,
		61,
		61,
		61,
		62,
		62,
		62,
		62,
		62,
		63,
		63,
		63,
		63,
		63,
		64,
		64,
		64,
		64,
		65,
		65,
		65,
		65,
		65,
		66,
		66,
		66,
		66,
		66,
		67,
		67,
		67,
		67,
		68,
		68,
		68,
		68,
		69,
		69,
		69,
		69,
		70,
		70,
		70,
		70,
		71,
		71,
		71,
		71,
		71,
		72,
		72,
		72,
		72,
		73,
		73,
		73,
		74,
		74,
		74,
		74,
		75,
		75,
		75,
		76,
		76,
		76,
		76,
		77,
		77,
		77,
		78,
		78,
		78,
		79,
		79,
		79,
		80,
		80,
		80,
		81,
		81,
		81,
		82,
		82,
		83,
		83,
		84,
		84,
		84,
		84,
		85,
		85,
		86,
		86,
		87,
		87,
		88,
		88,
		89,
		89,
		90,
		90,
		91,
		91,
		92,
		93,
		93,
		94,
		94,
		95,
		95,
		96,
		97,
		98,
		98,
		99,
		100,
		100,
		101,
		102,
		103,
		103,
		104,
		105,
		105,
		106,
		107,
		108,
		110,
		110,
		111,
		112,
		113,
		114,
		115,
		115,
		117,
		118,
		119,
		121,
		121,
		122,
		124,
		125,
		126,
		127,
		128,
		130,
		130,
		132,
		133,
		135,
		135,
		137,
		139,
		140,
		141,
		143,
		144,
		145,
		147,
		149,
		150,
		152,
		154,
		156,
		159,
		161,
		164,
		167,
		169,
		172,
		175,
		178,
		181,
		185,
		188,
		191,
		195,
		198,
		202,
		206,
		210,
		214,
		218,
		222,
		226,
		231,
		235,
		240,
		245,
		250,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,
		255,


};


#endif /* SOURCES_ADC_H_ */

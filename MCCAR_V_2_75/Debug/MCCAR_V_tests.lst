
MCCAR_V_tests.elf:     file format elf32-littlearm
MCCAR_V_tests.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00004505

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000198 memsz 0x00000198 flags r--
    LOAD off    0x00008400 vaddr 0x00000400 paddr 0x00000400 align 2**15
         filesz 0x00000010 memsz 0x00000010 flags r--
    LOAD off    0x00008410 vaddr 0x00000410 paddr 0x00000410 align 2**15
         filesz 0x0000de0c memsz 0x0000de0c flags rwx
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x0000e21c align 2**15
         filesz 0x000000f0 memsz 0x000000f0 flags rw-
    LOAD off    0x0001b678 vaddr 0x20023678 paddr 0x0000e30c align 2**15
         filesz 0x00000024 memsz 0x00000024 flags rw-
    LOAD off    0x000200f0 vaddr 0x200000f0 paddr 0x0000e310 align 2**15
         filesz 0x00000000 memsz 0x00023588 flags rw-
    LOAD off    0x0001b69c vaddr 0x2002369c paddr 0x0000e330 align 2**15
         filesz 0x00000000 memsz 0x00000400 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .interrupts   00000198  00000000  00000000  00008000  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .cfmprotect   00000010  00000400  00000400  00008400  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0000ddfc  00000410  00000410  00008410  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM          00000008  0000e20c  0000e20c  0001620c  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0000e214  0000e214  00016214  2**2  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0000e218  0000e218  00016218  2**2  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000000f0  20000000  0000e21c  00018000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00023588  200000f0  0000e310  000200f0  2**3  ALLOC
  8 .romp         00000024  20023678  0000e30c  0001b678  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 ._user_heap_stack 00000400  2002369c  0000e330  0001b69c  2**0  ALLOC
 10 .ARM.attributes 00000030  00000000  00000000  0001b69c  2**0  CONTENTS, READONLY
 11 .debug_info   0001e19a  00000000  00000000  0001b6cc  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 0000792c  00000000  00000000  00039866  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 00001eb8  00000000  00000000  00041192  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00001908  00000000  00000000  0004304a  2**0  CONTENTS, READONLY, DEBUGGING
 15 .debug_macro  0003f431  00000000  00000000  00044952  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   00022232  00000000  00000000  00083d83  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    000eec08  00000000  00000000  000a5fb5  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment      00000070  00000000  00000000  00194bbd  2**0  CONTENTS, READONLY
 19 .debug_frame  00005bbc  00000000  00000000  00194c30  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .interrupts	00000000 .interrupts
00000400 l    d  .cfmprotect	00000000 .cfmprotect
00000410 l    d  .text	00000000 .text
0000e20c l    d  .ARM	00000000 .ARM
0000e214 l    d  .init_array	00000000 .init_array
0000e218 l    d  .fini_array	00000000 .fini_array
20000000 l    d  .data	00000000 .data
200000f0 l    d  .bss	00000000 .bss
20023678 l    d  .romp	00000000 .romp
2002369c l    d  ._user_heap_stack	00000000 ._user_heap_stack
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 Vectors.c
00000000 l    df *ABS*	00000000 CPU_Init.c
0000ddc8 l     O .text	00000080 ClockGenModeMatrix
0000de48 l     O .text	0000001c CPU_ClockConfigDescriptors
0000de64 l     O .text	00000008 CPU_DefaultFEI
0000de6c l     O .text	00000008 CPU_DefaultFBI
0000de74 l     O .text	00000008 CPU_DefaultBLPI
0000de7c l     O .text	00000008 CPU_DefaultFEE
0000de84 l     O .text	00000008 CPU_DefaultFBE
0000de8c l     O .text	00000008 CPU_DefaultBLPE
0000de94 l     O .text	00000008 CPU_DefaultPBE
0000de9c l     O .text	00000008 CPU_DefaultPEE
0000dea4 l     O .text	00000020 CPU_ClockGenModeRegs
00000000 l    df *ABS*	00000000 crtstuff.c
0000e1f4 l     O .text	00000000 __EH_FRAME_BEGIN__
00000410 l     F .text	00000000 __do_global_dtors_aux
200000f0 l       .bss	00000000 completed.7863
0000e218 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00000434 l     F .text	00000000 frame_dummy
200000f4 l       .bss	00000000 object.7868
0000e214 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 c:/freescale/kds_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/../../../../arm-none-eabi/lib/armv7e-m/fpu/crt0.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 ADC.c
20000110 l     O .bss	00000004 left_raw.6837
20000114 l     O .bss	00000004 right_raw.6838
20000118 l     O .bss	00000004 middleL_raw.6839
2000011c l     O .bss	00000004 middleR_raw.6840
00000000 l    df *ABS*	00000000 Application.c
20000120 l     O .bss	00000001 ms_Flag
20000000 l     O .data	00000001 exploFinishFlag
00000000 l    df *ABS*	00000000 Encoder.c
00000000 l    df *ABS*	00000000 Event.c
20000124 l     O .bss	00000004 EVNT_Events
00000000 l    df *ABS*	00000000 Events.c
00000000 l    df *ABS*	00000000 Exploration_Drive.c
00000000 l    df *ABS*	00000000 Exploring_Com.c
0000dec4 l     O .text	00000008 CmdParserTable
00000000 l    df *ABS*	00000000 FSM.c
20000001 l     O .data	00000001 actMainState
00000000 l    df *ABS*	00000000 IMU.c
00003514 l     F .text	00000060 SPI_WriteRead
00000000 l    df *ABS*	00000000 Logging.c
00003a24 l     F .text	00000026 putStream
00000000 l    df *ABS*	00000000 Motor.c
00000000 l    df *ABS*	00000000 PID.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 startup.c
0000451e l       .text	00000000 skip_sp
00000000 l    df *ABS*	00000000 ADC_0.c
20000129 l     O .bss	00000001 EnUser
2000012a l     O .bss	00000001 ModeFlg
2000012c l     O .bss	00000005 SampleGroup
20000134 l     O .bss	00000001 OutFlg
00004538 l     F .text	00000084 ADC_0_MainMeasure
00000000 l    df *ABS*	00000000 ADC_1.c
20000135 l     O .bss	00000001 ModeFlg
20000138 l     O .bss	00000005 SampleGroup
20000140 l     O .bss	00000001 OutFlg
000046e4 l     F .text	0000008c ADC_1_MainMeasure
00000000 l    df *ABS*	00000000 AS_BLE.c
20000142 l     O .bss	00000002 SerFlag
20000144 l     O .bss	00000002 AS_BLE_InpLen
20000146 l     O .bss	00000002 InpIndexR
20000148 l     O .bss	00000002 InpIndexW
2000014c l     O .bss	000000b4 InpBuffer
20000200 l     O .bss	00000001 BufferRead
20000202 l     O .bss	00000002 AS_BLE_OutLen
20000204 l     O .bss	00000002 OutIndexR
20000206 l     O .bss	00000002 OutIndexW
20000208 l     O .bss	000000b4 OutBuffer
0000482c l     F .text	0000001c HWEnDi
00000000 l    df *ABS*	00000000 AS_PRG.c
200002bc l     O .bss	00000002 SerFlag
200002be l     O .bss	00000002 AS_PRG_InpLen
200002c0 l     O .bss	00000002 InpIndexR
200002c2 l     O .bss	00000002 InpIndexW
200002c4 l     O .bss	00000040 InpBuffer
20000304 l     O .bss	00000001 BufferRead
20000306 l     O .bss	00000002 AS_PRG_OutLen
20000308 l     O .bss	00000002 OutIndexR
2000030a l     O .bss	00000002 OutIndexW
2000030c l     O .bss	00000040 OutBuffer
00004d44 l     F .text	0000001c HWEnDi
00000000 l    df *ABS*	00000000 ASerialLdd1.c
2000034c l     O .bss	00000020 DeviceDataPrv__DEFAULT_RTOS_ALLOC
2000036c l     O .bss	00000004 INT_UART3_RX_TX__DEFAULT_RTOS_ISRPARAM
20000370 l     O .bss	00000004 INT_UART3_ERR__DEFAULT_RTOS_ISRPARAM
000052a4 l     F .text	00000058 InterruptRx
000052fc l     F .text	00000080 InterruptTx
00000000 l    df *ABS*	00000000 ASerialLdd2.c
20000374 l     O .bss	00000020 DeviceDataPrv__DEFAULT_RTOS_ALLOC
20000394 l     O .bss	00000004 INT_UART0_RX_TX__DEFAULT_RTOS_ISRPARAM
20000398 l     O .bss	00000004 INT_UART0_ERR__DEFAULT_RTOS_ISRPARAM
00005804 l     F .text	00000058 InterruptRx
0000585c l     F .text	00000080 InterruptTx
00000000 l    df *ABS*	00000000 AdcLdd2.c
0000decc l     O .text	00000005 ChannelToPin
2000039c l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 AdcLdd3.c
0000ded4 l     O .text	00000005 ChannelToPin
200003a4 l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd1.c
200003ac l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd10.c
200003b0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd14.c
200003b4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd15.c
200003b8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd16.c
200003bc l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd17.c
200003c0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd18.c
200003c4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd19.c
200003c8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd2.c
200003cc l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd20.c
200003d0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd21.c
200003d4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd22.c
200003d8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd23.c
200003dc l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd24.c
200003e0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd25.c
200003e4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd26.c
200003e8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd27.c
200003ec l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd28.c
200003f0 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd29.c
200003f4 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd3.c
200003f8 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd30.c
200003fc l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd31.c
20000400 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd32.c
20000404 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd33.c
20000408 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd34.c
2000040c l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd35.c
20000410 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd36.c
20000414 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd37.c
20000418 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd38.c
2000041c l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd39.c
20000420 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd4.c
20000424 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd40.c
20000428 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd41.c
2000042c l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd5.c
20000430 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd6.c
20000434 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd7.c
20000438 l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 BitIoLdd8.c
2000043c l     O .bss	00000004 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 CI2C1.c
20000440 l     O .bss	00000018 DeviceDataPrv__DEFAULT_RTOS_ALLOC
20000458 l     O .bss	00000004 INT_I2C0__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 CLS_BLE.c
20000004 l     O .data	00000004 CLS_BLE_currStdIO
00007ed8 l     F .text	0000006e SendSeparatedStrings
00000000 l    df *ABS*	00000000 CS1.c
00000000 l    df *ABS*	00000000 Cpu.c
00000000 l    df *ABS*	00000000 DacLdd1.c
2000045c l     O .bss	00000008 DeviceDataPtr__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 DacLdd2.c
20000464 l     O .bss	00000008 DeviceDataPtr__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 Distance_INT.c
00000000 l    df *ABS*	00000000 FreeCntrLdd1.c
2000046c l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 GI2C1.c
20000478 l     O .bss	00000008 GI2C1_deviceData
00000000 l    df *ABS*	00000000 LED_BLUE_F_L.c
00000000 l    df *ABS*	00000000 LED_BLUE_F_R.c
00000000 l    df *ABS*	00000000 LED_GREEN_F_L.c
00000000 l    df *ABS*	00000000 LED_GREEN_F_R.c
00000000 l    df *ABS*	00000000 LED_RED_F_L.c
00000000 l    df *ABS*	00000000 LED_RED_F_R.c
00000000 l    df *ABS*	00000000 MCUC1.c
00000000 l    df *ABS*	00000000 SM1.c
20000544 l     O .bss	00000001 SerFlag
20000545 l     O .bss	00000001 ErrFlag
20000546 l     O .bss	00000002 SM1_InpLen
20000548 l     O .bss	00000001 InpIndexR
20000549 l     O .bss	00000001 InpIndexW
2000054c l     O .bss	00000010 InpBuffer
2000055c l     O .bss	00000002 BufferRead
2000055e l     O .bss	00000002 SM1_OutLen
20000560 l     O .bss	00000001 OutIndexR
20000561 l     O .bss	00000001 OutIndexW
20000564 l     O .bss	00000010 OutBuffer
20000574 l     O .bss	00000001 OnFreeTxBufSemaphore
00000000 l    df *ABS*	00000000 SMasterLdd1.c
20000578 l     O .bss	00000020 DeviceDataPrv__DEFAULT_RTOS_ALLOC
20000598 l     O .bss	00000004 INT_SPI0__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 TU3.c
2000059c l     O .bss	0000000c DeviceDataPrv__DEFAULT_RTOS_ALLOC
200005a8 l     O .bss	00000004 INT_FTM0__DEFAULT_RTOS_ISRPARAM
00000000 l    df *ABS*	00000000 TU5.c
200005ac l     O .bss	00000008 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 TimerIntLdd1.c
200005b4 l     O .bss	00000014 DeviceDataPrv__DEFAULT_RTOS_ALLOC
00000000 l    df *ABS*	00000000 UTIL1.c
00009454 l     F .text	00000096 ShiftRightAndFill
00000000 l    df *ABS*	00000000 WAIT1.c
00009948 l       .text	00000000 loop
00000000 l    df *ABS*	00000000 XF1.c
00000000 l    df *ABS*	00000000 Driving.c
200005cc l     O .bss	00000001 exploDriveFlag_to_reinit_Drving
20000008 l     O .data	0000000c q.7955
20000014 l     O .data	0000000c q_r.7956
200005d0 l     O .bss	00000008 vc_dot.7957
200005d8 l     O .bss	00000004 q_r_1.7958
200005dc l     O .bss	00000001 TargetPointsCalculated.7959
200005e0 l     O .bss	000001ec SegmentTargets.7960
200007cc l     O .bss	000001ec SegmentTargetsNull.7961
200009b8 l     O .bss	00000004 theta_target.7962
20000020 l     O .data	00000001 SegmentFinished.7963
20000021 l     O .data	00000001 SegmentType.7964
200009bc l     O .bss	00000001 NewStraightSegment.7965
200009bd l     O .bss	00000001 watchingWall.7966
200009be l     O .bss	00000001 SegmentNumber.7967
200009c0 l     O .bss	00000004 path.7968
200009c4 l     O .bss	00000004 path_next.7969
200009c8 l     O .bss	00000004 path_prev.7970
200009cc l     O .bss	00000004 ds.7971
20000024 l     O .data	00000004 ds_before_curve.7972
200009d0 l     O .bss	00000004 ds_driven.7973
200009d4 l     O .bss	00000001 Nr_of_field_in_segment.7974
200009d8 l     O .bss	00000002 wall_availability_calculated.7975
200009dc l     O .bss	00000002 wall_availability_calculatedNull.7976
200009e0 l     O .bss	00000002 wall_availability_fusion.7977
200009e4 l     O .bss	00000002 wall_availability_fusionNull.7978
200009e8 l     O .bss	00000004 t1.7979
200009ec l     O .bss	00000004 t2.7980
200009f0 l     O .bss	00000004 t3.7981
200009f4 l     O .bss	00000004 timeWhenWatchingEndOfWall.7982
200009f8 l     O .bss	00000008 v_ref.7983
20000a00 l     O .bss	00000004 v_prev.7984
20000a04 l     O .bss	00000008 v_est.7985
20000a0c l     O .bss	00000008 n_rpm.7986
20000a14 l     O .bss	00000008 M.7987
20000a1c l     O .bss	00000008 U_mot.7988
20000a24 l     O .bss	00000008 I_mot.7989
20000028 l     O .data	00000004 v_next.7990
20000a2c l     O .bss	00000004 SegmentTime.7991
20000a30 l     O .bss	0000000c distance.7992
20000a3c l     O .bss	0000000c distanceNull.7993
20000a48 l     O .bss	00000010 distanceLP.7995
20000a58 l     O .bss	00000010 distanceLPNull.7996
20000a68 l     O .bss	00000008 d_right_history.7997
20000a70 l     O .bss	00000008 d_left_history.7998
20000a78 l     O .bss	00000004 d_hp_filtered.7999
20000a7c l     O .bss	00000010 distance_HP.8000
20000a8c l     O .bss	00000010 distance_HPNull.8001
20000a9c l     O .bss	00000002 wall_availability_distance_sensors.8002
20000aa0 l     O .bss	00000002 wall_availability_distance_sensorsNull.8003
20000aa4 l     O .bss	00000010 distanceBandpass.8004
20000ab4 l     O .bss	00000010 distanceBandpassNull.8005
20000ac4 l     O .bss	00000002 wallStateDistanceSensors.8006
20000ac8 l     O .bss	00000002 wallStateDistanceSensorsNull.8007
20000acc l     O .bss	00000004 theta.8008
20000ad0 l     O .bss	00000004 wallCenterDivergence.8009
20000ad4 l     O .bss	00000004 weightDistanceSensor.8010
20000ad8 l     O .bss	00000004 x_IMU_dot_test.8011
20000adc l     O .bss	00000004 x_enc_test.8012
20000ae0 l     O .bss	00000004 u_bat.8013
20000ae4 l     O .bss	00000008 gyroXY.8014
20000aec l     O .bss	00000008 vc_logging.8015
20000af4 l     O .bss	00000008 I_mot_ist.8016
2000002c l     O .data	00000004 distancePointer.7994
00000000 l    df *ABS*	00000000 SegmentTargetComputation.c
00000000 l    df *ABS*	00000000 TrackingControl.c
20000b34 l     O .bss	0000000c q_dot.7128
20000b40 l     O .bss	00000001 quadrant.7129
00000000 l    df *ABS*	00000000 VelocityEstimation.c
20000b44 l     O .bss	00000008 imu_data.7123
20000b4c l     O .bss	00000008 x_enc.7124
20000b54 l     O .bss	00000004 theta_dot_IMU_est.7154
20000b58 l     O .bss	00000004 shorterDistance.7156
20000b5c l     O .bss	00000008 x_enc_prev.7142
20000b64 l     O .bss	00000008 x_enc_dot.7143
20000b6c l     O .bss	00000004 x_enc_fwd_dot.7144
20000b70 l     O .bss	00000004 x_IMU_dot.7140
20000b74 l     O .bss	00000004 x_IMU_dot_prev.7141
20000b78 l     O .bss	00000004 x_IMU_est.7145
20000b7c l     O .bss	00000004 x_Enc_est.7146
00000000 l    df *ABS*	00000000 dftrig.c
0000ccf8 l     F .text	00000070 _degrees_value_normalize
0000cd68 l     F .text	0000008a _sin__get_by_deg_0_90
00000000 l    df *ABS*	00000000 w_exp.c
00000000 l    df *ABS*	00000000 w_sqrt.c
00000000 l    df *ABS*	00000000 wf_sqrt.c
00000000 l    df *ABS*	00000000 e_exp.c
0000e0b8 l     O .text	00000010 halF
0000e0c8 l     O .text	00000010 ln2LO
0000e0d8 l     O .text	00000010 ln2HI
00000000 l    df *ABS*	00000000 e_sqrt.c
00000000 l    df *ABS*	00000000 ef_sqrt.c
00000000 l    df *ABS*	00000000 s_finite.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 sf_fpclassify.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 impure.c
20000088 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 c:/freescale/kds_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv7e-m/fpu/crti.o
00000000 l    df *ABS*	00000000 c:/freescale/kds_v3/toolchain/bin/../lib/gcc/arm-none-eabi/4.8.4/armv7e-m/fpu/crtn.o
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 PE_LDD.c
00000000 l    df *ABS*	00000000 
00000400 l       *ABS*	00000000 __stack_size
00100000 l       *ABS*	00000000 text_end
20000000 l       .data	00000000 _sdata
0000e330 l       .fini_array	00000000 data_init_end
1fff0000 l       .data	00000000 ___m_data_1FFF0000_RAMStart
0000e21c l       .fini_array	00000000 ___ROM_AT
00000000 l       *ABS*	00000000 __heap_size
2002369c l       ._user_heap_stack	00000000 end
1fff0000 l       .data	00000000 ___m_data_1FFF0000_RAMEnd
0000e30c l       .fini_array	00000000 ___m_data_1FFF0000_ROMStart
0000e218 l       .init_array	00000000 __init_array_end
0000e214 l       .init_array	00000000 __preinit_array_end
20030000 l       *ABS*	00000000 _estack
200000f0 l       .data	00000000 _edata
0000e214 l       .init_array	00000000 __init_array_start
0000e214 l       .init_array	00000000 __preinit_array_start
2002369c g       ._user_heap_stack	00000000 __HeapBase
00000d40 g     F .text	00000012 .hidden __aeabi_dcmple
00004018 g     F .text	00000034 deinitMotors
00007518 g     F .text	0000001c BitIoLdd5_NegVal
00000c7c g     F .text	0000007a .hidden __cmpdf2
20001284 g     O .bss	00000002 detect_counter
00002cc8 g     F .text	00000070 turn_right
0000d040 g     F .text	000000bc sqrt
0000856c g     F .text	00000028 CI2C1_OnMasterBlockReceived
00000c7c g     F .text	0000007a .hidden __eqdf2
00006258 g     F .text	00000074 BitIoLdd17_Init
0000904c g     F .text	0000001c TU3_GetEventMask
00004610 g     F .text	00000038 PE_ADC_0_Measure
00007b44 g     F .text	00000030 CLS_BLE_SendStr
20000060 g     O .data	00000024 T_e
0000dedc g     O .text	00000010 CLS_BLE_stdio
00002a70 g     F .text	0000000c Cpu_OnNMI
00009a20 g     F .text	00001068 Driving
20023660 g     O .bss	00000004 ASerialLdd1_DeviceDataPtr
0000697c g     F .text	00000080 BitIoLdd27_Init
000007ec g     F .text	0000005a .hidden __floatdidf
000065a8 g     F .text	00000080 BitIoLdd21_Init
00002aa0 g     F .text	0000000c SM1_OnFullRxBuf
00006578 g     F .text	00000030 BitIoLdd20_GetVal
000061b4 g     F .text	00000074 BitIoLdd16_Init
00002274 g     F .text	00000024 Init_GPIOs
000037c0 g     F .text	000000b4 Get_G_Axes_1
000036cc g     F .text	00000032 Get_X_AxesRaw_1
00006f40 g     F .text	00000020 BitIoLdd35_ClrVal
000085dc g     F .text	00000014 LED_GREEN_F_L_Init
0000abf0 g     F .text	00000fac SegmentTargetComputation
2002369c g       ._user_heap_stack	00000000 __heap_addr
2000010c g     O .bss	00000001 SR_lock
20001250 g     O .bss	00000018 rpm_R_array
000029cc g     F .text	00000098 EVNT_HandleEvent
0000aae0 g     F .text	0000003c setMotorCurrent
000084f4 g     F .text	00000050 FreeCntrLdd1_Init
00006e00 g     F .text	00000080 BitIoLdd34_Init
000034f4 g     F .text	00000020 setState
0000aa88 g     F .text	0000004c MotorCurrentComputationForDesiredTorque
00009068 g     F .text	00000044 TU3_SetOffsetTicks
00005f90 g     F .text	00000020 BitIoLdd1_NegVal
00006f60 g     F .text	00000020 BitIoLdd35_SetVal
0000e214 g       .ARM	00000000 __exidx_end
00008a0c g     F .text	000000cc SMasterLdd1_OnBlockSent
00009a04 g     F .text	0000000c WAIT1_Init
00002a94 g     F .text	0000000c SM1_OnError
00004800 g     F .text	0000002c ADC_1_Init
00004c88 g     F .text	00000098 ASerialLdd1_OnError
00007240 g     F .text	00000080 BitIoLdd4_Init
00006dc0 g     F .text	00000020 BitIoLdd33_ClrVal
00000e80 g     F .text	00000018 CPU_SetBASEPRI
00000c6c g     F .text	0000008a .hidden __gtdf2
0000d7c4 g     F .text	0000000c __errno
20000b08 g     O .bss	0000000c e_p
20000afc g     O .bss	0000000c q_r_dot
00006710 g     F .text	0000001c BitIoLdd22_ClrVal
2000129c g     O .bss	00000002 ji
00004920 g     F .text	000000dc AS_BLE_SendChar
00008d38 g     F .text	0000012c SMasterLdd1_Interrupt
000064e4 g     F .text	00000020 BitIoLdd2_SetVal
00005ed0 g     F .text	00000080 BitIoLdd1_Init
0000e20c g       .text	00000000 _etext
0000df1c g     O .text	00000010 BbarInv
00006134 g     F .text	00000080 BitIoLdd15_Init
000098f4 g     F .text	0000003a UTIL1_strcatNumFloat
0000cf04 g     F .text	00000030 cos_lut
00000000 g       *ABS*	00000000 ___m_data_1FFF0000_ROMSize
00000d08 g     F .text	00000010 .hidden __aeabi_cdcmple
000073a0 g     F .text	00000080 BitIoLdd41_Init
000045bc g     F .text	00000054 ADC_0_HWEnDi
00000000 g     O .interrupts	00000198 __vect_table
20000b1c g     O .bss	00000008 vc_prev
00006af0 g     F .text	0000001c BitIoLdd29_ClrVal
00001538 g     F .text	0000058c calcADC_data
000099a0 g     F .text	00000036 WAIT1_WaitLongCycles
000075b4 g     F .text	0000001c BitIoLdd6_ClrVal
0000d0fc g     F .text	000000b8 sqrtf
00007380 g     F .text	00000020 BitIoLdd40_SetVal
00004798 g     F .text	00000068 ADC_1_GetValue16
20000b88 g     O .bss	000000c8 pidData_R
00001d78 g     F .text	00000058 get_half_U_Bat
00004d20 g     F .text	00000024 ASerialLdd1_OnBreak
00006690 g     F .text	00000080 BitIoLdd22_Init
0000d844 g     F .text	00000012 memcpy
00008604 g     F .text	00000014 LED_RED_F_L_Init
000046b0 g     F .text	00000034 ADC_0_Init
00000cf8 g     F .text	00000020 .hidden __aeabi_cdrcmple
0000362c g     F .text	00000050 LSM6DSL_ACC_GYRO_GetRawAccData_1
0000077c g     F .text	00000022 .hidden __floatsidf
00006a70 g     F .text	00000080 BitIoLdd29_Init
20000c50 g     O .bss	000000c8 pidData_L
00000c74 g     F .text	00000082 .hidden __ltdf2
00005cc4 g     F .text	000000d8 AdcLdd3_Init
00007de8 g     F .text	00000018 CLS_BLE_GetStdio
0000e214 g       .init_array	00000000 __DTOR_END__
000067c8 g     F .text	0000001c BitIoLdd23_ClrVal
20000d18 g     O .bss	000000c8 pidData_UC
00007f48 g     F .text	00000022 CLS_BLE_SendHelpStr
0000d72c g     F .text	00000054 __fpclassifyd
00008618 g     F .text	00000014 LED_RED_F_R_Init
00007f90 g     F .text	00000024 CLS_BLE_ReadChar
00006658 g     F .text	0000001c BitIoLdd21_ClrVal
200000f0 g       .bss	00000000 __START_BSS
00004848 g     F .text	000000d8 AS_BLE_RecvChar
20023640 g     O .bss	00000004 AdcLdd2_DeviceDataPtr
00004b0c g     F .text	00000018 AS_BLE_GetCharsInRxBuf
000062cc g     F .text	00000030 BitIoLdd17_GetVal
2002366c g     O .bss	00000004 sum
00006748 g     F .text	00000080 BitIoLdd23_Init
000088a8 g     F .text	00000084 SM1_Init
2002369c g       ._user_heap_stack	00000000 __HeapLimit
0000d784 g     F .text	00000038 __fpclassifyf
200000f0 g       .bss	00000000 __bss_start__
000083bc g     F .text	00000048 DacLdd1_SetValue
0000075c g     F .text	0000001e .hidden __aeabi_ui2d
20000b2c g     O .bss	00000008 MbarTimesU
000004d8 g     F .text	00000000 .hidden __aeabi_drsub
00008594 g     F .text	00000020 GI2C1_Init
00006de0 g     F .text	00000020 BitIoLdd33_SetVal
00005fb0 g     F .text	00000080 BitIoLdd10_Init
0000ab1c g     F .text	000000d4 HeadingDirectionComputation
000097e8 g     F .text	0000010c UTIL1_NumFloatToStr
20023670 g     O .bss	00000004 k
00000d2c g     F .text	00000012 .hidden __aeabi_dcmplt
00006bcc g     F .text	00000074 BitIoLdd30_Init
00002a7c g     F .text	0000000c SM1_OnRxChar
00007040 g     F .text	00000080 BitIoLdd37_Init
00004dc0 g     F .text	0000007c ASerialLdd2_OnBlockReceived
0000151c g     F .text	00000016 UnhandledInterrupt
00003bdc g     F .text	000003b8 printSaveData
000007a0 g     F .text	0000003a .hidden __extendsfdf2
00000a9c g     F .text	000001d0 .hidden __aeabi_ddiv
00002298 g     F .text	000000f4 Init_Maze
20000de0 g     O .bss	00000002 temp
00004504 g     F .text	00000034 __thumb_startup
000004e4 g     F .text	00000276 .hidden __adddf3
00002240 g     F .text	00000034 Timer_1ms_Int
00004f5c g     F .text	00000024 ASerialLdd2_OnBreak
00009584 g     F .text	0000012c UTIL1_Num32sToStr
000096b0 g     F .text	000000e4 UTIL1_Num32uToStr
00002578 g     F .text	000001dc APP_Start
0000e20c g       .ARM	00000000 __exidx_start
00004b84 g     F .text	0000007c ASerialLdd1_OnBlockReceived
00002f10 g     F .text	00000280 TEST_BLE_ParseCommand
00002aac g     F .text	0000000c SM1_OnFreeTxBuf
00000848 g     F .text	00000254 .hidden __aeabi_dmul
00002e1c g     F .text	0000005c turn_r
20000084 g     O .data	00000001 __fdlib_version
000099d8 g     F .text	0000002c WAIT1_Waitms
0000e0ec g     O .text	00000004 _global_impure_ptr
00006060 g     F .text	0000001c BitIoLdd10_ClrVal
0000d7f8 g     F .text	0000004c __libc_init_array
0000d1b8 g     F .text	00000326 __ieee754_exp
0000cc40 g     F .text	0000002c ReadEncoder
00008004 g     F .text	00000042 CLS_BLE_SendCharFct
00005e9c g     F .text	00000034 AdcLdd3_GetMeasurementCompleteStatus
000044f8  w    F .text	0000000c __init_user
00006ea0 g     F .text	00000020 BitIoLdd34_SetVal
00000464 g     F .text	00000000 _mainCRTStartup
000035a0 g     F .text	0000002e RF_ReadRegister
00008048 g     F .text	0000000c CS1_Init
0000367c g     F .text	00000050 LSM6DSL_ACC_GYRO_GetRawGyroData_1
20023644 g     O .bss	0000000a ADC_0_OutV
0000075c g     F .text	0000001e .hidden __floatunsidf
00002c60 g     F .text	00000068 turn_left
000071a0 g     F .text	00000020 BitIoLdd38_SetVal
000087ec g     F .text	0000008c SM1_ClearRxBuf
20000030 g     O .data	00000018 S
00004e3c g     F .text	00000088 ASerialLdd2_OnBlockSent
2000129e g     O .bss	00000001 overstepflag
0000e1f4 g     F .text	00000000 _init
00000fd0 g     F .text	0000054c CPU_SetClockConfigGenMode
0000d9e8 g     F .text	0000001c strtol
00006414 g     F .text	00000030 BitIoLdd19_GetVal
00006674 g     F .text	0000001c BitIoLdd21_SetVal
20000de4 g     O .bss	0000004c imuData
00005c38 g     F .text	00000058 AdcLdd2_GetMeasuredValues
00000dcc g     F .text	0000009e .hidden __aeabi_d2f
00007740 g     F .text	000002b4 CI2C1_Interrupt
00004b24 g     F .text	00000060 AS_BLE_Init
00000000  w      *UND*	00000000 __libc_fini_array
00000e98 g     F .text	00000094 __init_hardware
0000404c g     F .text	00000048 MotorEnable
0000c6f8 g     F .text	000000a4 VelocityEstimation
00006228 g     F .text	00000030 BitIoLdd16_GetVal
000051e8 g     F .text	000000bc ASerialLdd1_SendBlock
200012a0 g     O .bss	000222e0 raw_dataFloat
00002ab8 g     F .text	00000190 PID_Init
00008328 g     F .text	00000094 DacLdd1_Init
00006444 g     F .text	00000080 BitIoLdd2_Init
000072e0 g     F .text	00000020 BitIoLdd4_SetVal
00006bac g     F .text	00000020 BitIoLdd3_SetVal
00005e50 g     F .text	0000004c AdcLdd3_GetMeasuredValues
00000d7c g     F .text	0000004e .hidden __fixdfsi
00007fd4 g     F .text	00000022 CLS_BLE_KeyPressed
000058dc g     F .text	000000f4 ASerialLdd2_Interrupt
00008708 g     F .text	000000e4 SM1_SendChar
200005c8 g     O .bss	00000004 saveDataCnt
0000238c g     F .text	000001e8 quadratureDecoder
2000128c g     O .bss	00000004 biasACC
00007d04 g     F .text	00000056 CLS_BLE_IterateTable
00001e98 g     F .text	000003a4 testJoystick
00006118 g     F .text	0000001c BitIoLdd14_ClrVal
000004e4 g     F .text	00000276 .hidden __aeabi_dadd
20023664 g     O .bss	00000004 ASerialLdd2_DeviceDataPtr
00000c74 g     F .text	00000082 .hidden __ledf2
00005f50 g     F .text	00000020 BitIoLdd1_ClrVal
0000537c g     F .text	000000f4 ASerialLdd1_Interrupt
0000bba0 g     F .text	00000b58 TrackingControl
00009a10 g     F .text	0000000c XF1_Init
00001dd0 g     F .text	000000c4 APP_EventHandler
000007dc g     F .text	0000006a .hidden __aeabi_ul2d
00008638 g     F .text	000000d0 SM1_RecvChar
00000000  w      *UND*	00000000 __sf_fake_stderr
00000000  w      *UND*	00000000 __deregister_frame_info
00004358 g     F .text	000000e2 __copy_rom_section
20023580 g     O .bss	00000002 ccounter
00004770 g     F .text	00000028 PE_ADC_1_Measure
000063a0 g     F .text	00000074 BitIoLdd19_Init
000085b4 g     F .text	00000014 LED_BLUE_F_L_Init
00006ec0 g     F .text	00000080 BitIoLdd35_Init
20023674 g     O .bss	00000004 i
00005de8 g     F .text	00000068 AdcLdd3_CreateSampleGroup
20000048 g     O .data	00000018 S_r
00003f94 g     F .text	00000084 initMotors
000079f4 g     F .text	00000150 CI2C1_Init
0000e214 g       .init_array	00000000 __CTOR_LIST__
0000862c g     F .text	0000000c MCUC1_Init
00000d68 g     F .text	00000012 .hidden __aeabi_dcmpgt
00001b70 g     F .text	000000e0 fitExp
20023678 g       .bss	00000000 __bss_end__
00006e80 g     F .text	00000020 BitIoLdd34_ClrVal
00000d54 g     F .text	00000012 .hidden __aeabi_dcmpge
000090f4 g     F .text	00000084 TU3_Interrupt
0000df2c g     O .text	00000008 sin_lut_table
00000000  w      *UND*	00000000 __call_exitprocs
00002ea4 g     F .text	0000006c TEST_BLE_PrintStatus
00004c00 g     F .text	00000088 ASerialLdd1_OnBlockSent
00007300 g     F .text	00000080 BitIoLdd40_Init
00003734 g     F .text	00000088 Get_X_Axes_1
000064c4 g     F .text	00000020 BitIoLdd2_ClrVal
20023584 g     O .bss	00000018 eencData
000004e0 g     F .text	0000027a .hidden __aeabi_dsub
00002a64 g     F .text	0000000a Distance_INT_OnInterrupt
00000464 g     F .text	00000000 _start
00008c28 g     F .text	00000080 SMasterLdd1_ReceiveBlock
00008054 g     F .text	00000174 Common_Init
00007b74 g     F .text	00000030 CLS_BLE_PrintPrompt
00005f70 g     F .text	00000020 BitIoLdd1_SetVal
000007dc g     F .text	0000006a .hidden __floatundidf
0000672c g     F .text	0000001c BitIoLdd22_SetVal
00000400 g     O .cfmprotect	00000010 _cfm
00004d60 g     F .text	00000060 AS_PRG_Init
00005158 g     F .text	00000090 ASerialLdd1_ReceiveBlock
000070c0 g     F .text	00000020 BitIoLdd37_ClrVal
0000d890 g     F .text	0000002e strncmp
20001286 g     O .bss	00000001 newField_Flag
0000892c g     F .text	000000e0 SMasterLdd1_OnBlockReceived
00006504 g     F .text	00000074 BitIoLdd20_Init
00000000 g       .interrupts	00000000 __vector_table
0000d8be g     F .text	00000024 strncpy
20030000 g       *ABS*	00000000 __SP_INIT
000072c0 g     F .text	00000020 BitIoLdd4_ClrVal
00000000  w      *UND*	00000000 software_init_hook
000075ec g     F .text	0000001c BitIoLdd6_NegVal
00009944 g     F .text	00000028 WAIT1_Wait100Cycles
0000996c g     F .text	00000034 WAIT1_WaitCycles
00008ca8 g     F .text	00000090 SMasterLdd1_SendBlock
00006098 g     F .text	00000080 BitIoLdd14_Init
0000077c g     F .text	00000022 .hidden __aeabi_i2d
20001288 g     O .bss	00000004 angle
00006b8c g     F .text	00000020 BitIoLdd3_ClrVal
00007c98 g     F .text	0000006c CLS_BLE_PrintCommandFailed
00000f2c g     F .text	00000014 PE_low_level_init
00000f40 g     F .text	00000090 CPU_GetClockGenMode
00000a9c g     F .text	000001d0 .hidden __divdf3
20000e30 g     O .bss	00000018 encData
0000cbf8 g     F .text	00000048 ReadIMU
00007d5c g     F .text	0000008c CLS_BLE_ParseWithCommandTable
0000cdf4 g     F .text	00000110 sin_lut
0000443c g     F .text	0000009c __copy_rom_sections_to_ram
00000848 g     F .text	00000254 .hidden __muldf3
000062fc g     F .text	00000074 BitIoLdd18_Init
00008f68 g     F .text	000000e4 TU3_SetEventMask
00006628 g     F .text	00000030 BitIoLdd21_PutVal
000093a0 g     F .text	00000064 UTIL1_strcat
00009518 g     F .text	0000003a UTIL1_strcatNum32uFormatted
00007460 g     F .text	00000080 BitIoLdd5_Init
2002359c g     O .bss	00000044 aadcData
000056b8 g     F .text	00000090 ASerialLdd2_ReceiveBlock
0000deec g     O .text	00000010 K4eye
00001ac8 g     F .text	000000a8 fitMiddle
20000b14 g     O .bss	00000008 vc
00007100 g     F .text	00000080 BitIoLdd38_Init
00000000  w      *UND*	00000000 __sf_fake_stdin
000090ac g     F .text	00000048 TU3_GetOffsetTicks
00002e78 g     F .text	0000002c getReferenceOfMazesegment
20000b80 g     O .bss	00000001 SR_reg
20023668 g     O .bss	00000004 SMasterLdd1_DeviceDataPtr
00007608 g     F .text	00000080 BitIoLdd7_Init
00006d40 g     F .text	00000080 BitIoLdd33_Init
00002a88 g     F .text	0000000c SM1_OnTxChar
0000d856 g     F .text	00000010 memset
0000d678 g     F .text	000000a2 __ieee754_sqrtf
00006cc0 g     F .text	00000080 BitIoLdd32_Init
00004348 g     F .text	0000000e main
000039d0 g     F .text	0000001c getGyroBias_Z
000074e0 g     F .text	0000001c BitIoLdd5_ClrVal
000035d0 g     F .text	0000005a initIMU
00008ad8 g     F .text	00000150 SMasterLdd1_Init
000069fc g     F .text	00000074 BitIoLdd28_Init
00005470 g     F .text	00000070 ASerialLdd1_GetError
00008498 g     F .text	00000048 DacLdd2_SetValue
00009554 g     F .text	0000002e UTIL1_strcatNum32s
0000d780 g     F .text	00000004 matherr
0000d8e4 g     F .text	00000104 _strtol_r
00000dcc g     F .text	0000009e .hidden __truncdfsf2
00005b6c g     F .text	00000058 AdcLdd2_StartSingleMeasurement
00007534 g     F .text	00000080 BitIoLdd6_Init
00005b1c g     F .text	0000001c AdcLdd2_Enable
20000480 g     O .bss	000000c4 PE_LDD_DeviceDataList
20001290 g     O .bss	0000000c biasGyro
000007ec g     F .text	0000005a .hidden __aeabi_l2d
00000000  w      *UND*	00000000 hardware_init_hook
000084e0 g     F .text	00000012 TimerIntLdd1_OnInterrupt
20023650 g     O .bss	0000000a ADC_1_OutV
20001268 g     O .bss	00000004 array_counter
0000cf38 g     F .text	00000108 exp
0000df0c g     O .text	00000010 Mbar
00007000 g     F .text	00000020 BitIoLdd36_ClrVal
000092cc g     F .text	00000030 TimerIntLdd1_SetEventMask
000039ec g     F .text	0000001c getAccBias
00003878 g     F .text	00000154 biasCalc
0000e214 g       .init_array	00000000 __CTOR_END__
0000d71c g     F .text	00000010 finite
200235e0 g     O .bss	00000002 speedR
000094ec g     F .text	0000002c UTIL1_Num32uToStrFormatted
00005bc4 g     F .text	00000074 AdcLdd2_CreateSampleGroup
00007708 g     F .text	0000001c BitIoLdd8_ClrVal
00000e6c g     F .text	00000000 strcmp
0000aad4 g     F .text	0000000a setBias
000085f0 g     F .text	00000014 LED_GREEN_F_R_Init
0000e214 g       .init_array	00000000 __DTOR_LIST__
20023678 g       .bss	00000000 __END_BSS
00004218 g     F .text	00000130 PID_addDerivatedParameters
00002d38 g     F .text	000000cc driveToTurn
00000c7c g     F .text	0000007a .hidden __nedf2
00006f80 g     F .text	00000080 BitIoLdd36_Init
0000694c g     F .text	00000030 BitIoLdd26_GetVal
0000e200 g     F .text	00000000 _fini
00009930 g     F .text	0000000c UTIL1_Init
00003700 g     F .text	00000032 Get_G_AxesRaw_1
0000e30c g       .fini_array	00000000 _romp_at
00000000  w      *UND*	00000000 atexit
00008878 g     F .text	00000018 SM1_GetCharsInRxBuf
00007bc8 g     F .text	000000ce CLS_BLE_ReadLine
00009404 g     F .text	00000050 UTIL1_chcat
000085c8 g     F .text	00000014 LED_BLUE_F_R_Init
000049fc g     F .text	00000110 AS_BLE_SendBlock
200000e8 g     O .data	00000004 _impure_ptr
00008890 g     F .text	00000018 SM1_GetCharsInTxBuf
00002c48 g     F .text	00000018 stopp
000031f8 g     F .text	000000dc getNumberOfMazeSegments
00005b38 g     F .text	00000034 AdcLdd2_Disable
00009178 g     F .text	000000dc TU5_Init
20000e48 g     O .bss	000003c4 MazeSegmentsToBeDriven
00006c40 g     F .text	00000080 BitIoLdd31_Init
00002758 g     F .text	00000228 calcENC_data
000054e0 g     F .text	000001d8 ASerialLdd2_Init
00006b0c g     F .text	00000080 BitIoLdd3_Init
00004ec4 g     F .text	00000098 ASerialLdd2_OnError
00007688 g     F .text	00000080 BitIoLdd8_Init
200235e2 g     O .bss	00000002 speedL
00005748 g     F .text	000000bc ASerialLdd2_SendBlock
0000993c g     F .text	00000008 WAIT1_Wait10Cycles
000074fc g     F .text	0000001c BitIoLdd5_SetVal
00007440 g     F .text	00000020 BitIoLdd41_SetVal
000032d4 g     F .text	0000021e getMazeSegment
2002365c g     O .bss	00000004 AdcLdd3_DeviceDataPtr
00006864 g     F .text	00000074 BitIoLdd25_Init
20023630 g     O .bss	00000010 motor
0000d4e0 g     F .text	00000198 __ieee754_sqrt
00009358 g     F .text	00000048 UTIL1_strcpy
0000e30c g       .fini_array	00000000 __S_romp
20030000 g       *ABS*	00000000 __stack
00004098 g     F .text	00000180 set_VREF
00006030 g     F .text	00000030 BitIoLdd10_PutVal
00003a08 g     F .text	0000001a calcIMU_data
00000d18 g     F .text	00000012 .hidden __aeabi_dcmpeq
000068d8 g     F .text	00000074 BitIoLdd26_Init
00005a40 g     F .text	000000dc AdcLdd2_Init
00003574 g     F .text	0000002c RF_WriteRegister
00004f80 g     F .text	000001d8 ASerialLdd1_Init
00002e04 g     F .text	00000018 turn_l
00007420 g     F .text	00000020 BitIoLdd41_ClrVal
000092fc g     F .text	0000005c TU3_OnChannel0
00007ff8 g     F .text	0000000c CLS_BLE_Init
0000607c g     F .text	0000001c BitIoLdd10_SetVal
00007724 g     F .text	0000001c BitIoLdd8_SetVal
00007180 g     F .text	00000020 BitIoLdd38_ClrVal
2000126c g     O .bss	00000018 rpm_L_array
0000cc6c g     F .text	00000064 ReadDistance
0000d7d0 g     F .text	00000028 exit
00007fb4 g     F .text	00000020 CLS_BLE_SendChar
000071c0 g     F .text	00000080 BitIoLdd39_Init
000070e0 g     F .text	00000020 BitIoLdd37_SetVal
00007020 g     F .text	00000020 BitIoLdd36_SetVal
00000d7c g     F .text	0000004e .hidden __aeabi_d2iz
00008e64 g     F .text	00000104 TU3_Init
000081c8 g     F .text	00000144 Components_Init
00005c90 g     F .text	00000034 AdcLdd2_GetMeasurementCompleteStatus
000044d8  w    F .text	00000020 __init_registers
200000ec g     O .data	00000004 __ctype_ptr__
00006370 g     F .text	00000030 BitIoLdd18_GetVal
0000c7a0 g     F .text	00000454 VelocityCalculation
00000000  w      *UND*	00000000 __sf_fake_stdout
000059d0 g     F .text	00000070 ASerialLdd2_GetError
00009254 g     F .text	00000078 TimerIntLdd1_Init
0000d7bc g     F .text	00000008 atoi
0000e0f0 g     O .text	00000101 _ctype_
0000ccd0 g     F .text	00000028 setBiasRaw
0000da04 g     F .text	00000002 _exit
00009794 g     F .text	00000054 UTIL1_strFind
0000defc g     O .text	00000010 K4eyeCurve
0000d880 g     F .text	00000010 strlen
00004648 g     F .text	00000068 ADC_0_GetValue16
00000d08 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00000c6c g     F .text	0000008a .hidden __gedf2
000067e4 g     F .text	00000080 BitIoLdd24_Init
20000b24 g     O .bss	00000008 u
00001c50 g     F .text	00000124 fitFar
0000d866 g     F .text	0000001a strchr
00002980 g     F .text	0000004c EVNT_SetEvent
000007a0 g     F .text	0000003a .hidden __aeabi_f2d
00003190 g     F .text	00000068 testUART
00005d9c g     F .text	0000004c AdcLdd3_StartSingleMeasurement
00000000  w      *UND*	00000000 _Jv_RegisterClasses
20000128 g     O .bss	00000001 msgFinishFlag
000004e0 g     F .text	0000027a .hidden __subdf3
00007ba4 g     F .text	00000024 CLS_BLE_IsHistoryCharacter
00008544 g     F .text	00000028 CI2C1_OnMasterBlockSent
000000f0 g       *ABS*	00000000 ___data_size
00007e00 g     F .text	000000d6 CLS_BLE_ReadAndParseWithCommandTable
0000830c g     F .text	0000001a Cpu_INT_NMIInterrupt
00000000  w      *UND*	00000000 __register_frame_info
2000120c g     O .bss	00000044 adcData
000075d0 g     F .text	0000001c BitIoLdd6_SetVal
00007f6c g     F .text	00000022 CLS_BLE_SendStatusStr
00003a4c g     F .text	00000190 saveData
200235e4 g     O .bss	0000004c iimuData
00008404 g     F .text	00000094 DacLdd2_Init



Disassembly of section .text:

00000410 <__do_global_dtors_aux>:
$t():
     410:	b510      	push	{r4, lr}
     412:	4c05      	ldr	r4, [pc, #20]	; (428 <__do_global_dtors_aux+0x18>)
     414:	7823      	ldrb	r3, [r4, #0]
     416:	b933      	cbnz	r3, 426 <__do_global_dtors_aux+0x16>
     418:	4b04      	ldr	r3, [pc, #16]	; (42c <__do_global_dtors_aux+0x1c>)
     41a:	b113      	cbz	r3, 422 <__do_global_dtors_aux+0x12>
     41c:	4804      	ldr	r0, [pc, #16]	; (430 <__do_global_dtors_aux+0x20>)
     41e:	f3af 8000 	nop.w
     422:	2301      	movs	r3, #1
     424:	7023      	strb	r3, [r4, #0]
     426:	bd10      	pop	{r4, pc}
$d():
     428:	200000f0 	.word	0x200000f0
     42c:	00000000 	.word	0x00000000
     430:	0000e1f4 	.word	0x0000e1f4

00000434 <frame_dummy>:
$t():
     434:	b508      	push	{r3, lr}
     436:	4b06      	ldr	r3, [pc, #24]	; (450 <frame_dummy+0x1c>)
     438:	b11b      	cbz	r3, 442 <frame_dummy+0xe>
     43a:	4806      	ldr	r0, [pc, #24]	; (454 <frame_dummy+0x20>)
     43c:	4906      	ldr	r1, [pc, #24]	; (458 <frame_dummy+0x24>)
     43e:	f3af 8000 	nop.w
     442:	4806      	ldr	r0, [pc, #24]	; (45c <frame_dummy+0x28>)
     444:	6803      	ldr	r3, [r0, #0]
     446:	b113      	cbz	r3, 44e <frame_dummy+0x1a>
     448:	4b05      	ldr	r3, [pc, #20]	; (460 <frame_dummy+0x2c>)
     44a:	b103      	cbz	r3, 44e <frame_dummy+0x1a>
     44c:	4798      	blx	r3
     44e:	bd08      	pop	{r3, pc}
$d():
     450:	00000000 	.word	0x00000000
     454:	0000e1f4 	.word	0x0000e1f4
     458:	200000f4 	.word	0x200000f4
     45c:	200000f0 	.word	0x200000f0
     460:	00000000 	.word	0x00000000

00000464 <_mainCRTStartup>:
$t():
     464:	4b15      	ldr	r3, [pc, #84]	; (4bc <_mainCRTStartup+0x58>)
     466:	2b00      	cmp	r3, #0
     468:	bf08      	it	eq
     46a:	4b13      	ldreq	r3, [pc, #76]	; (4b8 <_mainCRTStartup+0x54>)
     46c:	469d      	mov	sp, r3
     46e:	f5a3 3a80 	sub.w	sl, r3, #65536	; 0x10000
     472:	2100      	movs	r1, #0
     474:	468b      	mov	fp, r1
     476:	460f      	mov	r7, r1
     478:	4813      	ldr	r0, [pc, #76]	; (4c8 <_mainCRTStartup+0x64>)
     47a:	4a14      	ldr	r2, [pc, #80]	; (4cc <_mainCRTStartup+0x68>)
     47c:	1a12      	subs	r2, r2, r0
     47e:	f00d f9ea 	bl	d856 <memset>
     482:	4b0f      	ldr	r3, [pc, #60]	; (4c0 <_mainCRTStartup+0x5c>)
     484:	2b00      	cmp	r3, #0
     486:	d000      	beq.n	48a <_mainCRTStartup+0x26>
     488:	4798      	blx	r3
     48a:	4b0e      	ldr	r3, [pc, #56]	; (4c4 <_mainCRTStartup+0x60>)
     48c:	2b00      	cmp	r3, #0
     48e:	d000      	beq.n	492 <_mainCRTStartup+0x2e>
     490:	4798      	blx	r3
     492:	2000      	movs	r0, #0
     494:	2100      	movs	r1, #0
     496:	0004      	movs	r4, r0
     498:	000d      	movs	r5, r1
     49a:	480d      	ldr	r0, [pc, #52]	; (4d0 <_mainCRTStartup+0x6c>)
     49c:	2800      	cmp	r0, #0
     49e:	d002      	beq.n	4a6 <_mainCRTStartup+0x42>
     4a0:	480c      	ldr	r0, [pc, #48]	; (4d4 <_mainCRTStartup+0x70>)
     4a2:	f3af 8000 	nop.w
     4a6:	f00d f9a7 	bl	d7f8 <__libc_init_array>
     4aa:	0020      	movs	r0, r4
     4ac:	0029      	movs	r1, r5
     4ae:	f003 ff4b 	bl	4348 <main>
     4b2:	f00d f98d 	bl	d7d0 <exit>
     4b6:	bf00      	nop
$d():
     4b8:	00080000 	.word	0x00080000
     4bc:	20030000 	.word	0x20030000
	...
     4c8:	200000f0 	.word	0x200000f0
     4cc:	20023678 	.word	0x20023678
	...

000004d8 <__aeabi_drsub>:
$t():
     4d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
     4dc:	e002      	b.n	4e4 <__adddf3>
     4de:	bf00      	nop

000004e0 <__aeabi_dsub>:
__aeabi_dsub():
     4e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000004e4 <__adddf3>:
     4e4:	b530      	push	{r4, r5, lr}
     4e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
     4ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
     4ee:	ea94 0f05 	teq	r4, r5
     4f2:	bf08      	it	eq
     4f4:	ea90 0f02 	teqeq	r0, r2
     4f8:	bf1f      	itttt	ne
     4fa:	ea54 0c00 	orrsne.w	ip, r4, r0
     4fe:	ea55 0c02 	orrsne.w	ip, r5, r2
     502:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
     506:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
     50a:	f000 80e2 	beq.w	6d2 <__adddf3+0x1ee>
     50e:	ea4f 5454 	mov.w	r4, r4, lsr #21
     512:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
     516:	bfb8      	it	lt
     518:	426d      	neglt	r5, r5
     51a:	dd0c      	ble.n	536 <__adddf3+0x52>
     51c:	442c      	add	r4, r5
     51e:	ea80 0202 	eor.w	r2, r0, r2
     522:	ea81 0303 	eor.w	r3, r1, r3
     526:	ea82 0000 	eor.w	r0, r2, r0
     52a:	ea83 0101 	eor.w	r1, r3, r1
     52e:	ea80 0202 	eor.w	r2, r0, r2
     532:	ea81 0303 	eor.w	r3, r1, r3
     536:	2d36      	cmp	r5, #54	; 0x36
     538:	bf88      	it	hi
     53a:	bd30      	pophi	{r4, r5, pc}
     53c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
     540:	ea4f 3101 	mov.w	r1, r1, lsl #12
     544:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
     548:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
     54c:	d002      	beq.n	554 <__adddf3+0x70>
     54e:	4240      	negs	r0, r0
     550:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
     554:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
     558:	ea4f 3303 	mov.w	r3, r3, lsl #12
     55c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
     560:	d002      	beq.n	568 <__adddf3+0x84>
     562:	4252      	negs	r2, r2
     564:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
     568:	ea94 0f05 	teq	r4, r5
     56c:	f000 80a7 	beq.w	6be <__adddf3+0x1da>
     570:	f1a4 0401 	sub.w	r4, r4, #1
     574:	f1d5 0e20 	rsbs	lr, r5, #32
     578:	db0d      	blt.n	596 <__adddf3+0xb2>
     57a:	fa02 fc0e 	lsl.w	ip, r2, lr
     57e:	fa22 f205 	lsr.w	r2, r2, r5
     582:	1880      	adds	r0, r0, r2
     584:	f141 0100 	adc.w	r1, r1, #0
     588:	fa03 f20e 	lsl.w	r2, r3, lr
     58c:	1880      	adds	r0, r0, r2
     58e:	fa43 f305 	asr.w	r3, r3, r5
     592:	4159      	adcs	r1, r3
     594:	e00e      	b.n	5b4 <__adddf3+0xd0>
     596:	f1a5 0520 	sub.w	r5, r5, #32
     59a:	f10e 0e20 	add.w	lr, lr, #32
     59e:	2a01      	cmp	r2, #1
     5a0:	fa03 fc0e 	lsl.w	ip, r3, lr
     5a4:	bf28      	it	cs
     5a6:	f04c 0c02 	orrcs.w	ip, ip, #2
     5aa:	fa43 f305 	asr.w	r3, r3, r5
     5ae:	18c0      	adds	r0, r0, r3
     5b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
     5b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
     5b8:	d507      	bpl.n	5ca <__adddf3+0xe6>
     5ba:	f04f 0e00 	mov.w	lr, #0
     5be:	f1dc 0c00 	rsbs	ip, ip, #0
     5c2:	eb7e 0000 	sbcs.w	r0, lr, r0
     5c6:	eb6e 0101 	sbc.w	r1, lr, r1
     5ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
     5ce:	d31b      	bcc.n	608 <__adddf3+0x124>
     5d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
     5d4:	d30c      	bcc.n	5f0 <__adddf3+0x10c>
     5d6:	0849      	lsrs	r1, r1, #1
     5d8:	ea5f 0030 	movs.w	r0, r0, rrx
     5dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
     5e0:	f104 0401 	add.w	r4, r4, #1
     5e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
     5e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
     5ec:	f080 809a 	bcs.w	724 <__adddf3+0x240>
     5f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
     5f4:	bf08      	it	eq
     5f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
     5fa:	f150 0000 	adcs.w	r0, r0, #0
     5fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
     602:	ea41 0105 	orr.w	r1, r1, r5
     606:	bd30      	pop	{r4, r5, pc}
     608:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
     60c:	4140      	adcs	r0, r0
     60e:	eb41 0101 	adc.w	r1, r1, r1
     612:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     616:	f1a4 0401 	sub.w	r4, r4, #1
     61a:	d1e9      	bne.n	5f0 <__adddf3+0x10c>
     61c:	f091 0f00 	teq	r1, #0
     620:	bf04      	itt	eq
     622:	4601      	moveq	r1, r0
     624:	2000      	moveq	r0, #0
     626:	fab1 f381 	clz	r3, r1
     62a:	bf08      	it	eq
     62c:	3320      	addeq	r3, #32
     62e:	f1a3 030b 	sub.w	r3, r3, #11
     632:	f1b3 0220 	subs.w	r2, r3, #32
     636:	da0c      	bge.n	652 <__adddf3+0x16e>
     638:	320c      	adds	r2, #12
     63a:	dd08      	ble.n	64e <__adddf3+0x16a>
     63c:	f102 0c14 	add.w	ip, r2, #20
     640:	f1c2 020c 	rsb	r2, r2, #12
     644:	fa01 f00c 	lsl.w	r0, r1, ip
     648:	fa21 f102 	lsr.w	r1, r1, r2
     64c:	e00c      	b.n	668 <__adddf3+0x184>
     64e:	f102 0214 	add.w	r2, r2, #20
     652:	bfd8      	it	le
     654:	f1c2 0c20 	rsble	ip, r2, #32
     658:	fa01 f102 	lsl.w	r1, r1, r2
     65c:	fa20 fc0c 	lsr.w	ip, r0, ip
     660:	bfdc      	itt	le
     662:	ea41 010c 	orrle.w	r1, r1, ip
     666:	4090      	lslle	r0, r2
     668:	1ae4      	subs	r4, r4, r3
     66a:	bfa2      	ittt	ge
     66c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
     670:	4329      	orrge	r1, r5
     672:	bd30      	popge	{r4, r5, pc}
     674:	ea6f 0404 	mvn.w	r4, r4
     678:	3c1f      	subs	r4, #31
     67a:	da1c      	bge.n	6b6 <__adddf3+0x1d2>
     67c:	340c      	adds	r4, #12
     67e:	dc0e      	bgt.n	69e <__adddf3+0x1ba>
     680:	f104 0414 	add.w	r4, r4, #20
     684:	f1c4 0220 	rsb	r2, r4, #32
     688:	fa20 f004 	lsr.w	r0, r0, r4
     68c:	fa01 f302 	lsl.w	r3, r1, r2
     690:	ea40 0003 	orr.w	r0, r0, r3
     694:	fa21 f304 	lsr.w	r3, r1, r4
     698:	ea45 0103 	orr.w	r1, r5, r3
     69c:	bd30      	pop	{r4, r5, pc}
     69e:	f1c4 040c 	rsb	r4, r4, #12
     6a2:	f1c4 0220 	rsb	r2, r4, #32
     6a6:	fa20 f002 	lsr.w	r0, r0, r2
     6aa:	fa01 f304 	lsl.w	r3, r1, r4
     6ae:	ea40 0003 	orr.w	r0, r0, r3
     6b2:	4629      	mov	r1, r5
     6b4:	bd30      	pop	{r4, r5, pc}
     6b6:	fa21 f004 	lsr.w	r0, r1, r4
     6ba:	4629      	mov	r1, r5
     6bc:	bd30      	pop	{r4, r5, pc}
     6be:	f094 0f00 	teq	r4, #0
     6c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
     6c6:	bf06      	itte	eq
     6c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
     6cc:	3401      	addeq	r4, #1
     6ce:	3d01      	subne	r5, #1
     6d0:	e74e      	b.n	570 <__adddf3+0x8c>
     6d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
     6d6:	bf18      	it	ne
     6d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
     6dc:	d029      	beq.n	732 <__adddf3+0x24e>
     6de:	ea94 0f05 	teq	r4, r5
     6e2:	bf08      	it	eq
     6e4:	ea90 0f02 	teqeq	r0, r2
     6e8:	d005      	beq.n	6f6 <__adddf3+0x212>
     6ea:	ea54 0c00 	orrs.w	ip, r4, r0
     6ee:	bf04      	itt	eq
     6f0:	4619      	moveq	r1, r3
     6f2:	4610      	moveq	r0, r2
     6f4:	bd30      	pop	{r4, r5, pc}
     6f6:	ea91 0f03 	teq	r1, r3
     6fa:	bf1e      	ittt	ne
     6fc:	2100      	movne	r1, #0
     6fe:	2000      	movne	r0, #0
     700:	bd30      	popne	{r4, r5, pc}
     702:	ea5f 5c54 	movs.w	ip, r4, lsr #21
     706:	d105      	bne.n	714 <__adddf3+0x230>
     708:	0040      	lsls	r0, r0, #1
     70a:	4149      	adcs	r1, r1
     70c:	bf28      	it	cs
     70e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
     712:	bd30      	pop	{r4, r5, pc}
     714:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
     718:	bf3c      	itt	cc
     71a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
     71e:	bd30      	popcc	{r4, r5, pc}
     720:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
     724:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
     728:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
     72c:	f04f 0000 	mov.w	r0, #0
     730:	bd30      	pop	{r4, r5, pc}
     732:	ea7f 5c64 	mvns.w	ip, r4, asr #21
     736:	bf1a      	itte	ne
     738:	4619      	movne	r1, r3
     73a:	4610      	movne	r0, r2
     73c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
     740:	bf1c      	itt	ne
     742:	460b      	movne	r3, r1
     744:	4602      	movne	r2, r0
     746:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
     74a:	bf06      	itte	eq
     74c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
     750:	ea91 0f03 	teqeq	r1, r3
     754:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
     758:	bd30      	pop	{r4, r5, pc}
__adddf3():
     75a:	bf00      	nop

0000075c <__aeabi_ui2d>:
__aeabi_ui2d():
     75c:	f090 0f00 	teq	r0, #0
     760:	bf04      	itt	eq
     762:	2100      	moveq	r1, #0
     764:	4770      	bxeq	lr
     766:	b530      	push	{r4, r5, lr}
     768:	f44f 6480 	mov.w	r4, #1024	; 0x400
     76c:	f104 0432 	add.w	r4, r4, #50	; 0x32
     770:	f04f 0500 	mov.w	r5, #0
     774:	f04f 0100 	mov.w	r1, #0
     778:	e750      	b.n	61c <__adddf3+0x138>
     77a:	bf00      	nop

0000077c <__aeabi_i2d>:
__floatsidf():
     77c:	f090 0f00 	teq	r0, #0
     780:	bf04      	itt	eq
     782:	2100      	moveq	r1, #0
     784:	4770      	bxeq	lr
     786:	b530      	push	{r4, r5, lr}
     788:	f44f 6480 	mov.w	r4, #1024	; 0x400
     78c:	f104 0432 	add.w	r4, r4, #50	; 0x32
     790:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
     794:	bf48      	it	mi
     796:	4240      	negmi	r0, r0
     798:	f04f 0100 	mov.w	r1, #0
     79c:	e73e      	b.n	61c <__adddf3+0x138>
     79e:	bf00      	nop

000007a0 <__aeabi_f2d>:
__extendsfdf2():
     7a0:	0042      	lsls	r2, r0, #1
     7a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
     7a6:	ea4f 0131 	mov.w	r1, r1, rrx
     7aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
     7ae:	bf1f      	itttt	ne
     7b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
     7b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
     7b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
     7bc:	4770      	bxne	lr
     7be:	f092 0f00 	teq	r2, #0
     7c2:	bf14      	ite	ne
     7c4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
     7c8:	4770      	bxeq	lr
     7ca:	b530      	push	{r4, r5, lr}
     7cc:	f44f 7460 	mov.w	r4, #896	; 0x380
     7d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
     7d4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
     7d8:	e720      	b.n	61c <__adddf3+0x138>
     7da:	bf00      	nop

000007dc <__aeabi_ul2d>:
__aeabi_ul2d():
     7dc:	ea50 0201 	orrs.w	r2, r0, r1
     7e0:	bf08      	it	eq
     7e2:	4770      	bxeq	lr
     7e4:	b530      	push	{r4, r5, lr}
     7e6:	f04f 0500 	mov.w	r5, #0
     7ea:	e00a      	b.n	802 <__aeabi_l2d+0x16>

000007ec <__aeabi_l2d>:
     7ec:	ea50 0201 	orrs.w	r2, r0, r1
     7f0:	bf08      	it	eq
     7f2:	4770      	bxeq	lr
     7f4:	b530      	push	{r4, r5, lr}
     7f6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
     7fa:	d502      	bpl.n	802 <__aeabi_l2d+0x16>
     7fc:	4240      	negs	r0, r0
     7fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
     802:	f44f 6480 	mov.w	r4, #1024	; 0x400
     806:	f104 0432 	add.w	r4, r4, #50	; 0x32
     80a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
     80e:	f43f aedc 	beq.w	5ca <__adddf3+0xe6>
     812:	f04f 0203 	mov.w	r2, #3
     816:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
     81a:	bf18      	it	ne
     81c:	3203      	addne	r2, #3
     81e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
     822:	bf18      	it	ne
     824:	3203      	addne	r2, #3
     826:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
     82a:	f1c2 0320 	rsb	r3, r2, #32
     82e:	fa00 fc03 	lsl.w	ip, r0, r3
     832:	fa20 f002 	lsr.w	r0, r0, r2
     836:	fa01 fe03 	lsl.w	lr, r1, r3
     83a:	ea40 000e 	orr.w	r0, r0, lr
     83e:	fa21 f102 	lsr.w	r1, r1, r2
     842:	4414      	add	r4, r2
     844:	e6c1      	b.n	5ca <__adddf3+0xe6>
__floatdidf():
     846:	bf00      	nop

00000848 <__aeabi_dmul>:
__aeabi_dmul():
     848:	b570      	push	{r4, r5, r6, lr}
     84a:	f04f 0cff 	mov.w	ip, #255	; 0xff
     84e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
     852:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
     856:	bf1d      	ittte	ne
     858:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
     85c:	ea94 0f0c 	teqne	r4, ip
     860:	ea95 0f0c 	teqne	r5, ip
     864:	f000 f8de 	bleq	a24 <__aeabi_dmul+0x1dc>
     868:	442c      	add	r4, r5
     86a:	ea81 0603 	eor.w	r6, r1, r3
     86e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
     872:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
     876:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
     87a:	bf18      	it	ne
     87c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
     880:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
     884:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
     888:	d038      	beq.n	8fc <__aeabi_dmul+0xb4>
     88a:	fba0 ce02 	umull	ip, lr, r0, r2
     88e:	f04f 0500 	mov.w	r5, #0
     892:	fbe1 e502 	umlal	lr, r5, r1, r2
     896:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
     89a:	fbe0 e503 	umlal	lr, r5, r0, r3
     89e:	f04f 0600 	mov.w	r6, #0
     8a2:	fbe1 5603 	umlal	r5, r6, r1, r3
     8a6:	f09c 0f00 	teq	ip, #0
     8aa:	bf18      	it	ne
     8ac:	f04e 0e01 	orrne.w	lr, lr, #1
     8b0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
     8b4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
     8b8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
     8bc:	d204      	bcs.n	8c8 <__aeabi_dmul+0x80>
     8be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
     8c2:	416d      	adcs	r5, r5
     8c4:	eb46 0606 	adc.w	r6, r6, r6
     8c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
     8cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
     8d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
     8d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
     8d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
     8dc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
     8e0:	bf88      	it	hi
     8e2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
     8e6:	d81e      	bhi.n	926 <__aeabi_dmul+0xde>
     8e8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
     8ec:	bf08      	it	eq
     8ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
     8f2:	f150 0000 	adcs.w	r0, r0, #0
     8f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
     8fa:	bd70      	pop	{r4, r5, r6, pc}
     8fc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
     900:	ea46 0101 	orr.w	r1, r6, r1
     904:	ea40 0002 	orr.w	r0, r0, r2
     908:	ea81 0103 	eor.w	r1, r1, r3
     90c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
     910:	bfc2      	ittt	gt
     912:	ebd4 050c 	rsbsgt	r5, r4, ip
     916:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
     91a:	bd70      	popgt	{r4, r5, r6, pc}
     91c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
     920:	f04f 0e00 	mov.w	lr, #0
     924:	3c01      	subs	r4, #1
     926:	f300 80ab 	bgt.w	a80 <__aeabi_dmul+0x238>
     92a:	f114 0f36 	cmn.w	r4, #54	; 0x36
     92e:	bfde      	ittt	le
     930:	2000      	movle	r0, #0
     932:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
     936:	bd70      	pople	{r4, r5, r6, pc}
     938:	f1c4 0400 	rsb	r4, r4, #0
     93c:	3c20      	subs	r4, #32
     93e:	da35      	bge.n	9ac <__aeabi_dmul+0x164>
     940:	340c      	adds	r4, #12
     942:	dc1b      	bgt.n	97c <__aeabi_dmul+0x134>
     944:	f104 0414 	add.w	r4, r4, #20
     948:	f1c4 0520 	rsb	r5, r4, #32
     94c:	fa00 f305 	lsl.w	r3, r0, r5
     950:	fa20 f004 	lsr.w	r0, r0, r4
     954:	fa01 f205 	lsl.w	r2, r1, r5
     958:	ea40 0002 	orr.w	r0, r0, r2
     95c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
     960:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
     964:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
     968:	fa21 f604 	lsr.w	r6, r1, r4
     96c:	eb42 0106 	adc.w	r1, r2, r6
     970:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
     974:	bf08      	it	eq
     976:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
     97a:	bd70      	pop	{r4, r5, r6, pc}
     97c:	f1c4 040c 	rsb	r4, r4, #12
     980:	f1c4 0520 	rsb	r5, r4, #32
     984:	fa00 f304 	lsl.w	r3, r0, r4
     988:	fa20 f005 	lsr.w	r0, r0, r5
     98c:	fa01 f204 	lsl.w	r2, r1, r4
     990:	ea40 0002 	orr.w	r0, r0, r2
     994:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     998:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
     99c:	f141 0100 	adc.w	r1, r1, #0
     9a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
     9a4:	bf08      	it	eq
     9a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
     9aa:	bd70      	pop	{r4, r5, r6, pc}
     9ac:	f1c4 0520 	rsb	r5, r4, #32
     9b0:	fa00 f205 	lsl.w	r2, r0, r5
     9b4:	ea4e 0e02 	orr.w	lr, lr, r2
     9b8:	fa20 f304 	lsr.w	r3, r0, r4
     9bc:	fa01 f205 	lsl.w	r2, r1, r5
     9c0:	ea43 0302 	orr.w	r3, r3, r2
     9c4:	fa21 f004 	lsr.w	r0, r1, r4
     9c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     9cc:	fa21 f204 	lsr.w	r2, r1, r4
     9d0:	ea20 0002 	bic.w	r0, r0, r2
     9d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
     9d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
     9dc:	bf08      	it	eq
     9de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
     9e2:	bd70      	pop	{r4, r5, r6, pc}
     9e4:	f094 0f00 	teq	r4, #0
     9e8:	d10f      	bne.n	a0a <__aeabi_dmul+0x1c2>
     9ea:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
     9ee:	0040      	lsls	r0, r0, #1
     9f0:	eb41 0101 	adc.w	r1, r1, r1
     9f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     9f8:	bf08      	it	eq
     9fa:	3c01      	subeq	r4, #1
     9fc:	d0f7      	beq.n	9ee <__aeabi_dmul+0x1a6>
     9fe:	ea41 0106 	orr.w	r1, r1, r6
     a02:	f095 0f00 	teq	r5, #0
     a06:	bf18      	it	ne
     a08:	4770      	bxne	lr
     a0a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
     a0e:	0052      	lsls	r2, r2, #1
     a10:	eb43 0303 	adc.w	r3, r3, r3
     a14:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
     a18:	bf08      	it	eq
     a1a:	3d01      	subeq	r5, #1
     a1c:	d0f7      	beq.n	a0e <__aeabi_dmul+0x1c6>
     a1e:	ea43 0306 	orr.w	r3, r3, r6
     a22:	4770      	bx	lr
     a24:	ea94 0f0c 	teq	r4, ip
     a28:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
     a2c:	bf18      	it	ne
     a2e:	ea95 0f0c 	teqne	r5, ip
     a32:	d00c      	beq.n	a4e <__aeabi_dmul+0x206>
     a34:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
     a38:	bf18      	it	ne
     a3a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
     a3e:	d1d1      	bne.n	9e4 <__aeabi_dmul+0x19c>
     a40:	ea81 0103 	eor.w	r1, r1, r3
     a44:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     a48:	f04f 0000 	mov.w	r0, #0
     a4c:	bd70      	pop	{r4, r5, r6, pc}
     a4e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
     a52:	bf06      	itte	eq
     a54:	4610      	moveq	r0, r2
     a56:	4619      	moveq	r1, r3
     a58:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
     a5c:	d019      	beq.n	a92 <__aeabi_dmul+0x24a>
     a5e:	ea94 0f0c 	teq	r4, ip
     a62:	d102      	bne.n	a6a <__aeabi_dmul+0x222>
     a64:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
     a68:	d113      	bne.n	a92 <__aeabi_dmul+0x24a>
     a6a:	ea95 0f0c 	teq	r5, ip
     a6e:	d105      	bne.n	a7c <__aeabi_dmul+0x234>
     a70:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
     a74:	bf1c      	itt	ne
     a76:	4610      	movne	r0, r2
     a78:	4619      	movne	r1, r3
     a7a:	d10a      	bne.n	a92 <__aeabi_dmul+0x24a>
     a7c:	ea81 0103 	eor.w	r1, r1, r3
     a80:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
     a84:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
     a88:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
     a8c:	f04f 0000 	mov.w	r0, #0
     a90:	bd70      	pop	{r4, r5, r6, pc}
     a92:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
     a96:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
     a9a:	bd70      	pop	{r4, r5, r6, pc}

00000a9c <__aeabi_ddiv>:
__aeabi_ddiv():
     a9c:	b570      	push	{r4, r5, r6, lr}
     a9e:	f04f 0cff 	mov.w	ip, #255	; 0xff
     aa2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
     aa6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
     aaa:	bf1d      	ittte	ne
     aac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
     ab0:	ea94 0f0c 	teqne	r4, ip
     ab4:	ea95 0f0c 	teqne	r5, ip
     ab8:	f000 f8a7 	bleq	c0a <__aeabi_ddiv+0x16e>
     abc:	eba4 0405 	sub.w	r4, r4, r5
     ac0:	ea81 0e03 	eor.w	lr, r1, r3
     ac4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
     ac8:	ea4f 3101 	mov.w	r1, r1, lsl #12
     acc:	f000 8088 	beq.w	be0 <__aeabi_ddiv+0x144>
     ad0:	ea4f 3303 	mov.w	r3, r3, lsl #12
     ad4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
     ad8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
     adc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
     ae0:	ea4f 2202 	mov.w	r2, r2, lsl #8
     ae4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
     ae8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
     aec:	ea4f 2600 	mov.w	r6, r0, lsl #8
     af0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
     af4:	429d      	cmp	r5, r3
     af6:	bf08      	it	eq
     af8:	4296      	cmpeq	r6, r2
     afa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
     afe:	f504 7440 	add.w	r4, r4, #768	; 0x300
     b02:	d202      	bcs.n	b0a <__aeabi_ddiv+0x6e>
     b04:	085b      	lsrs	r3, r3, #1
     b06:	ea4f 0232 	mov.w	r2, r2, rrx
     b0a:	1ab6      	subs	r6, r6, r2
     b0c:	eb65 0503 	sbc.w	r5, r5, r3
     b10:	085b      	lsrs	r3, r3, #1
     b12:	ea4f 0232 	mov.w	r2, r2, rrx
     b16:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
     b1a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
     b1e:	ebb6 0e02 	subs.w	lr, r6, r2
     b22:	eb75 0e03 	sbcs.w	lr, r5, r3
     b26:	bf22      	ittt	cs
     b28:	1ab6      	subcs	r6, r6, r2
     b2a:	4675      	movcs	r5, lr
     b2c:	ea40 000c 	orrcs.w	r0, r0, ip
     b30:	085b      	lsrs	r3, r3, #1
     b32:	ea4f 0232 	mov.w	r2, r2, rrx
     b36:	ebb6 0e02 	subs.w	lr, r6, r2
     b3a:	eb75 0e03 	sbcs.w	lr, r5, r3
     b3e:	bf22      	ittt	cs
     b40:	1ab6      	subcs	r6, r6, r2
     b42:	4675      	movcs	r5, lr
     b44:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
     b48:	085b      	lsrs	r3, r3, #1
     b4a:	ea4f 0232 	mov.w	r2, r2, rrx
     b4e:	ebb6 0e02 	subs.w	lr, r6, r2
     b52:	eb75 0e03 	sbcs.w	lr, r5, r3
     b56:	bf22      	ittt	cs
     b58:	1ab6      	subcs	r6, r6, r2
     b5a:	4675      	movcs	r5, lr
     b5c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
     b60:	085b      	lsrs	r3, r3, #1
     b62:	ea4f 0232 	mov.w	r2, r2, rrx
     b66:	ebb6 0e02 	subs.w	lr, r6, r2
     b6a:	eb75 0e03 	sbcs.w	lr, r5, r3
     b6e:	bf22      	ittt	cs
     b70:	1ab6      	subcs	r6, r6, r2
     b72:	4675      	movcs	r5, lr
     b74:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
     b78:	ea55 0e06 	orrs.w	lr, r5, r6
     b7c:	d018      	beq.n	bb0 <__aeabi_ddiv+0x114>
     b7e:	ea4f 1505 	mov.w	r5, r5, lsl #4
     b82:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
     b86:	ea4f 1606 	mov.w	r6, r6, lsl #4
     b8a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
     b8e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
     b92:	ea4f 02c2 	mov.w	r2, r2, lsl #3
     b96:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
     b9a:	d1c0      	bne.n	b1e <__aeabi_ddiv+0x82>
     b9c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     ba0:	d10b      	bne.n	bba <__aeabi_ddiv+0x11e>
     ba2:	ea41 0100 	orr.w	r1, r1, r0
     ba6:	f04f 0000 	mov.w	r0, #0
     baa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
     bae:	e7b6      	b.n	b1e <__aeabi_ddiv+0x82>
     bb0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
     bb4:	bf04      	itt	eq
     bb6:	4301      	orreq	r1, r0
     bb8:	2000      	moveq	r0, #0
     bba:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
     bbe:	bf88      	it	hi
     bc0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
     bc4:	f63f aeaf 	bhi.w	926 <__aeabi_dmul+0xde>
     bc8:	ebb5 0c03 	subs.w	ip, r5, r3
     bcc:	bf04      	itt	eq
     bce:	ebb6 0c02 	subseq.w	ip, r6, r2
     bd2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
     bd6:	f150 0000 	adcs.w	r0, r0, #0
     bda:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
     bde:	bd70      	pop	{r4, r5, r6, pc}
     be0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
     be4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
     be8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
     bec:	bfc2      	ittt	gt
     bee:	ebd4 050c 	rsbsgt	r5, r4, ip
     bf2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
     bf6:	bd70      	popgt	{r4, r5, r6, pc}
     bf8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
     bfc:	f04f 0e00 	mov.w	lr, #0
     c00:	3c01      	subs	r4, #1
     c02:	e690      	b.n	926 <__aeabi_dmul+0xde>
     c04:	ea45 0e06 	orr.w	lr, r5, r6
     c08:	e68d      	b.n	926 <__aeabi_dmul+0xde>
     c0a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
     c0e:	ea94 0f0c 	teq	r4, ip
     c12:	bf08      	it	eq
     c14:	ea95 0f0c 	teqeq	r5, ip
     c18:	f43f af3b 	beq.w	a92 <__aeabi_dmul+0x24a>
     c1c:	ea94 0f0c 	teq	r4, ip
     c20:	d10a      	bne.n	c38 <__aeabi_ddiv+0x19c>
     c22:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
     c26:	f47f af34 	bne.w	a92 <__aeabi_dmul+0x24a>
     c2a:	ea95 0f0c 	teq	r5, ip
     c2e:	f47f af25 	bne.w	a7c <__aeabi_dmul+0x234>
     c32:	4610      	mov	r0, r2
     c34:	4619      	mov	r1, r3
     c36:	e72c      	b.n	a92 <__aeabi_dmul+0x24a>
     c38:	ea95 0f0c 	teq	r5, ip
     c3c:	d106      	bne.n	c4c <__aeabi_ddiv+0x1b0>
     c3e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
     c42:	f43f aefd 	beq.w	a40 <__aeabi_dmul+0x1f8>
     c46:	4610      	mov	r0, r2
     c48:	4619      	mov	r1, r3
     c4a:	e722      	b.n	a92 <__aeabi_dmul+0x24a>
     c4c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
     c50:	bf18      	it	ne
     c52:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
     c56:	f47f aec5 	bne.w	9e4 <__aeabi_dmul+0x19c>
     c5a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
     c5e:	f47f af0d 	bne.w	a7c <__aeabi_dmul+0x234>
     c62:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
     c66:	f47f aeeb 	bne.w	a40 <__aeabi_dmul+0x1f8>
     c6a:	e712      	b.n	a92 <__aeabi_dmul+0x24a>

00000c6c <__gedf2>:
__gtdf2():
     c6c:	f04f 3cff 	mov.w	ip, #4294967295
     c70:	e006      	b.n	c80 <__cmpdf2+0x4>
     c72:	bf00      	nop

00000c74 <__ledf2>:
     c74:	f04f 0c01 	mov.w	ip, #1
     c78:	e002      	b.n	c80 <__cmpdf2+0x4>
     c7a:	bf00      	nop

00000c7c <__cmpdf2>:
     c7c:	f04f 0c01 	mov.w	ip, #1
     c80:	f84d cd04 	str.w	ip, [sp, #-4]!
     c84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
     c88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
     c8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
     c90:	bf18      	it	ne
     c92:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
     c96:	d01b      	beq.n	cd0 <__cmpdf2+0x54>
     c98:	b001      	add	sp, #4
     c9a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
     c9e:	bf0c      	ite	eq
     ca0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
     ca4:	ea91 0f03 	teqne	r1, r3
     ca8:	bf02      	ittt	eq
     caa:	ea90 0f02 	teqeq	r0, r2
     cae:	2000      	moveq	r0, #0
     cb0:	4770      	bxeq	lr
     cb2:	f110 0f00 	cmn.w	r0, #0
     cb6:	ea91 0f03 	teq	r1, r3
     cba:	bf58      	it	pl
     cbc:	4299      	cmppl	r1, r3
     cbe:	bf08      	it	eq
     cc0:	4290      	cmpeq	r0, r2
     cc2:	bf2c      	ite	cs
     cc4:	17d8      	asrcs	r0, r3, #31
     cc6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
     cca:	f040 0001 	orr.w	r0, r0, #1
     cce:	4770      	bx	lr
     cd0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
     cd4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
     cd8:	d102      	bne.n	ce0 <__cmpdf2+0x64>
     cda:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
     cde:	d107      	bne.n	cf0 <__cmpdf2+0x74>
     ce0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
     ce4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
     ce8:	d1d6      	bne.n	c98 <__cmpdf2+0x1c>
     cea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
     cee:	d0d3      	beq.n	c98 <__cmpdf2+0x1c>
     cf0:	f85d 0b04 	ldr.w	r0, [sp], #4
     cf4:	4770      	bx	lr
__cmpdf2():
     cf6:	bf00      	nop

00000cf8 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
     cf8:	4684      	mov	ip, r0
     cfa:	4610      	mov	r0, r2
     cfc:	4662      	mov	r2, ip
     cfe:	468c      	mov	ip, r1
     d00:	4619      	mov	r1, r3
     d02:	4663      	mov	r3, ip
     d04:	e000      	b.n	d08 <__aeabi_cdcmpeq>
     d06:	bf00      	nop

00000d08 <__aeabi_cdcmpeq>:
     d08:	b501      	push	{r0, lr}
     d0a:	f7ff ffb7 	bl	c7c <__cmpdf2>
     d0e:	2800      	cmp	r0, #0
     d10:	bf48      	it	mi
     d12:	f110 0f00 	cmnmi.w	r0, #0
     d16:	bd01      	pop	{r0, pc}

00000d18 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
     d18:	f84d ed08 	str.w	lr, [sp, #-8]!
     d1c:	f7ff fff4 	bl	d08 <__aeabi_cdcmpeq>
     d20:	bf0c      	ite	eq
     d22:	2001      	moveq	r0, #1
     d24:	2000      	movne	r0, #0
     d26:	f85d fb08 	ldr.w	pc, [sp], #8
     d2a:	bf00      	nop

00000d2c <__aeabi_dcmplt>:
__aeabi_dcmplt():
     d2c:	f84d ed08 	str.w	lr, [sp, #-8]!
     d30:	f7ff ffea 	bl	d08 <__aeabi_cdcmpeq>
     d34:	bf34      	ite	cc
     d36:	2001      	movcc	r0, #1
     d38:	2000      	movcs	r0, #0
     d3a:	f85d fb08 	ldr.w	pc, [sp], #8
     d3e:	bf00      	nop

00000d40 <__aeabi_dcmple>:
__aeabi_dcmple():
     d40:	f84d ed08 	str.w	lr, [sp, #-8]!
     d44:	f7ff ffe0 	bl	d08 <__aeabi_cdcmpeq>
     d48:	bf94      	ite	ls
     d4a:	2001      	movls	r0, #1
     d4c:	2000      	movhi	r0, #0
     d4e:	f85d fb08 	ldr.w	pc, [sp], #8
     d52:	bf00      	nop

00000d54 <__aeabi_dcmpge>:
__aeabi_dcmpge():
     d54:	f84d ed08 	str.w	lr, [sp, #-8]!
     d58:	f7ff ffce 	bl	cf8 <__aeabi_cdrcmple>
     d5c:	bf94      	ite	ls
     d5e:	2001      	movls	r0, #1
     d60:	2000      	movhi	r0, #0
     d62:	f85d fb08 	ldr.w	pc, [sp], #8
     d66:	bf00      	nop

00000d68 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
     d68:	f84d ed08 	str.w	lr, [sp, #-8]!
     d6c:	f7ff ffc4 	bl	cf8 <__aeabi_cdrcmple>
     d70:	bf34      	ite	cc
     d72:	2001      	movcc	r0, #1
     d74:	2000      	movcs	r0, #0
     d76:	f85d fb08 	ldr.w	pc, [sp], #8
     d7a:	bf00      	nop

00000d7c <__aeabi_d2iz>:
__fixdfsi():
     d7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
     d80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
     d84:	d215      	bcs.n	db2 <__aeabi_d2iz+0x36>
     d86:	d511      	bpl.n	dac <__aeabi_d2iz+0x30>
     d88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
     d8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
     d90:	d912      	bls.n	db8 <__aeabi_d2iz+0x3c>
     d92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
     d96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
     d9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
     d9e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
     da2:	fa23 f002 	lsr.w	r0, r3, r2
     da6:	bf18      	it	ne
     da8:	4240      	negne	r0, r0
     daa:	4770      	bx	lr
     dac:	f04f 0000 	mov.w	r0, #0
     db0:	4770      	bx	lr
     db2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
     db6:	d105      	bne.n	dc4 <__aeabi_d2iz+0x48>
     db8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
     dbc:	bf08      	it	eq
     dbe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
     dc2:	4770      	bx	lr
     dc4:	f04f 0000 	mov.w	r0, #0
     dc8:	4770      	bx	lr
     dca:	bf00      	nop

00000dcc <__aeabi_d2f>:
__aeabi_d2f():
     dcc:	ea4f 0241 	mov.w	r2, r1, lsl #1
     dd0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
     dd4:	bf24      	itt	cs
     dd6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
     dda:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
     dde:	d90d      	bls.n	dfc <__aeabi_d2f+0x30>
     de0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
     de4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
     de8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
     dec:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
     df0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
     df4:	bf08      	it	eq
     df6:	f020 0001 	biceq.w	r0, r0, #1
     dfa:	4770      	bx	lr
     dfc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
     e00:	d121      	bne.n	e46 <__aeabi_d2f+0x7a>
     e02:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
     e06:	bfbc      	itt	lt
     e08:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
     e0c:	4770      	bxlt	lr
     e0e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
     e12:	ea4f 5252 	mov.w	r2, r2, lsr #21
     e16:	f1c2 0218 	rsb	r2, r2, #24
     e1a:	f1c2 0c20 	rsb	ip, r2, #32
     e1e:	fa10 f30c 	lsls.w	r3, r0, ip
     e22:	fa20 f002 	lsr.w	r0, r0, r2
     e26:	bf18      	it	ne
     e28:	f040 0001 	orrne.w	r0, r0, #1
     e2c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
     e30:	ea4f 23d3 	mov.w	r3, r3, lsr #11
     e34:	fa03 fc0c 	lsl.w	ip, r3, ip
     e38:	ea40 000c 	orr.w	r0, r0, ip
     e3c:	fa23 f302 	lsr.w	r3, r3, r2
     e40:	ea4f 0343 	mov.w	r3, r3, lsl #1
     e44:	e7cc      	b.n	de0 <__aeabi_d2f+0x14>
     e46:	ea7f 5362 	mvns.w	r3, r2, asr #21
     e4a:	d107      	bne.n	e5c <__aeabi_d2f+0x90>
     e4c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
     e50:	bf1e      	ittt	ne
     e52:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
     e56:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
     e5a:	4770      	bxne	lr
     e5c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
     e60:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
     e64:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
     e68:	4770      	bx	lr
     e6a:	bf00      	nop

00000e6c <strcmp>:
$t():
     e6c:	f810 2b01 	ldrb.w	r2, [r0], #1
     e70:	f811 3b01 	ldrb.w	r3, [r1], #1
     e74:	2a01      	cmp	r2, #1
     e76:	bf28      	it	cs
     e78:	429a      	cmpcs	r2, r3
     e7a:	d0f7      	beq.n	e6c <strcmp>
     e7c:	1ad0      	subs	r0, r2, r3
     e7e:	4770      	bx	lr

00000e80 <CPU_SetBASEPRI>:
CPU_SetBASEPRI():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:277
asm void CPU_SetBASEPRI(register uint32_t Level) {
  MSR BASEPRI,R0;
  MOV PC,LR
}
#elif defined(__GNUC__)
void CPU_SetBASEPRI(uint32_t Level) {
     e80:	b480      	push	{r7}
     e82:	b083      	sub	sp, #12
     e84:	af00      	add	r7, sp, #0
     e86:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:278
  __asm ("msr basepri, %[input]"::[input] "r" (Level):);
     e88:	687b      	ldr	r3, [r7, #4]
     e8a:	f383 8811 	msr	BASEPRI, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:279
}
     e8e:	370c      	adds	r7, #12
     e90:	46bd      	mov	sp, r7
     e92:	f85d 7b04 	ldr.w	r7, [sp], #4
     e96:	4770      	bx	lr

00000e98 <__init_hardware>:
__init_hardware():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:321
  #if defined(__IAR_SYSTEMS_ICC__)    
    #define PEX_ENTRYPOINT_FUNCTION_RETURN return 1;
  #endif
#endif
PEX_ENTRYPOINT_FUNCTION_TYPE PEX_ENTRYPOINT_FUNCTION()
{
     e98:	b580      	push	{r7, lr}
     e9a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:327
  /* Interrupt vector placement initialization */
  #if PEX_VECTOR_TABLE
    #if defined(__IAR_SYSTEMS_ICC__)
  SCB_VTOR = (uint32_t)(&__vector_table); /* Set the interrupt vector table position */
    #elif defined(__CWCC__) | defined(__GNUC__) | defined(__CC_ARM)
  SCB_VTOR = (uint32_t)(&__vect_table); /* Set the interrupt vector table position */
     e9c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
     ea0:	4a1d      	ldr	r2, [pc, #116]	; (f18 <__init_hardware+0x80>)
     ea2:	f8c3 2d08 	str.w	r2, [r3, #3336]	; 0xd08
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:332
    #endif
  #endif
  /* Disable the WDOG module */
  #if STARTUP_WDOG
  WDOG_UNLOCK = (uint16_t)STARTUP_WDOG_KEY_1; /* Key 1 */
     ea6:	4b1d      	ldr	r3, [pc, #116]	; (f1c <__init_hardware+0x84>)
     ea8:	f24c 5220 	movw	r2, #50464	; 0xc520
     eac:	81da      	strh	r2, [r3, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:333
  WDOG_UNLOCK = (uint16_t)STARTUP_WDOG_KEY_2; /* Key 2 */
     eae:	4b1b      	ldr	r3, [pc, #108]	; (f1c <__init_hardware+0x84>)
     eb0:	f64d 1228 	movw	r2, #55592	; 0xd928
     eb4:	81da      	strh	r2, [r3, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:334
  WDOG_STCTRLH = (uint16_t)STARTUP_WDOG_STCTRLH_VALUE; /* Disable WDOG */
     eb6:	4b19      	ldr	r3, [pc, #100]	; (f1c <__init_hardware+0x84>)
     eb8:	f44f 72e9 	mov.w	r2, #466	; 0x1d2
     ebc:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:403
    #endif /* defined(STARTUP_CLOCK_INTERNAL_FAST_TRIM_ADDRESS) */
  #endif /* STARTUP_CLOCK_INTERNAL_FAST_TRIM */
  /* Low power modes protection */
  
  /* Disable very low power mode protection */
  SMC_PMPROT = (CPU_LOW_POWER_ALLOW_VLP? SMC_PMPROT_AVLP_MASK : 0) |
     ebe:	4b18      	ldr	r3, [pc, #96]	; (f20 <__init_hardware+0x88>)
     ec0:	2200      	movs	r2, #0
     ec2:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:407
               (CPU_LOW_POWER_ALLOW_LLS? SMC_PMPROT_ALLS_MASK : 0) |
               (CPU_LOW_POWER_ALLOW_VLLS? SMC_PMPROT_AVLLS_MASK : 0);
  /* SIM_CLKDIV1: OUTDIV1=0,OUTDIV2=1,OUTDIV3=4,OUTDIV4=4,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0x00) |
     ec4:	4b17      	ldr	r3, [pc, #92]	; (f24 <__init_hardware+0x8c>)
     ec6:	f503 5382 	add.w	r3, r3, #4160	; 0x1040
     eca:	3304      	adds	r3, #4
     ecc:	f04f 72a2 	mov.w	r2, #21233664	; 0x1440000
     ed0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:411
                SIM_CLKDIV1_OUTDIV2(0x01) |
                SIM_CLKDIV1_OUTDIV3(0x04) |
                SIM_CLKDIV1_OUTDIV4(0x04); /* Set the system prescalers to safe value */
  CPU_SetClockConfigGenMode(CPU_CLOCK_CONFIG_0);
     ed2:	2000      	movs	r0, #0
     ed4:	f000 f87c 	bl	fd0 <CPU_SetClockConfigGenMode>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:412
  SIM_CLKDIV1 = (uint32_t)CPU_ClockConfigDescriptors[CPU_CLOCK_CONFIG_0].SysRegs.SIM_CLKDIV1_value; /* Update system prescalers */
     ed8:	4b12      	ldr	r3, [pc, #72]	; (f24 <__init_hardware+0x8c>)
     eda:	4a13      	ldr	r2, [pc, #76]	; (f28 <__init_hardware+0x90>)
     edc:	f503 5382 	add.w	r3, r3, #4160	; 0x1040
     ee0:	3304      	adds	r3, #4
     ee2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:413
  SIM_SOPT1 = (uint32_t)((SIM_SOPT1 & (uint32_t)~(uint32_t)SIM_SOPT1_OSC32KSEL_MASK) | (uint32_t)CPU_ClockConfigDescriptors[CPU_CLOCK_CONFIG_0].SysRegs.SIM_SOPT1_value); /* Update 32 kHz oscillator clock source (ERCLK32K) */
     ee4:	4b0f      	ldr	r3, [pc, #60]	; (f24 <__init_hardware+0x8c>)
     ee6:	4a0f      	ldr	r2, [pc, #60]	; (f24 <__init_hardware+0x8c>)
     ee8:	6812      	ldr	r2, [r2, #0]
     eea:	f422 2140 	bic.w	r1, r2, #786432	; 0xc0000
     eee:	f44f 2240 	mov.w	r2, #786432	; 0xc0000
     ef2:	430a      	orrs	r2, r1
     ef4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:414
  SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)SIM_SOPT2_PLLFLLSEL_MASK) | (uint32_t)CPU_ClockConfigDescriptors[CPU_CLOCK_CONFIG_0].SysRegs.SIM_SOPT2_value); /* Update PLL/FLL clock select */
     ef6:	490b      	ldr	r1, [pc, #44]	; (f24 <__init_hardware+0x8c>)
     ef8:	4b0a      	ldr	r3, [pc, #40]	; (f24 <__init_hardware+0x8c>)
     efa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
     efe:	3304      	adds	r3, #4
     f00:	681b      	ldr	r3, [r3, #0]
     f02:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
     f06:	f44f 3380 	mov.w	r3, #65536	; 0x10000
     f0a:	431a      	orrs	r2, r3
     f0c:	f501 5380 	add.w	r3, r1, #4096	; 0x1000
     f10:	3304      	adds	r3, #4
     f12:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:418
  #if defined(PEX_ENTRYPOINT_FUNCTION_RETURN)
  PEX_ENTRYPOINT_FUNCTION_RETURN
  #endif  
}
     f14:	bd80      	pop	{r7, pc}
     f16:	bf00      	nop
     f18:	00000000 	.word	0x00000000
     f1c:	40052000 	.word	0x40052000
     f20:	4007e000 	.word	0x4007e000
     f24:	40047000 	.word	0x40047000
     f28:	01150000 	.word	0x01150000

00000f2c <PE_low_level_init>:
PE_low_level_init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:432
**         of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void PE_low_level_init(void)
{
     f2c:	b580      	push	{r7, lr}
     f2e:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:492


  /* Common initialization */
  
  #if CPU_COMMON_INIT
  Common_Init();
     f30:	f007 f890 	bl	8054 <Common_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:510
  #endif /* CPU_ON_RESET_EVENT_NAME */
  
  /* Rest of components initialization */
  
  #if CPU_COMPONENTS_INIT
  Components_Init();
     f34:	f007 f948 	bl	81c8 <Components_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:523
    #if defined(__IAR_SYSTEMS_ICC__)
    __set_BASEPRI(CPU_INT_PRIORITY);
    #elif defined(__CWCC__)
    CPU_SetBASEPRI(CPU_INT_PRIORITY);
    #elif defined(__GNUC__)
    CPU_SetBASEPRI(CPU_INT_PRIORITY);
     f38:	20f0      	movs	r0, #240	; 0xf0
     f3a:	f7ff ffa1 	bl	e80 <CPU_SetBASEPRI>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:530
    CPU_SetBASEPRI(CPU_INT_PRIORITY);
  	#else /* defined(compiler ID) */
  	  #error Unsupported compiler
  	#endif /* defined(compiler ID) */
  #endif
}
     f3e:	bd80      	pop	{r7, pc}

00000f40 <CPU_GetClockGenMode>:
CPU_GetClockGenMode():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:533

CPU_TClockGenMode CPU_GetClockGenMode(void)
{
     f40:	b480      	push	{r7}
     f42:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:534
  switch (MCG_C1  & MCG_C1_CLKS_MASK) {
     f44:	4b21      	ldr	r3, [pc, #132]	; (fcc <CPU_GetClockGenMode+0x8c>)
     f46:	781b      	ldrb	r3, [r3, #0]
     f48:	b2db      	uxtb	r3, r3
     f4a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
     f4e:	2b40      	cmp	r3, #64	; 0x40
     f50:	d017      	beq.n	f82 <CPU_GetClockGenMode+0x42>
     f52:	2b80      	cmp	r3, #128	; 0x80
     f54:	d020      	beq.n	f98 <CPU_GetClockGenMode+0x58>
     f56:	2b00      	cmp	r3, #0
     f58:	d132      	bne.n	fc0 <CPU_GetClockGenMode+0x80>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:537
    case  0x00U:
      /* Output of FLL or PLL is selected */
      if ((MCG_C6 & MCG_C6_PLLS_MASK) == 0x00U) {
     f5a:	4b1c      	ldr	r3, [pc, #112]	; (fcc <CPU_GetClockGenMode+0x8c>)
     f5c:	795b      	ldrb	r3, [r3, #5]
     f5e:	b2db      	uxtb	r3, r3
     f60:	f003 0340 	and.w	r3, r3, #64	; 0x40
     f64:	2b00      	cmp	r3, #0
     f66:	d10a      	bne.n	f7e <CPU_GetClockGenMode+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:539
        /* Output of FLL is selected */
        if ((MCG_C1 & MCG_C1_IREFS_MASK) == 0x00U) {
     f68:	4b18      	ldr	r3, [pc, #96]	; (fcc <CPU_GetClockGenMode+0x8c>)
     f6a:	781b      	ldrb	r3, [r3, #0]
     f6c:	b2db      	uxtb	r3, r3
     f6e:	f003 0304 	and.w	r3, r3, #4
     f72:	2b00      	cmp	r3, #0
     f74:	d101      	bne.n	f7a <CPU_GetClockGenMode+0x3a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:541
          /* External reference clock is selected */
          return CPU_MCG_MODE_FEE;
     f76:	2303      	movs	r3, #3
     f78:	e023      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:544
        } else {
          /* Internal reference clock is selected */
          return CPU_MCG_MODE_FEI;
     f7a:	2300      	movs	r3, #0
     f7c:	e021      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:548
        }
      } else {
        /* Output of FLL is selected */
	      return CPU_MCG_MODE_PEE;
     f7e:	2307      	movs	r3, #7
     f80:	e01f      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:552
	    }  
    case 0x40U:
      /* Internal reference clock is selected */
      if ((MCG_C2 & MCG_C2_LP_MASK) == 0x00U) {
     f82:	4b12      	ldr	r3, [pc, #72]	; (fcc <CPU_GetClockGenMode+0x8c>)
     f84:	785b      	ldrb	r3, [r3, #1]
     f86:	b2db      	uxtb	r3, r3
     f88:	f003 0302 	and.w	r3, r3, #2
     f8c:	2b00      	cmp	r3, #0
     f8e:	d101      	bne.n	f94 <CPU_GetClockGenMode+0x54>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:554
        /* Low power mode is disabled */
        return CPU_MCG_MODE_FBI;
     f90:	2301      	movs	r3, #1
     f92:	e016      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:557
      } else {
        /* Low power mode is enabled */
        return CPU_MCG_MODE_BLPI;
     f94:	2302      	movs	r3, #2
     f96:	e014      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:561
      }
    case 0x80U:
      /* External reference clock is selected */
      if ((MCG_C6 & MCG_C6_PLLS_MASK) == 0x00U) {
     f98:	4b0c      	ldr	r3, [pc, #48]	; (fcc <CPU_GetClockGenMode+0x8c>)
     f9a:	795b      	ldrb	r3, [r3, #5]
     f9c:	b2db      	uxtb	r3, r3
     f9e:	f003 0340 	and.w	r3, r3, #64	; 0x40
     fa2:	2b00      	cmp	r3, #0
     fa4:	d10a      	bne.n	fbc <CPU_GetClockGenMode+0x7c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:563
        /* FLL or PLL is selected */
        if ((MCG_C2 & MCG_C2_LP_MASK) == 0x00U) {
     fa6:	4b09      	ldr	r3, [pc, #36]	; (fcc <CPU_GetClockGenMode+0x8c>)
     fa8:	785b      	ldrb	r3, [r3, #1]
     faa:	b2db      	uxtb	r3, r3
     fac:	f003 0302 	and.w	r3, r3, #2
     fb0:	2b00      	cmp	r3, #0
     fb2:	d101      	bne.n	fb8 <CPU_GetClockGenMode+0x78>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:565
          /* FLL is selected */
          return CPU_MCG_MODE_FBE;
     fb4:	2304      	movs	r3, #4
     fb6:	e004      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:568
        } else {
          /* Low power mode is enabled */
          return CPU_MCG_MODE_BLPE;
     fb8:	2305      	movs	r3, #5
     fba:	e002      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:572
        }
      } else {
        /* PLL is selected */
        return CPU_MCG_MODE_PBE;
     fbc:	2306      	movs	r3, #6
     fbe:	e000      	b.n	fc2 <CPU_GetClockGenMode+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:575
      }
    default:
      return (CPU_TClockGenMode)0x00U;
     fc0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:577
  }
}
     fc2:	4618      	mov	r0, r3
     fc4:	46bd      	mov	sp, r7
     fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
     fca:	4770      	bx	lr
     fcc:	40064000 	.word	0x40064000

00000fd0 <CPU_SetClockConfigGenMode>:
CPU_SetClockConfigGenMode():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:580

void CPU_SetClockConfigGenMode(LDD_TClockConfiguration ConfigID)
{
     fd0:	b590      	push	{r4, r7, lr}
     fd2:	b087      	sub	sp, #28
     fd4:	af00      	add	r7, sp, #0
     fd6:	4603      	mov	r3, r0
     fd8:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:583
  CPU_TClockGenMode NextMode, TargetMCGMode;
  CPU_TClockGenRegs NextModeRegs;
  CPU_TClockGenMode TargetMode = CPU_ClockConfigDescriptors[ConfigID].Mode;
     fda:	79fa      	ldrb	r2, [r7, #7]
     fdc:	49aa      	ldr	r1, [pc, #680]	; (1288 <CPU_SetClockConfigGenMode+0x2b8>)
     fde:	4613      	mov	r3, r2
     fe0:	00db      	lsls	r3, r3, #3
     fe2:	1a9b      	subs	r3, r3, r2
     fe4:	009b      	lsls	r3, r3, #2
     fe6:	440b      	add	r3, r1
     fe8:	881b      	ldrh	r3, [r3, #0]
     fea:	82bb      	strh	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:586
  
  /* External clock source pin routing */
  if ((TargetMode & (CPU_CLOCK_EXTERNAL_CLOCK_MASK | CPU_CLOCK_EXTERNAL_CRYSTAL_MASK)) != 0) { /* Is external clock source used in targeted clock configuration? */
     fec:	8abb      	ldrh	r3, [r7, #20]
     fee:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
     ff2:	2b00      	cmp	r3, #0
     ff4:	d020      	beq.n	1038 <CPU_SetClockConfigGenMode+0x68>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:588
    /* If yes, initialize the EXTAL pin routing */
    SIM_SCGC5 |= (uint32_t)SIM_SCGC5_PORTA_MASK; /* Enable EXTAL/XTAL pins clock gate */
     ff6:	49a5      	ldr	r1, [pc, #660]	; (128c <CPU_SetClockConfigGenMode+0x2bc>)
     ff8:	4ba4      	ldr	r3, [pc, #656]	; (128c <CPU_SetClockConfigGenMode+0x2bc>)
     ffa:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
     ffe:	3318      	adds	r3, #24
    1000:	681b      	ldr	r3, [r3, #0]
    1002:	f443 7200 	orr.w	r2, r3, #512	; 0x200
    1006:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    100a:	3318      	adds	r3, #24
    100c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:590
    /* PORTA_PCR18: ISF=0,MUX=0 */
    PORTA_PCR18 &= (uint32_t)~(uint32_t)(
    100e:	4aa0      	ldr	r2, [pc, #640]	; (1290 <CPU_SetClockConfigGenMode+0x2c0>)
    1010:	4b9f      	ldr	r3, [pc, #636]	; (1290 <CPU_SetClockConfigGenMode+0x2c0>)
    1012:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    1014:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    1018:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    101c:	6493      	str	r3, [r2, #72]	; 0x48
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:594
                    PORT_PCR_ISF_MASK |
                    PORT_PCR_MUX(0x07)
                   );
    if ((TargetMode & CPU_CLOCK_EXTERNAL_CRYSTAL_MASK) != 0) { /* Is external crystal/resonator used in targeted clock configuration? */
    101e:	8abb      	ldrh	r3, [r7, #20]
    1020:	f003 0380 	and.w	r3, r3, #128	; 0x80
    1024:	2b00      	cmp	r3, #0
    1026:	d007      	beq.n	1038 <CPU_SetClockConfigGenMode+0x68>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:597
      /* If yes, initialize also XTAL pin routing */
      /* PORTA_PCR19: ISF=0,MUX=0 */
      PORTA_PCR19 &= (uint32_t)~(uint32_t)(
    1028:	4a99      	ldr	r2, [pc, #612]	; (1290 <CPU_SetClockConfigGenMode+0x2c0>)
    102a:	4b99      	ldr	r3, [pc, #612]	; (1290 <CPU_SetClockConfigGenMode+0x2c0>)
    102c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    102e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    1032:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    1036:	64d3      	str	r3, [r2, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:604
                      PORT_PCR_MUX(0x07)
                     );
    }
  }
  
  if ((MCG_SC & MCG_SC_FCRDIV_MASK) != CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_SC_value) { /* Check if it is necessary to update Fast Clock Internal Reference Divider */ 
    1038:	4b96      	ldr	r3, [pc, #600]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    103a:	7a1b      	ldrb	r3, [r3, #8]
    103c:	b2db      	uxtb	r3, r3
    103e:	f003 010e 	and.w	r1, r3, #14
    1042:	79fa      	ldrb	r2, [r7, #7]
    1044:	4890      	ldr	r0, [pc, #576]	; (1288 <CPU_SetClockConfigGenMode+0x2b8>)
    1046:	4613      	mov	r3, r2
    1048:	00db      	lsls	r3, r3, #3
    104a:	1a9b      	subs	r3, r3, r2
    104c:	009b      	lsls	r3, r3, #2
    104e:	4403      	add	r3, r0
    1050:	7a5b      	ldrb	r3, [r3, #9]
    1052:	4299      	cmp	r1, r3
    1054:	f000 8082 	beq.w	115c <CPU_SetClockConfigGenMode+0x18c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:605
    if ((MCG_C2 & MCG_C2_IRCS_MASK) == 0x00U) {
    1058:	4b8e      	ldr	r3, [pc, #568]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    105a:	785b      	ldrb	r3, [r3, #1]
    105c:	b2db      	uxtb	r3, r3
    105e:	f003 0301 	and.w	r3, r3, #1
    1062:	2b00      	cmp	r3, #0
    1064:	d116      	bne.n	1094 <CPU_SetClockConfigGenMode+0xc4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:606
      MCG_SC = (MCG_SC & (uint8_t)(~(MCG_SC_FCRDIV_MASK))) | CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_SC_value;
    1066:	498b      	ldr	r1, [pc, #556]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1068:	4b8a      	ldr	r3, [pc, #552]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    106a:	7a1b      	ldrb	r3, [r3, #8]
    106c:	b2db      	uxtb	r3, r3
    106e:	b2db      	uxtb	r3, r3
    1070:	f023 030e 	bic.w	r3, r3, #14
    1074:	b2d8      	uxtb	r0, r3
    1076:	79fa      	ldrb	r2, [r7, #7]
    1078:	4c83      	ldr	r4, [pc, #524]	; (1288 <CPU_SetClockConfigGenMode+0x2b8>)
    107a:	4613      	mov	r3, r2
    107c:	00db      	lsls	r3, r3, #3
    107e:	1a9b      	subs	r3, r3, r2
    1080:	009b      	lsls	r3, r3, #2
    1082:	4423      	add	r3, r4
    1084:	7a5b      	ldrb	r3, [r3, #9]
    1086:	b2db      	uxtb	r3, r3
    1088:	4602      	mov	r2, r0
    108a:	4313      	orrs	r3, r2
    108c:	b2db      	uxtb	r3, r3
    108e:	b2db      	uxtb	r3, r3
    1090:	720b      	strb	r3, [r1, #8]
    1092:	e063      	b.n	115c <CPU_SetClockConfigGenMode+0x18c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:608
    } else {
      if ((MCG_C1 & (MCG_C1_IREFS_MASK || MCG_C1_IRCLKEN_MASK)) != 0x00U) { /* Is internal reference clock active? */      
    1094:	4b7f      	ldr	r3, [pc, #508]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1096:	781b      	ldrb	r3, [r3, #0]
    1098:	b2db      	uxtb	r3, r3
    109a:	f003 0301 	and.w	r3, r3, #1
    109e:	2b00      	cmp	r3, #0
    10a0:	d036      	beq.n	1110 <CPU_SetClockConfigGenMode+0x140>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:609
        MCG_C2 &= (uint8_t)(~(MCG_C2_IRCS_MASK)); /* Disable the fast internal clock */
    10a2:	4b7c      	ldr	r3, [pc, #496]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    10a4:	4a7b      	ldr	r2, [pc, #492]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    10a6:	7852      	ldrb	r2, [r2, #1]
    10a8:	b2d2      	uxtb	r2, r2
    10aa:	f022 0201 	bic.w	r2, r2, #1
    10ae:	b2d2      	uxtb	r2, r2
    10b0:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:610
        while((MCG_S & MCG_S_IRCST_MASK) != 0x00U) { /* Check that the source internal reference clock is slow clock. */
    10b2:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:610 (discriminator 1)
    10b4:	4b77      	ldr	r3, [pc, #476]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    10b6:	799b      	ldrb	r3, [r3, #6]
    10b8:	b2db      	uxtb	r3, r3
    10ba:	f003 0301 	and.w	r3, r3, #1
    10be:	2b00      	cmp	r3, #0
    10c0:	d1f8      	bne.n	10b4 <CPU_SetClockConfigGenMode+0xe4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:612
        }
        MCG_SC = (MCG_SC & (uint8_t)(~(MCG_SC_FCRDIV_MASK))) | CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_SC_value;    
    10c2:	4974      	ldr	r1, [pc, #464]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    10c4:	4b73      	ldr	r3, [pc, #460]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    10c6:	7a1b      	ldrb	r3, [r3, #8]
    10c8:	b2db      	uxtb	r3, r3
    10ca:	b2db      	uxtb	r3, r3
    10cc:	f023 030e 	bic.w	r3, r3, #14
    10d0:	b2d8      	uxtb	r0, r3
    10d2:	79fa      	ldrb	r2, [r7, #7]
    10d4:	4c6c      	ldr	r4, [pc, #432]	; (1288 <CPU_SetClockConfigGenMode+0x2b8>)
    10d6:	4613      	mov	r3, r2
    10d8:	00db      	lsls	r3, r3, #3
    10da:	1a9b      	subs	r3, r3, r2
    10dc:	009b      	lsls	r3, r3, #2
    10de:	4423      	add	r3, r4
    10e0:	7a5b      	ldrb	r3, [r3, #9]
    10e2:	b2db      	uxtb	r3, r3
    10e4:	4602      	mov	r2, r0
    10e6:	4313      	orrs	r3, r2
    10e8:	b2db      	uxtb	r3, r3
    10ea:	b2db      	uxtb	r3, r3
    10ec:	720b      	strb	r3, [r1, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:613
        MCG_C2 |= MCG_C2_IRCS_MASK;    /* Re-enable the fast internal clock */
    10ee:	4b69      	ldr	r3, [pc, #420]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    10f0:	4a68      	ldr	r2, [pc, #416]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    10f2:	7852      	ldrb	r2, [r2, #1]
    10f4:	b2d2      	uxtb	r2, r2
    10f6:	f042 0201 	orr.w	r2, r2, #1
    10fa:	b2d2      	uxtb	r2, r2
    10fc:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:614
        while((MCG_S & MCG_S_IRCST_MASK) == 0x00U) { /* Check that the source internal reference clock is fast clock. */
    10fe:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:614 (discriminator 1)
    1100:	4b64      	ldr	r3, [pc, #400]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1102:	799b      	ldrb	r3, [r3, #6]
    1104:	b2db      	uxtb	r3, r3
    1106:	f003 0301 	and.w	r3, r3, #1
    110a:	2b00      	cmp	r3, #0
    110c:	d0f8      	beq.n	1100 <CPU_SetClockConfigGenMode+0x130>
    110e:	e025      	b.n	115c <CPU_SetClockConfigGenMode+0x18c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:617
        }
      } else {
        MCG_C2 &= (uint8_t)(~(MCG_C2_IRCS_MASK)); /* Disable the fast internal clock */
    1110:	4b60      	ldr	r3, [pc, #384]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1112:	4a60      	ldr	r2, [pc, #384]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1114:	7852      	ldrb	r2, [r2, #1]
    1116:	b2d2      	uxtb	r2, r2
    1118:	f022 0201 	bic.w	r2, r2, #1
    111c:	b2d2      	uxtb	r2, r2
    111e:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:618
        MCG_SC = (MCG_SC & (uint8_t)(~(MCG_SC_FCRDIV_MASK))) | CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_SC_value;    
    1120:	495c      	ldr	r1, [pc, #368]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1122:	4b5c      	ldr	r3, [pc, #368]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1124:	7a1b      	ldrb	r3, [r3, #8]
    1126:	b2db      	uxtb	r3, r3
    1128:	b2db      	uxtb	r3, r3
    112a:	f023 030e 	bic.w	r3, r3, #14
    112e:	b2d8      	uxtb	r0, r3
    1130:	79fa      	ldrb	r2, [r7, #7]
    1132:	4c55      	ldr	r4, [pc, #340]	; (1288 <CPU_SetClockConfigGenMode+0x2b8>)
    1134:	4613      	mov	r3, r2
    1136:	00db      	lsls	r3, r3, #3
    1138:	1a9b      	subs	r3, r3, r2
    113a:	009b      	lsls	r3, r3, #2
    113c:	4423      	add	r3, r4
    113e:	7a5b      	ldrb	r3, [r3, #9]
    1140:	b2db      	uxtb	r3, r3
    1142:	4602      	mov	r2, r0
    1144:	4313      	orrs	r3, r2
    1146:	b2db      	uxtb	r3, r3
    1148:	b2db      	uxtb	r3, r3
    114a:	720b      	strb	r3, [r1, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:619
        MCG_C2 |= MCG_C2_IRCS_MASK;    /* Re-enable the fast internal clock */
    114c:	4b51      	ldr	r3, [pc, #324]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    114e:	4a51      	ldr	r2, [pc, #324]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1150:	7852      	ldrb	r2, [r2, #1]
    1152:	b2d2      	uxtb	r2, r2
    1154:	f042 0201 	orr.w	r2, r2, #1
    1158:	b2d2      	uxtb	r2, r2
    115a:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:623
      }
    }
  }      
  NextMode = CPU_GetClockGenMode(); /* Identify the currently active MCG mode */
    115c:	f7ff fef0 	bl	f40 <CPU_GetClockGenMode>
    1160:	4603      	mov	r3, r0
    1162:	82fb      	strh	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:624
  TargetMCGMode = TargetMode & CPU_MCG_MODE_INDEX_MASK;
    1164:	8abb      	ldrh	r3, [r7, #20]
    1166:	f003 030f 	and.w	r3, r3, #15
    116a:	827b      	strh	r3, [r7, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:626
  do {
    NextMode = ClockGenModeMatrix[NextMode & CPU_MCG_MODE_INDEX_MASK][TargetMode & CPU_MCG_MODE_INDEX_MASK];
    116c:	8afb      	ldrh	r3, [r7, #22]
    116e:	f003 010f 	and.w	r1, r3, #15
    1172:	8abb      	ldrh	r3, [r7, #20]
    1174:	f003 020f 	and.w	r2, r3, #15
    1178:	4b47      	ldr	r3, [pc, #284]	; (1298 <CPU_SetClockConfigGenMode+0x2c8>)
    117a:	00c9      	lsls	r1, r1, #3
    117c:	440a      	add	r2, r1
    117e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
    1182:	82fb      	strh	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:627
    if (((NextMode == CPU_MCG_MODE_PBE) && (TargetMCGMode == CPU_MCG_MODE_PEE)) || ((NextMode == CPU_MCG_MODE_FBE) && (TargetMCGMode == CPU_MCG_MODE_FEE)) || (NextMode == TargetMCGMode)) {
    1184:	8afb      	ldrh	r3, [r7, #22]
    1186:	2b06      	cmp	r3, #6
    1188:	d102      	bne.n	1190 <CPU_SetClockConfigGenMode+0x1c0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:627 (discriminator 1)
    118a:	8a7b      	ldrh	r3, [r7, #18]
    118c:	2b07      	cmp	r3, #7
    118e:	d009      	beq.n	11a4 <CPU_SetClockConfigGenMode+0x1d4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:627 (discriminator 2)
    1190:	8afb      	ldrh	r3, [r7, #22]
    1192:	2b04      	cmp	r3, #4
    1194:	d102      	bne.n	119c <CPU_SetClockConfigGenMode+0x1cc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:627 (discriminator 1)
    1196:	8a7b      	ldrh	r3, [r7, #18]
    1198:	2b03      	cmp	r3, #3
    119a:	d003      	beq.n	11a4 <CPU_SetClockConfigGenMode+0x1d4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:627 (discriminator 2)
    119c:	8afa      	ldrh	r2, [r7, #22]
    119e:	8a7b      	ldrh	r3, [r7, #18]
    11a0:	429a      	cmp	r2, r3
    11a2:	d10d      	bne.n	11c0 <CPU_SetClockConfigGenMode+0x1f0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:628
      NextModeRegs = CPU_ClockConfigDescriptors[ConfigID].GenRegs;
    11a4:	79fa      	ldrb	r2, [r7, #7]
    11a6:	4938      	ldr	r1, [pc, #224]	; (1288 <CPU_SetClockConfigGenMode+0x2b8>)
    11a8:	4613      	mov	r3, r2
    11aa:	00db      	lsls	r3, r3, #3
    11ac:	1a9b      	subs	r3, r3, r2
    11ae:	009b      	lsls	r3, r3, #2
    11b0:	18ca      	adds	r2, r1, r3
    11b2:	f107 0308 	add.w	r3, r7, #8
    11b6:	3203      	adds	r2, #3
    11b8:	6810      	ldr	r0, [r2, #0]
    11ba:	6851      	ldr	r1, [r2, #4]
    11bc:	c303      	stmia	r3!, {r0, r1}
    11be:	e00a      	b.n	11d6 <CPU_SetClockConfigGenMode+0x206>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:630
    } else {
      NextModeRegs = *CPU_ClockGenModeRegs[NextMode & CPU_MCG_MODE_INDEX_MASK];
    11c0:	8afb      	ldrh	r3, [r7, #22]
    11c2:	f003 020f 	and.w	r2, r3, #15
    11c6:	4b35      	ldr	r3, [pc, #212]	; (129c <CPU_SetClockConfigGenMode+0x2cc>)
    11c8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
    11cc:	f107 0308 	add.w	r3, r7, #8
    11d0:	6810      	ldr	r0, [r2, #0]
    11d2:	6851      	ldr	r1, [r2, #4]
    11d4:	c303      	stmia	r3!, {r0, r1}
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:632
    }
    switch (NextMode) {
    11d6:	8afb      	ldrh	r3, [r7, #22]
    11d8:	2b07      	cmp	r3, #7
    11da:	f200 8154 	bhi.w	1486 <CPU_SetClockConfigGenMode+0x4b6>
    11de:	a201      	add	r2, pc, #4	; (adr r2, 11e4 <CPU_SetClockConfigGenMode+0x214>)
    11e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    11e4:	00001205 	.word	0x00001205
    11e8:	00001205 	.word	0x00001205
    11ec:	000012a5 	.word	0x000012a5
    11f0:	000012f9 	.word	0x000012f9
    11f4:	000012f9 	.word	0x000012f9
    11f8:	000013a9 	.word	0x000013a9
    11fc:	000013f3 	.word	0x000013f3
    1200:	000013f3 	.word	0x000013f3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:635
      case CPU_MCG_MODE_FEI:
      case CPU_MCG_MODE_FBI:
        MCG_C1 = NextModeRegs.MCG_C1_value; /* Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) */
    1204:	4b23      	ldr	r3, [pc, #140]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1206:	7a3a      	ldrb	r2, [r7, #8]
    1208:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:636
        while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    120a:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:636 (discriminator 1)
    120c:	4b21      	ldr	r3, [pc, #132]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    120e:	799b      	ldrb	r3, [r3, #6]
    1210:	b2db      	uxtb	r3, r3
    1212:	f003 0310 	and.w	r3, r3, #16
    1216:	2b00      	cmp	r3, #0
    1218:	d0f8      	beq.n	120c <CPU_SetClockConfigGenMode+0x23c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:638
        }
        MCG_C2 = ((NextModeRegs.MCG_C2_value) & (uint8_t)(~(MCG_C2_FCFTRIM_MASK))) | (MCG_C2 & MCG_C2_FCFTRIM_MASK); /* Set C2 (freq. range, ext. and int. reference selection etc.; trim values not changed) */
    121a:	4b1e      	ldr	r3, [pc, #120]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    121c:	7a7a      	ldrb	r2, [r7, #9]
    121e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    1222:	b2d1      	uxtb	r1, r2
    1224:	4a1b      	ldr	r2, [pc, #108]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1226:	7852      	ldrb	r2, [r2, #1]
    1228:	b2d2      	uxtb	r2, r2
    122a:	f002 0240 	and.w	r2, r2, #64	; 0x40
    122e:	b2d2      	uxtb	r2, r2
    1230:	430a      	orrs	r2, r1
    1232:	b2d2      	uxtb	r2, r2
    1234:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:639
        MCG_C4 = ((NextModeRegs.MCG_C4_value) & (uint8_t)(~(MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK))) | (MCG_C4 & (MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK)); /* Set C4 (FLL output; trim values not changed) */
    1236:	4b17      	ldr	r3, [pc, #92]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1238:	7aba      	ldrb	r2, [r7, #10]
    123a:	f022 021f 	bic.w	r2, r2, #31
    123e:	b2d1      	uxtb	r1, r2
    1240:	4a14      	ldr	r2, [pc, #80]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1242:	78d2      	ldrb	r2, [r2, #3]
    1244:	b2d2      	uxtb	r2, r2
    1246:	f002 021f 	and.w	r2, r2, #31
    124a:	b2d2      	uxtb	r2, r2
    124c:	430a      	orrs	r2, r1
    124e:	b2d2      	uxtb	r2, r2
    1250:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:640
        MCG_C7 = NextModeRegs.MCG_C7_value; /* Select MCG OSC clock source */
    1252:	4b10      	ldr	r3, [pc, #64]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1254:	7b7a      	ldrb	r2, [r7, #13]
    1256:	731a      	strb	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:641
        OSC_CR = NextModeRegs.OSC_CR_value; /* Set OSC_CR (OSCERCLK enable, oscillator capacitor load) */
    1258:	4b11      	ldr	r3, [pc, #68]	; (12a0 <CPU_SetClockConfigGenMode+0x2d0>)
    125a:	7bfa      	ldrb	r2, [r7, #15]
    125c:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:642
        MCG_C5 = NextModeRegs.MCG_C5_value; /* Set C5 (PLL settings, PLL reference divider etc.) */
    125e:	4b0d      	ldr	r3, [pc, #52]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1260:	7afa      	ldrb	r2, [r7, #11]
    1262:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:643
        MCG_C6 = NextModeRegs.MCG_C6_value; /* Set C6 (PLL select, VCO divider etc.) */
    1264:	4b0b      	ldr	r3, [pc, #44]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1266:	7b3a      	ldrb	r2, [r7, #12]
    1268:	715a      	strb	r2, [r3, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:644
        if (TargetMode & CPU_CLOCK_PLL_MASK) {
    126a:	8abb      	ldrh	r3, [r7, #20]
    126c:	f403 7300 	and.w	r3, r3, #512	; 0x200
    1270:	2b00      	cmp	r3, #0
    1272:	d008      	beq.n	1286 <CPU_SetClockConfigGenMode+0x2b6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:645
          MCG_C5 |= MCG_C5_PLLCLKEN0_MASK;
    1274:	4b07      	ldr	r3, [pc, #28]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1276:	4a07      	ldr	r2, [pc, #28]	; (1294 <CPU_SetClockConfigGenMode+0x2c4>)
    1278:	7912      	ldrb	r2, [r2, #4]
    127a:	b2d2      	uxtb	r2, r2
    127c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    1280:	b2d2      	uxtb	r2, r2
    1282:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:647
        }
        break;
    1284:	e100      	b.n	1488 <CPU_SetClockConfigGenMode+0x4b8>
    1286:	e0ff      	b.n	1488 <CPU_SetClockConfigGenMode+0x4b8>
    1288:	0000de48 	.word	0x0000de48
    128c:	40047000 	.word	0x40047000
    1290:	40049000 	.word	0x40049000
    1294:	40064000 	.word	0x40064000
    1298:	0000ddc8 	.word	0x0000ddc8
    129c:	0000dea4 	.word	0x0000dea4
    12a0:	40065000 	.word	0x40065000
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:649
      case CPU_MCG_MODE_BLPI:
        MCG_C1 = NextModeRegs.MCG_C1_value; /* Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) */
    12a4:	4b9a      	ldr	r3, [pc, #616]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    12a6:	7a3a      	ldrb	r2, [r7, #8]
    12a8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:650
        while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock is the internal reference clock. */
    12aa:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:650 (discriminator 1)
    12ac:	4b98      	ldr	r3, [pc, #608]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    12ae:	799b      	ldrb	r3, [r3, #6]
    12b0:	b2db      	uxtb	r3, r3
    12b2:	f003 0310 	and.w	r3, r3, #16
    12b6:	2b00      	cmp	r3, #0
    12b8:	d0f8      	beq.n	12ac <CPU_SetClockConfigGenMode+0x2dc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:652
        }
        MCG_C2 = ((NextModeRegs.MCG_C2_value) & (uint8_t)(~(MCG_C2_FCFTRIM_MASK))) | (MCG_C2 & MCG_C2_FCFTRIM_MASK); /* Set C2 (freq. range, ext. and int. reference selection etc.; trim values not changed) */
    12ba:	4b95      	ldr	r3, [pc, #596]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    12bc:	7a7a      	ldrb	r2, [r7, #9]
    12be:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    12c2:	b2d1      	uxtb	r1, r2
    12c4:	4a92      	ldr	r2, [pc, #584]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    12c6:	7852      	ldrb	r2, [r2, #1]
    12c8:	b2d2      	uxtb	r2, r2
    12ca:	f002 0240 	and.w	r2, r2, #64	; 0x40
    12ce:	b2d2      	uxtb	r2, r2
    12d0:	430a      	orrs	r2, r1
    12d2:	b2d2      	uxtb	r2, r2
    12d4:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:653
        OSC_CR = NextModeRegs.OSC_CR_value; /* Set OSC_CR (OSCERCLK enable, oscillator capacitor load) */
    12d6:	4b8f      	ldr	r3, [pc, #572]	; (1514 <CPU_SetClockConfigGenMode+0x544>)
    12d8:	7bfa      	ldrb	r2, [r7, #15]
    12da:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:654
        if (TargetMode & CPU_CLOCK_FAST_MASK) {
    12dc:	8abb      	ldrh	r3, [r7, #20]
    12de:	f003 0320 	and.w	r3, r3, #32
    12e2:	2b00      	cmp	r3, #0
    12e4:	d007      	beq.n	12f6 <CPU_SetClockConfigGenMode+0x326>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:655
          while((MCG_S & MCG_S_IRCST_MASK) == 0x00U) { /* Check that the fast external reference clock is selected. */
    12e6:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:655 (discriminator 1)
    12e8:	4b89      	ldr	r3, [pc, #548]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    12ea:	799b      	ldrb	r3, [r3, #6]
    12ec:	b2db      	uxtb	r3, r3
    12ee:	f003 0301 	and.w	r3, r3, #1
    12f2:	2b00      	cmp	r3, #0
    12f4:	d0f8      	beq.n	12e8 <CPU_SetClockConfigGenMode+0x318>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:658
      	  }
      	}      	
        break;
    12f6:	e0c7      	b.n	1488 <CPU_SetClockConfigGenMode+0x4b8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:661
      case CPU_MCG_MODE_FEE:
      case CPU_MCG_MODE_FBE:
        MCG_C2 = ((NextModeRegs.MCG_C2_value) & (uint8_t)(~(MCG_C2_FCFTRIM_MASK))) | (MCG_C2 & MCG_C2_FCFTRIM_MASK); /* Set C2 (freq. range, ext. and int. reference selection etc.; trim values not changed) */
    12f8:	4b85      	ldr	r3, [pc, #532]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    12fa:	7a7a      	ldrb	r2, [r7, #9]
    12fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    1300:	b2d1      	uxtb	r1, r2
    1302:	4a83      	ldr	r2, [pc, #524]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1304:	7852      	ldrb	r2, [r2, #1]
    1306:	b2d2      	uxtb	r2, r2
    1308:	f002 0240 	and.w	r2, r2, #64	; 0x40
    130c:	b2d2      	uxtb	r2, r2
    130e:	430a      	orrs	r2, r1
    1310:	b2d2      	uxtb	r2, r2
    1312:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:662
        OSC_CR = NextModeRegs.OSC_CR_value; /* Set OSC_CR (OSCERCLK enable, oscillator capacitor load) */      	
    1314:	4b7f      	ldr	r3, [pc, #508]	; (1514 <CPU_SetClockConfigGenMode+0x544>)
    1316:	7bfa      	ldrb	r2, [r7, #15]
    1318:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:663
        MCG_C7 = NextModeRegs.MCG_C7_value; /* Select MCG OSC clock source */
    131a:	4b7d      	ldr	r3, [pc, #500]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    131c:	7b7a      	ldrb	r2, [r7, #13]
    131e:	731a      	strb	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:664
        if (NextMode == CPU_MCG_MODE_FBE) {
    1320:	8afb      	ldrh	r3, [r7, #22]
    1322:	2b04      	cmp	r3, #4
    1324:	d106      	bne.n	1334 <CPU_SetClockConfigGenMode+0x364>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:665
          MCG_C1 = NextModeRegs.MCG_C1_value | MCG_C1_CLKS(0x02); /* Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) */
    1326:	4b7a      	ldr	r3, [pc, #488]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1328:	7a3a      	ldrb	r2, [r7, #8]
    132a:	f062 027f 	orn	r2, r2, #127	; 0x7f
    132e:	b2d2      	uxtb	r2, r2
    1330:	701a      	strb	r2, [r3, #0]
    1332:	e002      	b.n	133a <CPU_SetClockConfigGenMode+0x36a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:667
        } else {
          MCG_C1 = NextModeRegs.MCG_C1_value; /* Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) */
    1334:	4b76      	ldr	r3, [pc, #472]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1336:	7a3a      	ldrb	r2, [r7, #8]
    1338:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:669
        }
        if ((TargetMode & CPU_CLOCK_EXTERNAL_CRYSTAL_MASK) != 0) {
    133a:	8abb      	ldrh	r3, [r7, #20]
    133c:	f003 0380 	and.w	r3, r3, #128	; 0x80
    1340:	2b00      	cmp	r3, #0
    1342:	d007      	beq.n	1354 <CPU_SetClockConfigGenMode+0x384>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:670
          while((MCG_S & MCG_S_OSCINIT0_MASK) == 0x00U) { /* Check that the oscillator is running */
    1344:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:670 (discriminator 1)
    1346:	4b72      	ldr	r3, [pc, #456]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1348:	799b      	ldrb	r3, [r3, #6]
    134a:	b2db      	uxtb	r3, r3
    134c:	f003 0302 	and.w	r3, r3, #2
    1350:	2b00      	cmp	r3, #0
    1352:	d0f8      	beq.n	1346 <CPU_SetClockConfigGenMode+0x376>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:673
          }
        }
        while((MCG_S & MCG_S_IREFST_MASK) != 0x00U) { /* Check that the source of the FLL reference clock is the external reference clock. */
    1354:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:673 (discriminator 1)
    1356:	4b6e      	ldr	r3, [pc, #440]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1358:	799b      	ldrb	r3, [r3, #6]
    135a:	b2db      	uxtb	r3, r3
    135c:	f003 0310 	and.w	r3, r3, #16
    1360:	2b00      	cmp	r3, #0
    1362:	d1f8      	bne.n	1356 <CPU_SetClockConfigGenMode+0x386>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:675
        }
        MCG_C4 = ((NextModeRegs.MCG_C4_value) & (uint8_t)(~(MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK))) | (MCG_C4 & (MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK)); /* Set C4 (FLL output; trim values not changed) */
    1364:	4b6a      	ldr	r3, [pc, #424]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1366:	7aba      	ldrb	r2, [r7, #10]
    1368:	f022 021f 	bic.w	r2, r2, #31
    136c:	b2d1      	uxtb	r1, r2
    136e:	4a68      	ldr	r2, [pc, #416]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1370:	78d2      	ldrb	r2, [r2, #3]
    1372:	b2d2      	uxtb	r2, r2
    1374:	f002 021f 	and.w	r2, r2, #31
    1378:	b2d2      	uxtb	r2, r2
    137a:	430a      	orrs	r2, r1
    137c:	b2d2      	uxtb	r2, r2
    137e:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:676
        MCG_C5 = NextModeRegs.MCG_C5_value; /* Set C5 (PLL settings, PLL reference divider etc.) */
    1380:	4b63      	ldr	r3, [pc, #396]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1382:	7afa      	ldrb	r2, [r7, #11]
    1384:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:677
        if (TargetMode & CPU_CLOCK_PLL_MASK) {
    1386:	8abb      	ldrh	r3, [r7, #20]
    1388:	f403 7300 	and.w	r3, r3, #512	; 0x200
    138c:	2b00      	cmp	r3, #0
    138e:	d007      	beq.n	13a0 <CPU_SetClockConfigGenMode+0x3d0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:678
          MCG_C5 |= MCG_C5_PLLCLKEN0_MASK;
    1390:	4b5f      	ldr	r3, [pc, #380]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1392:	4a5f      	ldr	r2, [pc, #380]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1394:	7912      	ldrb	r2, [r2, #4]
    1396:	b2d2      	uxtb	r2, r2
    1398:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    139c:	b2d2      	uxtb	r2, r2
    139e:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:680
        }
        MCG_C6 = NextModeRegs.MCG_C6_value; /* Set C6 (PLL select, VCO divider etc.) */
    13a0:	4b5b      	ldr	r3, [pc, #364]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    13a2:	7b3a      	ldrb	r2, [r7, #12]
    13a4:	715a      	strb	r2, [r3, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:681
        break;
    13a6:	e06f      	b.n	1488 <CPU_SetClockConfigGenMode+0x4b8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:683
      case CPU_MCG_MODE_BLPE:
        MCG_C1 = NextModeRegs.MCG_C1_value; /* Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) */
    13a8:	4b59      	ldr	r3, [pc, #356]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    13aa:	7a3a      	ldrb	r2, [r7, #8]
    13ac:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:684
        MCG_C2 = ((NextModeRegs.MCG_C2_value) & (uint8_t)(~(MCG_C2_FCFTRIM_MASK))) | (MCG_C2 & MCG_C2_FCFTRIM_MASK); /* Set C2 (freq. range, ext. and int. reference selection etc.; trim values not changed) */
    13ae:	4b58      	ldr	r3, [pc, #352]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    13b0:	7a7a      	ldrb	r2, [r7, #9]
    13b2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    13b6:	b2d1      	uxtb	r1, r2
    13b8:	4a55      	ldr	r2, [pc, #340]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    13ba:	7852      	ldrb	r2, [r2, #1]
    13bc:	b2d2      	uxtb	r2, r2
    13be:	f002 0240 	and.w	r2, r2, #64	; 0x40
    13c2:	b2d2      	uxtb	r2, r2
    13c4:	430a      	orrs	r2, r1
    13c6:	b2d2      	uxtb	r2, r2
    13c8:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:685
        OSC_CR = NextModeRegs.OSC_CR_value; /* Set OSC_CR (OSCERCLK enable, oscillator capacitor load) */      	
    13ca:	4b52      	ldr	r3, [pc, #328]	; (1514 <CPU_SetClockConfigGenMode+0x544>)
    13cc:	7bfa      	ldrb	r2, [r7, #15]
    13ce:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:686
        MCG_C7 = NextModeRegs.MCG_C7_value; /* Select MCG OSC clock source */
    13d0:	4b4f      	ldr	r3, [pc, #316]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    13d2:	7b7a      	ldrb	r2, [r7, #13]
    13d4:	731a      	strb	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:687
        if ((TargetMode & CPU_CLOCK_EXTERNAL_CRYSTAL_MASK) != 0) {
    13d6:	8abb      	ldrh	r3, [r7, #20]
    13d8:	f003 0380 	and.w	r3, r3, #128	; 0x80
    13dc:	2b00      	cmp	r3, #0
    13de:	d007      	beq.n	13f0 <CPU_SetClockConfigGenMode+0x420>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:688
          while((MCG_S & MCG_S_OSCINIT0_MASK) == 0x00U) { /* Check that the oscillator is running */
    13e0:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:688 (discriminator 1)
    13e2:	4b4b      	ldr	r3, [pc, #300]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    13e4:	799b      	ldrb	r3, [r3, #6]
    13e6:	b2db      	uxtb	r3, r3
    13e8:	f003 0302 	and.w	r3, r3, #2
    13ec:	2b00      	cmp	r3, #0
    13ee:	d0f8      	beq.n	13e2 <CPU_SetClockConfigGenMode+0x412>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:691
          }
        }
        break;
    13f0:	e04a      	b.n	1488 <CPU_SetClockConfigGenMode+0x4b8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:694
      case CPU_MCG_MODE_PEE:
      case CPU_MCG_MODE_PBE:
        OSC_CR = NextModeRegs.OSC_CR_value; /* Set OSC_CR (OSCERCLK enable, oscillator capacitor load) */
    13f2:	4b48      	ldr	r3, [pc, #288]	; (1514 <CPU_SetClockConfigGenMode+0x544>)
    13f4:	7bfa      	ldrb	r2, [r7, #15]
    13f6:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:695
        MCG_C7 = NextModeRegs.MCG_C7_value; /* Select MCG OSC clock source */
    13f8:	4b45      	ldr	r3, [pc, #276]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    13fa:	7b7a      	ldrb	r2, [r7, #13]
    13fc:	731a      	strb	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:696
        if (NextMode == CPU_MCG_MODE_PBE) {
    13fe:	8afb      	ldrh	r3, [r7, #22]
    1400:	2b06      	cmp	r3, #6
    1402:	d106      	bne.n	1412 <CPU_SetClockConfigGenMode+0x442>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:697
          MCG_C1 = NextModeRegs.MCG_C1_value | MCG_C1_CLKS(0x02); /* Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) */
    1404:	4b42      	ldr	r3, [pc, #264]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1406:	7a3a      	ldrb	r2, [r7, #8]
    1408:	f062 027f 	orn	r2, r2, #127	; 0x7f
    140c:	b2d2      	uxtb	r2, r2
    140e:	701a      	strb	r2, [r3, #0]
    1410:	e002      	b.n	1418 <CPU_SetClockConfigGenMode+0x448>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:699
        } else {
          MCG_C1 = NextModeRegs.MCG_C1_value; /* Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) */
    1412:	4b3f      	ldr	r3, [pc, #252]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1414:	7a3a      	ldrb	r2, [r7, #8]
    1416:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:701
        }
        MCG_C2 = ((NextModeRegs.MCG_C2_value) & (uint8_t)(~(MCG_C2_FCFTRIM_MASK))) | (MCG_C2 & MCG_C2_FCFTRIM_MASK); /* Set C2 (freq. range, ext. and int. reference selection etc.; trim values not changed) */
    1418:	4b3d      	ldr	r3, [pc, #244]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    141a:	7a7a      	ldrb	r2, [r7, #9]
    141c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    1420:	b2d1      	uxtb	r1, r2
    1422:	4a3b      	ldr	r2, [pc, #236]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1424:	7852      	ldrb	r2, [r2, #1]
    1426:	b2d2      	uxtb	r2, r2
    1428:	f002 0240 	and.w	r2, r2, #64	; 0x40
    142c:	b2d2      	uxtb	r2, r2
    142e:	430a      	orrs	r2, r1
    1430:	b2d2      	uxtb	r2, r2
    1432:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:702
        if ((TargetMode & CPU_MCG_MODE_INDEX_MASK) == CPU_MCG_MODE_PEE) {
    1434:	8abb      	ldrh	r3, [r7, #20]
    1436:	f003 030f 	and.w	r3, r3, #15
    143a:	2b07      	cmp	r3, #7
    143c:	d114      	bne.n	1468 <CPU_SetClockConfigGenMode+0x498>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:703
          MCG_C5 = CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_C5_value; /* Set C5 (PLL settings, PLL reference divider etc.) */
    143e:	4934      	ldr	r1, [pc, #208]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1440:	79fa      	ldrb	r2, [r7, #7]
    1442:	4835      	ldr	r0, [pc, #212]	; (1518 <CPU_SetClockConfigGenMode+0x548>)
    1444:	4613      	mov	r3, r2
    1446:	00db      	lsls	r3, r3, #3
    1448:	1a9b      	subs	r3, r3, r2
    144a:	009b      	lsls	r3, r3, #2
    144c:	4403      	add	r3, r0
    144e:	799b      	ldrb	r3, [r3, #6]
    1450:	710b      	strb	r3, [r1, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:704
          MCG_C6 = CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_C6_value; /* Set C6 (PLL select, VCO divider etc.) */
    1452:	492f      	ldr	r1, [pc, #188]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1454:	79fa      	ldrb	r2, [r7, #7]
    1456:	4830      	ldr	r0, [pc, #192]	; (1518 <CPU_SetClockConfigGenMode+0x548>)
    1458:	4613      	mov	r3, r2
    145a:	00db      	lsls	r3, r3, #3
    145c:	1a9b      	subs	r3, r3, r2
    145e:	009b      	lsls	r3, r3, #2
    1460:	4403      	add	r3, r0
    1462:	79db      	ldrb	r3, [r3, #7]
    1464:	714b      	strb	r3, [r1, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:709
        } else {
          MCG_C5 = NextModeRegs.MCG_C5_value; /* Set C5 (PLL settings, PLL reference divider etc.) */
          MCG_C6 = NextModeRegs.MCG_C6_value; /* Set C6 (PLL select, VCO divider etc.) */
        }
        while((MCG_S & MCG_S_LOCK0_MASK) == 0x00U) { /* Wait until PLL is locked*/
    1466:	e005      	b.n	1474 <CPU_SetClockConfigGenMode+0x4a4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:706
        MCG_C2 = ((NextModeRegs.MCG_C2_value) & (uint8_t)(~(MCG_C2_FCFTRIM_MASK))) | (MCG_C2 & MCG_C2_FCFTRIM_MASK); /* Set C2 (freq. range, ext. and int. reference selection etc.; trim values not changed) */
        if ((TargetMode & CPU_MCG_MODE_INDEX_MASK) == CPU_MCG_MODE_PEE) {
          MCG_C5 = CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_C5_value; /* Set C5 (PLL settings, PLL reference divider etc.) */
          MCG_C6 = CPU_ClockConfigDescriptors[ConfigID].GenRegs.MCG_C6_value; /* Set C6 (PLL select, VCO divider etc.) */
        } else {
          MCG_C5 = NextModeRegs.MCG_C5_value; /* Set C5 (PLL settings, PLL reference divider etc.) */
    1468:	4b29      	ldr	r3, [pc, #164]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    146a:	7afa      	ldrb	r2, [r7, #11]
    146c:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:707
          MCG_C6 = NextModeRegs.MCG_C6_value; /* Set C6 (PLL select, VCO divider etc.) */
    146e:	4b28      	ldr	r3, [pc, #160]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1470:	7b3a      	ldrb	r2, [r7, #12]
    1472:	715a      	strb	r2, [r3, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:709
        }
        while((MCG_S & MCG_S_LOCK0_MASK) == 0x00U) { /* Wait until PLL is locked*/
    1474:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:709 (discriminator 1)
    1476:	4b26      	ldr	r3, [pc, #152]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    1478:	799b      	ldrb	r3, [r3, #6]
    147a:	b2db      	uxtb	r3, r3
    147c:	f003 0340 	and.w	r3, r3, #64	; 0x40
    1480:	2b00      	cmp	r3, #0
    1482:	d0f8      	beq.n	1476 <CPU_SetClockConfigGenMode+0x4a6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:711
        }
        break;
    1484:	e000      	b.n	1488 <CPU_SetClockConfigGenMode+0x4b8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:713
      default:
        break;            
    1486:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:715
    }
    switch (NextMode) {
    1488:	8afb      	ldrh	r3, [r7, #22]
    148a:	2b07      	cmp	r3, #7
    148c:	d836      	bhi.n	14fc <CPU_SetClockConfigGenMode+0x52c>
    148e:	a201      	add	r2, pc, #4	; (adr r2, 1494 <CPU_SetClockConfigGenMode+0x4c4>)
    1490:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    1494:	000014b5 	.word	0x000014b5
    1498:	000014c7 	.word	0x000014c7
    149c:	000014c7 	.word	0x000014c7
    14a0:	000014b5 	.word	0x000014b5
    14a4:	000014d9 	.word	0x000014d9
    14a8:	000014d9 	.word	0x000014d9
    14ac:	000014d9 	.word	0x000014d9
    14b0:	000014eb 	.word	0x000014eb
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:718
      case CPU_MCG_MODE_FEI:
      case CPU_MCG_MODE_FEE:
        while((MCG_S & 0x0CU) != 0x00U) { /* Wait until output of the FLL is selected */
    14b4:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:718 (discriminator 1)
    14b6:	4b16      	ldr	r3, [pc, #88]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    14b8:	799b      	ldrb	r3, [r3, #6]
    14ba:	b2db      	uxtb	r3, r3
    14bc:	f003 030c 	and.w	r3, r3, #12
    14c0:	2b00      	cmp	r3, #0
    14c2:	d1f8      	bne.n	14b6 <CPU_SetClockConfigGenMode+0x4e6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:720
        }
        break;
    14c4:	e01a      	b.n	14fc <CPU_SetClockConfigGenMode+0x52c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:723
      case CPU_MCG_MODE_FBI:
      case CPU_MCG_MODE_BLPI:
        while((MCG_S & 0x0CU) != 0x04U) { /* Wait until internal reference clock is selected as MCG output */
    14c6:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:723 (discriminator 1)
    14c8:	4b11      	ldr	r3, [pc, #68]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    14ca:	799b      	ldrb	r3, [r3, #6]
    14cc:	b2db      	uxtb	r3, r3
    14ce:	f003 030c 	and.w	r3, r3, #12
    14d2:	2b04      	cmp	r3, #4
    14d4:	d1f8      	bne.n	14c8 <CPU_SetClockConfigGenMode+0x4f8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:725
        }
        break;
    14d6:	e011      	b.n	14fc <CPU_SetClockConfigGenMode+0x52c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:729
      case CPU_MCG_MODE_FBE:
      case CPU_MCG_MODE_BLPE:
      case CPU_MCG_MODE_PBE:
        while((MCG_S & 0x0CU) != 0x08U) { /* Wait until external reference clock is selected as MCG output */
    14d8:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:729 (discriminator 1)
    14da:	4b0d      	ldr	r3, [pc, #52]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    14dc:	799b      	ldrb	r3, [r3, #6]
    14de:	b2db      	uxtb	r3, r3
    14e0:	f003 030c 	and.w	r3, r3, #12
    14e4:	2b08      	cmp	r3, #8
    14e6:	d1f8      	bne.n	14da <CPU_SetClockConfigGenMode+0x50a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:731
        }
        break;
    14e8:	e008      	b.n	14fc <CPU_SetClockConfigGenMode+0x52c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:733
      case CPU_MCG_MODE_PEE:
        while((MCG_S & 0x0CU) != 0x0CU) { /* Wait until output of the PLL is selected */
    14ea:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:733 (discriminator 1)
    14ec:	4b08      	ldr	r3, [pc, #32]	; (1510 <CPU_SetClockConfigGenMode+0x540>)
    14ee:	799b      	ldrb	r3, [r3, #6]
    14f0:	b2db      	uxtb	r3, r3
    14f2:	f003 030c 	and.w	r3, r3, #12
    14f6:	2b0c      	cmp	r3, #12
    14f8:	d1f8      	bne.n	14ec <CPU_SetClockConfigGenMode+0x51c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:735
        }
        break;
    14fa:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:737
    }
  } while (NextMode != (TargetMode & CPU_MCG_MODE_INDEX_MASK)); /* Loop until the target MCG mode is set */
    14fc:	8afa      	ldrh	r2, [r7, #22]
    14fe:	8abb      	ldrh	r3, [r7, #20]
    1500:	f003 030f 	and.w	r3, r3, #15
    1504:	429a      	cmp	r2, r3
    1506:	f47f ae31 	bne.w	116c <CPU_SetClockConfigGenMode+0x19c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/CPU_Init.c:738
}
    150a:	371c      	adds	r7, #28
    150c:	46bd      	mov	sp, r7
    150e:	bd90      	pop	{r4, r7, pc}
    1510:	40064000 	.word	0x40064000
    1514:	40065000 	.word	0x40065000
    1518:	0000de48 	.word	0x0000de48

0000151c <UnhandledInterrupt>:
UnhandledInterrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/Vectors.c:67
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(UnhandledInterrupt);
PE_ISR(UnhandledInterrupt)
{
    151c:	4668      	mov	r0, sp
    151e:	f020 0107 	bic.w	r1, r0, #7
    1522:	468d      	mov	sp, r1
    1524:	b481      	push	{r0, r7}
    1526:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/Vectors.c:68
  PE_DEBUGHALT();
    1528:	beff      	bkpt	0x00ff
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Static_Code/System/Vectors.c:69
}
    152a:	46bd      	mov	sp, r7
    152c:	bc81      	pop	{r0, r7}
    152e:	4685      	mov	sp, r0
    1530:	4770      	bx	lr
    1532:	bf00      	nop
    1534:	0000      	movs	r0, r0
	...

00001538 <calcADC_data>:
calcADC_data():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:14
#include <math.h>

/**
 *
 */
void calcADC_data(ADC_data_t *pData){
    1538:	b580      	push	{r7, lr}
    153a:	b088      	sub	sp, #32
    153c:	af00      	add	r7, sp, #0
    153e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:21
	static float right_raw;
	static float middleL_raw;
	static float middleR_raw;
	uint16_t values_ADC0_raw[5];
	uint16_t values_ADC1_raw[5];
	ADC_0_Measure(TRUE);
    1540:	f003 f866 	bl	4610 <PE_ADC_0_Measure>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:22
	ADC_0_GetValue16(values_ADC0_raw);
    1544:	f107 0314 	add.w	r3, r7, #20
    1548:	4618      	mov	r0, r3
    154a:	f003 f87d 	bl	4648 <ADC_0_GetValue16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:23
	ADC_1_Measure(TRUE);
    154e:	f003 f90f 	bl	4770 <PE_ADC_1_Measure>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:24
	ADC_1_GetValue16(values_ADC1_raw);
    1552:	f107 0308 	add.w	r3, r7, #8
    1556:	4618      	mov	r0, r3
    1558:	f003 f91e 	bl	4798 <ADC_1_GetValue16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:25
	pData->raw_Values.raw_Right= values_ADC1_raw[2];
    155c:	89ba      	ldrh	r2, [r7, #12]
    155e:	687b      	ldr	r3, [r7, #4]
    1560:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:26
	pData->raw_Values.raw_45Right = values_ADC0_raw[1];
    1562:	8afa      	ldrh	r2, [r7, #22]
    1564:	687b      	ldr	r3, [r7, #4]
    1566:	805a      	strh	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:27
	pData->raw_Values.raw_MiddleR = values_ADC1_raw[1];
    1568:	897a      	ldrh	r2, [r7, #10]
    156a:	687b      	ldr	r3, [r7, #4]
    156c:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:28
	pData->raw_Values.raw_MiddleL = values_ADC0_raw[2];
    156e:	8b3a      	ldrh	r2, [r7, #24]
    1570:	687b      	ldr	r3, [r7, #4]
    1572:	809a      	strh	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:29
	pData->raw_Values.raw_45Left = values_ADC0_raw[0];
    1574:	8aba      	ldrh	r2, [r7, #20]
    1576:	687b      	ldr	r3, [r7, #4]
    1578:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:30
	pData->raw_Values.raw_Left = values_ADC1_raw[0];
    157a:	893a      	ldrh	r2, [r7, #8]
    157c:	687b      	ldr	r3, [r7, #4]
    157e:	815a      	strh	r2, [r3, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:31
	pData->raw_Values.raw_DRV1_IPROI = values_ADC1_raw[3];
    1580:	89fa      	ldrh	r2, [r7, #14]
    1582:	687b      	ldr	r3, [r7, #4]
    1584:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:32
	pData->raw_Values.raw_DRV2_IPROI = values_ADC1_raw[4];
    1586:	8a3a      	ldrh	r2, [r7, #16]
    1588:	687b      	ldr	r3, [r7, #4]
    158a:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:33
	pData->raw_Values.raw_HALF_U_BAT = values_ADC0_raw[3];
    158c:	8b7a      	ldrh	r2, [r7, #26]
    158e:	687b      	ldr	r3, [r7, #4]
    1590:	829a      	strh	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:34
	pData->raw_Values.raw_I_TOT = values_ADC0_raw[4];
    1592:	8bba      	ldrh	r2, [r7, #28]
    1594:	687b      	ldr	r3, [r7, #4]
    1596:	82da      	strh	r2, [r3, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:36

	pData->voltage_Values.v_Bat = (2*ADC_3_3V_Constant*values_ADC0_raw[3]);
    1598:	8b7b      	ldrh	r3, [r7, #26]
    159a:	ee07 3a90 	vmov	s15, r3
    159e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    15a2:	eddf 7aa7 	vldr	s15, [pc, #668]	; 1840 <calcADC_data+0x308>
    15a6:	ee67 7a27 	vmul.f32	s15, s14, s15
    15aa:	687b      	ldr	r3, [r7, #4]
    15ac:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:37
	pData->voltage_Values.I_Mot_L = (ADC_3_3V_Constant*values_ADC1_raw[3])/(TORQUE_TO_VREF*1000);//PullDown 2.4k
    15b0:	89fb      	ldrh	r3, [r7, #14]
    15b2:	ee07 3a90 	vmov	s15, r3
    15b6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    15ba:	eddf 7aa2 	vldr	s15, [pc, #648]	; 1844 <calcADC_data+0x30c>
    15be:	ee27 7a27 	vmul.f32	s14, s14, s15
    15c2:	eddf 7aa1 	vldr	s15, [pc, #644]	; 1848 <calcADC_data+0x310>
    15c6:	eec7 7a27 	vdiv.f32	s15, s14, s15
    15ca:	687b      	ldr	r3, [r7, #4]
    15cc:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:38
	pData->voltage_Values.I_Mot_R = (ADC_3_3V_Constant*values_ADC1_raw[4])/(TORQUE_TO_VREF*1000);//PullDown 2.4k
    15d0:	8a3b      	ldrh	r3, [r7, #16]
    15d2:	ee07 3a90 	vmov	s15, r3
    15d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    15da:	eddf 7a9a 	vldr	s15, [pc, #616]	; 1844 <calcADC_data+0x30c>
    15de:	ee27 7a27 	vmul.f32	s14, s14, s15
    15e2:	eddf 7a99 	vldr	s15, [pc, #612]	; 1848 <calcADC_data+0x310>
    15e6:	eec7 7a27 	vdiv.f32	s15, s14, s15
    15ea:	687b      	ldr	r3, [r7, #4]
    15ec:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:40

	left_raw = (float)(0.001*pData->raw_Values.raw_Left);
    15f0:	687b      	ldr	r3, [r7, #4]
    15f2:	895b      	ldrh	r3, [r3, #10]
    15f4:	4618      	mov	r0, r3
    15f6:	f7ff f8c1 	bl	77c <__aeabi_i2d>
    15fa:	4602      	mov	r2, r0
    15fc:	460b      	mov	r3, r1
    15fe:	4610      	mov	r0, r2
    1600:	4619      	mov	r1, r3
    1602:	a387      	add	r3, pc, #540	; (adr r3, 1820 <calcADC_data+0x2e8>)
    1604:	e9d3 2300 	ldrd	r2, r3, [r3]
    1608:	f7ff f91e 	bl	848 <__aeabi_dmul>
    160c:	4602      	mov	r2, r0
    160e:	460b      	mov	r3, r1
    1610:	4610      	mov	r0, r2
    1612:	4619      	mov	r1, r3
    1614:	f7ff fbda 	bl	dcc <__aeabi_d2f>
    1618:	4602      	mov	r2, r0
    161a:	4b8c      	ldr	r3, [pc, #560]	; (184c <calcADC_data+0x314>)
    161c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:41
	right_raw = (float)(0.001*pData->raw_Values.raw_Right);
    161e:	687b      	ldr	r3, [r7, #4]
    1620:	881b      	ldrh	r3, [r3, #0]
    1622:	4618      	mov	r0, r3
    1624:	f7ff f8aa 	bl	77c <__aeabi_i2d>
    1628:	4602      	mov	r2, r0
    162a:	460b      	mov	r3, r1
    162c:	4610      	mov	r0, r2
    162e:	4619      	mov	r1, r3
    1630:	a37b      	add	r3, pc, #492	; (adr r3, 1820 <calcADC_data+0x2e8>)
    1632:	e9d3 2300 	ldrd	r2, r3, [r3]
    1636:	f7ff f907 	bl	848 <__aeabi_dmul>
    163a:	4602      	mov	r2, r0
    163c:	460b      	mov	r3, r1
    163e:	4610      	mov	r0, r2
    1640:	4619      	mov	r1, r3
    1642:	f7ff fbc3 	bl	dcc <__aeabi_d2f>
    1646:	4602      	mov	r2, r0
    1648:	4b81      	ldr	r3, [pc, #516]	; (1850 <calcADC_data+0x318>)
    164a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:42
	middleL_raw =(float)(0.001*pData->raw_Values.raw_MiddleL);
    164c:	687b      	ldr	r3, [r7, #4]
    164e:	889b      	ldrh	r3, [r3, #4]
    1650:	4618      	mov	r0, r3
    1652:	f7ff f893 	bl	77c <__aeabi_i2d>
    1656:	4602      	mov	r2, r0
    1658:	460b      	mov	r3, r1
    165a:	4610      	mov	r0, r2
    165c:	4619      	mov	r1, r3
    165e:	a370      	add	r3, pc, #448	; (adr r3, 1820 <calcADC_data+0x2e8>)
    1660:	e9d3 2300 	ldrd	r2, r3, [r3]
    1664:	f7ff f8f0 	bl	848 <__aeabi_dmul>
    1668:	4602      	mov	r2, r0
    166a:	460b      	mov	r3, r1
    166c:	4610      	mov	r0, r2
    166e:	4619      	mov	r1, r3
    1670:	f7ff fbac 	bl	dcc <__aeabi_d2f>
    1674:	4602      	mov	r2, r0
    1676:	4b77      	ldr	r3, [pc, #476]	; (1854 <calcADC_data+0x31c>)
    1678:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:43
	middleR_raw =(float)(0.001*pData->raw_Values.raw_MiddleR);
    167a:	687b      	ldr	r3, [r7, #4]
    167c:	88db      	ldrh	r3, [r3, #6]
    167e:	4618      	mov	r0, r3
    1680:	f7ff f87c 	bl	77c <__aeabi_i2d>
    1684:	4602      	mov	r2, r0
    1686:	460b      	mov	r3, r1
    1688:	4610      	mov	r0, r2
    168a:	4619      	mov	r1, r3
    168c:	a364      	add	r3, pc, #400	; (adr r3, 1820 <calcADC_data+0x2e8>)
    168e:	e9d3 2300 	ldrd	r2, r3, [r3]
    1692:	f7ff f8d9 	bl	848 <__aeabi_dmul>
    1696:	4602      	mov	r2, r0
    1698:	460b      	mov	r3, r1
    169a:	4610      	mov	r0, r2
    169c:	4619      	mov	r1, r3
    169e:	f7ff fb95 	bl	dcc <__aeabi_d2f>
    16a2:	4602      	mov	r2, r0
    16a4:	4b6c      	ldr	r3, [pc, #432]	; (1858 <calcADC_data+0x320>)
    16a6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:45

	if(left_raw < MIN_RAW_VALUE){
    16a8:	4b68      	ldr	r3, [pc, #416]	; (184c <calcADC_data+0x314>)
    16aa:	681b      	ldr	r3, [r3, #0]
    16ac:	4618      	mov	r0, r3
    16ae:	f7ff f877 	bl	7a0 <__aeabi_f2d>
    16b2:	4602      	mov	r2, r0
    16b4:	460b      	mov	r3, r1
    16b6:	4610      	mov	r0, r2
    16b8:	4619      	mov	r1, r3
    16ba:	a35b      	add	r3, pc, #364	; (adr r3, 1828 <calcADC_data+0x2f0>)
    16bc:	e9d3 2300 	ldrd	r2, r3, [r3]
    16c0:	f7ff fb34 	bl	d2c <__aeabi_dcmplt>
    16c4:	4603      	mov	r3, r0
    16c6:	2b00      	cmp	r3, #0
    16c8:	d003      	beq.n	16d2 <calcADC_data+0x19a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:46
		pData->mm_Values.mm_Left = 5;
    16ca:	687b      	ldr	r3, [r7, #4]
    16cc:	4a63      	ldr	r2, [pc, #396]	; (185c <calcADC_data+0x324>)
    16ce:	641a      	str	r2, [r3, #64]	; 0x40
    16d0:	e055      	b.n	177e <calcADC_data+0x246>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:47
	}else if(left_raw < EXP_FIT){
    16d2:	4b5e      	ldr	r3, [pc, #376]	; (184c <calcADC_data+0x314>)
    16d4:	681b      	ldr	r3, [r3, #0]
    16d6:	4618      	mov	r0, r3
    16d8:	f7ff f862 	bl	7a0 <__aeabi_f2d>
    16dc:	4602      	mov	r2, r0
    16de:	460b      	mov	r3, r1
    16e0:	4610      	mov	r0, r2
    16e2:	4619      	mov	r1, r3
    16e4:	a352      	add	r3, pc, #328	; (adr r3, 1830 <calcADC_data+0x2f8>)
    16e6:	e9d3 2300 	ldrd	r2, r3, [r3]
    16ea:	f7ff fb1f 	bl	d2c <__aeabi_dcmplt>
    16ee:	4603      	mov	r3, r0
    16f0:	2b00      	cmp	r3, #0
    16f2:	d00c      	beq.n	170e <calcADC_data+0x1d6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:48
		pData->mm_Values.mm_Left = fitExp(left_raw);
    16f4:	4b55      	ldr	r3, [pc, #340]	; (184c <calcADC_data+0x314>)
    16f6:	edd3 7a00 	vldr	s15, [r3]
    16fa:	eeb0 0a67 	vmov.f32	s0, s15
    16fe:	f000 fa37 	bl	1b70 <fitExp>
    1702:	eef0 7a40 	vmov.f32	s15, s0
    1706:	687b      	ldr	r3, [r7, #4]
    1708:	edc3 7a10 	vstr	s15, [r3, #64]	; 0x40
    170c:	e037      	b.n	177e <calcADC_data+0x246>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:49
	}else if(left_raw < MIDDLE_FIT){
    170e:	4b4f      	ldr	r3, [pc, #316]	; (184c <calcADC_data+0x314>)
    1710:	681b      	ldr	r3, [r3, #0]
    1712:	4618      	mov	r0, r3
    1714:	f7ff f844 	bl	7a0 <__aeabi_f2d>
    1718:	4602      	mov	r2, r0
    171a:	460b      	mov	r3, r1
    171c:	4610      	mov	r0, r2
    171e:	4619      	mov	r1, r3
    1720:	a345      	add	r3, pc, #276	; (adr r3, 1838 <calcADC_data+0x300>)
    1722:	e9d3 2300 	ldrd	r2, r3, [r3]
    1726:	f7ff fb01 	bl	d2c <__aeabi_dcmplt>
    172a:	4603      	mov	r3, r0
    172c:	2b00      	cmp	r3, #0
    172e:	d00c      	beq.n	174a <calcADC_data+0x212>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:50
		pData->mm_Values.mm_Left = fitMiddle(left_raw);
    1730:	4b46      	ldr	r3, [pc, #280]	; (184c <calcADC_data+0x314>)
    1732:	edd3 7a00 	vldr	s15, [r3]
    1736:	eeb0 0a67 	vmov.f32	s0, s15
    173a:	f000 f9c5 	bl	1ac8 <fitMiddle>
    173e:	eef0 7a40 	vmov.f32	s15, s0
    1742:	687b      	ldr	r3, [r7, #4]
    1744:	edc3 7a10 	vstr	s15, [r3, #64]	; 0x40
    1748:	e019      	b.n	177e <calcADC_data+0x246>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:51
	}else if(left_raw < FAR_FIT){
    174a:	4b40      	ldr	r3, [pc, #256]	; (184c <calcADC_data+0x314>)
    174c:	ed93 7a00 	vldr	s14, [r3]
    1750:	eddf 7a43 	vldr	s15, [pc, #268]	; 1860 <calcADC_data+0x328>
    1754:	eeb4 7ae7 	vcmpe.f32	s14, s15
    1758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    175c:	d50c      	bpl.n	1778 <calcADC_data+0x240>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:52
		pData->mm_Values.mm_Left = fitFar(left_raw);
    175e:	4b3b      	ldr	r3, [pc, #236]	; (184c <calcADC_data+0x314>)
    1760:	edd3 7a00 	vldr	s15, [r3]
    1764:	eeb0 0a67 	vmov.f32	s0, s15
    1768:	f000 fa72 	bl	1c50 <fitFar>
    176c:	eef0 7a40 	vmov.f32	s15, s0
    1770:	687b      	ldr	r3, [r7, #4]
    1772:	edc3 7a10 	vstr	s15, [r3, #64]	; 0x40
    1776:	e002      	b.n	177e <calcADC_data+0x246>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:54
	}else{
		pData->mm_Values.mm_Left = 119.6; // max. distance
    1778:	687b      	ldr	r3, [r7, #4]
    177a:	4a3a      	ldr	r2, [pc, #232]	; (1864 <calcADC_data+0x32c>)
    177c:	641a      	str	r2, [r3, #64]	; 0x40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:57
	}

	if(right_raw < MIN_RAW_VALUE){
    177e:	4b34      	ldr	r3, [pc, #208]	; (1850 <calcADC_data+0x318>)
    1780:	681b      	ldr	r3, [r3, #0]
    1782:	4618      	mov	r0, r3
    1784:	f7ff f80c 	bl	7a0 <__aeabi_f2d>
    1788:	4602      	mov	r2, r0
    178a:	460b      	mov	r3, r1
    178c:	4610      	mov	r0, r2
    178e:	4619      	mov	r1, r3
    1790:	a325      	add	r3, pc, #148	; (adr r3, 1828 <calcADC_data+0x2f0>)
    1792:	e9d3 2300 	ldrd	r2, r3, [r3]
    1796:	f7ff fac9 	bl	d2c <__aeabi_dcmplt>
    179a:	4603      	mov	r3, r0
    179c:	2b00      	cmp	r3, #0
    179e:	d003      	beq.n	17a8 <calcADC_data+0x270>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:58
		pData->mm_Values.mm_Right = 5;
    17a0:	687b      	ldr	r3, [r7, #4]
    17a2:	4a2e      	ldr	r2, [pc, #184]	; (185c <calcADC_data+0x324>)
    17a4:	639a      	str	r2, [r3, #56]	; 0x38
    17a6:	e079      	b.n	189c <calcADC_data+0x364>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:59
	}else if(right_raw < EXP_FIT){
    17a8:	4b29      	ldr	r3, [pc, #164]	; (1850 <calcADC_data+0x318>)
    17aa:	681b      	ldr	r3, [r3, #0]
    17ac:	4618      	mov	r0, r3
    17ae:	f7fe fff7 	bl	7a0 <__aeabi_f2d>
    17b2:	4602      	mov	r2, r0
    17b4:	460b      	mov	r3, r1
    17b6:	4610      	mov	r0, r2
    17b8:	4619      	mov	r1, r3
    17ba:	a31d      	add	r3, pc, #116	; (adr r3, 1830 <calcADC_data+0x2f8>)
    17bc:	e9d3 2300 	ldrd	r2, r3, [r3]
    17c0:	f7ff fab4 	bl	d2c <__aeabi_dcmplt>
    17c4:	4603      	mov	r3, r0
    17c6:	2b00      	cmp	r3, #0
    17c8:	d00c      	beq.n	17e4 <calcADC_data+0x2ac>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:60
		pData->mm_Values.mm_Right = fitExp(right_raw);
    17ca:	4b21      	ldr	r3, [pc, #132]	; (1850 <calcADC_data+0x318>)
    17cc:	edd3 7a00 	vldr	s15, [r3]
    17d0:	eeb0 0a67 	vmov.f32	s0, s15
    17d4:	f000 f9cc 	bl	1b70 <fitExp>
    17d8:	eef0 7a40 	vmov.f32	s15, s0
    17dc:	687b      	ldr	r3, [r7, #4]
    17de:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
    17e2:	e05b      	b.n	189c <calcADC_data+0x364>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:61
	}else if(right_raw < MIDDLE_FIT){
    17e4:	4b1a      	ldr	r3, [pc, #104]	; (1850 <calcADC_data+0x318>)
    17e6:	681b      	ldr	r3, [r3, #0]
    17e8:	4618      	mov	r0, r3
    17ea:	f7fe ffd9 	bl	7a0 <__aeabi_f2d>
    17ee:	4602      	mov	r2, r0
    17f0:	460b      	mov	r3, r1
    17f2:	4610      	mov	r0, r2
    17f4:	4619      	mov	r1, r3
    17f6:	a310      	add	r3, pc, #64	; (adr r3, 1838 <calcADC_data+0x300>)
    17f8:	e9d3 2300 	ldrd	r2, r3, [r3]
    17fc:	f7ff fa96 	bl	d2c <__aeabi_dcmplt>
    1800:	4603      	mov	r3, r0
    1802:	2b00      	cmp	r3, #0
    1804:	d030      	beq.n	1868 <calcADC_data+0x330>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:62
		pData->mm_Values.mm_Right = fitMiddle(right_raw);
    1806:	4b12      	ldr	r3, [pc, #72]	; (1850 <calcADC_data+0x318>)
    1808:	edd3 7a00 	vldr	s15, [r3]
    180c:	eeb0 0a67 	vmov.f32	s0, s15
    1810:	f000 f95a 	bl	1ac8 <fitMiddle>
    1814:	eef0 7a40 	vmov.f32	s15, s0
    1818:	687b      	ldr	r3, [r7, #4]
    181a:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
    181e:	e03d      	b.n	189c <calcADC_data+0x364>
    1820:	d2f1a9fc 	.word	0xd2f1a9fc
    1824:	3f50624d 	.word	0x3f50624d
    1828:	ed916873 	.word	0xed916873
    182c:	40023f7c 	.word	0x40023f7c
    1830:	51eb851f 	.word	0x51eb851f
    1834:	40395eb8 	.word	0x40395eb8
    1838:	f5c28f5c 	.word	0xf5c28f5c
    183c:	40449c28 	.word	0x40449c28
    1840:	38d33333 	.word	0x38d33333
    1844:	38533333 	.word	0x38533333
    1848:	45160000 	.word	0x45160000
    184c:	20000110 	.word	0x20000110
    1850:	20000114 	.word	0x20000114
    1854:	20000118 	.word	0x20000118
    1858:	2000011c 	.word	0x2000011c
    185c:	40a00000 	.word	0x40a00000
    1860:	42820000 	.word	0x42820000
    1864:	42ef3333 	.word	0x42ef3333
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:63
	}else if(right_raw < FAR_FIT){
    1868:	4b91      	ldr	r3, [pc, #580]	; (1ab0 <calcADC_data+0x578>)
    186a:	ed93 7a00 	vldr	s14, [r3]
    186e:	eddf 7a91 	vldr	s15, [pc, #580]	; 1ab4 <calcADC_data+0x57c>
    1872:	eeb4 7ae7 	vcmpe.f32	s14, s15
    1876:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    187a:	d50c      	bpl.n	1896 <calcADC_data+0x35e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:64
		pData->mm_Values.mm_Right = fitFar(right_raw);
    187c:	4b8c      	ldr	r3, [pc, #560]	; (1ab0 <calcADC_data+0x578>)
    187e:	edd3 7a00 	vldr	s15, [r3]
    1882:	eeb0 0a67 	vmov.f32	s0, s15
    1886:	f000 f9e3 	bl	1c50 <fitFar>
    188a:	eef0 7a40 	vmov.f32	s15, s0
    188e:	687b      	ldr	r3, [r7, #4]
    1890:	edc3 7a0e 	vstr	s15, [r3, #56]	; 0x38
    1894:	e002      	b.n	189c <calcADC_data+0x364>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:66
	}else{
		pData->mm_Values.mm_Right = 119.6; // max. distance
    1896:	687b      	ldr	r3, [r7, #4]
    1898:	4a87      	ldr	r2, [pc, #540]	; (1ab8 <calcADC_data+0x580>)
    189a:	639a      	str	r2, [r3, #56]	; 0x38
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:69
	}

	if(middleL_raw < MIN_RAW_VALUE){
    189c:	4b87      	ldr	r3, [pc, #540]	; (1abc <calcADC_data+0x584>)
    189e:	681b      	ldr	r3, [r3, #0]
    18a0:	4618      	mov	r0, r3
    18a2:	f7fe ff7d 	bl	7a0 <__aeabi_f2d>
    18a6:	4602      	mov	r2, r0
    18a8:	460b      	mov	r3, r1
    18aa:	4610      	mov	r0, r2
    18ac:	4619      	mov	r1, r3
    18ae:	a37a      	add	r3, pc, #488	; (adr r3, 1a98 <calcADC_data+0x560>)
    18b0:	e9d3 2300 	ldrd	r2, r3, [r3]
    18b4:	f7ff fa3a 	bl	d2c <__aeabi_dcmplt>
    18b8:	4603      	mov	r3, r0
    18ba:	2b00      	cmp	r3, #0
    18bc:	d004      	beq.n	18c8 <calcADC_data+0x390>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:70
		pData->mm_Values.mm_MiddleL = 5;
    18be:	687b      	ldr	r3, [r7, #4]
    18c0:	2205      	movs	r2, #5
    18c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    18c6:	e065      	b.n	1994 <calcADC_data+0x45c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:71
	}else if(middleL_raw < EXP_FIT){
    18c8:	4b7c      	ldr	r3, [pc, #496]	; (1abc <calcADC_data+0x584>)
    18ca:	681b      	ldr	r3, [r3, #0]
    18cc:	4618      	mov	r0, r3
    18ce:	f7fe ff67 	bl	7a0 <__aeabi_f2d>
    18d2:	4602      	mov	r2, r0
    18d4:	460b      	mov	r3, r1
    18d6:	4610      	mov	r0, r2
    18d8:	4619      	mov	r1, r3
    18da:	a371      	add	r3, pc, #452	; (adr r3, 1aa0 <calcADC_data+0x568>)
    18dc:	e9d3 2300 	ldrd	r2, r3, [r3]
    18e0:	f7ff fa24 	bl	d2c <__aeabi_dcmplt>
    18e4:	4603      	mov	r3, r0
    18e6:	2b00      	cmp	r3, #0
    18e8:	d011      	beq.n	190e <calcADC_data+0x3d6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:72
		pData->mm_Values.mm_MiddleL = fitExp(middleL_raw);
    18ea:	4b74      	ldr	r3, [pc, #464]	; (1abc <calcADC_data+0x584>)
    18ec:	edd3 7a00 	vldr	s15, [r3]
    18f0:	eeb0 0a67 	vmov.f32	s0, s15
    18f4:	f000 f93c 	bl	1b70 <fitExp>
    18f8:	eef0 7a40 	vmov.f32	s15, s0
    18fc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    1900:	ee17 3a90 	vmov	r3, s15
    1904:	b2da      	uxtb	r2, r3
    1906:	687b      	ldr	r3, [r7, #4]
    1908:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    190c:	e042      	b.n	1994 <calcADC_data+0x45c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:73
	}else if(middleL_raw < MIDDLE_FIT){
    190e:	4b6b      	ldr	r3, [pc, #428]	; (1abc <calcADC_data+0x584>)
    1910:	681b      	ldr	r3, [r3, #0]
    1912:	4618      	mov	r0, r3
    1914:	f7fe ff44 	bl	7a0 <__aeabi_f2d>
    1918:	4602      	mov	r2, r0
    191a:	460b      	mov	r3, r1
    191c:	4610      	mov	r0, r2
    191e:	4619      	mov	r1, r3
    1920:	a361      	add	r3, pc, #388	; (adr r3, 1aa8 <calcADC_data+0x570>)
    1922:	e9d3 2300 	ldrd	r2, r3, [r3]
    1926:	f7ff fa01 	bl	d2c <__aeabi_dcmplt>
    192a:	4603      	mov	r3, r0
    192c:	2b00      	cmp	r3, #0
    192e:	d011      	beq.n	1954 <calcADC_data+0x41c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:74
		pData->mm_Values.mm_MiddleL = fitMiddle(middleL_raw);
    1930:	4b62      	ldr	r3, [pc, #392]	; (1abc <calcADC_data+0x584>)
    1932:	edd3 7a00 	vldr	s15, [r3]
    1936:	eeb0 0a67 	vmov.f32	s0, s15
    193a:	f000 f8c5 	bl	1ac8 <fitMiddle>
    193e:	eef0 7a40 	vmov.f32	s15, s0
    1942:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    1946:	ee17 3a90 	vmov	r3, s15
    194a:	b2da      	uxtb	r2, r3
    194c:	687b      	ldr	r3, [r7, #4]
    194e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    1952:	e01f      	b.n	1994 <calcADC_data+0x45c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:75
	}else if(middleL_raw < FAR_FIT){
    1954:	4b59      	ldr	r3, [pc, #356]	; (1abc <calcADC_data+0x584>)
    1956:	ed93 7a00 	vldr	s14, [r3]
    195a:	eddf 7a56 	vldr	s15, [pc, #344]	; 1ab4 <calcADC_data+0x57c>
    195e:	eeb4 7ae7 	vcmpe.f32	s14, s15
    1962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    1966:	d511      	bpl.n	198c <calcADC_data+0x454>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:76
		pData->mm_Values.mm_MiddleL = fitFar(middleL_raw);
    1968:	4b54      	ldr	r3, [pc, #336]	; (1abc <calcADC_data+0x584>)
    196a:	edd3 7a00 	vldr	s15, [r3]
    196e:	eeb0 0a67 	vmov.f32	s0, s15
    1972:	f000 f96d 	bl	1c50 <fitFar>
    1976:	eef0 7a40 	vmov.f32	s15, s0
    197a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    197e:	ee17 3a90 	vmov	r3, s15
    1982:	b2da      	uxtb	r2, r3
    1984:	687b      	ldr	r3, [r7, #4]
    1986:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    198a:	e003      	b.n	1994 <calcADC_data+0x45c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:78
	}else{
		pData->mm_Values.mm_MiddleL = 119.6; // max. distance
    198c:	687b      	ldr	r3, [r7, #4]
    198e:	2277      	movs	r2, #119	; 0x77
    1990:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:81
	}

	if(middleR_raw < MIN_RAW_VALUE){
    1994:	4b4a      	ldr	r3, [pc, #296]	; (1ac0 <calcADC_data+0x588>)
    1996:	681b      	ldr	r3, [r3, #0]
    1998:	4618      	mov	r0, r3
    199a:	f7fe ff01 	bl	7a0 <__aeabi_f2d>
    199e:	4602      	mov	r2, r0
    19a0:	460b      	mov	r3, r1
    19a2:	4610      	mov	r0, r2
    19a4:	4619      	mov	r1, r3
    19a6:	a33c      	add	r3, pc, #240	; (adr r3, 1a98 <calcADC_data+0x560>)
    19a8:	e9d3 2300 	ldrd	r2, r3, [r3]
    19ac:	f7ff f9be 	bl	d2c <__aeabi_dcmplt>
    19b0:	4603      	mov	r3, r0
    19b2:	2b00      	cmp	r3, #0
    19b4:	d004      	beq.n	19c0 <calcADC_data+0x488>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:82
		pData->mm_Values.mm_MiddleR = 5;
    19b6:	687b      	ldr	r3, [r7, #4]
    19b8:	2205      	movs	r2, #5
    19ba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    19be:	e065      	b.n	1a8c <calcADC_data+0x554>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:83
	}else if(middleR_raw < EXP_FIT){
    19c0:	4b3f      	ldr	r3, [pc, #252]	; (1ac0 <calcADC_data+0x588>)
    19c2:	681b      	ldr	r3, [r3, #0]
    19c4:	4618      	mov	r0, r3
    19c6:	f7fe feeb 	bl	7a0 <__aeabi_f2d>
    19ca:	4602      	mov	r2, r0
    19cc:	460b      	mov	r3, r1
    19ce:	4610      	mov	r0, r2
    19d0:	4619      	mov	r1, r3
    19d2:	a333      	add	r3, pc, #204	; (adr r3, 1aa0 <calcADC_data+0x568>)
    19d4:	e9d3 2300 	ldrd	r2, r3, [r3]
    19d8:	f7ff f9a8 	bl	d2c <__aeabi_dcmplt>
    19dc:	4603      	mov	r3, r0
    19de:	2b00      	cmp	r3, #0
    19e0:	d011      	beq.n	1a06 <calcADC_data+0x4ce>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:84
		pData->mm_Values.mm_MiddleR = fitExp(middleR_raw);
    19e2:	4b37      	ldr	r3, [pc, #220]	; (1ac0 <calcADC_data+0x588>)
    19e4:	edd3 7a00 	vldr	s15, [r3]
    19e8:	eeb0 0a67 	vmov.f32	s0, s15
    19ec:	f000 f8c0 	bl	1b70 <fitExp>
    19f0:	eef0 7a40 	vmov.f32	s15, s0
    19f4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    19f8:	ee17 3a90 	vmov	r3, s15
    19fc:	b2da      	uxtb	r2, r3
    19fe:	687b      	ldr	r3, [r7, #4]
    1a00:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    1a04:	e042      	b.n	1a8c <calcADC_data+0x554>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:85
	}else if(middleR_raw < MIDDLE_FIT){
    1a06:	4b2e      	ldr	r3, [pc, #184]	; (1ac0 <calcADC_data+0x588>)
    1a08:	681b      	ldr	r3, [r3, #0]
    1a0a:	4618      	mov	r0, r3
    1a0c:	f7fe fec8 	bl	7a0 <__aeabi_f2d>
    1a10:	4602      	mov	r2, r0
    1a12:	460b      	mov	r3, r1
    1a14:	4610      	mov	r0, r2
    1a16:	4619      	mov	r1, r3
    1a18:	a323      	add	r3, pc, #140	; (adr r3, 1aa8 <calcADC_data+0x570>)
    1a1a:	e9d3 2300 	ldrd	r2, r3, [r3]
    1a1e:	f7ff f985 	bl	d2c <__aeabi_dcmplt>
    1a22:	4603      	mov	r3, r0
    1a24:	2b00      	cmp	r3, #0
    1a26:	d011      	beq.n	1a4c <calcADC_data+0x514>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:86
		pData->mm_Values.mm_MiddleR = fitMiddle(middleR_raw);
    1a28:	4b25      	ldr	r3, [pc, #148]	; (1ac0 <calcADC_data+0x588>)
    1a2a:	edd3 7a00 	vldr	s15, [r3]
    1a2e:	eeb0 0a67 	vmov.f32	s0, s15
    1a32:	f000 f849 	bl	1ac8 <fitMiddle>
    1a36:	eef0 7a40 	vmov.f32	s15, s0
    1a3a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    1a3e:	ee17 3a90 	vmov	r3, s15
    1a42:	b2da      	uxtb	r2, r3
    1a44:	687b      	ldr	r3, [r7, #4]
    1a46:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    1a4a:	e01f      	b.n	1a8c <calcADC_data+0x554>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:87
	}else if(middleR_raw < FAR_FIT){
    1a4c:	4b1c      	ldr	r3, [pc, #112]	; (1ac0 <calcADC_data+0x588>)
    1a4e:	ed93 7a00 	vldr	s14, [r3]
    1a52:	eddf 7a18 	vldr	s15, [pc, #96]	; 1ab4 <calcADC_data+0x57c>
    1a56:	eeb4 7ae7 	vcmpe.f32	s14, s15
    1a5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    1a5e:	d511      	bpl.n	1a84 <calcADC_data+0x54c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:88
		pData->mm_Values.mm_MiddleR = fitFar(middleR_raw);
    1a60:	4b17      	ldr	r3, [pc, #92]	; (1ac0 <calcADC_data+0x588>)
    1a62:	edd3 7a00 	vldr	s15, [r3]
    1a66:	eeb0 0a67 	vmov.f32	s0, s15
    1a6a:	f000 f8f1 	bl	1c50 <fitFar>
    1a6e:	eef0 7a40 	vmov.f32	s15, s0
    1a72:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    1a76:	ee17 3a90 	vmov	r3, s15
    1a7a:	b2da      	uxtb	r2, r3
    1a7c:	687b      	ldr	r3, [r7, #4]
    1a7e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    1a82:	e003      	b.n	1a8c <calcADC_data+0x554>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:90
	}else{
		pData->mm_Values.mm_MiddleR = 119.6; // max. distance
    1a84:	687b      	ldr	r3, [r7, #4]
    1a86:	2277      	movs	r2, #119	; 0x77
    1a88:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:98
//	pData->mm_Values.mm_Left = lookUpLeft[(uint16_t)(0.01*pData->raw_Values.raw_Left)];
//	pData->mm_Values.mm_Right = lookUpRight[(uint16_t)(0.01*pData->raw_Values.raw_Right)];
//	pData->mm_Values.mm_MiddleL = lookUpMiddle[(uint16_t)(0.01*pData->raw_Values.raw_MiddleL)];
//	pData->mm_Values.mm_45Left = lookUpMiddle[(uint16_t)(0.01*pData->raw_Values.raw_45Left)];
//	pData->mm_Values.mm_45Right = lookUpMiddle[(uint16_t)(0.01*pData->raw_Values.raw_45Right)];
}
    1a8c:	3720      	adds	r7, #32
    1a8e:	46bd      	mov	sp, r7
    1a90:	bd80      	pop	{r7, pc}
    1a92:	bf00      	nop
    1a94:	f3af 8000 	nop.w
    1a98:	ed916873 	.word	0xed916873
    1a9c:	40023f7c 	.word	0x40023f7c
    1aa0:	51eb851f 	.word	0x51eb851f
    1aa4:	40395eb8 	.word	0x40395eb8
    1aa8:	f5c28f5c 	.word	0xf5c28f5c
    1aac:	40449c28 	.word	0x40449c28
    1ab0:	20000114 	.word	0x20000114
    1ab4:	42820000 	.word	0x42820000
    1ab8:	42ef3333 	.word	0x42ef3333
    1abc:	20000118 	.word	0x20000118
    1ac0:	2000011c 	.word	0x2000011c
$t():
    1ac4:	f3af 8000 	nop.w

00001ac8 <fitMiddle>:
fitMiddle():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:100

float fitMiddle(float raw){
    1ac8:	b5b0      	push	{r4, r5, r7, lr}
    1aca:	b084      	sub	sp, #16
    1acc:	af00      	add	r7, sp, #0
    1ace:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:102
	float yfit;
	float x2 = raw*raw;
    1ad2:	ed97 7a01 	vldr	s14, [r7, #4]
    1ad6:	edd7 7a01 	vldr	s15, [r7, #4]
    1ada:	ee67 7a27 	vmul.f32	s15, s14, s15
    1ade:	edc7 7a03 	vstr	s15, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:104

	yfit = MIDDLE_FIT_COEF_1*x2 + MIDDLE_FIT_COEF_2*raw + MIDDLE_FIT_COEF_3;
    1ae2:	68f8      	ldr	r0, [r7, #12]
    1ae4:	f7fe fe5c 	bl	7a0 <__aeabi_f2d>
    1ae8:	4602      	mov	r2, r0
    1aea:	460b      	mov	r3, r1
    1aec:	4610      	mov	r0, r2
    1aee:	4619      	mov	r1, r3
    1af0:	a319      	add	r3, pc, #100	; (adr r3, 1b58 <fitMiddle+0x90>)
    1af2:	e9d3 2300 	ldrd	r2, r3, [r3]
    1af6:	f7fe fea7 	bl	848 <__aeabi_dmul>
    1afa:	4602      	mov	r2, r0
    1afc:	460b      	mov	r3, r1
    1afe:	4614      	mov	r4, r2
    1b00:	461d      	mov	r5, r3
    1b02:	6878      	ldr	r0, [r7, #4]
    1b04:	f7fe fe4c 	bl	7a0 <__aeabi_f2d>
    1b08:	4602      	mov	r2, r0
    1b0a:	460b      	mov	r3, r1
    1b0c:	4610      	mov	r0, r2
    1b0e:	4619      	mov	r1, r3
    1b10:	a313      	add	r3, pc, #76	; (adr r3, 1b60 <fitMiddle+0x98>)
    1b12:	e9d3 2300 	ldrd	r2, r3, [r3]
    1b16:	f7fe fe97 	bl	848 <__aeabi_dmul>
    1b1a:	4602      	mov	r2, r0
    1b1c:	460b      	mov	r3, r1
    1b1e:	4620      	mov	r0, r4
    1b20:	4629      	mov	r1, r5
    1b22:	f7fe fcdf 	bl	4e4 <__adddf3>
    1b26:	4602      	mov	r2, r0
    1b28:	460b      	mov	r3, r1
    1b2a:	4610      	mov	r0, r2
    1b2c:	4619      	mov	r1, r3
    1b2e:	a30e      	add	r3, pc, #56	; (adr r3, 1b68 <fitMiddle+0xa0>)
    1b30:	e9d3 2300 	ldrd	r2, r3, [r3]
    1b34:	f7fe fcd6 	bl	4e4 <__adddf3>
    1b38:	4602      	mov	r2, r0
    1b3a:	460b      	mov	r3, r1
    1b3c:	4610      	mov	r0, r2
    1b3e:	4619      	mov	r1, r3
    1b40:	f7ff f944 	bl	dcc <__aeabi_d2f>
    1b44:	4603      	mov	r3, r0
    1b46:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:106

	return yfit;
    1b48:	68bb      	ldr	r3, [r7, #8]
    1b4a:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:107
}
    1b4e:	eeb0 0a67 	vmov.f32	s0, s15
    1b52:	3710      	adds	r7, #16
    1b54:	46bd      	mov	sp, r7
    1b56:	bdb0      	pop	{r4, r5, r7, pc}
    1b58:	9dcb5782 	.word	0x9dcb5782
    1b5c:	3f986099 	.word	0x3f986099
    1b60:	c06e19b9 	.word	0xc06e19b9
    1b64:	bfee87e7 	.word	0xbfee87e7
    1b68:	97247454 	.word	0x97247454
    1b6c:	4045f0ff 	.word	0x4045f0ff

00001b70 <fitExp>:
fitExp():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:109

float fitExp(float raw){
    1b70:	b5b0      	push	{r4, r5, r7, lr}
    1b72:	b084      	sub	sp, #16
    1b74:	af00      	add	r7, sp, #0
    1b76:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:112
	float yfit;

	yfit = EXP_FIT_COEF_A*exp(EXP_FIT_COEF_B*raw) + EXP_FIT_COEF_C*exp(EXP_FIT_COEF_D*raw);
    1b7a:	6878      	ldr	r0, [r7, #4]
    1b7c:	f7fe fe10 	bl	7a0 <__aeabi_f2d>
    1b80:	4602      	mov	r2, r0
    1b82:	460b      	mov	r3, r1
    1b84:	4610      	mov	r0, r2
    1b86:	4619      	mov	r1, r3
    1b88:	a329      	add	r3, pc, #164	; (adr r3, 1c30 <fitExp+0xc0>)
    1b8a:	e9d3 2300 	ldrd	r2, r3, [r3]
    1b8e:	f7fe fe5b 	bl	848 <__aeabi_dmul>
    1b92:	4602      	mov	r2, r0
    1b94:	460b      	mov	r3, r1
    1b96:	ec43 2b17 	vmov	d7, r2, r3
    1b9a:	eeb0 0a47 	vmov.f32	s0, s14
    1b9e:	eef0 0a67 	vmov.f32	s1, s15
    1ba2:	f00b f9c9 	bl	cf38 <exp>
    1ba6:	ec53 2b10 	vmov	r2, r3, d0
    1baa:	4610      	mov	r0, r2
    1bac:	4619      	mov	r1, r3
    1bae:	a322      	add	r3, pc, #136	; (adr r3, 1c38 <fitExp+0xc8>)
    1bb0:	e9d3 2300 	ldrd	r2, r3, [r3]
    1bb4:	f7fe fe48 	bl	848 <__aeabi_dmul>
    1bb8:	4602      	mov	r2, r0
    1bba:	460b      	mov	r3, r1
    1bbc:	4614      	mov	r4, r2
    1bbe:	461d      	mov	r5, r3
    1bc0:	6878      	ldr	r0, [r7, #4]
    1bc2:	f7fe fded 	bl	7a0 <__aeabi_f2d>
    1bc6:	4602      	mov	r2, r0
    1bc8:	460b      	mov	r3, r1
    1bca:	4610      	mov	r0, r2
    1bcc:	4619      	mov	r1, r3
    1bce:	a31c      	add	r3, pc, #112	; (adr r3, 1c40 <fitExp+0xd0>)
    1bd0:	e9d3 2300 	ldrd	r2, r3, [r3]
    1bd4:	f7fe fe38 	bl	848 <__aeabi_dmul>
    1bd8:	4602      	mov	r2, r0
    1bda:	460b      	mov	r3, r1
    1bdc:	ec43 2b17 	vmov	d7, r2, r3
    1be0:	eeb0 0a47 	vmov.f32	s0, s14
    1be4:	eef0 0a67 	vmov.f32	s1, s15
    1be8:	f00b f9a6 	bl	cf38 <exp>
    1bec:	ec53 2b10 	vmov	r2, r3, d0
    1bf0:	4610      	mov	r0, r2
    1bf2:	4619      	mov	r1, r3
    1bf4:	a314      	add	r3, pc, #80	; (adr r3, 1c48 <fitExp+0xd8>)
    1bf6:	e9d3 2300 	ldrd	r2, r3, [r3]
    1bfa:	f7fe fe25 	bl	848 <__aeabi_dmul>
    1bfe:	4602      	mov	r2, r0
    1c00:	460b      	mov	r3, r1
    1c02:	4620      	mov	r0, r4
    1c04:	4629      	mov	r1, r5
    1c06:	f7fe fc6d 	bl	4e4 <__adddf3>
    1c0a:	4602      	mov	r2, r0
    1c0c:	460b      	mov	r3, r1
    1c0e:	4610      	mov	r0, r2
    1c10:	4619      	mov	r1, r3
    1c12:	f7ff f8db 	bl	dcc <__aeabi_d2f>
    1c16:	4603      	mov	r3, r0
    1c18:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:114

	return yfit;
    1c1a:	68fb      	ldr	r3, [r7, #12]
    1c1c:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:115
}
    1c20:	eeb0 0a67 	vmov.f32	s0, s15
    1c24:	3710      	adds	r7, #16
    1c26:	46bd      	mov	sp, r7
    1c28:	bdb0      	pop	{r4, r5, r7, pc}
    1c2a:	bf00      	nop
    1c2c:	f3af 8000 	nop.w
    1c30:	26a65cf6 	.word	0x26a65cf6
    1c34:	3f821bc1 	.word	0x3f821bc1
    1c38:	e147ae14 	.word	0xe147ae14
    1c3c:	403bd47a 	.word	0x403bd47a
    1c40:	0c49ba5e 	.word	0x0c49ba5e
    1c44:	bfe92b02 	.word	0xbfe92b02
    1c48:	33333333 	.word	0x33333333
    1c4c:	c0623333 	.word	0xc0623333

00001c50 <fitFar>:
fitFar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:117

float fitFar(float raw){
    1c50:	b5b0      	push	{r4, r5, r7, lr}
    1c52:	b086      	sub	sp, #24
    1c54:	af00      	add	r7, sp, #0
    1c56:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:119
	float yfit;
	float x2 = raw*raw;
    1c5a:	ed97 7a01 	vldr	s14, [r7, #4]
    1c5e:	edd7 7a01 	vldr	s15, [r7, #4]
    1c62:	ee67 7a27 	vmul.f32	s15, s14, s15
    1c66:	edc7 7a05 	vstr	s15, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:120
	float x3 = x2*raw;
    1c6a:	ed97 7a05 	vldr	s14, [r7, #20]
    1c6e:	edd7 7a01 	vldr	s15, [r7, #4]
    1c72:	ee67 7a27 	vmul.f32	s15, s14, s15
    1c76:	edc7 7a04 	vstr	s15, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:121
	float x4 = x3*raw;
    1c7a:	ed97 7a04 	vldr	s14, [r7, #16]
    1c7e:	edd7 7a01 	vldr	s15, [r7, #4]
    1c82:	ee67 7a27 	vmul.f32	s15, s14, s15
    1c86:	edc7 7a03 	vstr	s15, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:123

	yfit = FAR_FIT_COEF_1*x4 + FAR_FIT_COEF_2*x3 + FAR_FIT_COEF_3*x2 +
    1c8a:	68f8      	ldr	r0, [r7, #12]
    1c8c:	f7fe fd88 	bl	7a0 <__aeabi_f2d>
    1c90:	4602      	mov	r2, r0
    1c92:	460b      	mov	r3, r1
    1c94:	4610      	mov	r0, r2
    1c96:	4619      	mov	r1, r3
    1c98:	a330      	add	r3, pc, #192	; (adr r3, 1d5c <fitFar+0x10c>)
    1c9a:	e9d3 2300 	ldrd	r2, r3, [r3]
    1c9e:	f7fe fdd3 	bl	848 <__aeabi_dmul>
    1ca2:	4602      	mov	r2, r0
    1ca4:	460b      	mov	r3, r1
    1ca6:	4614      	mov	r4, r2
    1ca8:	461d      	mov	r5, r3
    1caa:	6938      	ldr	r0, [r7, #16]
    1cac:	f7fe fd78 	bl	7a0 <__aeabi_f2d>
    1cb0:	4602      	mov	r2, r0
    1cb2:	460b      	mov	r3, r1
    1cb4:	4610      	mov	r0, r2
    1cb6:	4619      	mov	r1, r3
    1cb8:	a32a      	add	r3, pc, #168	; (adr r3, 1d64 <fitFar+0x114>)
    1cba:	e9d3 2300 	ldrd	r2, r3, [r3]
    1cbe:	f7fe fdc3 	bl	848 <__aeabi_dmul>
    1cc2:	4602      	mov	r2, r0
    1cc4:	460b      	mov	r3, r1
    1cc6:	4620      	mov	r0, r4
    1cc8:	4629      	mov	r1, r5
    1cca:	f7fe fc0b 	bl	4e4 <__adddf3>
    1cce:	4602      	mov	r2, r0
    1cd0:	460b      	mov	r3, r1
    1cd2:	4614      	mov	r4, r2
    1cd4:	461d      	mov	r5, r3
    1cd6:	6978      	ldr	r0, [r7, #20]
    1cd8:	f7fe fd62 	bl	7a0 <__aeabi_f2d>
    1cdc:	4602      	mov	r2, r0
    1cde:	460b      	mov	r3, r1
    1ce0:	4610      	mov	r0, r2
    1ce2:	4619      	mov	r1, r3
    1ce4:	a321      	add	r3, pc, #132	; (adr r3, 1d6c <fitFar+0x11c>)
    1ce6:	e9d3 2300 	ldrd	r2, r3, [r3]
    1cea:	f7fe fdad 	bl	848 <__aeabi_dmul>
    1cee:	4602      	mov	r2, r0
    1cf0:	460b      	mov	r3, r1
    1cf2:	4620      	mov	r0, r4
    1cf4:	4629      	mov	r1, r5
    1cf6:	f7fe fbf5 	bl	4e4 <__adddf3>
    1cfa:	4602      	mov	r2, r0
    1cfc:	460b      	mov	r3, r1
    1cfe:	4614      	mov	r4, r2
    1d00:	461d      	mov	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:124
			FAR_FIT_COEF_4*raw + FAR_FIT_COEF_5;
    1d02:	ed97 7a01 	vldr	s14, [r7, #4]
    1d06:	eddf 7a14 	vldr	s15, [pc, #80]	; 1d58 <fitFar+0x108>
    1d0a:	ee67 7a27 	vmul.f32	s15, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:123
	float yfit;
	float x2 = raw*raw;
	float x3 = x2*raw;
	float x4 = x3*raw;

	yfit = FAR_FIT_COEF_1*x4 + FAR_FIT_COEF_2*x3 + FAR_FIT_COEF_3*x2 +
    1d0e:	ee17 0a90 	vmov	r0, s15
    1d12:	f7fe fd45 	bl	7a0 <__aeabi_f2d>
    1d16:	4602      	mov	r2, r0
    1d18:	460b      	mov	r3, r1
    1d1a:	4620      	mov	r0, r4
    1d1c:	4629      	mov	r1, r5
    1d1e:	f7fe fbe1 	bl	4e4 <__adddf3>
    1d22:	4602      	mov	r2, r0
    1d24:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:124
			FAR_FIT_COEF_4*raw + FAR_FIT_COEF_5;
    1d26:	4610      	mov	r0, r2
    1d28:	4619      	mov	r1, r3
    1d2a:	f04f 0200 	mov.w	r2, #0
    1d2e:	f04f 0300 	mov.w	r3, #0
    1d32:	f7fe fbd7 	bl	4e4 <__adddf3>
    1d36:	4602      	mov	r2, r0
    1d38:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:123
	float yfit;
	float x2 = raw*raw;
	float x3 = x2*raw;
	float x4 = x3*raw;

	yfit = FAR_FIT_COEF_1*x4 + FAR_FIT_COEF_2*x3 + FAR_FIT_COEF_3*x2 +
    1d3a:	4610      	mov	r0, r2
    1d3c:	4619      	mov	r1, r3
    1d3e:	f7ff f845 	bl	dcc <__aeabi_d2f>
    1d42:	4603      	mov	r3, r0
    1d44:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:126
			FAR_FIT_COEF_4*raw + FAR_FIT_COEF_5;

	return yfit;
    1d46:	68bb      	ldr	r3, [r7, #8]
    1d48:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:127
}
    1d4c:	eeb0 0a67 	vmov.f32	s0, s15
    1d50:	3718      	adds	r7, #24
    1d52:	46bd      	mov	sp, r7
    1d54:	bdb0      	pop	{r4, r5, r7, pc}
    1d56:	bf00      	nop
    1d58:	00000000 	.word	0x00000000
    1d5c:	2cccb41b 	.word	0x2cccb41b
    1d60:	3f02ce86 	.word	0x3f02ce86
    1d64:	dce47205 	.word	0xdce47205
    1d68:	bf6e9581 	.word	0xbf6e9581
    1d6c:	e82949a5 	.word	0xe82949a5
    1d70:	3fbe92f6 	.word	0x3fbe92f6
$t():
    1d74:	f3af 8000 	nop.w

00001d78 <get_half_U_Bat>:
get_half_U_Bat():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:129

float get_half_U_Bat(){
    1d78:	b580      	push	{r7, lr}
    1d7a:	b084      	sub	sp, #16
    1d7c:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:131
	uint16_t values_ADC0_raw[5];
	ADC_0_Measure(TRUE);
    1d7e:	f002 fc47 	bl	4610 <PE_ADC_0_Measure>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:132
	ADC_0_GetValue16(values_ADC0_raw);
    1d82:	1d3b      	adds	r3, r7, #4
    1d84:	4618      	mov	r0, r3
    1d86:	f002 fc5f 	bl	4648 <ADC_0_GetValue16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:133
	return (float)(2*values_ADC0_raw[3]*0.000050354004);
    1d8a:	897b      	ldrh	r3, [r7, #10]
    1d8c:	005b      	lsls	r3, r3, #1
    1d8e:	4618      	mov	r0, r3
    1d90:	f7fe fcf4 	bl	77c <__aeabi_i2d>
    1d94:	4602      	mov	r2, r0
    1d96:	460b      	mov	r3, r1
    1d98:	4610      	mov	r0, r2
    1d9a:	4619      	mov	r1, r3
    1d9c:	a30a      	add	r3, pc, #40	; (adr r3, 1dc8 <get_half_U_Bat+0x50>)
    1d9e:	e9d3 2300 	ldrd	r2, r3, [r3]
    1da2:	f7fe fd51 	bl	848 <__aeabi_dmul>
    1da6:	4602      	mov	r2, r0
    1da8:	460b      	mov	r3, r1
    1daa:	4610      	mov	r0, r2
    1dac:	4619      	mov	r1, r3
    1dae:	f7ff f80d 	bl	dcc <__aeabi_d2f>
    1db2:	4603      	mov	r3, r0
    1db4:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/ADC.c:134
}
    1db8:	eeb0 0a67 	vmov.f32	s0, s15
    1dbc:	3710      	adds	r7, #16
    1dbe:	46bd      	mov	sp, r7
    1dc0:	bd80      	pop	{r7, pc}
    1dc2:	bf00      	nop
    1dc4:	f3af 8000 	nop.w
    1dc8:	67398198 	.word	0x67398198
    1dcc:	3f0a6666 	.word	0x3f0a6666

00001dd0 <APP_EventHandler>:
APP_EventHandler():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:106
//uint16_t motor_vRight5 = 3000;
//uint16_t motor_vRight6 = 4095;



void APP_EventHandler(EVNT_Handle event) {
    1dd0:	b580      	push	{r7, lr}
    1dd2:	b082      	sub	sp, #8
    1dd4:	af00      	add	r7, sp, #0
    1dd6:	4603      	mov	r3, r0
    1dd8:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:108
  /*! \todo handle events */
  switch(event) {
    1dda:	79fb      	ldrb	r3, [r7, #7]
    1ddc:	2b04      	cmp	r3, #4
    1dde:	d852      	bhi.n	1e86 <APP_EventHandler+0xb6>
    1de0:	a201      	add	r2, pc, #4	; (adr r2, 1de8 <APP_EventHandler+0x18>)
    1de2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    1de6:	bf00      	nop
    1de8:	00001dfd 	.word	0x00001dfd
    1dec:	00001e05 	.word	0x00001e05
    1df0:	00001e45 	.word	0x00001e45
    1df4:	00001e75 	.word	0x00001e75
    1df8:	00001e87 	.word	0x00001e87
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:110
  case EVNT_STARTUP:
	  setState(INIT);
    1dfc:	2001      	movs	r0, #1
    1dfe:	f001 fb79 	bl	34f4 <setState>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:111
    break;
    1e02:	e041      	b.n	1e88 <APP_EventHandler+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:114

  case EVNT_Turn_Right:
	  LED_RED_F_R_Neg();
    1e04:	4b22      	ldr	r3, [pc, #136]	; (1e90 <APP_EventHandler+0xc0>)
    1e06:	691b      	ldr	r3, [r3, #16]
    1e08:	4618      	mov	r0, r3
    1e0a:	f005 fb85 	bl	7518 <BitIoLdd5_NegVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:115
	  Distance_INT_DisableEvent();
    1e0e:	4b20      	ldr	r3, [pc, #128]	; (1e90 <APP_EventHandler+0xc0>)
    1e10:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    1e12:	4618      	mov	r0, r3
    1e14:	2100      	movs	r1, #0
    1e16:	f007 fa59 	bl	92cc <TimerIntLdd1_SetEventMask>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:116
	  setState(Turn_Right);
    1e1a:	2008      	movs	r0, #8
    1e1c:	f001 fb6a 	bl	34f4 <setState>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:117
	  stopp();
    1e20:	f000 ff12 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:118
	  turn_r(1);
    1e24:	2001      	movs	r0, #1
    1e26:	f000 fff9 	bl	2e1c <turn_r>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:119
	  MotorEnable(0,0);
    1e2a:	2000      	movs	r0, #0
    1e2c:	2100      	movs	r1, #0
    1e2e:	f002 f90d 	bl	404c <MotorEnable>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:121

	  LED_RED_F_R_Neg();
    1e32:	4b17      	ldr	r3, [pc, #92]	; (1e90 <APP_EventHandler+0xc0>)
    1e34:	691b      	ldr	r3, [r3, #16]
    1e36:	4618      	mov	r0, r3
    1e38:	f005 fb6e 	bl	7518 <BitIoLdd5_NegVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:123
	  //Distance_INT_EnableEvent();
	  EVNT_SetEvent(EVNT_New_Field);
    1e3c:	2003      	movs	r0, #3
    1e3e:	f000 fd9f 	bl	2980 <EVNT_SetEvent>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:124
    break;
    1e42:	e021      	b.n	1e88 <APP_EventHandler+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:127

  case EVNT_Turn_Left:
	  setState(Turn_Left);
    1e44:	2009      	movs	r0, #9
    1e46:	f001 fb55 	bl	34f4 <setState>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:128
	  LED_GREEN_F_R_Neg();
    1e4a:	4b11      	ldr	r3, [pc, #68]	; (1e90 <APP_EventHandler+0xc0>)
    1e4c:	695b      	ldr	r3, [r3, #20]
    1e4e:	4618      	mov	r0, r3
    1e50:	f005 fbcc 	bl	75ec <BitIoLdd6_NegVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:129
	  Distance_INT_DisableEvent();
    1e54:	4b0e      	ldr	r3, [pc, #56]	; (1e90 <APP_EventHandler+0xc0>)
    1e56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    1e58:	4618      	mov	r0, r3
    1e5a:	2100      	movs	r1, #0
    1e5c:	f007 fa36 	bl	92cc <TimerIntLdd1_SetEventMask>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:130
	  turn_l();
    1e60:	f000 ffd0 	bl	2e04 <turn_l>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:131
	  stopp();
    1e64:	f000 fef0 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:132
	  LED_GREEN_F_R_Neg();
    1e68:	4b09      	ldr	r3, [pc, #36]	; (1e90 <APP_EventHandler+0xc0>)
    1e6a:	695b      	ldr	r3, [r3, #20]
    1e6c:	4618      	mov	r0, r3
    1e6e:	f005 fbbd 	bl	75ec <BitIoLdd6_NegVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:135
	  //Distance_INT_EnableEvent();
	  //EVNT_ClearEvent(EVNT_Turn_Left);
    break;
    1e72:	e009      	b.n	1e88 <APP_EventHandler+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:138

  case EVNT_New_Field:
	  setState(New_Field);LED_BLUE_F_L_Neg();
    1e74:	2007      	movs	r0, #7
    1e76:	f001 fb3d 	bl	34f4 <setState>
    1e7a:	4b05      	ldr	r3, [pc, #20]	; (1e90 <APP_EventHandler+0xc0>)
    1e7c:	681b      	ldr	r3, [r3, #0]
    1e7e:	4618      	mov	r0, r3
    1e80:	f004 f886 	bl	5f90 <BitIoLdd1_NegVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:140
	  //EVNT_ClearEvent(EVNT_New_Field);
    break;
    1e84:	e000      	b.n	1e88 <APP_EventHandler+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:147
  case EVNT_None:

    break;

    default:
      break;
    1e86:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:149
   } /* switch */
}
    1e88:	3708      	adds	r7, #8
    1e8a:	46bd      	mov	sp, r7
    1e8c:	bd80      	pop	{r7, pc}
    1e8e:	bf00      	nop
    1e90:	20000480 	.word	0x20000480
$d():
    1e94:	00000000 	.word	0x00000000

00001e98 <testJoystick>:
testJoystick():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:152

void testJoystick()
{
    1e98:	b590      	push	{r4, r7, lr}
    1e9a:	f5ad 7d73 	sub.w	sp, sp, #972	; 0x3cc
    1e9e:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:153
	if(JOY_UP_GetVal() == 0) {
    1ea0:	4b6d      	ldr	r3, [pc, #436]	; (2058 <testJoystick+0x1c0>)
    1ea2:	69db      	ldr	r3, [r3, #28]
    1ea4:	4618      	mov	r0, r3
    1ea6:	f004 f9bf 	bl	6228 <BitIoLdd16_GetVal>
    1eaa:	4603      	mov	r3, r0
    1eac:	f083 0301 	eor.w	r3, r3, #1
    1eb0:	b2db      	uxtb	r3, r3
    1eb2:	2b00      	cmp	r3, #0
    1eb4:	d042      	beq.n	1f3c <testJoystick+0xa4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:154
		LED_GREEN_F_R_Off();
    1eb6:	4b68      	ldr	r3, [pc, #416]	; (2058 <testJoystick+0x1c0>)
    1eb8:	695b      	ldr	r3, [r3, #20]
    1eba:	4618      	mov	r0, r3
    1ebc:	f005 fb88 	bl	75d0 <BitIoLdd6_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:155
		LED_GREEN_F_L_Off();
    1ec0:	4b65      	ldr	r3, [pc, #404]	; (2058 <testJoystick+0x1c0>)
    1ec2:	689b      	ldr	r3, [r3, #8]
    1ec4:	4618      	mov	r0, r3
    1ec6:	f004 fe71 	bl	6bac <BitIoLdd3_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:156
		LED_BLUE_F_R_Off();
    1eca:	4b63      	ldr	r3, [pc, #396]	; (2058 <testJoystick+0x1c0>)
    1ecc:	68db      	ldr	r3, [r3, #12]
    1ece:	4618      	mov	r0, r3
    1ed0:	f005 fa06 	bl	72e0 <BitIoLdd4_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:157
		LED_BLUE_F_L_Off();
    1ed4:	4b60      	ldr	r3, [pc, #384]	; (2058 <testJoystick+0x1c0>)
    1ed6:	681b      	ldr	r3, [r3, #0]
    1ed8:	4618      	mov	r0, r3
    1eda:	f004 f849 	bl	5f70 <BitIoLdd1_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:158
		LED_RED_F_R_On();
    1ede:	4b5e      	ldr	r3, [pc, #376]	; (2058 <testJoystick+0x1c0>)
    1ee0:	691b      	ldr	r3, [r3, #16]
    1ee2:	4618      	mov	r0, r3
    1ee4:	f005 fafc 	bl	74e0 <BitIoLdd5_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:159
		LED_RED_F_L_On();
    1ee8:	4b5b      	ldr	r3, [pc, #364]	; (2058 <testJoystick+0x1c0>)
    1eea:	685b      	ldr	r3, [r3, #4]
    1eec:	4618      	mov	r0, r3
    1eee:	f004 fae9 	bl	64c4 <BitIoLdd2_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:160
		testUART();
    1ef2:	f001 f94d 	bl	3190 <testUART>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:161
		MazeSegmentsToBeDriven = getReferenceOfMazesegment();
    1ef6:	4c59      	ldr	r4, [pc, #356]	; (205c <testJoystick+0x1c4>)
    1ef8:	463b      	mov	r3, r7
    1efa:	4618      	mov	r0, r3
    1efc:	f000 ffbc 	bl	2e78 <getReferenceOfMazesegment>
    1f00:	463b      	mov	r3, r7
    1f02:	4621      	mov	r1, r4
    1f04:	461a      	mov	r2, r3
    1f06:	f44f 7371 	mov.w	r3, #964	; 0x3c4
    1f0a:	4608      	mov	r0, r1
    1f0c:	4611      	mov	r1, r2
    1f0e:	461a      	mov	r2, r3
    1f10:	f00b fc98 	bl	d844 <memcpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:162
		LED_RED_F_R_Off();
    1f14:	4b50      	ldr	r3, [pc, #320]	; (2058 <testJoystick+0x1c0>)
    1f16:	691b      	ldr	r3, [r3, #16]
    1f18:	4618      	mov	r0, r3
    1f1a:	f005 faef 	bl	74fc <BitIoLdd5_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:163
		LED_RED_F_L_Off();
    1f1e:	4b4e      	ldr	r3, [pc, #312]	; (2058 <testJoystick+0x1c0>)
    1f20:	685b      	ldr	r3, [r3, #4]
    1f22:	4618      	mov	r0, r3
    1f24:	f004 fade 	bl	64e4 <BitIoLdd2_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:164
		LED_BLUE_F_R_On();
    1f28:	4b4b      	ldr	r3, [pc, #300]	; (2058 <testJoystick+0x1c0>)
    1f2a:	68db      	ldr	r3, [r3, #12]
    1f2c:	4618      	mov	r0, r3
    1f2e:	f005 f9c7 	bl	72c0 <BitIoLdd4_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:165
		LED_BLUE_F_L_On();
    1f32:	4b49      	ldr	r3, [pc, #292]	; (2058 <testJoystick+0x1c0>)
    1f34:	681b      	ldr	r3, [r3, #0]
    1f36:	4618      	mov	r0, r3
    1f38:	f004 f80a 	bl	5f50 <BitIoLdd1_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:170

	} else {

	}
	if(JOY_RIGHT_GetVal() == 0) {
    1f3c:	4b46      	ldr	r3, [pc, #280]	; (2058 <testJoystick+0x1c0>)
    1f3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1f40:	4618      	mov	r0, r3
    1f42:	f004 fa67 	bl	6414 <BitIoLdd19_GetVal>
    1f46:	4603      	mov	r3, r0
    1f48:	f083 0301 	eor.w	r3, r3, #1
    1f4c:	b2db      	uxtb	r3, r3
    1f4e:	2b00      	cmp	r3, #0
    1f50:	f000 809a 	beq.w	2088 <testJoystick+0x1f0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:172

		WAIT1_Waitms(1000);
    1f54:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    1f58:	f007 fd3e 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:175

		/* IMU */
		LED_GREEN_F_R_Off();
    1f5c:	4b3e      	ldr	r3, [pc, #248]	; (2058 <testJoystick+0x1c0>)
    1f5e:	695b      	ldr	r3, [r3, #20]
    1f60:	4618      	mov	r0, r3
    1f62:	f005 fb35 	bl	75d0 <BitIoLdd6_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:176
		LED_GREEN_F_L_Off();
    1f66:	4b3c      	ldr	r3, [pc, #240]	; (2058 <testJoystick+0x1c0>)
    1f68:	689b      	ldr	r3, [r3, #8]
    1f6a:	4618      	mov	r0, r3
    1f6c:	f004 fe1e 	bl	6bac <BitIoLdd3_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:177
		LED_BLUE_F_R_Off();
    1f70:	4b39      	ldr	r3, [pc, #228]	; (2058 <testJoystick+0x1c0>)
    1f72:	68db      	ldr	r3, [r3, #12]
    1f74:	4618      	mov	r0, r3
    1f76:	f005 f9b3 	bl	72e0 <BitIoLdd4_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:178
		LED_BLUE_F_L_Off();
    1f7a:	4b37      	ldr	r3, [pc, #220]	; (2058 <testJoystick+0x1c0>)
    1f7c:	681b      	ldr	r3, [r3, #0]
    1f7e:	4618      	mov	r0, r3
    1f80:	f003 fff6 	bl	5f70 <BitIoLdd1_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:179
		LED_RED_F_R_On();
    1f84:	4b34      	ldr	r3, [pc, #208]	; (2058 <testJoystick+0x1c0>)
    1f86:	691b      	ldr	r3, [r3, #16]
    1f88:	4618      	mov	r0, r3
    1f8a:	f005 faa9 	bl	74e0 <BitIoLdd5_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:180
		LED_RED_F_L_On();
    1f8e:	4b32      	ldr	r3, [pc, #200]	; (2058 <testJoystick+0x1c0>)
    1f90:	685b      	ldr	r3, [r3, #4]
    1f92:	4618      	mov	r0, r3
    1f94:	f004 fa96 	bl	64c4 <BitIoLdd2_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:181
		biasCalc();
    1f98:	f001 fc6e 	bl	3878 <biasCalc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:182
		setBias();
    1f9c:	f008 fd9a 	bl	aad4 <setBias>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:183
		LED_RED_F_R_Off();
    1fa0:	4b2d      	ldr	r3, [pc, #180]	; (2058 <testJoystick+0x1c0>)
    1fa2:	691b      	ldr	r3, [r3, #16]
    1fa4:	4618      	mov	r0, r3
    1fa6:	f005 faa9 	bl	74fc <BitIoLdd5_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:184
		LED_RED_F_L_Off();
    1faa:	4b2b      	ldr	r3, [pc, #172]	; (2058 <testJoystick+0x1c0>)
    1fac:	685b      	ldr	r3, [r3, #4]
    1fae:	4618      	mov	r0, r3
    1fb0:	f004 fa98 	bl	64e4 <BitIoLdd2_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:185
		calcADC_data(&adcData);
    1fb4:	482a      	ldr	r0, [pc, #168]	; (2060 <testJoystick+0x1c8>)
    1fb6:	f7ff fabf 	bl	1538 <calcADC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:186
		calcENC_data(&encData);
    1fba:	482a      	ldr	r0, [pc, #168]	; (2064 <testJoystick+0x1cc>)
    1fbc:	f000 fbcc 	bl	2758 <calcENC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:187
		calcIMU_data(&imuData);
    1fc0:	4829      	ldr	r0, [pc, #164]	; (2068 <testJoystick+0x1d0>)
    1fc2:	f001 fd21 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:188
		I_LED_MR_ClrVal();I_LED_ML_ClrVal();
    1fc6:	4b24      	ldr	r3, [pc, #144]	; (2058 <testJoystick+0x1c0>)
    1fc8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
    1fcc:	4618      	mov	r0, r3
    1fce:	f005 f877 	bl	70c0 <BitIoLdd37_ClrVal>
    1fd2:	4b21      	ldr	r3, [pc, #132]	; (2058 <testJoystick+0x1c0>)
    1fd4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    1fd8:	4618      	mov	r0, r3
    1fda:	f005 f811 	bl	7000 <BitIoLdd36_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:189
		I_LED_R_SetVal();I_LED_L_SetVal();
    1fde:	4b1e      	ldr	r3, [pc, #120]	; (2058 <testJoystick+0x1c0>)
    1fe0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
    1fe4:	4618      	mov	r0, r3
    1fe6:	f005 f8db 	bl	71a0 <BitIoLdd38_SetVal>
    1fea:	4b1b      	ldr	r3, [pc, #108]	; (2058 <testJoystick+0x1c0>)
    1fec:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    1ff0:	4618      	mov	r0, r3
    1ff2:	f004 ffb5 	bl	6f60 <BitIoLdd35_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:191
		/* Initial measurement, as first measurement seemed to be corrupted for some reason.*/
		WAIT1_Waitms(1000);
    1ff6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    1ffa:	f007 fced 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:192
		calcADC_data(&adcData);
    1ffe:	4818      	ldr	r0, [pc, #96]	; (2060 <testJoystick+0x1c8>)
    2000:	f7ff fa9a 	bl	1538 <calcADC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:193
		calcIMU_data(&imuData);
    2004:	4818      	ldr	r0, [pc, #96]	; (2068 <testJoystick+0x1d0>)
    2006:	f001 fcff 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:194
		WAIT1_Waitms(1000);
    200a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    200e:	f007 fce3 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:197
//		LED_GREEN_F_R_On();
//		LED_GREEN_F_L_On();
		if(get_half_U_Bat()> 3.7){
    2012:	f7ff feb1 	bl	1d78 <get_half_U_Bat>
    2016:	ee10 3a10 	vmov	r3, s0
    201a:	4618      	mov	r0, r3
    201c:	f7fe fbc0 	bl	7a0 <__aeabi_f2d>
    2020:	4602      	mov	r2, r0
    2022:	460b      	mov	r3, r1
    2024:	4610      	mov	r0, r2
    2026:	4619      	mov	r1, r3
    2028:	a309      	add	r3, pc, #36	; (adr r3, 2050 <testJoystick+0x1b8>)
    202a:	e9d3 2300 	ldrd	r2, r3, [r3]
    202e:	f7fe fe9b 	bl	d68 <__aeabi_dcmpgt>
    2032:	4603      	mov	r3, r0
    2034:	2b00      	cmp	r3, #0
    2036:	d019      	beq.n	206c <testJoystick+0x1d4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:198
		Distance_INT_EnableEvent();
    2038:	4b07      	ldr	r3, [pc, #28]	; (2058 <testJoystick+0x1c0>)
    203a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    203c:	4618      	mov	r0, r3
    203e:	2101      	movs	r1, #1
    2040:	f007 f944 	bl	92cc <TimerIntLdd1_SetEventMask>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:199
		initMotors();
    2044:	f001 ffa6 	bl	3f94 <initMotors>
    2048:	e01e      	b.n	2088 <testJoystick+0x1f0>
    204a:	bf00      	nop
    204c:	f3af 8000 	nop.w
    2050:	9999999a 	.word	0x9999999a
    2054:	400d9999 	.word	0x400d9999
    2058:	20000480 	.word	0x20000480
    205c:	20000e48 	.word	0x20000e48
    2060:	2000120c 	.word	0x2000120c
    2064:	20000e30 	.word	0x20000e30
    2068:	20000de4 	.word	0x20000de4
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:202

		}else{
			 BAT_LOW_ClrVal();
    206c:	4b6e      	ldr	r3, [pc, #440]	; (2228 <testJoystick+0x390>)
    206e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    2072:	4618      	mov	r0, r3
    2074:	f004 fd3c 	bl	6af0 <BitIoLdd29_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:203
			set_VREF(0,0);
    2078:	ed9f 0a6c 	vldr	s0, [pc, #432]	; 222c <testJoystick+0x394>
    207c:	eddf 0a6b 	vldr	s1, [pc, #428]	; 222c <testJoystick+0x394>
    2080:	f002 f80a 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:204
			deinitMotors();
    2084:	f001 ffc8 	bl	4018 <deinitMotors>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:211


	} else {

	}
	if(JOY_LEFT_GetVal() == 0) {
    2088:	4b67      	ldr	r3, [pc, #412]	; (2228 <testJoystick+0x390>)
    208a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    208c:	4618      	mov	r0, r3
    208e:	f004 f96f 	bl	6370 <BitIoLdd18_GetVal>
    2092:	4603      	mov	r3, r0
    2094:	f083 0301 	eor.w	r3, r3, #1
    2098:	b2db      	uxtb	r3, r3
    209a:	2b00      	cmp	r3, #0
    209c:	f000 8083 	beq.w	21a6 <testJoystick+0x30e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:213
		//exploration
		WAIT1_Waitms(1000);
    20a0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    20a4:	f007 fc98 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:216

		/* IMU */
		LED_GREEN_F_R_Off();
    20a8:	4b5f      	ldr	r3, [pc, #380]	; (2228 <testJoystick+0x390>)
    20aa:	695b      	ldr	r3, [r3, #20]
    20ac:	4618      	mov	r0, r3
    20ae:	f005 fa8f 	bl	75d0 <BitIoLdd6_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:217
		LED_GREEN_F_L_Off();
    20b2:	4b5d      	ldr	r3, [pc, #372]	; (2228 <testJoystick+0x390>)
    20b4:	689b      	ldr	r3, [r3, #8]
    20b6:	4618      	mov	r0, r3
    20b8:	f004 fd78 	bl	6bac <BitIoLdd3_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:218
		LED_BLUE_F_R_Off();
    20bc:	4b5a      	ldr	r3, [pc, #360]	; (2228 <testJoystick+0x390>)
    20be:	68db      	ldr	r3, [r3, #12]
    20c0:	4618      	mov	r0, r3
    20c2:	f005 f90d 	bl	72e0 <BitIoLdd4_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:219
		LED_BLUE_F_L_Off();
    20c6:	4b58      	ldr	r3, [pc, #352]	; (2228 <testJoystick+0x390>)
    20c8:	681b      	ldr	r3, [r3, #0]
    20ca:	4618      	mov	r0, r3
    20cc:	f003 ff50 	bl	5f70 <BitIoLdd1_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:220
		LED_RED_F_R_On();
    20d0:	4b55      	ldr	r3, [pc, #340]	; (2228 <testJoystick+0x390>)
    20d2:	691b      	ldr	r3, [r3, #16]
    20d4:	4618      	mov	r0, r3
    20d6:	f005 fa03 	bl	74e0 <BitIoLdd5_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:221
		LED_RED_F_L_On();
    20da:	4b53      	ldr	r3, [pc, #332]	; (2228 <testJoystick+0x390>)
    20dc:	685b      	ldr	r3, [r3, #4]
    20de:	4618      	mov	r0, r3
    20e0:	f004 f9f0 	bl	64c4 <BitIoLdd2_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:222
		biasCalc();
    20e4:	f001 fbc8 	bl	3878 <biasCalc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:223
		setBias();
    20e8:	f008 fcf4 	bl	aad4 <setBias>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:224
		LED_RED_F_R_Off();
    20ec:	4b4e      	ldr	r3, [pc, #312]	; (2228 <testJoystick+0x390>)
    20ee:	691b      	ldr	r3, [r3, #16]
    20f0:	4618      	mov	r0, r3
    20f2:	f005 fa03 	bl	74fc <BitIoLdd5_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:225
		LED_RED_F_L_Off();
    20f6:	4b4c      	ldr	r3, [pc, #304]	; (2228 <testJoystick+0x390>)
    20f8:	685b      	ldr	r3, [r3, #4]
    20fa:	4618      	mov	r0, r3
    20fc:	f004 f9f2 	bl	64e4 <BitIoLdd2_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:227

		I_LED_R_SetVal();I_LED_L_SetVal();I_LED_ML_SetVal();I_LED_MR_SetVal();
    2100:	4b49      	ldr	r3, [pc, #292]	; (2228 <testJoystick+0x390>)
    2102:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
    2106:	4618      	mov	r0, r3
    2108:	f005 f84a 	bl	71a0 <BitIoLdd38_SetVal>
    210c:	4b46      	ldr	r3, [pc, #280]	; (2228 <testJoystick+0x390>)
    210e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    2112:	4618      	mov	r0, r3
    2114:	f004 ff24 	bl	6f60 <BitIoLdd35_SetVal>
    2118:	4b43      	ldr	r3, [pc, #268]	; (2228 <testJoystick+0x390>)
    211a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    211e:	4618      	mov	r0, r3
    2120:	f004 ff7e 	bl	7020 <BitIoLdd36_SetVal>
    2124:	4b40      	ldr	r3, [pc, #256]	; (2228 <testJoystick+0x390>)
    2126:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
    212a:	4618      	mov	r0, r3
    212c:	f004 ffd8 	bl	70e0 <BitIoLdd37_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:229
		/* Initial measurement, as first measurement seemed to be corrupted for some reason.*/
		WAIT1_Waitms(1000);
    2130:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    2134:	f007 fc50 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:230
		calcADC_data(&adcData);
    2138:	483d      	ldr	r0, [pc, #244]	; (2230 <testJoystick+0x398>)
    213a:	f7ff f9fd 	bl	1538 <calcADC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:231
		calcIMU_data(&imuData);
    213e:	483d      	ldr	r0, [pc, #244]	; (2234 <testJoystick+0x39c>)
    2140:	f001 fc62 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:232
		WAIT1_Waitms(1000);
    2144:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    2148:	f007 fc46 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:235
//		LED_GREEN_F_R_On();
//		LED_GREEN_F_L_On();
		if(get_half_U_Bat()> 3.7){
    214c:	f7ff fe14 	bl	1d78 <get_half_U_Bat>
    2150:	ee10 3a10 	vmov	r3, s0
    2154:	4618      	mov	r0, r3
    2156:	f7fe fb23 	bl	7a0 <__aeabi_f2d>
    215a:	4602      	mov	r2, r0
    215c:	460b      	mov	r3, r1
    215e:	4610      	mov	r0, r2
    2160:	4619      	mov	r1, r3
    2162:	a32f      	add	r3, pc, #188	; (adr r3, 2220 <testJoystick+0x388>)
    2164:	e9d3 2300 	ldrd	r2, r3, [r3]
    2168:	f7fe fdfe 	bl	d68 <__aeabi_dcmpgt>
    216c:	4603      	mov	r3, r0
    216e:	2b00      	cmp	r3, #0
    2170:	d00b      	beq.n	218a <testJoystick+0x2f2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:236
		PID_Init();
    2172:	f000 fca1 	bl	2ab8 <PID_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:237
		exploFinishFlag = FALSE;
    2176:	4b30      	ldr	r3, [pc, #192]	; (2238 <testJoystick+0x3a0>)
    2178:	2200      	movs	r2, #0
    217a:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:241
		//initMotors();
//		driveToTurn(0.05);
//		stopp();
		Distance_INT_EnableEvent();
    217c:	4b2a      	ldr	r3, [pc, #168]	; (2228 <testJoystick+0x390>)
    217e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    2180:	4618      	mov	r0, r3
    2182:	2101      	movs	r1, #1
    2184:	f007 f8a2 	bl	92cc <TimerIntLdd1_SetEventMask>
    2188:	e00d      	b.n	21a6 <testJoystick+0x30e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:243
		}else{
			 BAT_LOW_ClrVal();
    218a:	4b27      	ldr	r3, [pc, #156]	; (2228 <testJoystick+0x390>)
    218c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    2190:	4618      	mov	r0, r3
    2192:	f004 fcad 	bl	6af0 <BitIoLdd29_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:244
			set_VREF(0,0);
    2196:	ed9f 0a25 	vldr	s0, [pc, #148]	; 222c <testJoystick+0x394>
    219a:	eddf 0a24 	vldr	s1, [pc, #144]	; 222c <testJoystick+0x394>
    219e:	f001 ff7b 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:245
			deinitMotors();
    21a2:	f001 ff39 	bl	4018 <deinitMotors>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:252


	} else {

	}
	if(JOY_DOWN_GetVal() == 0) {
    21a6:	4b20      	ldr	r3, [pc, #128]	; (2228 <testJoystick+0x390>)
    21a8:	6a1b      	ldr	r3, [r3, #32]
    21aa:	4618      	mov	r0, r3
    21ac:	f004 f88e 	bl	62cc <BitIoLdd17_GetVal>
    21b0:	4603      	mov	r3, r0
    21b2:	f083 0301 	eor.w	r3, r3, #1
    21b6:	b2db      	uxtb	r3, r3
    21b8:	2b00      	cmp	r3, #0
    21ba:	d015      	beq.n	21e8 <testJoystick+0x350>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:253
		Init_Maze();
    21bc:	f000 f86c 	bl	2298 <Init_Maze>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:254
		LED_GREEN_F_R_Off();
    21c0:	4b19      	ldr	r3, [pc, #100]	; (2228 <testJoystick+0x390>)
    21c2:	695b      	ldr	r3, [r3, #20]
    21c4:	4618      	mov	r0, r3
    21c6:	f005 fa03 	bl	75d0 <BitIoLdd6_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:255
		LED_GREEN_F_L_Off();
    21ca:	4b17      	ldr	r3, [pc, #92]	; (2228 <testJoystick+0x390>)
    21cc:	689b      	ldr	r3, [r3, #8]
    21ce:	4618      	mov	r0, r3
    21d0:	f004 fcec 	bl	6bac <BitIoLdd3_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:256
		LED_BLUE_F_L_On();
    21d4:	4b14      	ldr	r3, [pc, #80]	; (2228 <testJoystick+0x390>)
    21d6:	681b      	ldr	r3, [r3, #0]
    21d8:	4618      	mov	r0, r3
    21da:	f003 feb9 	bl	5f50 <BitIoLdd1_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:257
		LED_BLUE_F_R_On();
    21de:	4b12      	ldr	r3, [pc, #72]	; (2228 <testJoystick+0x390>)
    21e0:	68db      	ldr	r3, [r3, #12]
    21e2:	4618      	mov	r0, r3
    21e4:	f005 f86c 	bl	72c0 <BitIoLdd4_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:261
	} else {

	}
	if(JOY_PUSH_GetVal() == 0) {
    21e8:	4b0f      	ldr	r3, [pc, #60]	; (2228 <testJoystick+0x390>)
    21ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    21ec:	4618      	mov	r0, r3
    21ee:	f004 f9c3 	bl	6578 <BitIoLdd20_GetVal>
    21f2:	4603      	mov	r3, r0
    21f4:	f083 0301 	eor.w	r3, r3, #1
    21f8:	b2db      	uxtb	r3, r3
    21fa:	2b00      	cmp	r3, #0
    21fc:	d00b      	beq.n	2216 <testJoystick+0x37e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:262
		LED_GREEN_F_R_On();
    21fe:	4b0a      	ldr	r3, [pc, #40]	; (2228 <testJoystick+0x390>)
    2200:	695b      	ldr	r3, [r3, #20]
    2202:	4618      	mov	r0, r3
    2204:	f005 f9d6 	bl	75b4 <BitIoLdd6_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:263
		LED_GREEN_F_L_On();
    2208:	4b07      	ldr	r3, [pc, #28]	; (2228 <testJoystick+0x390>)
    220a:	689b      	ldr	r3, [r3, #8]
    220c:	4618      	mov	r0, r3
    220e:	f004 fcbd 	bl	6b8c <BitIoLdd3_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:264
		printSaveData();
    2212:	f001 fce3 	bl	3bdc <printSaveData>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:275
		//printSaveControllerData();
//		calcENC_data(&encData);
//		resetPosition();
#endif
	}
}
    2216:	f507 7773 	add.w	r7, r7, #972	; 0x3cc
    221a:	46bd      	mov	sp, r7
    221c:	bd90      	pop	{r4, r7, pc}
    221e:	bf00      	nop
    2220:	9999999a 	.word	0x9999999a
    2224:	400d9999 	.word	0x400d9999
    2228:	20000480 	.word	0x20000480
    222c:	00000000 	.word	0x00000000
    2230:	2000120c 	.word	0x2000120c
    2234:	20000de4 	.word	0x20000de4
    2238:	20000000 	.word	0x20000000
$t():
    223c:	f3af 8000 	nop.w

00002240 <Timer_1ms_Int>:
Timer_1ms_Int():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:289

	CLS_BLE_Init();

}

void Timer_1ms_Int(void){
    2240:	b580      	push	{r7, lr}
    2242:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:291

	ms_Flag = TRUE;
    2244:	4b09      	ldr	r3, [pc, #36]	; (226c <Timer_1ms_Int+0x2c>)
    2246:	2201      	movs	r2, #1
    2248:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:292
	if(PWR_SW_GetVal()){
    224a:	4b09      	ldr	r3, [pc, #36]	; (2270 <Timer_1ms_Int+0x30>)
    224c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    2250:	4618      	mov	r0, r3
    2252:	f004 fb7b 	bl	694c <BitIoLdd26_GetVal>
    2256:	4603      	mov	r3, r0
    2258:	2b00      	cmp	r3, #0
    225a:	d005      	beq.n	2268 <Timer_1ms_Int+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:293
		SYSOFF_SetVal();
    225c:	4b04      	ldr	r3, [pc, #16]	; (2270 <Timer_1ms_Int+0x30>)
    225e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
    2262:	4618      	mov	r0, r3
    2264:	f005 f8ec 	bl	7440 <BitIoLdd41_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:296
	}

}
    2268:	bd80      	pop	{r7, pc}
    226a:	bf00      	nop
    226c:	20000120 	.word	0x20000120
    2270:	20000480 	.word	0x20000480

00002274 <Init_GPIOs>:
Init_GPIOs():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:306

void clearMsFlag(void){
	ms_Flag = FALSE;
}

void Init_GPIOs(void){
    2274:	b580      	push	{r7, lr}
    2276:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:307
	SYSOFF_ClrVal();
    2278:	4b06      	ldr	r3, [pc, #24]	; (2294 <Init_GPIOs+0x20>)
    227a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
    227e:	4618      	mov	r0, r3
    2280:	f005 f8ce 	bl	7420 <BitIoLdd41_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:308
	BLE_RST_SetVal();
    2284:	4b03      	ldr	r3, [pc, #12]	; (2294 <Init_GPIOs+0x20>)
    2286:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
    228a:	4618      	mov	r0, r3
    228c:	f005 f878 	bl	7380 <BitIoLdd40_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:309
}
    2290:	bd80      	pop	{r7, pc}
    2292:	bf00      	nop
    2294:	20000480 	.word	0x20000480

00002298 <Init_Maze>:
Init_Maze():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:311

void Init_Maze(void){
    2298:	b480      	push	{r7}
    229a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:346

	MazeSegmentsToBeDriven.numberOfSegments = 25;


#else
	MazeSegmentsToBeDriven.segments[0].SingleSegment = 2;
    229c:	4b3a      	ldr	r3, [pc, #232]	; (2388 <Init_Maze+0xf0>)
    229e:	2202      	movs	r2, #2
    22a0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:347
	MazeSegmentsToBeDriven.segments[1].SingleSegment = 90;
    22a2:	4b39      	ldr	r3, [pc, #228]	; (2388 <Init_Maze+0xf0>)
    22a4:	225a      	movs	r2, #90	; 0x5a
    22a6:	619a      	str	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:348
	MazeSegmentsToBeDriven.segments[2].SingleSegment = 7;
    22a8:	4b37      	ldr	r3, [pc, #220]	; (2388 <Init_Maze+0xf0>)
    22aa:	2207      	movs	r2, #7
    22ac:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:349
	MazeSegmentsToBeDriven.segments[3].SingleSegment = 90;
    22ae:	4b36      	ldr	r3, [pc, #216]	; (2388 <Init_Maze+0xf0>)
    22b0:	225a      	movs	r2, #90	; 0x5a
    22b2:	649a      	str	r2, [r3, #72]	; 0x48
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:350
	MazeSegmentsToBeDriven.segments[4].SingleSegment = 7;
    22b4:	4b34      	ldr	r3, [pc, #208]	; (2388 <Init_Maze+0xf0>)
    22b6:	2207      	movs	r2, #7
    22b8:	661a      	str	r2, [r3, #96]	; 0x60
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:351
	MazeSegmentsToBeDriven.segments[5].SingleSegment = 90;
    22ba:	4b33      	ldr	r3, [pc, #204]	; (2388 <Init_Maze+0xf0>)
    22bc:	225a      	movs	r2, #90	; 0x5a
    22be:	679a      	str	r2, [r3, #120]	; 0x78
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:352
	MazeSegmentsToBeDriven.segments[6].SingleSegment = 6;
    22c0:	4b31      	ldr	r3, [pc, #196]	; (2388 <Init_Maze+0xf0>)
    22c2:	2206      	movs	r2, #6
    22c4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:353
	MazeSegmentsToBeDriven.segments[7].SingleSegment = 90;
    22c8:	4b2f      	ldr	r3, [pc, #188]	; (2388 <Init_Maze+0xf0>)
    22ca:	225a      	movs	r2, #90	; 0x5a
    22cc:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:354
	MazeSegmentsToBeDriven.segments[8].SingleSegment = 6;
    22d0:	4b2d      	ldr	r3, [pc, #180]	; (2388 <Init_Maze+0xf0>)
    22d2:	2206      	movs	r2, #6
    22d4:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:355
	MazeSegmentsToBeDriven.segments[9].SingleSegment = 90;
    22d8:	4b2b      	ldr	r3, [pc, #172]	; (2388 <Init_Maze+0xf0>)
    22da:	225a      	movs	r2, #90	; 0x5a
    22dc:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:356
	MazeSegmentsToBeDriven.segments[10].SingleSegment = 5;
    22e0:	4b29      	ldr	r3, [pc, #164]	; (2388 <Init_Maze+0xf0>)
    22e2:	2205      	movs	r2, #5
    22e4:	f8c3 20f0 	str.w	r2, [r3, #240]	; 0xf0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:357
	MazeSegmentsToBeDriven.segments[11].SingleSegment = 90;
    22e8:	4b27      	ldr	r3, [pc, #156]	; (2388 <Init_Maze+0xf0>)
    22ea:	225a      	movs	r2, #90	; 0x5a
    22ec:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:358
	MazeSegmentsToBeDriven.segments[12].SingleSegment = 5;
    22f0:	4b25      	ldr	r3, [pc, #148]	; (2388 <Init_Maze+0xf0>)
    22f2:	2205      	movs	r2, #5
    22f4:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:359
	MazeSegmentsToBeDriven.segments[13].SingleSegment = 90;
    22f8:	4b23      	ldr	r3, [pc, #140]	; (2388 <Init_Maze+0xf0>)
    22fa:	225a      	movs	r2, #90	; 0x5a
    22fc:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:360
	MazeSegmentsToBeDriven.segments[14].SingleSegment = 4;
    2300:	4b21      	ldr	r3, [pc, #132]	; (2388 <Init_Maze+0xf0>)
    2302:	2204      	movs	r2, #4
    2304:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:361
	MazeSegmentsToBeDriven.segments[15].SingleSegment = 90;
    2308:	4b1f      	ldr	r3, [pc, #124]	; (2388 <Init_Maze+0xf0>)
    230a:	225a      	movs	r2, #90	; 0x5a
    230c:	f8c3 2168 	str.w	r2, [r3, #360]	; 0x168
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:362
	MazeSegmentsToBeDriven.segments[16].SingleSegment = 4;
    2310:	4b1d      	ldr	r3, [pc, #116]	; (2388 <Init_Maze+0xf0>)
    2312:	2204      	movs	r2, #4
    2314:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:363
	MazeSegmentsToBeDriven.segments[17].SingleSegment = 90;
    2318:	4b1b      	ldr	r3, [pc, #108]	; (2388 <Init_Maze+0xf0>)
    231a:	225a      	movs	r2, #90	; 0x5a
    231c:	f8c3 2198 	str.w	r2, [r3, #408]	; 0x198
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:364
	MazeSegmentsToBeDriven.segments[18].SingleSegment = 3;
    2320:	4b19      	ldr	r3, [pc, #100]	; (2388 <Init_Maze+0xf0>)
    2322:	2203      	movs	r2, #3
    2324:	f8c3 21b0 	str.w	r2, [r3, #432]	; 0x1b0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:365
	MazeSegmentsToBeDriven.segments[19].SingleSegment = 90;
    2328:	4b17      	ldr	r3, [pc, #92]	; (2388 <Init_Maze+0xf0>)
    232a:	225a      	movs	r2, #90	; 0x5a
    232c:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:366
	MazeSegmentsToBeDriven.segments[20].SingleSegment = 3;
    2330:	4b15      	ldr	r3, [pc, #84]	; (2388 <Init_Maze+0xf0>)
    2332:	2203      	movs	r2, #3
    2334:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:367
	MazeSegmentsToBeDriven.segments[21].SingleSegment = 90;
    2338:	4b13      	ldr	r3, [pc, #76]	; (2388 <Init_Maze+0xf0>)
    233a:	225a      	movs	r2, #90	; 0x5a
    233c:	f8c3 21f8 	str.w	r2, [r3, #504]	; 0x1f8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:368
	MazeSegmentsToBeDriven.segments[22].SingleSegment = 2;
    2340:	4b11      	ldr	r3, [pc, #68]	; (2388 <Init_Maze+0xf0>)
    2342:	2202      	movs	r2, #2
    2344:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:369
	MazeSegmentsToBeDriven.segments[23].SingleSegment = 90;
    2348:	4b0f      	ldr	r3, [pc, #60]	; (2388 <Init_Maze+0xf0>)
    234a:	225a      	movs	r2, #90	; 0x5a
    234c:	f8c3 2228 	str.w	r2, [r3, #552]	; 0x228
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:370
	MazeSegmentsToBeDriven.segments[24].SingleSegment = 2;
    2350:	4b0d      	ldr	r3, [pc, #52]	; (2388 <Init_Maze+0xf0>)
    2352:	2202      	movs	r2, #2
    2354:	f8c3 2240 	str.w	r2, [r3, #576]	; 0x240
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:371
	MazeSegmentsToBeDriven.segments[25].SingleSegment = 90;
    2358:	4b0b      	ldr	r3, [pc, #44]	; (2388 <Init_Maze+0xf0>)
    235a:	225a      	movs	r2, #90	; 0x5a
    235c:	f8c3 2258 	str.w	r2, [r3, #600]	; 0x258
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:372
	MazeSegmentsToBeDriven.segments[26].SingleSegment = 1;
    2360:	4b09      	ldr	r3, [pc, #36]	; (2388 <Init_Maze+0xf0>)
    2362:	2201      	movs	r2, #1
    2364:	f8c3 2270 	str.w	r2, [r3, #624]	; 0x270
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:373
	MazeSegmentsToBeDriven.segments[27].SingleSegment = 90;
    2368:	4b07      	ldr	r3, [pc, #28]	; (2388 <Init_Maze+0xf0>)
    236a:	225a      	movs	r2, #90	; 0x5a
    236c:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:374
	MazeSegmentsToBeDriven.segments[28].SingleSegment = 1;
    2370:	4b05      	ldr	r3, [pc, #20]	; (2388 <Init_Maze+0xf0>)
    2372:	2201      	movs	r2, #1
    2374:	f8c3 22a0 	str.w	r2, [r3, #672]	; 0x2a0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:376

	MazeSegmentsToBeDriven.numberOfSegments = 1;
    2378:	4b03      	ldr	r3, [pc, #12]	; (2388 <Init_Maze+0xf0>)
    237a:	2201      	movs	r2, #1
    237c:	f883 23c0 	strb.w	r2, [r3, #960]	; 0x3c0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:379
	#endif

}
    2380:	46bd      	mov	sp, r7
    2382:	f85d 7b04 	ldr.w	r7, [sp], #4
    2386:	4770      	bx	lr
    2388:	20000e48 	.word	0x20000e48

0000238c <quadratureDecoder>:
quadratureDecoder():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:384



void quadratureDecoder(void)
{
    238c:	b480      	push	{r7}
    238e:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:386
	//using FTM1 as quadrature module, enable FTM0 and FTM1 clock
	SIM_SCGC6|= SIM_SCGC6_FTM1_MASK; //enable FTM0 and FTM1 module clock
    2390:	4975      	ldr	r1, [pc, #468]	; (2568 <quadratureDecoder+0x1dc>)
    2392:	4b75      	ldr	r3, [pc, #468]	; (2568 <quadratureDecoder+0x1dc>)
    2394:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    2398:	331c      	adds	r3, #28
    239a:	681b      	ldr	r3, [r3, #0]
    239c:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
    23a0:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    23a4:	331c      	adds	r3, #28
    23a6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:387
	FTM1_SC=0x00; //initialize the FTM1 module as quadrature mode
    23a8:	4b70      	ldr	r3, [pc, #448]	; (256c <quadratureDecoder+0x1e0>)
    23aa:	2200      	movs	r2, #0
    23ac:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:388
	FTM1_MODE|=0x05; //enable FTM1 module
    23ae:	4b6f      	ldr	r3, [pc, #444]	; (256c <quadratureDecoder+0x1e0>)
    23b0:	4a6e      	ldr	r2, [pc, #440]	; (256c <quadratureDecoder+0x1e0>)
    23b2:	6d52      	ldr	r2, [r2, #84]	; 0x54
    23b4:	f042 0205 	orr.w	r2, r2, #5
    23b8:	655a      	str	r2, [r3, #84]	; 0x54
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:389
	FTM1_SYNC |=FTM_SYNC_SWSYNC_MASK;
    23ba:	4b6c      	ldr	r3, [pc, #432]	; (256c <quadratureDecoder+0x1e0>)
    23bc:	4a6b      	ldr	r2, [pc, #428]	; (256c <quadratureDecoder+0x1e0>)
    23be:	6d92      	ldr	r2, [r2, #88]	; 0x58
    23c0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    23c4:	659a      	str	r2, [r3, #88]	; 0x58
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:390
	FTM1_CONF |= FTM_SYNCONF_CNTINC_MASK;
    23c6:	4b69      	ldr	r3, [pc, #420]	; (256c <quadratureDecoder+0x1e0>)
    23c8:	4a68      	ldr	r2, [pc, #416]	; (256c <quadratureDecoder+0x1e0>)
    23ca:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
    23ce:	f042 0204 	orr.w	r2, r2, #4
    23d2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:391
	FTM1_SC |= FTM_SC_PS(0);
    23d6:	4b65      	ldr	r3, [pc, #404]	; (256c <quadratureDecoder+0x1e0>)
    23d8:	4a64      	ldr	r2, [pc, #400]	; (256c <quadratureDecoder+0x1e0>)
    23da:	6812      	ldr	r2, [r2, #0]
    23dc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:392
	FTM1_CONF |= (FTM_CONF_BDMMODE(3));
    23de:	4b63      	ldr	r3, [pc, #396]	; (256c <quadratureDecoder+0x1e0>)
    23e0:	4a62      	ldr	r2, [pc, #392]	; (256c <quadratureDecoder+0x1e0>)
    23e2:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
    23e6:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
    23ea:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:393
	FTM1_CONF &= ~FTM_CONF_GTBEEN_MASK;
    23ee:	4b5f      	ldr	r3, [pc, #380]	; (256c <quadratureDecoder+0x1e0>)
    23f0:	4a5e      	ldr	r2, [pc, #376]	; (256c <quadratureDecoder+0x1e0>)
    23f2:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
    23f6:	f422 7200 	bic.w	r2, r2, #512	; 0x200
    23fa:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:394
	FTM1_OUTINIT = 0;
    23fe:	4b5b      	ldr	r3, [pc, #364]	; (256c <quadratureDecoder+0x1e0>)
    2400:	2200      	movs	r2, #0
    2402:	65da      	str	r2, [r3, #92]	; 0x5c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:395
	FTM1_POL = 0;
    2404:	4b59      	ldr	r3, [pc, #356]	; (256c <quadratureDecoder+0x1e0>)
    2406:	2200      	movs	r2, #0
    2408:	671a      	str	r2, [r3, #112]	; 0x70
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:396
	FTM1_EXTTRIG = 0;
    240a:	4b58      	ldr	r3, [pc, #352]	; (256c <quadratureDecoder+0x1e0>)
    240c:	2200      	movs	r2, #0
    240e:	66da      	str	r2, [r3, #108]	; 0x6c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:397
	FTM1_CNTIN=0x00;
    2410:	4b56      	ldr	r3, [pc, #344]	; (256c <quadratureDecoder+0x1e0>)
    2412:	2200      	movs	r2, #0
    2414:	64da      	str	r2, [r3, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:398
	FTM1_CNT = 0;
    2416:	4b55      	ldr	r3, [pc, #340]	; (256c <quadratureDecoder+0x1e0>)
    2418:	2200      	movs	r2, #0
    241a:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:399
	FTM1_MOD=65535;
    241c:	4b53      	ldr	r3, [pc, #332]	; (256c <quadratureDecoder+0x1e0>)
    241e:	f64f 72ff 	movw	r2, #65535	; 0xffff
    2422:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:400
	FTM1_CNT = 0;
    2424:	4b51      	ldr	r3, [pc, #324]	; (256c <quadratureDecoder+0x1e0>)
    2426:	2200      	movs	r2, #0
    2428:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:401
	FTM1_QDCTRL &=~(FTM_QDCTRL_QUADMODE_MASK | FTM_QDCTRL_PHBPOL_MASK);
    242a:	4b50      	ldr	r3, [pc, #320]	; (256c <quadratureDecoder+0x1e0>)
    242c:	4a4f      	ldr	r2, [pc, #316]	; (256c <quadratureDecoder+0x1e0>)
    242e:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
    2432:	f022 0218 	bic.w	r2, r2, #24
    2436:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:402
	FTM1_QDCTRL |=(FTM_QDCTRL_PHAPOL_MASK);
    243a:	4b4c      	ldr	r3, [pc, #304]	; (256c <quadratureDecoder+0x1e0>)
    243c:	4a4b      	ldr	r2, [pc, #300]	; (256c <quadratureDecoder+0x1e0>)
    243e:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
    2442:	f042 0220 	orr.w	r2, r2, #32
    2446:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:403
	FTM1_QDCTRL |=FTM_QDCTRL_QUADEN_MASK; //enable quadrature mode
    244a:	4b48      	ldr	r3, [pc, #288]	; (256c <quadratureDecoder+0x1e0>)
    244c:	4a47      	ldr	r2, [pc, #284]	; (256c <quadratureDecoder+0x1e0>)
    244e:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
    2452:	f042 0201 	orr.w	r2, r2, #1
    2456:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:404
	FTM1_SC |= FTM_SC_TOIE_MASK; //enable counter overflow interrupt
    245a:	4b44      	ldr	r3, [pc, #272]	; (256c <quadratureDecoder+0x1e0>)
    245c:	4a43      	ldr	r2, [pc, #268]	; (256c <quadratureDecoder+0x1e0>)
    245e:	6812      	ldr	r2, [r2, #0]
    2460:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    2464:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:407
	  //NVICIP43 = NVIC_IP_PRI43(32);
	  //NVICISER1 |= NVIC_ISER_SETENA((1<<11));
	  FTM1_SC |= FTM_SC_CLKS(1);
    2466:	4b41      	ldr	r3, [pc, #260]	; (256c <quadratureDecoder+0x1e0>)
    2468:	4a40      	ldr	r2, [pc, #256]	; (256c <quadratureDecoder+0x1e0>)
    246a:	6812      	ldr	r2, [r2, #0]
    246c:	f042 0208 	orr.w	r2, r2, #8
    2470:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:410


	SIM_SCGC6|= SIM_SCGC6_FTM2_MASK; //enable FTM0 and FTM1 module clock
    2472:	493d      	ldr	r1, [pc, #244]	; (2568 <quadratureDecoder+0x1dc>)
    2474:	4b3c      	ldr	r3, [pc, #240]	; (2568 <quadratureDecoder+0x1dc>)
    2476:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    247a:	331c      	adds	r3, #28
    247c:	681b      	ldr	r3, [r3, #0]
    247e:	f043 6280 	orr.w	r2, r3, #67108864	; 0x4000000
    2482:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    2486:	331c      	adds	r3, #28
    2488:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:411
	FTM2_SC=0x00; //initialize the FTM1 module as quadrature mode
    248a:	4b39      	ldr	r3, [pc, #228]	; (2570 <quadratureDecoder+0x1e4>)
    248c:	2200      	movs	r2, #0
    248e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:412
	FTM2_MODE|=0x05; //enable FTM1 module
    2490:	4b37      	ldr	r3, [pc, #220]	; (2570 <quadratureDecoder+0x1e4>)
    2492:	4a37      	ldr	r2, [pc, #220]	; (2570 <quadratureDecoder+0x1e4>)
    2494:	6d52      	ldr	r2, [r2, #84]	; 0x54
    2496:	f042 0205 	orr.w	r2, r2, #5
    249a:	655a      	str	r2, [r3, #84]	; 0x54
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:413
	FTM2_SYNC |=FTM_SYNC_SWSYNC_MASK;
    249c:	4b34      	ldr	r3, [pc, #208]	; (2570 <quadratureDecoder+0x1e4>)
    249e:	4a34      	ldr	r2, [pc, #208]	; (2570 <quadratureDecoder+0x1e4>)
    24a0:	6d92      	ldr	r2, [r2, #88]	; 0x58
    24a2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    24a6:	659a      	str	r2, [r3, #88]	; 0x58
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:414
	FTM2_CONF |= FTM_SYNCONF_CNTINC_MASK;
    24a8:	4b31      	ldr	r3, [pc, #196]	; (2570 <quadratureDecoder+0x1e4>)
    24aa:	4a31      	ldr	r2, [pc, #196]	; (2570 <quadratureDecoder+0x1e4>)
    24ac:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
    24b0:	f042 0204 	orr.w	r2, r2, #4
    24b4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:415
	FTM2_SC |= FTM_SC_PS(0);
    24b8:	4b2d      	ldr	r3, [pc, #180]	; (2570 <quadratureDecoder+0x1e4>)
    24ba:	4a2d      	ldr	r2, [pc, #180]	; (2570 <quadratureDecoder+0x1e4>)
    24bc:	6812      	ldr	r2, [r2, #0]
    24be:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:416
	FTM2_CONF |= (FTM_CONF_BDMMODE(3));
    24c0:	4b2b      	ldr	r3, [pc, #172]	; (2570 <quadratureDecoder+0x1e4>)
    24c2:	4a2b      	ldr	r2, [pc, #172]	; (2570 <quadratureDecoder+0x1e4>)
    24c4:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
    24c8:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
    24cc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:417
	FTM2_CONF &= ~FTM_CONF_GTBEEN_MASK;
    24d0:	4b27      	ldr	r3, [pc, #156]	; (2570 <quadratureDecoder+0x1e4>)
    24d2:	4a27      	ldr	r2, [pc, #156]	; (2570 <quadratureDecoder+0x1e4>)
    24d4:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
    24d8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
    24dc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:418
	FTM2_OUTINIT = 0;
    24e0:	4b23      	ldr	r3, [pc, #140]	; (2570 <quadratureDecoder+0x1e4>)
    24e2:	2200      	movs	r2, #0
    24e4:	65da      	str	r2, [r3, #92]	; 0x5c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:419
	FTM2_POL = 0;
    24e6:	4b22      	ldr	r3, [pc, #136]	; (2570 <quadratureDecoder+0x1e4>)
    24e8:	2200      	movs	r2, #0
    24ea:	671a      	str	r2, [r3, #112]	; 0x70
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:420
	FTM2_EXTTRIG = 0;
    24ec:	4b20      	ldr	r3, [pc, #128]	; (2570 <quadratureDecoder+0x1e4>)
    24ee:	2200      	movs	r2, #0
    24f0:	66da      	str	r2, [r3, #108]	; 0x6c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:421
	FTM2_CNTIN=0x00;
    24f2:	4b1f      	ldr	r3, [pc, #124]	; (2570 <quadratureDecoder+0x1e4>)
    24f4:	2200      	movs	r2, #0
    24f6:	64da      	str	r2, [r3, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:422
	FTM2_CNT = 0;
    24f8:	4b1d      	ldr	r3, [pc, #116]	; (2570 <quadratureDecoder+0x1e4>)
    24fa:	2200      	movs	r2, #0
    24fc:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:423
	FTM2_MOD=65535;
    24fe:	4b1c      	ldr	r3, [pc, #112]	; (2570 <quadratureDecoder+0x1e4>)
    2500:	f64f 72ff 	movw	r2, #65535	; 0xffff
    2504:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:424
	FTM2_CNT = 0;
    2506:	4b1a      	ldr	r3, [pc, #104]	; (2570 <quadratureDecoder+0x1e4>)
    2508:	2200      	movs	r2, #0
    250a:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:425
	FTM2_QDCTRL &=~(FTM_QDCTRL_QUADMODE_MASK | FTM_QDCTRL_PHBPOL_MASK);
    250c:	4b18      	ldr	r3, [pc, #96]	; (2570 <quadratureDecoder+0x1e4>)
    250e:	4a18      	ldr	r2, [pc, #96]	; (2570 <quadratureDecoder+0x1e4>)
    2510:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
    2514:	f022 0218 	bic.w	r2, r2, #24
    2518:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:426
	FTM2_QDCTRL |=(FTM_QDCTRL_PHAPOL_MASK);
    251c:	4b14      	ldr	r3, [pc, #80]	; (2570 <quadratureDecoder+0x1e4>)
    251e:	4a14      	ldr	r2, [pc, #80]	; (2570 <quadratureDecoder+0x1e4>)
    2520:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
    2524:	f042 0220 	orr.w	r2, r2, #32
    2528:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:427
	FTM2_QDCTRL |=FTM_QDCTRL_QUADEN_MASK; //enable quadrature mode
    252c:	4b10      	ldr	r3, [pc, #64]	; (2570 <quadratureDecoder+0x1e4>)
    252e:	4a10      	ldr	r2, [pc, #64]	; (2570 <quadratureDecoder+0x1e4>)
    2530:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
    2534:	f042 0201 	orr.w	r2, r2, #1
    2538:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:428
	FTM2_SC |= FTM_SC_TOIE_MASK; //enable counter overflow interrupt
    253c:	4b0c      	ldr	r3, [pc, #48]	; (2570 <quadratureDecoder+0x1e4>)
    253e:	4a0c      	ldr	r2, [pc, #48]	; (2570 <quadratureDecoder+0x1e4>)
    2540:	6812      	ldr	r2, [r2, #0]
    2542:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    2546:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:431
	//NVICIP44 = NVIC_IP_PRI44(0x40);
	//NVICISER1 |= NVIC_ISER_SETENA((1<<12));
	FTM2_SC |= FTM_SC_CLKS(1);
    2548:	4b09      	ldr	r3, [pc, #36]	; (2570 <quadratureDecoder+0x1e4>)
    254a:	4a09      	ldr	r2, [pc, #36]	; (2570 <quadratureDecoder+0x1e4>)
    254c:	6812      	ldr	r2, [r2, #0]
    254e:	f042 0208 	orr.w	r2, r2, #8
    2552:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:432
	FTM1_CNT =0;
    2554:	4b05      	ldr	r3, [pc, #20]	; (256c <quadratureDecoder+0x1e0>)
    2556:	2200      	movs	r2, #0
    2558:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:433
	FTM2_CNT =0;
    255a:	4b05      	ldr	r3, [pc, #20]	; (2570 <quadratureDecoder+0x1e4>)
    255c:	2200      	movs	r2, #0
    255e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:434
}
    2560:	46bd      	mov	sp, r7
    2562:	f85d 7b04 	ldr.w	r7, [sp], #4
    2566:	4770      	bx	lr
    2568:	40047000 	.word	0x40047000
    256c:	40039000 	.word	0x40039000
    2570:	4003a000 	.word	0x4003a000
$d():
    2574:	00000000 	.word	0x00000000

00002578 <APP_Start>:
APP_Start():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:436

void APP_Start(void) {
    2578:	b590      	push	{r4, r7, lr}
    257a:	f5ad 7d6f 	sub.w	sp, sp, #956	; 0x3bc
    257e:	afee      	add	r7, sp, #952	; 0x3b8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:437
	Init_GPIOs();
    2580:	f7ff fe78 	bl	2274 <Init_GPIOs>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:438
	WAIT1_Waitms(500);
    2584:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
    2588:	f007 fa26 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:440
	for(;;){
		if(initIMU()){
    258c:	f001 f820 	bl	35d0 <initIMU>
    2590:	4603      	mov	r3, r0
    2592:	2b00      	cmp	r3, #0
    2594:	f000 80ba 	beq.w	270c <APP_Start+0x194>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:441
			quadratureDecoder();
    2598:	f7ff fef8 	bl	238c <quadratureDecoder>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:442
			LED_RED_F_R_Off();
    259c:	4b64      	ldr	r3, [pc, #400]	; (2730 <APP_Start+0x1b8>)
    259e:	691b      	ldr	r3, [r3, #16]
    25a0:	4618      	mov	r0, r3
    25a2:	f004 ffab 	bl	74fc <BitIoLdd5_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:443
			LED_RED_F_L_Off();
    25a6:	4b62      	ldr	r3, [pc, #392]	; (2730 <APP_Start+0x1b8>)
    25a8:	685b      	ldr	r3, [r3, #4]
    25aa:	4618      	mov	r0, r3
    25ac:	f003 ff9a 	bl	64e4 <BitIoLdd2_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:444
			LED_GREEN_F_R_On();
    25b0:	4b5f      	ldr	r3, [pc, #380]	; (2730 <APP_Start+0x1b8>)
    25b2:	695b      	ldr	r3, [r3, #20]
    25b4:	4618      	mov	r0, r3
    25b6:	f004 fffd 	bl	75b4 <BitIoLdd6_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:445
			LED_GREEN_F_L_On();
    25ba:	4b5d      	ldr	r3, [pc, #372]	; (2730 <APP_Start+0x1b8>)
    25bc:	689b      	ldr	r3, [r3, #8]
    25be:	4618      	mov	r0, r3
    25c0:	f004 fae4 	bl	6b8c <BitIoLdd3_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:446
		  if(get_half_U_Bat()> 3.7){
    25c4:	f7ff fbd8 	bl	1d78 <get_half_U_Bat>
    25c8:	ee10 3a10 	vmov	r3, s0
    25cc:	4618      	mov	r0, r3
    25ce:	f7fe f8e7 	bl	7a0 <__aeabi_f2d>
    25d2:	4602      	mov	r2, r0
    25d4:	460b      	mov	r3, r1
    25d6:	4610      	mov	r0, r2
    25d8:	4619      	mov	r1, r3
    25da:	a353      	add	r3, pc, #332	; (adr r3, 2728 <APP_Start+0x1b0>)
    25dc:	e9d3 2300 	ldrd	r2, r3, [r3]
    25e0:	f7fe fbc2 	bl	d68 <__aeabi_dcmpgt>
    25e4:	4603      	mov	r3, r0
    25e6:	2b00      	cmp	r3, #0
    25e8:	f000 8081 	beq.w	26ee <APP_Start+0x176>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:448
			  for(;;) {
				if(!PWR_SW_GetVal()){
    25ec:	4b50      	ldr	r3, [pc, #320]	; (2730 <APP_Start+0x1b8>)
    25ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    25f2:	4618      	mov	r0, r3
    25f4:	f004 f9aa 	bl	694c <BitIoLdd26_GetVal>
    25f8:	4603      	mov	r3, r0
    25fa:	f083 0301 	eor.w	r3, r3, #1
    25fe:	b2db      	uxtb	r3, r3
    2600:	2b00      	cmp	r3, #0
    2602:	d06d      	beq.n	26e0 <APP_Start+0x168>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:449
					testJoystick();
    2604:	f7ff fc48 	bl	1e98 <testJoystick>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:450
						if(ms_Flag){
    2608:	4b4a      	ldr	r3, [pc, #296]	; (2734 <APP_Start+0x1bc>)
    260a:	781b      	ldrb	r3, [r3, #0]
    260c:	2b00      	cmp	r3, #0
    260e:	d062      	beq.n	26d6 <APP_Start+0x15e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:451
							if(exploFinishFlag){
    2610:	4b49      	ldr	r3, [pc, #292]	; (2738 <APP_Start+0x1c0>)
    2612:	781b      	ldrb	r3, [r3, #0]
    2614:	2b00      	cmp	r3, #0
    2616:	d052      	beq.n	26be <APP_Start+0x146>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:452
								if(Driving(MazeSegmentsToBeDriven)){
    2618:	4c48      	ldr	r4, [pc, #288]	; (273c <APP_Start+0x1c4>)
    261a:	4669      	mov	r1, sp
    261c:	f104 0210 	add.w	r2, r4, #16
    2620:	f44f 736d 	mov.w	r3, #948	; 0x3b4
    2624:	4608      	mov	r0, r1
    2626:	4611      	mov	r1, r2
    2628:	461a      	mov	r2, r3
    262a:	f00b f90b 	bl	d844 <memcpy>
    262e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
    2632:	f007 f9f5 	bl	9a20 <Driving>
    2636:	4603      	mov	r3, r0
    2638:	2b00      	cmp	r3, #0
    263a:	d03c      	beq.n	26b6 <APP_Start+0x13e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:453
									Distance_INT_DisableEvent();
    263c:	4b3c      	ldr	r3, [pc, #240]	; (2730 <APP_Start+0x1b8>)
    263e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    2640:	4618      	mov	r0, r3
    2642:	2100      	movs	r1, #0
    2644:	f006 fe42 	bl	92cc <TimerIntLdd1_SetEventMask>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:454
									set_VREF(0,0);
    2648:	ed9f 0a3d 	vldr	s0, [pc, #244]	; 2740 <APP_Start+0x1c8>
    264c:	eddf 0a3c 	vldr	s1, [pc, #240]	; 2740 <APP_Start+0x1c8>
    2650:	f001 fd22 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:455
									deinitMotors();
    2654:	f001 fce0 	bl	4018 <deinitMotors>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:456
									LED_GREEN_F_R_Off();
    2658:	4b35      	ldr	r3, [pc, #212]	; (2730 <APP_Start+0x1b8>)
    265a:	695b      	ldr	r3, [r3, #20]
    265c:	4618      	mov	r0, r3
    265e:	f004 ffb7 	bl	75d0 <BitIoLdd6_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:457
									LED_GREEN_F_L_Off();
    2662:	4b33      	ldr	r3, [pc, #204]	; (2730 <APP_Start+0x1b8>)
    2664:	689b      	ldr	r3, [r3, #8]
    2666:	4618      	mov	r0, r3
    2668:	f004 faa0 	bl	6bac <BitIoLdd3_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:458
									LED_RED_F_R_Off();
    266c:	4b30      	ldr	r3, [pc, #192]	; (2730 <APP_Start+0x1b8>)
    266e:	691b      	ldr	r3, [r3, #16]
    2670:	4618      	mov	r0, r3
    2672:	f004 ff43 	bl	74fc <BitIoLdd5_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:459
									LED_RED_F_L_Off();
    2676:	4b2e      	ldr	r3, [pc, #184]	; (2730 <APP_Start+0x1b8>)
    2678:	685b      	ldr	r3, [r3, #4]
    267a:	4618      	mov	r0, r3
    267c:	f003 ff32 	bl	64e4 <BitIoLdd2_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:460
									ms_Flag = FALSE;
    2680:	4b2c      	ldr	r3, [pc, #176]	; (2734 <APP_Start+0x1bc>)
    2682:	2200      	movs	r2, #0
    2684:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:461
									I_LED_R_ClrVal();I_LED_L_ClrVal();I_LED_MR_ClrVal();I_LED_ML_ClrVal(); // turn IR leds off
    2686:	4b2a      	ldr	r3, [pc, #168]	; (2730 <APP_Start+0x1b8>)
    2688:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
    268c:	4618      	mov	r0, r3
    268e:	f004 fd77 	bl	7180 <BitIoLdd38_ClrVal>
    2692:	4b27      	ldr	r3, [pc, #156]	; (2730 <APP_Start+0x1b8>)
    2694:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    2698:	4618      	mov	r0, r3
    269a:	f004 fc51 	bl	6f40 <BitIoLdd35_ClrVal>
    269e:	4b24      	ldr	r3, [pc, #144]	; (2730 <APP_Start+0x1b8>)
    26a0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
    26a4:	4618      	mov	r0, r3
    26a6:	f004 fd0b 	bl	70c0 <BitIoLdd37_ClrVal>
    26aa:	4b21      	ldr	r3, [pc, #132]	; (2730 <APP_Start+0x1b8>)
    26ac:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    26b0:	4618      	mov	r0, r3
    26b2:	f004 fca5 	bl	7000 <BitIoLdd36_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:463
								}
									ms_Flag = FALSE;
    26b6:	4b1f      	ldr	r3, [pc, #124]	; (2734 <APP_Start+0x1bc>)
    26b8:	2200      	movs	r2, #0
    26ba:	701a      	strb	r2, [r3, #0]
    26bc:	e00b      	b.n	26d6 <APP_Start+0x15e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:466
							}
							else{
								calcADC_data(&adcData);
    26be:	4821      	ldr	r0, [pc, #132]	; (2744 <APP_Start+0x1cc>)
    26c0:	f7fe ff3a 	bl	1538 <calcADC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:467
								calcENC_data(&encData);
    26c4:	4820      	ldr	r0, [pc, #128]	; (2748 <APP_Start+0x1d0>)
    26c6:	f000 f847 	bl	2758 <calcENC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:468
								calcIMU_data(&imuData);
    26ca:	4820      	ldr	r0, [pc, #128]	; (274c <APP_Start+0x1d4>)
    26cc:	f001 f99c 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:471
								//getSensors();
								//Run_PID();
								ms_Flag = FALSE;
    26d0:	4b18      	ldr	r3, [pc, #96]	; (2734 <APP_Start+0x1bc>)
    26d2:	2200      	movs	r2, #0
    26d4:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:474 (discriminator 1)
							}
						}
						EVNT_HandleEvent(APP_EventHandler,TRUE);
    26d6:	481e      	ldr	r0, [pc, #120]	; (2750 <APP_Start+0x1d8>)
    26d8:	2101      	movs	r1, #1
    26da:	f000 f977 	bl	29cc <EVNT_HandleEvent>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:482 (discriminator 1)
//						LED_RED_F_R_On();
//						LED_RED_F_L_On();
//						LED_GREEN_F_R_On();
//						LED_GREEN_F_L_On();
				}
			}
    26de:	e785      	b.n	25ec <APP_Start+0x74>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:476
								ms_Flag = FALSE;
							}
						}
						EVNT_HandleEvent(APP_EventHandler,TRUE);
				 }else{
						SYSOFF_SetVal();
    26e0:	4b13      	ldr	r3, [pc, #76]	; (2730 <APP_Start+0x1b8>)
    26e2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
    26e6:	4618      	mov	r0, r3
    26e8:	f004 feaa 	bl	7440 <BitIoLdd41_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:482
//						LED_RED_F_R_On();
//						LED_RED_F_L_On();
//						LED_GREEN_F_R_On();
//						LED_GREEN_F_L_On();
				}
			}
    26ec:	e77e      	b.n	25ec <APP_Start+0x74>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:484
		  }else{
			BAT_LOW_ClrVal();
    26ee:	4b10      	ldr	r3, [pc, #64]	; (2730 <APP_Start+0x1b8>)
    26f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    26f4:	4618      	mov	r0, r3
    26f6:	f004 f9fb 	bl	6af0 <BitIoLdd29_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:485
			set_VREF(0,0);
    26fa:	ed9f 0a11 	vldr	s0, [pc, #68]	; 2740 <APP_Start+0x1c8>
    26fe:	eddf 0a10 	vldr	s1, [pc, #64]	; 2740 <APP_Start+0x1c8>
    2702:	f001 fcc9 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:486
			deinitMotors();
    2706:	f001 fc87 	bl	4018 <deinitMotors>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:493
		}
		else{
			LED_RED_F_R_On();
			LED_RED_F_L_On();
		}
	}
    270a:	e73f      	b.n	258c <APP_Start+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:490
			set_VREF(0,0);
			deinitMotors();
		  }
		}
		else{
			LED_RED_F_R_On();
    270c:	4b08      	ldr	r3, [pc, #32]	; (2730 <APP_Start+0x1b8>)
    270e:	691b      	ldr	r3, [r3, #16]
    2710:	4618      	mov	r0, r3
    2712:	f004 fee5 	bl	74e0 <BitIoLdd5_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:491
			LED_RED_F_L_On();
    2716:	4b06      	ldr	r3, [pc, #24]	; (2730 <APP_Start+0x1b8>)
    2718:	685b      	ldr	r3, [r3, #4]
    271a:	4618      	mov	r0, r3
    271c:	f003 fed2 	bl	64c4 <BitIoLdd2_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Application.c:493
		}
	}
    2720:	e734      	b.n	258c <APP_Start+0x14>
    2722:	bf00      	nop
    2724:	f3af 8000 	nop.w
    2728:	9999999a 	.word	0x9999999a
    272c:	400d9999 	.word	0x400d9999
    2730:	20000480 	.word	0x20000480
    2734:	20000120 	.word	0x20000120
    2738:	20000000 	.word	0x20000000
    273c:	20000e48 	.word	0x20000e48
    2740:	00000000 	.word	0x00000000
    2744:	2000120c 	.word	0x2000120c
    2748:	20000e30 	.word	0x20000e30
    274c:	20000de4 	.word	0x20000de4
    2750:	00001dd1 	.word	0x00001dd1
$t():
    2754:	f3af 8000 	nop.w

00002758 <calcENC_data>:
calcENC_data():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:21

/**
 *
 */
void calcENC_data(Encoder_data_t *pData)
{
    2758:	b580      	push	{r7, lr}
    275a:	b082      	sub	sp, #8
    275c:	af00      	add	r7, sp, #0
    275e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:23

	pData->raw_Values.posR = FTM1_CNT;
    2760:	4b80      	ldr	r3, [pc, #512]	; (2964 <calcENC_data+0x20c>)
    2762:	685b      	ldr	r3, [r3, #4]
    2764:	b29a      	uxth	r2, r3
    2766:	687b      	ldr	r3, [r7, #4]
    2768:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:24
	pData->raw_Values.posL = -1*FTM2_CNT;
    276a:	4b7f      	ldr	r3, [pc, #508]	; (2968 <calcENC_data+0x210>)
    276c:	685b      	ldr	r3, [r3, #4]
    276e:	b29b      	uxth	r3, r3
    2770:	425b      	negs	r3, r3
    2772:	b29b      	uxth	r3, r3
    2774:	b29a      	uxth	r2, r3
    2776:	687b      	ldr	r3, [r7, #4]
    2778:	805a      	strh	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:25
	pData->raw_Values.posR =(int16_t)(pData->raw_Values.posR*0.25);
    277a:	687b      	ldr	r3, [r7, #4]
    277c:	881b      	ldrh	r3, [r3, #0]
    277e:	b21b      	sxth	r3, r3
    2780:	4618      	mov	r0, r3
    2782:	f7fd fffb 	bl	77c <__aeabi_i2d>
    2786:	4602      	mov	r2, r0
    2788:	460b      	mov	r3, r1
    278a:	4610      	mov	r0, r2
    278c:	4619      	mov	r1, r3
    278e:	f04f 0200 	mov.w	r2, #0
    2792:	4b76      	ldr	r3, [pc, #472]	; (296c <calcENC_data+0x214>)
    2794:	f7fe f858 	bl	848 <__aeabi_dmul>
    2798:	4602      	mov	r2, r0
    279a:	460b      	mov	r3, r1
    279c:	4610      	mov	r0, r2
    279e:	4619      	mov	r1, r3
    27a0:	f7fe faec 	bl	d7c <__aeabi_d2iz>
    27a4:	4603      	mov	r3, r0
    27a6:	b29a      	uxth	r2, r3
    27a8:	687b      	ldr	r3, [r7, #4]
    27aa:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:26
	pData->raw_Values.posL = (int16_t)(pData->raw_Values.posL*0.25);
    27ac:	687b      	ldr	r3, [r7, #4]
    27ae:	885b      	ldrh	r3, [r3, #2]
    27b0:	b21b      	sxth	r3, r3
    27b2:	4618      	mov	r0, r3
    27b4:	f7fd ffe2 	bl	77c <__aeabi_i2d>
    27b8:	4602      	mov	r2, r0
    27ba:	460b      	mov	r3, r1
    27bc:	4610      	mov	r0, r2
    27be:	4619      	mov	r1, r3
    27c0:	f04f 0200 	mov.w	r2, #0
    27c4:	4b69      	ldr	r3, [pc, #420]	; (296c <calcENC_data+0x214>)
    27c6:	f7fe f83f 	bl	848 <__aeabi_dmul>
    27ca:	4602      	mov	r2, r0
    27cc:	460b      	mov	r3, r1
    27ce:	4610      	mov	r0, r2
    27d0:	4619      	mov	r1, r3
    27d2:	f7fe fad3 	bl	d7c <__aeabi_d2iz>
    27d6:	4603      	mov	r3, r0
    27d8:	b29a      	uxth	r2, r3
    27da:	687b      	ldr	r3, [r7, #4]
    27dc:	805a      	strh	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:27
	if((pData->raw_Values.posR > 7500) || (pData->raw_Values.posL > 7500)){
    27de:	687b      	ldr	r3, [r7, #4]
    27e0:	881b      	ldrh	r3, [r3, #0]
    27e2:	b21a      	sxth	r2, r3
    27e4:	f641 534c 	movw	r3, #7500	; 0x1d4c
    27e8:	429a      	cmp	r2, r3
    27ea:	dc06      	bgt.n	27fa <calcENC_data+0xa2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:27 (discriminator 1)
    27ec:	687b      	ldr	r3, [r7, #4]
    27ee:	885b      	ldrh	r3, [r3, #2]
    27f0:	b21a      	sxth	r2, r3
    27f2:	f641 534c 	movw	r3, #7500	; 0x1d4c
    27f6:	429a      	cmp	r2, r3
    27f8:	dd3d      	ble.n	2876 <calcENC_data+0x11e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:28
		FTM1_CNT=0;
    27fa:	4b5a      	ldr	r3, [pc, #360]	; (2964 <calcENC_data+0x20c>)
    27fc:	2200      	movs	r2, #0
    27fe:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:29
		FTM2_CNT=0;
    2800:	4b59      	ldr	r3, [pc, #356]	; (2968 <calcENC_data+0x210>)
    2802:	2200      	movs	r2, #0
    2804:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:30
		pData->uint_Values.m_posR = pData->uint_Values.m_posR+(pData->raw_Values.posR-pData->raw_Values.posR_old) * STEPS_TO_METER;
    2806:	687b      	ldr	r3, [r7, #4]
    2808:	ed93 7a02 	vldr	s14, [r3, #8]
    280c:	687b      	ldr	r3, [r7, #4]
    280e:	881b      	ldrh	r3, [r3, #0]
    2810:	b21a      	sxth	r2, r3
    2812:	687b      	ldr	r3, [r7, #4]
    2814:	889b      	ldrh	r3, [r3, #4]
    2816:	b21b      	sxth	r3, r3
    2818:	1ad3      	subs	r3, r2, r3
    281a:	ee07 3a90 	vmov	s15, r3
    281e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    2822:	eddf 7a53 	vldr	s15, [pc, #332]	; 2970 <calcENC_data+0x218>
    2826:	ee66 7aa7 	vmul.f32	s15, s13, s15
    282a:	ee77 7a27 	vadd.f32	s15, s14, s15
    282e:	687b      	ldr	r3, [r7, #4]
    2830:	edc3 7a02 	vstr	s15, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:31
		pData->uint_Values.m_posL = pData->uint_Values.m_posL+(pData->raw_Values.posL-pData->raw_Values.posL_old) * STEPS_TO_METER;
    2834:	687b      	ldr	r3, [r7, #4]
    2836:	ed93 7a03 	vldr	s14, [r3, #12]
    283a:	687b      	ldr	r3, [r7, #4]
    283c:	885b      	ldrh	r3, [r3, #2]
    283e:	b21a      	sxth	r2, r3
    2840:	687b      	ldr	r3, [r7, #4]
    2842:	88db      	ldrh	r3, [r3, #6]
    2844:	b21b      	sxth	r3, r3
    2846:	1ad3      	subs	r3, r2, r3
    2848:	ee07 3a90 	vmov	s15, r3
    284c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    2850:	eddf 7a47 	vldr	s15, [pc, #284]	; 2970 <calcENC_data+0x218>
    2854:	ee66 7aa7 	vmul.f32	s15, s13, s15
    2858:	ee77 7a27 	vadd.f32	s15, s14, s15
    285c:	687b      	ldr	r3, [r7, #4]
    285e:	edc3 7a03 	vstr	s15, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:32
		pData->raw_Values.posR_old = 0;
    2862:	687b      	ldr	r3, [r7, #4]
    2864:	2200      	movs	r2, #0
    2866:	809a      	strh	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:33
		pData->raw_Values.posL_old = 0;
    2868:	687b      	ldr	r3, [r7, #4]
    286a:	2200      	movs	r2, #0
    286c:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:34
		array_counter = 0;
    286e:	4b41      	ldr	r3, [pc, #260]	; (2974 <calcENC_data+0x21c>)
    2870:	2200      	movs	r2, #0
    2872:	601a      	str	r2, [r3, #0]
    2874:	e06e      	b.n	2954 <calcENC_data+0x1fc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:37
	}
	else{
		pData->uint_Values.m_posR = pData->uint_Values.m_posR+(pData->raw_Values.posR-pData->raw_Values.posR_old) * STEPS_TO_METER;
    2876:	687b      	ldr	r3, [r7, #4]
    2878:	ed93 7a02 	vldr	s14, [r3, #8]
    287c:	687b      	ldr	r3, [r7, #4]
    287e:	881b      	ldrh	r3, [r3, #0]
    2880:	b21a      	sxth	r2, r3
    2882:	687b      	ldr	r3, [r7, #4]
    2884:	889b      	ldrh	r3, [r3, #4]
    2886:	b21b      	sxth	r3, r3
    2888:	1ad3      	subs	r3, r2, r3
    288a:	ee07 3a90 	vmov	s15, r3
    288e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    2892:	eddf 7a37 	vldr	s15, [pc, #220]	; 2970 <calcENC_data+0x218>
    2896:	ee66 7aa7 	vmul.f32	s15, s13, s15
    289a:	ee77 7a27 	vadd.f32	s15, s14, s15
    289e:	687b      	ldr	r3, [r7, #4]
    28a0:	edc3 7a02 	vstr	s15, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:38
		pData->uint_Values.m_posL = pData->uint_Values.m_posL+(pData->raw_Values.posL-pData->raw_Values.posL_old) * STEPS_TO_METER;
    28a4:	687b      	ldr	r3, [r7, #4]
    28a6:	ed93 7a03 	vldr	s14, [r3, #12]
    28aa:	687b      	ldr	r3, [r7, #4]
    28ac:	885b      	ldrh	r3, [r3, #2]
    28ae:	b21a      	sxth	r2, r3
    28b0:	687b      	ldr	r3, [r7, #4]
    28b2:	88db      	ldrh	r3, [r3, #6]
    28b4:	b21b      	sxth	r3, r3
    28b6:	1ad3      	subs	r3, r2, r3
    28b8:	ee07 3a90 	vmov	s15, r3
    28bc:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    28c0:	eddf 7a2b 	vldr	s15, [pc, #172]	; 2970 <calcENC_data+0x218>
    28c4:	ee66 7aa7 	vmul.f32	s15, s13, s15
    28c8:	ee77 7a27 	vadd.f32	s15, s14, s15
    28cc:	687b      	ldr	r3, [r7, #4]
    28ce:	edc3 7a03 	vstr	s15, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:39
		pData->raw_Values.posR_old = pData->raw_Values.posR;
    28d2:	687b      	ldr	r3, [r7, #4]
    28d4:	881a      	ldrh	r2, [r3, #0]
    28d6:	687b      	ldr	r3, [r7, #4]
    28d8:	809a      	strh	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:40
		pData->raw_Values.posL_old = pData->raw_Values.posL;
    28da:	687b      	ldr	r3, [r7, #4]
    28dc:	885a      	ldrh	r2, [r3, #2]
    28de:	687b      	ldr	r3, [r7, #4]
    28e0:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:42

		rpm_R_array[array_counter] = pData->raw_Values.posR;
    28e2:	4b24      	ldr	r3, [pc, #144]	; (2974 <calcENC_data+0x21c>)
    28e4:	681a      	ldr	r2, [r3, #0]
    28e6:	687b      	ldr	r3, [r7, #4]
    28e8:	8819      	ldrh	r1, [r3, #0]
    28ea:	4b23      	ldr	r3, [pc, #140]	; (2978 <calcENC_data+0x220>)
    28ec:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:43
		rpm_L_array[array_counter] = pData->raw_Values.posL;
    28f0:	4b20      	ldr	r3, [pc, #128]	; (2974 <calcENC_data+0x21c>)
    28f2:	681a      	ldr	r2, [r3, #0]
    28f4:	687b      	ldr	r3, [r7, #4]
    28f6:	8859      	ldrh	r1, [r3, #2]
    28f8:	4b20      	ldr	r3, [pc, #128]	; (297c <calcENC_data+0x224>)
    28fa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:45

		if(array_counter==11){
    28fe:	4b1d      	ldr	r3, [pc, #116]	; (2974 <calcENC_data+0x21c>)
    2900:	681b      	ldr	r3, [r3, #0]
    2902:	2b0b      	cmp	r3, #11
    2904:	d126      	bne.n	2954 <calcENC_data+0x1fc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:46
			pData->uint_Values.rpm_posR = (rpm_R_array[11]-rpm_R_array[1])*STEPS_TO_RPM;
    2906:	4b1c      	ldr	r3, [pc, #112]	; (2978 <calcENC_data+0x220>)
    2908:	8adb      	ldrh	r3, [r3, #22]
    290a:	b21a      	sxth	r2, r3
    290c:	4b1a      	ldr	r3, [pc, #104]	; (2978 <calcENC_data+0x220>)
    290e:	885b      	ldrh	r3, [r3, #2]
    2910:	b21b      	sxth	r3, r3
    2912:	1ad3      	subs	r3, r2, r3
    2914:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
    2918:	fb02 f303 	mul.w	r3, r2, r3
    291c:	ee07 3a10 	vmov	s14, r3
    2920:	eef8 7ac7 	vcvt.f32.s32	s15, s14
    2924:	687b      	ldr	r3, [r7, #4]
    2926:	edc3 7a04 	vstr	s15, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:47
			pData->uint_Values.rpm_posL = (rpm_R_array[11]-rpm_R_array[1])*STEPS_TO_RPM;
    292a:	4b13      	ldr	r3, [pc, #76]	; (2978 <calcENC_data+0x220>)
    292c:	8adb      	ldrh	r3, [r3, #22]
    292e:	b21a      	sxth	r2, r3
    2930:	4b11      	ldr	r3, [pc, #68]	; (2978 <calcENC_data+0x220>)
    2932:	885b      	ldrh	r3, [r3, #2]
    2934:	b21b      	sxth	r3, r3
    2936:	1ad3      	subs	r3, r2, r3
    2938:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
    293c:	fb02 f303 	mul.w	r3, r2, r3
    2940:	ee07 3a10 	vmov	s14, r3
    2944:	eef8 7ac7 	vcvt.f32.s32	s15, s14
    2948:	687b      	ldr	r3, [r7, #4]
    294a:	edc3 7a05 	vstr	s15, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:48
			array_counter = 0;
    294e:	4b09      	ldr	r3, [pc, #36]	; (2974 <calcENC_data+0x21c>)
    2950:	2200      	movs	r2, #0
    2952:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:53

		}
	}

	array_counter++;
    2954:	4b07      	ldr	r3, [pc, #28]	; (2974 <calcENC_data+0x21c>)
    2956:	681b      	ldr	r3, [r3, #0]
    2958:	1c5a      	adds	r2, r3, #1
    295a:	4b06      	ldr	r3, [pc, #24]	; (2974 <calcENC_data+0x21c>)
    295c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Encoder.c:54
}
    295e:	3708      	adds	r7, #8
    2960:	46bd      	mov	sp, r7
    2962:	bd80      	pop	{r7, pc}
    2964:	40039000 	.word	0x40039000
    2968:	4003a000 	.word	0x4003a000
    296c:	3fd00000 	.word	0x3fd00000
    2970:	39a70411 	.word	0x39a70411
    2974:	20001268 	.word	0x20001268
    2978:	20001250 	.word	0x20001250
    297c:	2000126c 	.word	0x2000126c

00002980 <EVNT_SetEvent>:
EVNT_SetEvent():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:30
#define CLR_EVENT(event) \
  EVNT_Events[(event)/EVNT_MEM_UNIT_NOF_BITS] &= ~((1u<<(EVNT_MEM_UNIT_NOF_BITS-1))>>(((event)%EVNT_MEM_UNIT_NOF_BITS))) /*!< Clear the event */
#define GET_EVENT(event) \
  (EVNT_Events[(event)/EVNT_MEM_UNIT_NOF_BITS]&(((1u<<(EVNT_MEM_UNIT_NOF_BITS-1))>>(((event)%EVNT_MEM_UNIT_NOF_BITS))))) /*!< Return TRUE if event is set */

void EVNT_SetEvent(EVNT_Handle event) {
    2980:	b480      	push	{r7}
    2982:	b085      	sub	sp, #20
    2984:	af00      	add	r7, sp, #0
    2986:	4603      	mov	r3, r0
    2988:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:33
  /*! \todo Make it reentrant */
	CS1_CriticalVariable();
	CS1_EnterCritical();
    298a:	f3ef 8010 	mrs	r0, PRIMASK
    298e:	b672      	cpsid	i
    2990:	73f8      	strb	r0, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:34
  SET_EVENT(event);
    2992:	79fb      	ldrb	r3, [r7, #7]
    2994:	095b      	lsrs	r3, r3, #5
    2996:	b2db      	uxtb	r3, r3
    2998:	461a      	mov	r2, r3
    299a:	4619      	mov	r1, r3
    299c:	4b0a      	ldr	r3, [pc, #40]	; (29c8 <EVNT_SetEvent+0x48>)
    299e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
    29a2:	79fb      	ldrb	r3, [r7, #7]
    29a4:	f003 031f 	and.w	r3, r3, #31
    29a8:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    29ac:	fa20 f303 	lsr.w	r3, r0, r3
    29b0:	4319      	orrs	r1, r3
    29b2:	4b05      	ldr	r3, [pc, #20]	; (29c8 <EVNT_SetEvent+0x48>)
    29b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:35
  CS1_ExitCritical();
    29b8:	7bf8      	ldrb	r0, [r7, #15]
    29ba:	f380 8810 	msr	PRIMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:36
}
    29be:	3714      	adds	r7, #20
    29c0:	46bd      	mov	sp, r7
    29c2:	f85d 7b04 	ldr.w	r7, [sp], #4
    29c6:	4770      	bx	lr
    29c8:	20000124 	.word	0x20000124

000029cc <EVNT_HandleEvent>:
EVNT_HandleEvent():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:70
  }
  CS1_ExitCritical();
  return res;
}

void EVNT_HandleEvent(void (*callback)(EVNT_Handle), bool clearEvent) {
    29cc:	b580      	push	{r7, lr}
    29ce:	b084      	sub	sp, #16
    29d0:	af00      	add	r7, sp, #0
    29d2:	6078      	str	r0, [r7, #4]
    29d4:	460b      	mov	r3, r1
    29d6:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:75
   /* Handle the one with the highest priority. Zero is the event with the highest priority. */
   EVNT_Handle event;
   /*! \todo Make it reentrant */
   CS1_CriticalVariable();
   CS1_EnterCritical();
    29d8:	f3ef 8010 	mrs	r0, PRIMASK
    29dc:	b672      	cpsid	i
    29de:	73b8      	strb	r0, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:76
   for (event=(EVNT_Handle)0; event<EVNT_NOF_EVENTS; event++) { /* does a test on every event */
    29e0:	2300      	movs	r3, #0
    29e2:	73fb      	strb	r3, [r7, #15]
    29e4:	e02c      	b.n	2a40 <EVNT_HandleEvent+0x74>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:77
     if (GET_EVENT(event)) { /* event present? */
    29e6:	7bfb      	ldrb	r3, [r7, #15]
    29e8:	095b      	lsrs	r3, r3, #5
    29ea:	b2db      	uxtb	r3, r3
    29ec:	461a      	mov	r2, r3
    29ee:	4b1c      	ldr	r3, [pc, #112]	; (2a60 <EVNT_HandleEvent+0x94>)
    29f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
    29f4:	7bfb      	ldrb	r3, [r7, #15]
    29f6:	f003 031f 	and.w	r3, r3, #31
    29fa:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
    29fe:	fa21 f303 	lsr.w	r3, r1, r3
    2a02:	4013      	ands	r3, r2
    2a04:	2b00      	cmp	r3, #0
    2a06:	d018      	beq.n	2a3a <EVNT_HandleEvent+0x6e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:78
       if (clearEvent) {
    2a08:	78fb      	ldrb	r3, [r7, #3]
    2a0a:	2b00      	cmp	r3, #0
    2a0c:	d014      	beq.n	2a38 <EVNT_HandleEvent+0x6c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:79
         CLR_EVENT(event); /* clear event */
    2a0e:	7bfb      	ldrb	r3, [r7, #15]
    2a10:	095b      	lsrs	r3, r3, #5
    2a12:	b2db      	uxtb	r3, r3
    2a14:	461a      	mov	r2, r3
    2a16:	4619      	mov	r1, r3
    2a18:	4b11      	ldr	r3, [pc, #68]	; (2a60 <EVNT_HandleEvent+0x94>)
    2a1a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
    2a1e:	7bfb      	ldrb	r3, [r7, #15]
    2a20:	f003 031f 	and.w	r3, r3, #31
    2a24:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    2a28:	fa20 f303 	lsr.w	r3, r0, r3
    2a2c:	43db      	mvns	r3, r3
    2a2e:	4019      	ands	r1, r3
    2a30:	4b0b      	ldr	r3, [pc, #44]	; (2a60 <EVNT_HandleEvent+0x94>)
    2a32:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:81
       }
       break; /* get out of loop */
    2a36:	e006      	b.n	2a46 <EVNT_HandleEvent+0x7a>
    2a38:	e005      	b.n	2a46 <EVNT_HandleEvent+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:76
   /* Handle the one with the highest priority. Zero is the event with the highest priority. */
   EVNT_Handle event;
   /*! \todo Make it reentrant */
   CS1_CriticalVariable();
   CS1_EnterCritical();
   for (event=(EVNT_Handle)0; event<EVNT_NOF_EVENTS; event++) { /* does a test on every event */
    2a3a:	7bfb      	ldrb	r3, [r7, #15]
    2a3c:	3301      	adds	r3, #1
    2a3e:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:76 (discriminator 1)
    2a40:	7bfb      	ldrb	r3, [r7, #15]
    2a42:	2b04      	cmp	r3, #4
    2a44:	d9cf      	bls.n	29e6 <EVNT_HandleEvent+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:84
         CLR_EVENT(event); /* clear event */
       }
       break; /* get out of loop */
     }
   }
   CS1_ExitCritical();
    2a46:	7bb8      	ldrb	r0, [r7, #14]
    2a48:	f380 8810 	msr	PRIMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:85
   if (event != EVNT_NOF_EVENTS) {
    2a4c:	7bfb      	ldrb	r3, [r7, #15]
    2a4e:	2b05      	cmp	r3, #5
    2a50:	d003      	beq.n	2a5a <EVNT_HandleEvent+0x8e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:86
     callback(event);
    2a52:	7bfa      	ldrb	r2, [r7, #15]
    2a54:	687b      	ldr	r3, [r7, #4]
    2a56:	4610      	mov	r0, r2
    2a58:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Event.c:91
     /* Note: if the callback sets the event, we will get out of the loop.
      * We will catch it by the next iteration.
      */
   }
}
    2a5a:	3710      	adds	r7, #16
    2a5c:	46bd      	mov	sp, r7
    2a5e:	bd80      	pop	{r7, pc}
    2a60:	20000124 	.word	0x20000124

00002a64 <Distance_INT_OnInterrupt>:
Distance_INT_OnInterrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:165
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void Distance_INT_OnInterrupt(void)
{
    2a64:	b580      	push	{r7, lr}
    2a66:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:167
	//DrivingControl();//saveData(NULL, NULL, NULL, NULL);
	Timer_1ms_Int();/* Write your code here ... */
    2a68:	f7ff fbea 	bl	2240 <Timer_1ms_Int>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:168
}
    2a6c:	bd80      	pop	{r7, pc}
    2a6e:	bf00      	nop

00002a70 <Cpu_OnNMI>:
Cpu_OnNMI():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:184
**         occurred. This event is automatically enabled when the [NMI
**         interrupt] property is set to 'Enabled'.
*/
/* ===================================================================*/
void Cpu_OnNMI(void)
{
    2a70:	b480      	push	{r7}
    2a72:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:186
  /* Write your code here ... */
}
    2a74:	46bd      	mov	sp, r7
    2a76:	f85d 7b04 	ldr.w	r7, [sp], #4
    2a7a:	4770      	bx	lr

00002a7c <SM1_OnRxChar>:
SM1_OnRxChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:202
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void SM1_OnRxChar(void)
{
    2a7c:	b480      	push	{r7}
    2a7e:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:204
  /* Write your code here ... */
}
    2a80:	46bd      	mov	sp, r7
    2a82:	f85d 7b04 	ldr.w	r7, [sp], #4
    2a86:	4770      	bx	lr

00002a88 <SM1_OnTxChar>:
SM1_OnTxChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:218
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void SM1_OnTxChar(void)
{
    2a88:	b480      	push	{r7}
    2a8a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:220
  /* Write your code here ... */
}
    2a8c:	46bd      	mov	sp, r7
    2a8e:	f85d 7b04 	ldr.w	r7, [sp], #4
    2a92:	4770      	bx	lr

00002a94 <SM1_OnError>:
SM1_OnError():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:238
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void SM1_OnError(void)
{
    2a94:	b480      	push	{r7}
    2a96:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:240
  /* Write your code here ... */
}
    2a98:	46bd      	mov	sp, r7
    2a9a:	f85d 7b04 	ldr.w	r7, [sp], #4
    2a9e:	4770      	bx	lr

00002aa0 <SM1_OnFullRxBuf>:
SM1_OnFullRxBuf():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:259
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void SM1_OnFullRxBuf(void)
{
    2aa0:	b480      	push	{r7}
    2aa2:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:261
  /* Write your code here ... */
}
    2aa4:	46bd      	mov	sp, r7
    2aa6:	f85d 7b04 	ldr.w	r7, [sp], #4
    2aaa:	4770      	bx	lr

00002aac <SM1_OnFreeTxBuf>:
SM1_OnFreeTxBuf():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:279
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void SM1_OnFreeTxBuf(void)
{
    2aac:	b480      	push	{r7}
    2aae:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Events.c:281
  /* Write your code here ... */
}
    2ab0:	46bd      	mov	sp, r7
    2ab2:	f85d 7b04 	ldr.w	r7, [sp], #4
    2ab6:	4770      	bx	lr

00002ab8 <PID_Init>:
PID_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:19
 Encoder_data_t encData;
 IMU_data_t imuData;
 uint16_t detect_counter;
 bool newField_Flag;
 float angle;
 void PID_Init(void){
    2ab8:	b580      	push	{r7, lr}
    2aba:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:22

 	/*RIGHT Control Variables*/
 	  pidData_R.signals.w = 0;
    2abc:	495a      	ldr	r1, [pc, #360]	; (2c28 <PID_Init+0x170>)
    2abe:	f04f 0200 	mov.w	r2, #0
    2ac2:	f04f 0300 	mov.w	r3, #0
    2ac6:	e9c1 2300 	strd	r2, r3, [r1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:24

 	  pidData_R.parameter.K		= 0.1;//0.00005;//0.015;//0.002;//0.2
    2aca:	4957      	ldr	r1, [pc, #348]	; (2c28 <PID_Init+0x170>)
    2acc:	a346      	add	r3, pc, #280	; (adr r3, 2be8 <PID_Init+0x130>)
    2ace:	e9d3 2300 	ldrd	r2, r3, [r3]
    2ad2:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:25
 	  pidData_R.parameter.Ti 	= 1;//0.0001
    2ad6:	4954      	ldr	r1, [pc, #336]	; (2c28 <PID_Init+0x170>)
    2ad8:	f04f 0200 	mov.w	r2, #0
    2adc:	4b53      	ldr	r3, [pc, #332]	; (2c2c <PID_Init+0x174>)
    2ade:	e9c1 231a 	strd	r2, r3, [r1, #104]	; 0x68
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:26
 	  pidData_R.parameter.Td 	= 1000000;//2.5//5000;//5000000
    2ae2:	4951      	ldr	r1, [pc, #324]	; (2c28 <PID_Init+0x170>)
    2ae4:	a342      	add	r3, pc, #264	; (adr r3, 2bf0 <PID_Init+0x138>)
    2ae6:	e9d3 2300 	ldrd	r2, r3, [r3]
    2aea:	e9c1 231c 	strd	r2, r3, [r1, #112]	; 0x70
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:27
 	  pidData_R.parameter.Tt 	= 1;
    2aee:	494e      	ldr	r1, [pc, #312]	; (2c28 <PID_Init+0x170>)
    2af0:	f04f 0200 	mov.w	r2, #0
    2af4:	4b4d      	ldr	r3, [pc, #308]	; (2c2c <PID_Init+0x174>)
    2af6:	e9c1 231e 	strd	r2, r3, [r1, #120]	; 0x78
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:28
 	  pidData_R.parameter.N 	= 1;
    2afa:	494b      	ldr	r1, [pc, #300]	; (2c28 <PID_Init+0x170>)
    2afc:	f04f 0200 	mov.w	r2, #0
    2b00:	4b4a      	ldr	r3, [pc, #296]	; (2c2c <PID_Init+0x174>)
    2b02:	e9c1 2320 	strd	r2, r3, [r1, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:29
 	  pidData_R.parameter.b 	= 1;
    2b06:	4948      	ldr	r1, [pc, #288]	; (2c28 <PID_Init+0x170>)
    2b08:	f04f 0200 	mov.w	r2, #0
    2b0c:	4b47      	ldr	r3, [pc, #284]	; (2c2c <PID_Init+0x174>)
    2b0e:	e9c1 2322 	strd	r2, r3, [r1, #136]	; 0x88
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:30
 	  pidData_R.parameter.h 	= 0.5;//ms
    2b12:	4945      	ldr	r1, [pc, #276]	; (2c28 <PID_Init+0x170>)
    2b14:	f04f 0200 	mov.w	r2, #0
    2b18:	4b45      	ldr	r3, [pc, #276]	; (2c30 <PID_Init+0x178>)
    2b1a:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:31
 	  pidData_R.parameter.ulow 	= -3.25;
    2b1e:	4942      	ldr	r1, [pc, #264]	; (2c28 <PID_Init+0x170>)
    2b20:	f04f 0200 	mov.w	r2, #0
    2b24:	4b43      	ldr	r3, [pc, #268]	; (2c34 <PID_Init+0x17c>)
    2b26:	e9c1 2324 	strd	r2, r3, [r1, #144]	; 0x90
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:32
 	  pidData_R.parameter.uhigh = 3.25;
    2b2a:	493f      	ldr	r1, [pc, #252]	; (2c28 <PID_Init+0x170>)
    2b2c:	f04f 0200 	mov.w	r2, #0
    2b30:	4b41      	ldr	r3, [pc, #260]	; (2c38 <PID_Init+0x180>)
    2b32:	e9c1 2326 	strd	r2, r3, [r1, #152]	; 0x98
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:33
 	  pidData_R.parameter.ARW = TRUE;
    2b36:	4b3c      	ldr	r3, [pc, #240]	; (2c28 <PID_Init+0x170>)
    2b38:	2201      	movs	r2, #1
    2b3a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:34
 	  pidData_R.states.v_motor_right = 0.4;
    2b3e:	4b3a      	ldr	r3, [pc, #232]	; (2c28 <PID_Init+0x170>)
    2b40:	4a3e      	ldr	r2, [pc, #248]	; (2c3c <PID_Init+0x184>)
    2b42:	651a      	str	r2, [r3, #80]	; 0x50
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:35
 	  pidData_R.states.arw = 500;
    2b44:	4938      	ldr	r1, [pc, #224]	; (2c28 <PID_Init+0x170>)
    2b46:	f04f 0200 	mov.w	r2, #0
    2b4a:	4b3d      	ldr	r3, [pc, #244]	; (2c40 <PID_Init+0x188>)
    2b4c:	e9c1 2310 	strd	r2, r3, [r1, #64]	; 0x40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:37

 	  PID_addDerivatedParameters(&pidData_R);
    2b50:	4835      	ldr	r0, [pc, #212]	; (2c28 <PID_Init+0x170>)
    2b52:	f001 fb61 	bl	4218 <PID_addDerivatedParameters>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:42



 	  /*LEFT Control Variables*/
 	  pidData_L.signals.w = 7015;
    2b56:	493b      	ldr	r1, [pc, #236]	; (2c44 <PID_Init+0x18c>)
    2b58:	a327      	add	r3, pc, #156	; (adr r3, 2bf8 <PID_Init+0x140>)
    2b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
    2b5e:	e9c1 2300 	strd	r2, r3, [r1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:44

 	  pidData_L.parameter.K		= 0.005;
    2b62:	4938      	ldr	r1, [pc, #224]	; (2c44 <PID_Init+0x18c>)
    2b64:	a326      	add	r3, pc, #152	; (adr r3, 2c00 <PID_Init+0x148>)
    2b66:	e9d3 2300 	ldrd	r2, r3, [r3]
    2b6a:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:45
 	  pidData_L.parameter.Ti 	= 1000000;
    2b6e:	4935      	ldr	r1, [pc, #212]	; (2c44 <PID_Init+0x18c>)
    2b70:	a31f      	add	r3, pc, #124	; (adr r3, 2bf0 <PID_Init+0x138>)
    2b72:	e9d3 2300 	ldrd	r2, r3, [r3]
    2b76:	e9c1 231a 	strd	r2, r3, [r1, #104]	; 0x68
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:46
 	  pidData_L.parameter.Td 	= 0.001;
    2b7a:	4932      	ldr	r1, [pc, #200]	; (2c44 <PID_Init+0x18c>)
    2b7c:	a322      	add	r3, pc, #136	; (adr r3, 2c08 <PID_Init+0x150>)
    2b7e:	e9d3 2300 	ldrd	r2, r3, [r3]
    2b82:	e9c1 231c 	strd	r2, r3, [r1, #112]	; 0x70
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:47
 	  pidData_L.parameter.Tt 	= 0.5;
    2b86:	492f      	ldr	r1, [pc, #188]	; (2c44 <PID_Init+0x18c>)
    2b88:	f04f 0200 	mov.w	r2, #0
    2b8c:	4b28      	ldr	r3, [pc, #160]	; (2c30 <PID_Init+0x178>)
    2b8e:	e9c1 231e 	strd	r2, r3, [r1, #120]	; 0x78
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:48
 	  pidData_L.parameter.N 	= 1;
    2b92:	492c      	ldr	r1, [pc, #176]	; (2c44 <PID_Init+0x18c>)
    2b94:	f04f 0200 	mov.w	r2, #0
    2b98:	4b24      	ldr	r3, [pc, #144]	; (2c2c <PID_Init+0x174>)
    2b9a:	e9c1 2320 	strd	r2, r3, [r1, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:49
 	  pidData_L.parameter.b 	= 1;
    2b9e:	4929      	ldr	r1, [pc, #164]	; (2c44 <PID_Init+0x18c>)
    2ba0:	f04f 0200 	mov.w	r2, #0
    2ba4:	4b21      	ldr	r3, [pc, #132]	; (2c2c <PID_Init+0x174>)
    2ba6:	e9c1 2322 	strd	r2, r3, [r1, #136]	; 0x88
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:50
 	  pidData_L.parameter.h 	= 0.0005;
    2baa:	4926      	ldr	r1, [pc, #152]	; (2c44 <PID_Init+0x18c>)
    2bac:	a318      	add	r3, pc, #96	; (adr r3, 2c10 <PID_Init+0x158>)
    2bae:	e9d3 2300 	ldrd	r2, r3, [r3]
    2bb2:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:51
 	  pidData_L.parameter.ulow 	= -3.3;
    2bb6:	4923      	ldr	r1, [pc, #140]	; (2c44 <PID_Init+0x18c>)
    2bb8:	a317      	add	r3, pc, #92	; (adr r3, 2c18 <PID_Init+0x160>)
    2bba:	e9d3 2300 	ldrd	r2, r3, [r3]
    2bbe:	e9c1 2324 	strd	r2, r3, [r1, #144]	; 0x90
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:52
 	  pidData_L.parameter.uhigh = 3.3;
    2bc2:	4920      	ldr	r1, [pc, #128]	; (2c44 <PID_Init+0x18c>)
    2bc4:	a316      	add	r3, pc, #88	; (adr r3, 2c20 <PID_Init+0x168>)
    2bc6:	e9d3 2300 	ldrd	r2, r3, [r3]
    2bca:	e9c1 2326 	strd	r2, r3, [r1, #152]	; 0x98
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:53
 	  pidData_L.parameter.ARW = TRUE;
    2bce:	4b1d      	ldr	r3, [pc, #116]	; (2c44 <PID_Init+0x18c>)
    2bd0:	2201      	movs	r2, #1
    2bd2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:54
 	  pidData_L.states.v_motor_left = 0.5;
    2bd6:	4b1b      	ldr	r3, [pc, #108]	; (2c44 <PID_Init+0x18c>)
    2bd8:	f04f 527c 	mov.w	r2, #1056964608	; 0x3f000000
    2bdc:	655a      	str	r2, [r3, #84]	; 0x54
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:56

 	  PID_addDerivatedParameters(&pidData_L);
    2bde:	4819      	ldr	r0, [pc, #100]	; (2c44 <PID_Init+0x18c>)
    2be0:	f001 fb1a 	bl	4218 <PID_addDerivatedParameters>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:57
 }
    2be4:	bd80      	pop	{r7, pc}
    2be6:	bf00      	nop
    2be8:	9999999a 	.word	0x9999999a
    2bec:	3fb99999 	.word	0x3fb99999
    2bf0:	00000000 	.word	0x00000000
    2bf4:	412e8480 	.word	0x412e8480
    2bf8:	00000000 	.word	0x00000000
    2bfc:	40bb6700 	.word	0x40bb6700
    2c00:	47ae147b 	.word	0x47ae147b
    2c04:	3f747ae1 	.word	0x3f747ae1
    2c08:	d2f1a9fc 	.word	0xd2f1a9fc
    2c0c:	3f50624d 	.word	0x3f50624d
    2c10:	d2f1a9fc 	.word	0xd2f1a9fc
    2c14:	3f40624d 	.word	0x3f40624d
    2c18:	66666666 	.word	0x66666666
    2c1c:	c00a6666 	.word	0xc00a6666
    2c20:	66666666 	.word	0x66666666
    2c24:	400a6666 	.word	0x400a6666
    2c28:	20000b88 	.word	0x20000b88
    2c2c:	3ff00000 	.word	0x3ff00000
    2c30:	3fe00000 	.word	0x3fe00000
    2c34:	c00a0000 	.word	0xc00a0000
    2c38:	400a0000 	.word	0x400a0000
    2c3c:	3ecccccd 	.word	0x3ecccccd
    2c40:	407f4000 	.word	0x407f4000
    2c44:	20000c50 	.word	0x20000c50

00002c48 <stopp>:
stopp():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:65
 {
 	set_VREF(pidData_R.states.v_motor_right,0.4);
 }

 void stopp()
 {
    2c48:	b580      	push	{r7, lr}
    2c4a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:66
	 set_VREF(0,0);
    2c4c:	ed9f 0a03 	vldr	s0, [pc, #12]	; 2c5c <stopp+0x14>
    2c50:	eddf 0a02 	vldr	s1, [pc, #8]	; 2c5c <stopp+0x14>
    2c54:	f001 fa20 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:67
 }
    2c58:	bd80      	pop	{r7, pc}
    2c5a:	bf00      	nop
    2c5c:	00000000 	.word	0x00000000

00002c60 <turn_left>:
turn_left():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:68
 void turn_left(){
    2c60:	b580      	push	{r7, lr}
    2c62:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:69
	 stopp();
    2c64:	f7ff fff0 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:70
	 calcIMU_data(&imuData);
    2c68:	4814      	ldr	r0, [pc, #80]	; (2cbc <turn_left+0x5c>)
    2c6a:	f000 fecd 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:71
 	angle = imuData.unit_Values.z_Axis_Gyro_angle;
    2c6e:	4b13      	ldr	r3, [pc, #76]	; (2cbc <turn_left+0x5c>)
    2c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    2c72:	4b13      	ldr	r3, [pc, #76]	; (2cc0 <turn_left+0x60>)
    2c74:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:72
 	set_VREF(1,-1);
    2c76:	eeb7 0a00 	vmov.f32	s0, #112	; 0x70
    2c7a:	eeff 0a00 	vmov.f32	s1, #240	; 0xf0
    2c7e:	f001 fa0b 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:73
 	while((imuData.unit_Values.z_Axis_Gyro_angle-angle) > -90){
    2c82:	e006      	b.n	2c92 <turn_left+0x32>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:74
 		calcIMU_data(&imuData);
    2c84:	480d      	ldr	r0, [pc, #52]	; (2cbc <turn_left+0x5c>)
    2c86:	f000 febf 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:75
 		WAIT1_Waitus(250);
    2c8a:	f247 5030 	movw	r0, #30000	; 0x7530
    2c8e:	f006 fe6d 	bl	996c <WAIT1_WaitCycles>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:73 (discriminator 1)
 void turn_left(){
	 stopp();
	 calcIMU_data(&imuData);
 	angle = imuData.unit_Values.z_Axis_Gyro_angle;
 	set_VREF(1,-1);
 	while((imuData.unit_Values.z_Axis_Gyro_angle-angle) > -90){
    2c92:	4b0a      	ldr	r3, [pc, #40]	; (2cbc <turn_left+0x5c>)
    2c94:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
    2c98:	4b09      	ldr	r3, [pc, #36]	; (2cc0 <turn_left+0x60>)
    2c9a:	edd3 7a00 	vldr	s15, [r3]
    2c9e:	ee37 7a67 	vsub.f32	s14, s14, s15
    2ca2:	eddf 7a08 	vldr	s15, [pc, #32]	; 2cc4 <turn_left+0x64>
    2ca6:	eeb4 7ae7 	vcmpe.f32	s14, s15
    2caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    2cae:	dce9      	bgt.n	2c84 <turn_left+0x24>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:77
 		calcIMU_data(&imuData);
 		WAIT1_Waitus(250);
 	}
 	stopp();
    2cb0:	f7ff ffca 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:78
 	WAIT1_Waitms(1);
    2cb4:	2001      	movs	r0, #1
    2cb6:	f006 fe8f 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:79
 }
    2cba:	bd80      	pop	{r7, pc}
    2cbc:	20000de4 	.word	0x20000de4
    2cc0:	20001288 	.word	0x20001288
    2cc4:	c2b40000 	.word	0xc2b40000

00002cc8 <turn_right>:
turn_right():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:82

 void turn_right()
 {
    2cc8:	b580      	push	{r7, lr}
    2cca:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:83
	 stopp();
    2ccc:	f7ff ffbc 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:84
	 calcIMU_data(&imuData);
    2cd0:	4814      	ldr	r0, [pc, #80]	; (2d24 <turn_right+0x5c>)
    2cd2:	f000 fe99 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:85
	 	angle = imuData.unit_Values.z_Axis_Gyro_angle;
    2cd6:	4b13      	ldr	r3, [pc, #76]	; (2d24 <turn_right+0x5c>)
    2cd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    2cda:	4b13      	ldr	r3, [pc, #76]	; (2d28 <turn_right+0x60>)
    2cdc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:86
	 	set_VREF(-1.1,1.1);
    2cde:	ed9f 0a13 	vldr	s0, [pc, #76]	; 2d2c <turn_right+0x64>
    2ce2:	eddf 0a13 	vldr	s1, [pc, #76]	; 2d30 <turn_right+0x68>
    2ce6:	f001 f9d7 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:87
 	while((imuData.unit_Values.z_Axis_Gyro_angle-angle) < 90){
    2cea:	e006      	b.n	2cfa <turn_right+0x32>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:88
 		calcIMU_data(&imuData);
    2cec:	480d      	ldr	r0, [pc, #52]	; (2d24 <turn_right+0x5c>)
    2cee:	f000 fe8b 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:89
 		WAIT1_Waitus(250);
    2cf2:	f247 5030 	movw	r0, #30000	; 0x7530
    2cf6:	f006 fe39 	bl	996c <WAIT1_WaitCycles>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:87 (discriminator 1)
 {
	 stopp();
	 calcIMU_data(&imuData);
	 	angle = imuData.unit_Values.z_Axis_Gyro_angle;
	 	set_VREF(-1.1,1.1);
 	while((imuData.unit_Values.z_Axis_Gyro_angle-angle) < 90){
    2cfa:	4b0a      	ldr	r3, [pc, #40]	; (2d24 <turn_right+0x5c>)
    2cfc:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
    2d00:	4b09      	ldr	r3, [pc, #36]	; (2d28 <turn_right+0x60>)
    2d02:	edd3 7a00 	vldr	s15, [r3]
    2d06:	ee37 7a67 	vsub.f32	s14, s14, s15
    2d0a:	eddf 7a0a 	vldr	s15, [pc, #40]	; 2d34 <turn_right+0x6c>
    2d0e:	eeb4 7ae7 	vcmpe.f32	s14, s15
    2d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    2d16:	d4e9      	bmi.n	2cec <turn_right+0x24>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:91
 		calcIMU_data(&imuData);
 		WAIT1_Waitus(250);
 	}
     stopp();
    2d18:	f7ff ff96 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:92
     WAIT1_Waitms(10);
    2d1c:	200a      	movs	r0, #10
    2d1e:	f006 fe5b 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:94

 }
    2d22:	bd80      	pop	{r7, pc}
    2d24:	20000de4 	.word	0x20000de4
    2d28:	20001288 	.word	0x20001288
    2d2c:	bf8ccccd 	.word	0xbf8ccccd
    2d30:	3f8ccccd 	.word	0x3f8ccccd
    2d34:	42b40000 	.word	0x42b40000

00002d38 <driveToTurn>:
driveToTurn():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:97

 void driveToTurn(float dist)
 {
    2d38:	b5b0      	push	{r4, r5, r7, lr}
    2d3a:	b084      	sub	sp, #16
    2d3c:	af00      	add	r7, sp, #0
    2d3e:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:99
 	//WAIT1_Waitms(1);
	  calcENC_data(&encData);
    2d42:	482c      	ldr	r0, [pc, #176]	; (2df4 <driveToTurn+0xbc>)
    2d44:	f7ff fd08 	bl	2758 <calcENC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:100
 	  float posMeter = (encData.uint_Values.m_posL + encData.uint_Values.m_posR)*0.5;
    2d48:	4b2a      	ldr	r3, [pc, #168]	; (2df4 <driveToTurn+0xbc>)
    2d4a:	ed93 7a03 	vldr	s14, [r3, #12]
    2d4e:	4b29      	ldr	r3, [pc, #164]	; (2df4 <driveToTurn+0xbc>)
    2d50:	edd3 7a02 	vldr	s15, [r3, #8]
    2d54:	ee37 7a27 	vadd.f32	s14, s14, s15
    2d58:	eef6 7a00 	vmov.f32	s15, #96	; 0x60
    2d5c:	ee67 7a27 	vmul.f32	s15, s14, s15
    2d60:	edc7 7a03 	vstr	s15, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:101
	  FTM1_CNT =0;
    2d64:	4b24      	ldr	r3, [pc, #144]	; (2df8 <driveToTurn+0xc0>)
    2d66:	2200      	movs	r2, #0
    2d68:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:102
	  FTM2_CNT =0;
    2d6a:	4b24      	ldr	r3, [pc, #144]	; (2dfc <driveToTurn+0xc4>)
    2d6c:	2200      	movs	r2, #0
    2d6e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:103
 	 set_VREF(0.5,0.5);
    2d70:	eeb6 0a00 	vmov.f32	s0, #96	; 0x60
    2d74:	eef6 0a00 	vmov.f32	s1, #96	; 0x60
    2d78:	f001 f98e 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:104
 	  while((((encData.uint_Values.m_posL + encData.uint_Values.m_posR)*0.5) - posMeter)<dist){
    2d7c:	e002      	b.n	2d84 <driveToTurn+0x4c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:105
 		  calcENC_data(&encData);
    2d7e:	481d      	ldr	r0, [pc, #116]	; (2df4 <driveToTurn+0xbc>)
    2d80:	f7ff fcea 	bl	2758 <calcENC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:104 (discriminator 1)
	  calcENC_data(&encData);
 	  float posMeter = (encData.uint_Values.m_posL + encData.uint_Values.m_posR)*0.5;
	  FTM1_CNT =0;
	  FTM2_CNT =0;
 	 set_VREF(0.5,0.5);
 	  while((((encData.uint_Values.m_posL + encData.uint_Values.m_posR)*0.5) - posMeter)<dist){
    2d84:	4b1b      	ldr	r3, [pc, #108]	; (2df4 <driveToTurn+0xbc>)
    2d86:	ed93 7a03 	vldr	s14, [r3, #12]
    2d8a:	4b1a      	ldr	r3, [pc, #104]	; (2df4 <driveToTurn+0xbc>)
    2d8c:	edd3 7a02 	vldr	s15, [r3, #8]
    2d90:	ee77 7a27 	vadd.f32	s15, s14, s15
    2d94:	ee17 0a90 	vmov	r0, s15
    2d98:	f7fd fd02 	bl	7a0 <__aeabi_f2d>
    2d9c:	4602      	mov	r2, r0
    2d9e:	460b      	mov	r3, r1
    2da0:	4610      	mov	r0, r2
    2da2:	4619      	mov	r1, r3
    2da4:	f04f 0200 	mov.w	r2, #0
    2da8:	4b15      	ldr	r3, [pc, #84]	; (2e00 <driveToTurn+0xc8>)
    2daa:	f7fd fd4d 	bl	848 <__aeabi_dmul>
    2dae:	4602      	mov	r2, r0
    2db0:	460b      	mov	r3, r1
    2db2:	4614      	mov	r4, r2
    2db4:	461d      	mov	r5, r3
    2db6:	68f8      	ldr	r0, [r7, #12]
    2db8:	f7fd fcf2 	bl	7a0 <__aeabi_f2d>
    2dbc:	4602      	mov	r2, r0
    2dbe:	460b      	mov	r3, r1
    2dc0:	4620      	mov	r0, r4
    2dc2:	4629      	mov	r1, r5
    2dc4:	f7fd fb8c 	bl	4e0 <__aeabi_dsub>
    2dc8:	4602      	mov	r2, r0
    2dca:	460b      	mov	r3, r1
    2dcc:	4614      	mov	r4, r2
    2dce:	461d      	mov	r5, r3
    2dd0:	6878      	ldr	r0, [r7, #4]
    2dd2:	f7fd fce5 	bl	7a0 <__aeabi_f2d>
    2dd6:	4602      	mov	r2, r0
    2dd8:	460b      	mov	r3, r1
    2dda:	4620      	mov	r0, r4
    2ddc:	4629      	mov	r1, r5
    2dde:	f7fd ffa5 	bl	d2c <__aeabi_dcmplt>
    2de2:	4603      	mov	r3, r0
    2de4:	2b00      	cmp	r3, #0
    2de6:	d1ca      	bne.n	2d7e <driveToTurn+0x46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:108
 		  calcENC_data(&encData);

 	  }
 	  stopp();
    2de8:	f7ff ff2e 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:110

 }
    2dec:	3710      	adds	r7, #16
    2dee:	46bd      	mov	sp, r7
    2df0:	bdb0      	pop	{r4, r5, r7, pc}
    2df2:	bf00      	nop
    2df4:	20000e30 	.word	0x20000e30
    2df8:	40039000 	.word	0x40039000
    2dfc:	4003a000 	.word	0x4003a000
    2e00:	3fe00000 	.word	0x3fe00000

00002e04 <turn_l>:
turn_l():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:112

 void turn_l(void){
    2e04:	b580      	push	{r7, lr}
    2e06:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:113
 	  turn_left();
    2e08:	f7ff ff2a 	bl	2c60 <turn_left>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:114
 	  pidData_R.states.v_motor_right = 0.4;
    2e0c:	4b01      	ldr	r3, [pc, #4]	; (2e14 <turn_l+0x10>)
    2e0e:	4a02      	ldr	r2, [pc, #8]	; (2e18 <turn_l+0x14>)
    2e10:	651a      	str	r2, [r3, #80]	; 0x50
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:115
 }
    2e12:	bd80      	pop	{r7, pc}
    2e14:	20000b88 	.word	0x20000b88
    2e18:	3ecccccd 	.word	0x3ecccccd

00002e1c <turn_r>:
turn_r():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:117

 void turn_r(uint8_t state){
    2e1c:	b580      	push	{r7, lr}
    2e1e:	b082      	sub	sp, #8
    2e20:	af00      	add	r7, sp, #0
    2e22:	4603      	mov	r3, r0
    2e24:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:119

 	switch(state) {
    2e26:	79fb      	ldrb	r3, [r7, #7]
    2e28:	2b01      	cmp	r3, #1
    2e2a:	d002      	beq.n	2e32 <turn_r+0x16>
    2e2c:	2b02      	cmp	r3, #2
    2e2e:	d008      	beq.n	2e42 <turn_r+0x26>
    2e30:	e015      	b.n	2e5e <turn_r+0x42>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:122
 		case 1:
 		  	  //driveToTurn(0.05);
 			  turn_right();
    2e32:	f7ff ff49 	bl	2cc8 <turn_right>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:123
 			  stopp();
    2e36:	f7ff ff07 	bl	2c48 <stopp>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:124
 			  pidData_R.states.v_motor_right = 0.4;
    2e3a:	4b0c      	ldr	r3, [pc, #48]	; (2e6c <turn_r+0x50>)
    2e3c:	4a0c      	ldr	r2, [pc, #48]	; (2e70 <turn_r+0x54>)
    2e3e:	651a      	str	r2, [r3, #80]	; 0x50
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:126

 		break;
    2e40:	e010      	b.n	2e64 <turn_r+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:129

 		case 2:
 				driveToTurn(0.09);
    2e42:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 2e74 <turn_r+0x58>
    2e46:	f7ff ff77 	bl	2d38 <driveToTurn>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:130
 			  turn_right();
    2e4a:	f7ff ff3d 	bl	2cc8 <turn_right>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:131
 		  	  driveToTurn(0.09);
    2e4e:	ed9f 0a09 	vldr	s0, [pc, #36]	; 2e74 <turn_r+0x58>
    2e52:	f7ff ff71 	bl	2d38 <driveToTurn>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:132
 			  pidData_R.states.v_motor_right = 0.4;
    2e56:	4b05      	ldr	r3, [pc, #20]	; (2e6c <turn_r+0x50>)
    2e58:	4a05      	ldr	r2, [pc, #20]	; (2e70 <turn_r+0x54>)
    2e5a:	651a      	str	r2, [r3, #80]	; 0x50
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:134

 		break;
    2e5c:	e002      	b.n	2e64 <turn_r+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:135
 		default: stopp(); break;
    2e5e:	f7ff fef3 	bl	2c48 <stopp>
    2e62:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploration_Drive.c:138
 	}

 }
    2e64:	3708      	adds	r7, #8
    2e66:	46bd      	mov	sp, r7
    2e68:	bd80      	pop	{r7, pc}
    2e6a:	bf00      	nop
    2e6c:	20000b88 	.word	0x20000b88
    2e70:	3ecccccd 	.word	0x3ecccccd
    2e74:	3db851ec 	.word	0x3db851ec

00002e78 <getReferenceOfMazesegment>:
getReferenceOfMazesegment():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:17
//static char dataBuffer[400] = "$6;#;1;-180;#;2;6;0,0;0,0;0,0;0,0;0,0;0,0;#;3;3;1,1;1,1;1,1;#;4;-90;#;5;2;0,0;0,0;#;6;180;$255;";
 Maze_segments MazeSegmentsToBeDriven;
 bool msgFinishFlag = FALSE;


 Maze_segments getReferenceOfMazesegment(void){
    2e78:	b580      	push	{r7, lr}
    2e7a:	b082      	sub	sp, #8
    2e7c:	af00      	add	r7, sp, #0
    2e7e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:18
	 return MazeSegmentsToBeDriven;
    2e80:	687a      	ldr	r2, [r7, #4]
    2e82:	4b07      	ldr	r3, [pc, #28]	; (2ea0 <getReferenceOfMazesegment+0x28>)
    2e84:	4611      	mov	r1, r2
    2e86:	461a      	mov	r2, r3
    2e88:	f44f 7371 	mov.w	r3, #964	; 0x3c4
    2e8c:	4608      	mov	r0, r1
    2e8e:	4611      	mov	r1, r2
    2e90:	461a      	mov	r2, r3
    2e92:	f00a fcd7 	bl	d844 <memcpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:19
 }
    2e96:	6878      	ldr	r0, [r7, #4]
    2e98:	3708      	adds	r7, #8
    2e9a:	46bd      	mov	sp, r7
    2e9c:	bd80      	pop	{r7, pc}
    2e9e:	bf00      	nop
    2ea0:	20000e48 	.word	0x20000e48

00002ea4 <TEST_BLE_PrintStatus>:
TEST_BLE_PrintStatus():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:22

uint8_t TEST_BLE_PrintStatus(CLS_BLE_ConstStdIOType *io)
{
    2ea4:	b580      	push	{r7, lr}
    2ea6:	b082      	sub	sp, #8
    2ea8:	af00      	add	r7, sp, #0
    2eaa:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:23
	CLS_BLE_SendStatusStr((const unsigned char*)"Status", (const unsigned char*)"\r\n", io->stdOut);
    2eac:	687b      	ldr	r3, [r7, #4]
    2eae:	685b      	ldr	r3, [r3, #4]
    2eb0:	4811      	ldr	r0, [pc, #68]	; (2ef8 <TEST_BLE_PrintStatus+0x54>)
    2eb2:	4912      	ldr	r1, [pc, #72]	; (2efc <TEST_BLE_PrintStatus+0x58>)
    2eb4:	461a      	mov	r2, r3
    2eb6:	f005 f859 	bl	7f6c <CLS_BLE_SendStatusStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:24
	CLS_BLE_SendStatusStr((const unsigned char*)"  Build", (const unsigned char*)__DATE__, io->stdOut);
    2eba:	687b      	ldr	r3, [r7, #4]
    2ebc:	685b      	ldr	r3, [r3, #4]
    2ebe:	4810      	ldr	r0, [pc, #64]	; (2f00 <TEST_BLE_PrintStatus+0x5c>)
    2ec0:	4910      	ldr	r1, [pc, #64]	; (2f04 <TEST_BLE_PrintStatus+0x60>)
    2ec2:	461a      	mov	r2, r3
    2ec4:	f005 f852 	bl	7f6c <CLS_BLE_SendStatusStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:25
	CLS_BLE_SendStr((unsigned char*)" ", io->stdOut);
    2ec8:	687b      	ldr	r3, [r7, #4]
    2eca:	685b      	ldr	r3, [r3, #4]
    2ecc:	480e      	ldr	r0, [pc, #56]	; (2f08 <TEST_BLE_PrintStatus+0x64>)
    2ece:	4619      	mov	r1, r3
    2ed0:	f004 fe38 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:26
	CLS_BLE_SendStr((unsigned char*)__TIME__, io->stdOut);
    2ed4:	687b      	ldr	r3, [r7, #4]
    2ed6:	685b      	ldr	r3, [r3, #4]
    2ed8:	480c      	ldr	r0, [pc, #48]	; (2f0c <TEST_BLE_PrintStatus+0x68>)
    2eda:	4619      	mov	r1, r3
    2edc:	f004 fe32 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:27
	CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2ee0:	687b      	ldr	r3, [r7, #4]
    2ee2:	685b      	ldr	r3, [r3, #4]
    2ee4:	4805      	ldr	r0, [pc, #20]	; (2efc <TEST_BLE_PrintStatus+0x58>)
    2ee6:	4619      	mov	r1, r3
    2ee8:	f004 fe2c 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:28
  return ERR_OK;
    2eec:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:29
}
    2eee:	4618      	mov	r0, r3
    2ef0:	3708      	adds	r7, #8
    2ef2:	46bd      	mov	sp, r7
    2ef4:	bd80      	pop	{r7, pc}
    2ef6:	bf00      	nop
    2ef8:	0000da08 	.word	0x0000da08
    2efc:	0000da10 	.word	0x0000da10
    2f00:	0000da14 	.word	0x0000da14
    2f04:	0000da1c 	.word	0x0000da1c
    2f08:	0000da28 	.word	0x0000da28
    2f0c:	0000da2c 	.word	0x0000da2c

00002f10 <TEST_BLE_ParseCommand>:
TEST_BLE_ParseCommand():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:34



uint8_t TEST_BLE_ParseCommand(const uint8_t *cmd, bool *handled, CLS_BLE_ConstStdIOType *io)
{
    2f10:	b580      	push	{r7, lr}
    2f12:	b084      	sub	sp, #16
    2f14:	af00      	add	r7, sp, #0
    2f16:	60f8      	str	r0, [r7, #12]
    2f18:	60b9      	str	r1, [r7, #8]
    2f1a:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:35
  if (UTIL1_strcmp((char*)cmd, CLS1_CMD_HELP)==0 || UTIL1_strcmp((char*)cmd, "TEST help")==0) {
    2f1c:	68f8      	ldr	r0, [r7, #12]
    2f1e:	4989      	ldr	r1, [pc, #548]	; (3144 <TEST_BLE_ParseCommand+0x234>)
    2f20:	f7fd ffa4 	bl	e6c <strcmp>
    2f24:	4603      	mov	r3, r0
    2f26:	2b00      	cmp	r3, #0
    2f28:	d007      	beq.n	2f3a <TEST_BLE_ParseCommand+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:35 (discriminator 1)
    2f2a:	68f8      	ldr	r0, [r7, #12]
    2f2c:	4986      	ldr	r1, [pc, #536]	; (3148 <TEST_BLE_ParseCommand+0x238>)
    2f2e:	f7fd ff9d 	bl	e6c <strcmp>
    2f32:	4603      	mov	r3, r0
    2f34:	2b00      	cmp	r3, #0
    2f36:	f040 808a 	bne.w	304e <TEST_BLE_ParseCommand+0x13e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:36
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2f3a:	687b      	ldr	r3, [r7, #4]
    2f3c:	685b      	ldr	r3, [r3, #4]
    2f3e:	4883      	ldr	r0, [pc, #524]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2f40:	4619      	mov	r1, r3
    2f42:	f004 fdff 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:37
	  CLS_BLE_SendStr((unsigned char*)CLS_BLE_DASH_LINE, io->stdOut);
    2f46:	687b      	ldr	r3, [r7, #4]
    2f48:	685b      	ldr	r3, [r3, #4]
    2f4a:	4881      	ldr	r0, [pc, #516]	; (3150 <TEST_BLE_ParseCommand+0x240>)
    2f4c:	4619      	mov	r1, r3
    2f4e:	f004 fdf9 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:38
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2f52:	687b      	ldr	r3, [r7, #4]
    2f54:	685b      	ldr	r3, [r3, #4]
    2f56:	487d      	ldr	r0, [pc, #500]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2f58:	4619      	mov	r1, r3
    2f5a:	f004 fdf3 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:39
	  CLS_BLE_SendStr((unsigned char*)"MCCAR V2.75", io->stdOut);
    2f5e:	687b      	ldr	r3, [r7, #4]
    2f60:	685b      	ldr	r3, [r3, #4]
    2f62:	487c      	ldr	r0, [pc, #496]	; (3154 <TEST_BLE_ParseCommand+0x244>)
    2f64:	4619      	mov	r1, r3
    2f66:	f004 fded 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:40
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2f6a:	687b      	ldr	r3, [r7, #4]
    2f6c:	685b      	ldr	r3, [r3, #4]
    2f6e:	4877      	ldr	r0, [pc, #476]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2f70:	4619      	mov	r1, r3
    2f72:	f004 fde7 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:41
	  CLS_BLE_SendStr((unsigned char*)CLS_BLE_DASH_LINE, io->stdOut);
    2f76:	687b      	ldr	r3, [r7, #4]
    2f78:	685b      	ldr	r3, [r3, #4]
    2f7a:	4875      	ldr	r0, [pc, #468]	; (3150 <TEST_BLE_ParseCommand+0x240>)
    2f7c:	4619      	mov	r1, r3
    2f7e:	f004 fde1 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:42
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2f82:	687b      	ldr	r3, [r7, #4]
    2f84:	685b      	ldr	r3, [r3, #4]
    2f86:	4871      	ldr	r0, [pc, #452]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2f88:	4619      	mov	r1, r3
    2f8a:	f004 fddb 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:43
	  CLS_BLE_SendHelpStr((unsigned char*)"Maze data", (const unsigned char*)"Send me the track informations\r\n", io->stdOut);
    2f8e:	687b      	ldr	r3, [r7, #4]
    2f90:	685b      	ldr	r3, [r3, #4]
    2f92:	4871      	ldr	r0, [pc, #452]	; (3158 <TEST_BLE_ParseCommand+0x248>)
    2f94:	4971      	ldr	r1, [pc, #452]	; (315c <TEST_BLE_ParseCommand+0x24c>)
    2f96:	461a      	mov	r2, r3
    2f98:	f004 ffd6 	bl	7f48 <CLS_BLE_SendHelpStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:44
	  CLS_BLE_SendStr((unsigned char*)CLS_BLE_DASH_LINE, io->stdOut);
    2f9c:	687b      	ldr	r3, [r7, #4]
    2f9e:	685b      	ldr	r3, [r3, #4]
    2fa0:	486b      	ldr	r0, [pc, #428]	; (3150 <TEST_BLE_ParseCommand+0x240>)
    2fa2:	4619      	mov	r1, r3
    2fa4:	f004 fdce 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:45
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2fa8:	687b      	ldr	r3, [r7, #4]
    2faa:	685b      	ldr	r3, [r3, #4]
    2fac:	4867      	ldr	r0, [pc, #412]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2fae:	4619      	mov	r1, r3
    2fb0:	f004 fdc8 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:46
	  CLS_BLE_SendStr((unsigned char*)"Data should have the cluster of:", io->stdOut);
    2fb4:	687b      	ldr	r3, [r7, #4]
    2fb6:	685b      	ldr	r3, [r3, #4]
    2fb8:	4869      	ldr	r0, [pc, #420]	; (3160 <TEST_BLE_ParseCommand+0x250>)
    2fba:	4619      	mov	r1, r3
    2fbc:	f004 fdc2 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:47
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2fc0:	687b      	ldr	r3, [r7, #4]
    2fc2:	685b      	ldr	r3, [r3, #4]
    2fc4:	4861      	ldr	r0, [pc, #388]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2fc6:	4619      	mov	r1, r3
    2fc8:	f004 fdbc 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:48
	  CLS_BLE_SendStr((unsigned char*)"$number of segments; ", io->stdOut);
    2fcc:	687b      	ldr	r3, [r7, #4]
    2fce:	685b      	ldr	r3, [r3, #4]
    2fd0:	4864      	ldr	r0, [pc, #400]	; (3164 <TEST_BLE_ParseCommand+0x254>)
    2fd2:	4619      	mov	r1, r3
    2fd4:	f004 fdb6 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:49
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2fd8:	687b      	ldr	r3, [r7, #4]
    2fda:	685b      	ldr	r3, [r3, #4]
    2fdc:	485b      	ldr	r0, [pc, #364]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2fde:	4619      	mov	r1, r3
    2fe0:	f004 fdb0 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:50
	  CLS_BLE_SendStr((unsigned char*)";#;segment number;", io->stdOut);
    2fe4:	687b      	ldr	r3, [r7, #4]
    2fe6:	685b      	ldr	r3, [r3, #4]
    2fe8:	485f      	ldr	r0, [pc, #380]	; (3168 <TEST_BLE_ParseCommand+0x258>)
    2fea:	4619      	mov	r1, r3
    2fec:	f004 fdaa 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:51
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    2ff0:	687b      	ldr	r3, [r7, #4]
    2ff2:	685b      	ldr	r3, [r3, #4]
    2ff4:	4855      	ldr	r0, [pc, #340]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    2ff6:	4619      	mov	r1, r3
    2ff8:	f004 fda4 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:52
	  CLS_BLE_SendStr((unsigned char*)"number of filds for this segment;", io->stdOut);
    2ffc:	687b      	ldr	r3, [r7, #4]
    2ffe:	685b      	ldr	r3, [r3, #4]
    3000:	485a      	ldr	r0, [pc, #360]	; (316c <TEST_BLE_ParseCommand+0x25c>)
    3002:	4619      	mov	r1, r3
    3004:	f004 fd9e 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:53
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    3008:	687b      	ldr	r3, [r7, #4]
    300a:	685b      	ldr	r3, [r3, #4]
    300c:	484f      	ldr	r0, [pc, #316]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    300e:	4619      	mov	r1, r3
    3010:	f004 fd98 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:54
	  CLS_BLE_SendStr((unsigned char*)"wall right(bool), wall left(bool);.....;", io->stdOut);
    3014:	687b      	ldr	r3, [r7, #4]
    3016:	685b      	ldr	r3, [r3, #4]
    3018:	4855      	ldr	r0, [pc, #340]	; (3170 <TEST_BLE_ParseCommand+0x260>)
    301a:	4619      	mov	r1, r3
    301c:	f004 fd92 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:55
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    3020:	687b      	ldr	r3, [r7, #4]
    3022:	685b      	ldr	r3, [r3, #4]
    3024:	4849      	ldr	r0, [pc, #292]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    3026:	4619      	mov	r1, r3
    3028:	f004 fd8c 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:56
	  CLS_BLE_SendStr((unsigned char*)"$255;", io->stdOut);
    302c:	687b      	ldr	r3, [r7, #4]
    302e:	685b      	ldr	r3, [r3, #4]
    3030:	4850      	ldr	r0, [pc, #320]	; (3174 <TEST_BLE_ParseCommand+0x264>)
    3032:	4619      	mov	r1, r3
    3034:	f004 fd86 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:57
	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    3038:	687b      	ldr	r3, [r7, #4]
    303a:	685b      	ldr	r3, [r3, #4]
    303c:	4843      	ldr	r0, [pc, #268]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    303e:	4619      	mov	r1, r3
    3040:	f004 fd80 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:59

    *handled = TRUE;
    3044:	68bb      	ldr	r3, [r7, #8]
    3046:	2201      	movs	r2, #1
    3048:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:60
    return ERR_OK;
    304a:	2300      	movs	r3, #0
    304c:	e076      	b.n	313c <TEST_BLE_ParseCommand+0x22c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:62

  } else if ((UTIL1_strcmp((char*)cmd, CLS1_CMD_STATUS)==0)) {
    304e:	68f8      	ldr	r0, [r7, #12]
    3050:	4949      	ldr	r1, [pc, #292]	; (3178 <TEST_BLE_ParseCommand+0x268>)
    3052:	f7fd ff0b 	bl	e6c <strcmp>
    3056:	4603      	mov	r3, r0
    3058:	2b00      	cmp	r3, #0
    305a:	d107      	bne.n	306c <TEST_BLE_ParseCommand+0x15c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:63
    *handled = TRUE;
    305c:	68bb      	ldr	r3, [r7, #8]
    305e:	2201      	movs	r2, #1
    3060:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:65

    return TEST_BLE_PrintStatus(io);
    3062:	6878      	ldr	r0, [r7, #4]
    3064:	f7ff ff1e 	bl	2ea4 <TEST_BLE_PrintStatus>
    3068:	4603      	mov	r3, r0
    306a:	e067      	b.n	313c <TEST_BLE_ParseCommand+0x22c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:66
  } else if ((UTIL1_strFind((char*)cmd, CLS1_CMD_MSG_START)==0)) {
    306c:	68f8      	ldr	r0, [r7, #12]
    306e:	4943      	ldr	r1, [pc, #268]	; (317c <TEST_BLE_ParseCommand+0x26c>)
    3070:	f006 fb90 	bl	9794 <UTIL1_strFind>
    3074:	4603      	mov	r3, r0
    3076:	2b00      	cmp	r3, #0
    3078:	d15f      	bne.n	313a <TEST_BLE_ParseCommand+0x22a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:67
	    *handled = TRUE;
    307a:	68bb      	ldr	r3, [r7, #8]
    307c:	2201      	movs	r2, #1
    307e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:68
	    getNumberOfMazeSegments(&MazeSegmentsToBeDriven,cmd);
    3080:	483f      	ldr	r0, [pc, #252]	; (3180 <TEST_BLE_ParseCommand+0x270>)
    3082:	68f9      	ldr	r1, [r7, #12]
    3084:	f000 f8b8 	bl	31f8 <getNumberOfMazeSegments>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:69
	    if(msgFinishFlag){
    3088:	4b3e      	ldr	r3, [pc, #248]	; (3184 <TEST_BLE_ParseCommand+0x274>)
    308a:	781b      	ldrb	r3, [r3, #0]
    308c:	2b00      	cmp	r3, #0
    308e:	d02e      	beq.n	30ee <TEST_BLE_ParseCommand+0x1de>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:71

	    	CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    3090:	687b      	ldr	r3, [r7, #4]
    3092:	685b      	ldr	r3, [r3, #4]
    3094:	482d      	ldr	r0, [pc, #180]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    3096:	4619      	mov	r1, r3
    3098:	f004 fd54 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:72
	    	CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    309c:	687b      	ldr	r3, [r7, #4]
    309e:	685b      	ldr	r3, [r3, #4]
    30a0:	482a      	ldr	r0, [pc, #168]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    30a2:	4619      	mov	r1, r3
    30a4:	f004 fd4e 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:73
	    	CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    30a8:	687b      	ldr	r3, [r7, #4]
    30aa:	685b      	ldr	r3, [r3, #4]
    30ac:	4827      	ldr	r0, [pc, #156]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    30ae:	4619      	mov	r1, r3
    30b0:	f004 fd48 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:74
	    	CLS_BLE_SendStr((unsigned char*)CLS_BLE_DASH_LINE, io->stdOut);
    30b4:	687b      	ldr	r3, [r7, #4]
    30b6:	685b      	ldr	r3, [r3, #4]
    30b8:	4825      	ldr	r0, [pc, #148]	; (3150 <TEST_BLE_ParseCommand+0x240>)
    30ba:	4619      	mov	r1, r3
    30bc:	f004 fd42 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:75
	    	CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    30c0:	687b      	ldr	r3, [r7, #4]
    30c2:	685b      	ldr	r3, [r3, #4]
    30c4:	4821      	ldr	r0, [pc, #132]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    30c6:	4619      	mov	r1, r3
    30c8:	f004 fd3c 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:76
	    	CLS_BLE_SendStr((unsigned char*)"Received the track info\r\n", io->stdOut);
    30cc:	687b      	ldr	r3, [r7, #4]
    30ce:	685b      	ldr	r3, [r3, #4]
    30d0:	482d      	ldr	r0, [pc, #180]	; (3188 <TEST_BLE_ParseCommand+0x278>)
    30d2:	4619      	mov	r1, r3
    30d4:	f004 fd36 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:77
	    	CLS_BLE_SendStr((unsigned char*)CLS_BLE_DASH_LINE, io->stdOut);
    30d8:	687b      	ldr	r3, [r7, #4]
    30da:	685b      	ldr	r3, [r3, #4]
    30dc:	481c      	ldr	r0, [pc, #112]	; (3150 <TEST_BLE_ParseCommand+0x240>)
    30de:	4619      	mov	r1, r3
    30e0:	f004 fd30 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:78
	    	WAIT1_Waitms(1000);
    30e4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    30e8:	f006 fc76 	bl	99d8 <WAIT1_Waitms>
    30ec:	e023      	b.n	3136 <TEST_BLE_ParseCommand+0x226>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:82
	    }
	    else{

	  	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    30ee:	687b      	ldr	r3, [r7, #4]
    30f0:	685b      	ldr	r3, [r3, #4]
    30f2:	4816      	ldr	r0, [pc, #88]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    30f4:	4619      	mov	r1, r3
    30f6:	f004 fd25 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:83
	  	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    30fa:	687b      	ldr	r3, [r7, #4]
    30fc:	685b      	ldr	r3, [r3, #4]
    30fe:	4813      	ldr	r0, [pc, #76]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    3100:	4619      	mov	r1, r3
    3102:	f004 fd1f 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:84
	  	  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut);
    3106:	687b      	ldr	r3, [r7, #4]
    3108:	685b      	ldr	r3, [r3, #4]
    310a:	4810      	ldr	r0, [pc, #64]	; (314c <TEST_BLE_ParseCommand+0x23c>)
    310c:	4619      	mov	r1, r3
    310e:	f004 fd19 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:85
	  	  CLS_BLE_SendStr((unsigned char*)CLS_BLE_DASH_LINE, io->stdOut);
    3112:	687b      	ldr	r3, [r7, #4]
    3114:	685b      	ldr	r3, [r3, #4]
    3116:	480e      	ldr	r0, [pc, #56]	; (3150 <TEST_BLE_ParseCommand+0x240>)
    3118:	4619      	mov	r1, r3
    311a:	f004 fd13 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:86
	  	  CLS_BLE_SendStr((unsigned char*)"Wrong Data! Please resend the Track Data", io->stdOut);
    311e:	687b      	ldr	r3, [r7, #4]
    3120:	685b      	ldr	r3, [r3, #4]
    3122:	481a      	ldr	r0, [pc, #104]	; (318c <TEST_BLE_ParseCommand+0x27c>)
    3124:	4619      	mov	r1, r3
    3126:	f004 fd0d 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:87
	  	  CLS_BLE_SendStr((unsigned char*)CLS_BLE_DASH_LINE, io->stdOut);
    312a:	687b      	ldr	r3, [r7, #4]
    312c:	685b      	ldr	r3, [r3, #4]
    312e:	4808      	ldr	r0, [pc, #32]	; (3150 <TEST_BLE_ParseCommand+0x240>)
    3130:	4619      	mov	r1, r3
    3132:	f004 fd07 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:90
	    }

	    return ERR_OK;
    3136:	2300      	movs	r3, #0
    3138:	e000      	b.n	313c <TEST_BLE_ParseCommand+0x22c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:93
  }

  return ERR_OK; /* no error */
    313a:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:94
}
    313c:	4618      	mov	r0, r3
    313e:	3710      	adds	r7, #16
    3140:	46bd      	mov	sp, r7
    3142:	bd80      	pop	{r7, pc}
    3144:	0000da38 	.word	0x0000da38
    3148:	0000da40 	.word	0x0000da40
    314c:	0000da10 	.word	0x0000da10
    3150:	0000da4c 	.word	0x0000da4c
    3154:	0000da8c 	.word	0x0000da8c
    3158:	0000da98 	.word	0x0000da98
    315c:	0000daa4 	.word	0x0000daa4
    3160:	0000dac8 	.word	0x0000dac8
    3164:	0000daec 	.word	0x0000daec
    3168:	0000db04 	.word	0x0000db04
    316c:	0000db18 	.word	0x0000db18
    3170:	0000db3c 	.word	0x0000db3c
    3174:	0000db68 	.word	0x0000db68
    3178:	0000db70 	.word	0x0000db70
    317c:	0000db78 	.word	0x0000db78
    3180:	20000e48 	.word	0x20000e48
    3184:	20000128 	.word	0x20000128
    3188:	0000db7c 	.word	0x0000db7c
    318c:	0000db98 	.word	0x0000db98

00003190 <testUART>:
testUART():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:106
};



void testUART()
{
    3190:	b580      	push	{r7, lr}
    3192:	f5ad 7d16 	sub.w	sp, sp, #600	; 0x258
    3196:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:108
	  unsigned char buf[600];
	  memset(buf, '\0', sizeof(buf));
    3198:	463b      	mov	r3, r7
    319a:	4618      	mov	r0, r3
    319c:	2100      	movs	r1, #0
    319e:	f44f 7216 	mov.w	r2, #600	; 0x258
    31a2:	f00a fb58 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:109
	  WAIT1_Waitms(2000);
    31a6:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
    31aa:	f006 fc15 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:110
	  while(!msgFinishFlag){
    31ae:	e00d      	b.n	31cc <testUART+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:111
		  (void)CLS_BLE_ReadAndParseWithCommandTable(buf, sizeof(buf), CLS_BLE_GetStdio(), CmdParserTable);
    31b0:	f004 fe1a 	bl	7de8 <CLS_BLE_GetStdio>
    31b4:	4603      	mov	r3, r0
    31b6:	463a      	mov	r2, r7
    31b8:	4610      	mov	r0, r2
    31ba:	f44f 7116 	mov.w	r1, #600	; 0x258
    31be:	461a      	mov	r2, r3
    31c0:	4b0b      	ldr	r3, [pc, #44]	; (31f0 <testUART+0x60>)
    31c2:	f004 fe1d 	bl	7e00 <CLS_BLE_ReadAndParseWithCommandTable>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:112
		  WAIT1_Waitms(50);
    31c6:	2032      	movs	r0, #50	; 0x32
    31c8:	f006 fc06 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:110 (discriminator 1)
void testUART()
{
	  unsigned char buf[600];
	  memset(buf, '\0', sizeof(buf));
	  WAIT1_Waitms(2000);
	  while(!msgFinishFlag){
    31cc:	4b09      	ldr	r3, [pc, #36]	; (31f4 <testUART+0x64>)
    31ce:	781b      	ldrb	r3, [r3, #0]
    31d0:	2b00      	cmp	r3, #0
    31d2:	d0ed      	beq.n	31b0 <testUART+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:115
		  (void)CLS_BLE_ReadAndParseWithCommandTable(buf, sizeof(buf), CLS_BLE_GetStdio(), CmdParserTable);
		  WAIT1_Waitms(50);
		  //memset(buf, '\0', sizeof(buf));
	  }
	  msgFinishFlag = FALSE;
    31d4:	4b07      	ldr	r3, [pc, #28]	; (31f4 <testUART+0x64>)
    31d6:	2200      	movs	r2, #0
    31d8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:116
	  memset(buf, '\0', sizeof(buf));
    31da:	463b      	mov	r3, r7
    31dc:	4618      	mov	r0, r3
    31de:	2100      	movs	r1, #0
    31e0:	f44f 7216 	mov.w	r2, #600	; 0x258
    31e4:	f00a fb37 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:117
}
    31e8:	f507 7716 	add.w	r7, r7, #600	; 0x258
    31ec:	46bd      	mov	sp, r7
    31ee:	bd80      	pop	{r7, pc}
    31f0:	0000dec4 	.word	0x0000dec4
    31f4:	20000128 	.word	0x20000128

000031f8 <getNumberOfMazeSegments>:
getNumberOfMazeSegments():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:120


void getNumberOfMazeSegments(Maze_segments *MazeSegments,const char *buffer) {
    31f8:	b580      	push	{r7, lr}
    31fa:	b086      	sub	sp, #24
    31fc:	af00      	add	r7, sp, #0
    31fe:	6078      	str	r0, [r7, #4]
    3200:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:124
		  char *pch0;
		  char *pch1;
		  char *string;
		  uint8_t sizeOfString = 0;
    3202:	2300      	movs	r3, #0
    3204:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:125
	  	  uint8_t numberOfSegments = 0;
    3206:	2300      	movs	r3, #0
    3208:	75bb      	strb	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:126
	  	  uint8_t endCondition = 0;
    320a:	2300      	movs	r3, #0
    320c:	757b      	strb	r3, [r7, #21]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:130
	  	  char src[4];

	  	 // pch1 = buffer;
		  pch0=strchr(buffer,'$');
    320e:	6838      	ldr	r0, [r7, #0]
    3210:	2124      	movs	r1, #36	; 0x24
    3212:	f00a fb28 	bl	d866 <strchr>
    3216:	6138      	str	r0, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:131
		  pch1=strchr(pch0,';');
    3218:	6938      	ldr	r0, [r7, #16]
    321a:	213b      	movs	r1, #59	; 0x3b
    321c:	f00a fb23 	bl	d866 <strchr>
    3220:	60f8      	str	r0, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:133

		  sizeOfString = (pch1-pch0)-1;
    3222:	68fa      	ldr	r2, [r7, #12]
    3224:	693b      	ldr	r3, [r7, #16]
    3226:	1ad3      	subs	r3, r2, r3
    3228:	b2db      	uxtb	r3, r3
    322a:	3b01      	subs	r3, #1
    322c:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:134
		  memset(src, '\0', sizeof(src));
    322e:	f107 0308 	add.w	r3, r7, #8
    3232:	4618      	mov	r0, r3
    3234:	2100      	movs	r1, #0
    3236:	2204      	movs	r2, #4
    3238:	f00a fb0d 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:135
		  strncpy(src,(pch0+1),sizeOfString);
    323c:	693b      	ldr	r3, [r7, #16]
    323e:	1c5a      	adds	r2, r3, #1
    3240:	7dfb      	ldrb	r3, [r7, #23]
    3242:	f107 0108 	add.w	r1, r7, #8
    3246:	4608      	mov	r0, r1
    3248:	4611      	mov	r1, r2
    324a:	461a      	mov	r2, r3
    324c:	f00a fb37 	bl	d8be <strncpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:136
		  numberOfSegments = atoi(src);
    3250:	f107 0308 	add.w	r3, r7, #8
    3254:	4618      	mov	r0, r3
    3256:	f00a fab1 	bl	d7bc <atoi>
    325a:	4603      	mov	r3, r0
    325c:	75bb      	strb	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:137
		  MazeSegments->numberOfSegments = numberOfSegments;
    325e:	687b      	ldr	r3, [r7, #4]
    3260:	7dba      	ldrb	r2, [r7, #22]
    3262:	f883 23c0 	strb.w	r2, [r3, #960]	; 0x3c0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:138
		  pch0 = getMazeSegment(MazeSegments,pch1,numberOfSegments);
    3266:	7dbb      	ldrb	r3, [r7, #22]
    3268:	6878      	ldr	r0, [r7, #4]
    326a:	68f9      	ldr	r1, [r7, #12]
    326c:	461a      	mov	r2, r3
    326e:	f000 f831 	bl	32d4 <getMazeSegment>
    3272:	6138      	str	r0, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:140

		  pch0=strchr(pch0,'$');
    3274:	6938      	ldr	r0, [r7, #16]
    3276:	2124      	movs	r1, #36	; 0x24
    3278:	f00a faf5 	bl	d866 <strchr>
    327c:	6138      	str	r0, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:141
		  pch1=strchr(pch0,';');
    327e:	6938      	ldr	r0, [r7, #16]
    3280:	213b      	movs	r1, #59	; 0x3b
    3282:	f00a faf0 	bl	d866 <strchr>
    3286:	60f8      	str	r0, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:142
		  memset(src, '\0', sizeof(src));
    3288:	f107 0308 	add.w	r3, r7, #8
    328c:	4618      	mov	r0, r3
    328e:	2100      	movs	r1, #0
    3290:	2204      	movs	r2, #4
    3292:	f00a fae0 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:143
		  strncpy(src,pch0+1,pch1-pch0-1);
    3296:	693b      	ldr	r3, [r7, #16]
    3298:	1c5a      	adds	r2, r3, #1
    329a:	68f9      	ldr	r1, [r7, #12]
    329c:	693b      	ldr	r3, [r7, #16]
    329e:	1acb      	subs	r3, r1, r3
    32a0:	3b01      	subs	r3, #1
    32a2:	f107 0108 	add.w	r1, r7, #8
    32a6:	4608      	mov	r0, r1
    32a8:	4611      	mov	r1, r2
    32aa:	461a      	mov	r2, r3
    32ac:	f00a fb07 	bl	d8be <strncpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:144
		  endCondition=atoi(src);
    32b0:	f107 0308 	add.w	r3, r7, #8
    32b4:	4618      	mov	r0, r3
    32b6:	f00a fa81 	bl	d7bc <atoi>
    32ba:	4603      	mov	r3, r0
    32bc:	757b      	strb	r3, [r7, #21]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:145
		  if (255 == endCondition){
    32be:	7d7b      	ldrb	r3, [r7, #21]
    32c0:	2bff      	cmp	r3, #255	; 0xff
    32c2:	d102      	bne.n	32ca <getNumberOfMazeSegments+0xd2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:146
			  msgFinishFlag = TRUE;
    32c4:	4b02      	ldr	r3, [pc, #8]	; (32d0 <getNumberOfMazeSegments+0xd8>)
    32c6:	2201      	movs	r2, #1
    32c8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:148
		  }
}
    32ca:	3718      	adds	r7, #24
    32cc:	46bd      	mov	sp, r7
    32ce:	bd80      	pop	{r7, pc}
    32d0:	20000128 	.word	0x20000128

000032d4 <getMazeSegment>:
getMazeSegment():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:151


char* getMazeSegment(Maze_segments *MazeSegments,char *buffer, uint8_t numberOfSegments) {
    32d4:	b580      	push	{r7, lr}
    32d6:	b08a      	sub	sp, #40	; 0x28
    32d8:	af00      	add	r7, sp, #0
    32da:	60f8      	str	r0, [r7, #12]
    32dc:	60b9      	str	r1, [r7, #8]
    32de:	4613      	mov	r3, r2
    32e0:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:154
  	  char * pch0;
  	  char * pch1;
  	  pch1 = buffer;
    32e2:	68bb      	ldr	r3, [r7, #8]
    32e4:	627b      	str	r3, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:155
  	  uint8_t sizeOfString = 0;
    32e6:	2300      	movs	r3, #0
    32e8:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:156
	  for(uint8_t i =0; i<numberOfSegments;i++){
    32ec:	2300      	movs	r3, #0
    32ee:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    32f2:	e0f3      	b.n	34dc <getMazeSegment+0x208>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:157
		  WAIT1_Waitms(1);
    32f4:	2001      	movs	r0, #1
    32f6:	f006 fb6f 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:159
		  char * string;
		  pch0=strchr(pch1,'#');
    32fa:	6a78      	ldr	r0, [r7, #36]	; 0x24
    32fc:	2123      	movs	r1, #35	; 0x23
    32fe:	f00a fab2 	bl	d866 <strchr>
    3302:	61f8      	str	r0, [r7, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:160
		  pch0=strchr(pch0,';');
    3304:	69f8      	ldr	r0, [r7, #28]
    3306:	213b      	movs	r1, #59	; 0x3b
    3308:	f00a faad 	bl	d866 <strchr>
    330c:	61f8      	str	r0, [r7, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:161
		  pch1=strchr(pch0+1,';');
    330e:	69fb      	ldr	r3, [r7, #28]
    3310:	3301      	adds	r3, #1
    3312:	4618      	mov	r0, r3
    3314:	213b      	movs	r1, #59	; 0x3b
    3316:	f00a faa6 	bl	d866 <strchr>
    331a:	6278      	str	r0, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:164
		  char src[4];

		  sizeOfString = (pch1-pch0)-1;
    331c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    331e:	69fb      	ldr	r3, [r7, #28]
    3320:	1ad3      	subs	r3, r2, r3
    3322:	b2db      	uxtb	r3, r3
    3324:	3b01      	subs	r3, #1
    3326:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:165
		  memset(src, '\0', sizeof(src));
    332a:	f107 0310 	add.w	r3, r7, #16
    332e:	4618      	mov	r0, r3
    3330:	2100      	movs	r1, #0
    3332:	2204      	movs	r2, #4
    3334:	f00a fa8f 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:166
		  strncpy(src,(pch0+1),sizeOfString);
    3338:	69fb      	ldr	r3, [r7, #28]
    333a:	1c5a      	adds	r2, r3, #1
    333c:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
    3340:	f107 0110 	add.w	r1, r7, #16
    3344:	4608      	mov	r0, r1
    3346:	4611      	mov	r1, r2
    3348:	461a      	mov	r2, r3
    334a:	f00a fab8 	bl	d8be <strncpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:167
		  int16 segmentNumber = atoi(src);
    334e:	f107 0310 	add.w	r3, r7, #16
    3352:	4618      	mov	r0, r3
    3354:	f00a fa32 	bl	d7bc <atoi>
    3358:	4603      	mov	r3, r0
    335a:	837b      	strh	r3, [r7, #26]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:170


		  pch0=strchr(pch1,';');
    335c:	6a78      	ldr	r0, [r7, #36]	; 0x24
    335e:	213b      	movs	r1, #59	; 0x3b
    3360:	f00a fa81 	bl	d866 <strchr>
    3364:	61f8      	str	r0, [r7, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:171
		  pch1=strchr(pch0+1,';');
    3366:	69fb      	ldr	r3, [r7, #28]
    3368:	3301      	adds	r3, #1
    336a:	4618      	mov	r0, r3
    336c:	213b      	movs	r1, #59	; 0x3b
    336e:	f00a fa7a 	bl	d866 <strchr>
    3372:	6278      	str	r0, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:172
		  sizeOfString = (pch1-pch0)-1;
    3374:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    3376:	69fb      	ldr	r3, [r7, #28]
    3378:	1ad3      	subs	r3, r2, r3
    337a:	b2db      	uxtb	r3, r3
    337c:	3b01      	subs	r3, #1
    337e:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:173
		  memset(src, '\0', sizeof(src));
    3382:	f107 0310 	add.w	r3, r7, #16
    3386:	4618      	mov	r0, r3
    3388:	2100      	movs	r1, #0
    338a:	2204      	movs	r2, #4
    338c:	f00a fa63 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:174
		  strncpy(src,(pch0+1),sizeOfString);
    3390:	69fb      	ldr	r3, [r7, #28]
    3392:	1c5a      	adds	r2, r3, #1
    3394:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
    3398:	f107 0110 	add.w	r1, r7, #16
    339c:	4608      	mov	r0, r1
    339e:	4611      	mov	r1, r2
    33a0:	461a      	mov	r2, r3
    33a2:	f00a fa8c 	bl	d8be <strncpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:176

		  int16 numberOfFields = atoi(src);
    33a6:	f107 0310 	add.w	r3, r7, #16
    33aa:	4618      	mov	r0, r3
    33ac:	f00a fa06 	bl	d7bc <atoi>
    33b0:	4603      	mov	r3, r0
    33b2:	833b      	strh	r3, [r7, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:178

		  if((numberOfFields == -90)||(numberOfFields == 90)||(numberOfFields == -180)||(numberOfFields == 180)){
    33b4:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
    33b8:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    33bc:	d00c      	beq.n	33d8 <getMazeSegment+0x104>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:178 (discriminator 1)
    33be:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
    33c2:	2b5a      	cmp	r3, #90	; 0x5a
    33c4:	d008      	beq.n	33d8 <getMazeSegment+0x104>
    33c6:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
    33ca:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    33ce:	d003      	beq.n	33d8 <getMazeSegment+0x104>
    33d0:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
    33d4:	2bb4      	cmp	r3, #180	; 0xb4
    33d6:	d10c      	bne.n	33f2 <getMazeSegment+0x11e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:179
			  MazeSegments->segments[segmentNumber-1].SingleSegment = numberOfFields;
    33d8:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
    33dc:	1e5a      	subs	r2, r3, #1
    33de:	f9b7 1018 	ldrsh.w	r1, [r7, #24]
    33e2:	68f8      	ldr	r0, [r7, #12]
    33e4:	4613      	mov	r3, r2
    33e6:	005b      	lsls	r3, r3, #1
    33e8:	4413      	add	r3, r2
    33ea:	00db      	lsls	r3, r3, #3
    33ec:	4403      	add	r3, r0
    33ee:	6019      	str	r1, [r3, #0]
    33f0:	e06f      	b.n	34d2 <getMazeSegment+0x1fe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:182
		  }
		  else{
			  for(uint8_t j =0; j<numberOfFields;j++){
    33f2:	2300      	movs	r3, #0
    33f4:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
    33f8:	e065      	b.n	34c6 <getMazeSegment+0x1f2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:183 (discriminator 2)
				  WAIT1_Waitms(10);
    33fa:	200a      	movs	r0, #10
    33fc:	f006 faec 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:184 (discriminator 2)
				  memset(src, '\0', sizeof(src));
    3400:	f107 0310 	add.w	r3, r7, #16
    3404:	4618      	mov	r0, r3
    3406:	2100      	movs	r1, #0
    3408:	2204      	movs	r2, #4
    340a:	f00a fa24 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:185 (discriminator 2)
				  strncpy(src,pch1+(1),1);
    340e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3410:	3301      	adds	r3, #1
    3412:	f107 0210 	add.w	r2, r7, #16
    3416:	4610      	mov	r0, r2
    3418:	4619      	mov	r1, r3
    341a:	2201      	movs	r2, #1
    341c:	f00a fa4f 	bl	d8be <strncpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:186 (discriminator 2)
				  bool wallRight=atoi(src);
    3420:	f107 0310 	add.w	r3, r7, #16
    3424:	4618      	mov	r0, r3
    3426:	f00a f9c9 	bl	d7bc <atoi>
    342a:	4603      	mov	r3, r0
    342c:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:188 (discriminator 2)

				  memset(src, '\0', sizeof(src));
    342e:	f107 0310 	add.w	r3, r7, #16
    3432:	4618      	mov	r0, r3
    3434:	2100      	movs	r1, #0
    3436:	2204      	movs	r2, #4
    3438:	f00a fa0d 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:189 (discriminator 2)
				  strncpy(src,pch1+(3),1);
    343c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    343e:	3303      	adds	r3, #3
    3440:	f107 0210 	add.w	r2, r7, #16
    3444:	4610      	mov	r0, r2
    3446:	4619      	mov	r1, r3
    3448:	2201      	movs	r2, #1
    344a:	f00a fa38 	bl	d8be <strncpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:190 (discriminator 2)
				  bool wallLeft=atoi(src);
    344e:	f107 0310 	add.w	r3, r7, #16
    3452:	4618      	mov	r0, r3
    3454:	f00a f9b2 	bl	d7bc <atoi>
    3458:	4603      	mov	r3, r0
    345a:	75bb      	strb	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:191 (discriminator 2)
				  pch1=strchr(pch1+3,';');
    345c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    345e:	3303      	adds	r3, #3
    3460:	4618      	mov	r0, r3
    3462:	213b      	movs	r1, #59	; 0x3b
    3464:	f00a f9ff 	bl	d866 <strchr>
    3468:	6278      	str	r0, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:193 (discriminator 2)

				  MazeSegments->segments[segmentNumber-1].SingleSegment = numberOfFields;
    346a:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
    346e:	1e5a      	subs	r2, r3, #1
    3470:	f9b7 1018 	ldrsh.w	r1, [r7, #24]
    3474:	68f8      	ldr	r0, [r7, #12]
    3476:	4613      	mov	r3, r2
    3478:	005b      	lsls	r3, r3, #1
    347a:	4413      	add	r3, r2
    347c:	00db      	lsls	r3, r3, #3
    347e:	4403      	add	r3, r0
    3480:	6019      	str	r1, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:194 (discriminator 2)
				  MazeSegments->segments[segmentNumber-1].rightWallAvailability[j] = wallRight;
    3482:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
    3486:	1e5a      	subs	r2, r3, #1
    3488:	f897 0022 	ldrb.w	r0, [r7, #34]	; 0x22
    348c:	68f9      	ldr	r1, [r7, #12]
    348e:	4613      	mov	r3, r2
    3490:	005b      	lsls	r3, r3, #1
    3492:	4413      	add	r3, r2
    3494:	00db      	lsls	r3, r3, #3
    3496:	4403      	add	r3, r0
    3498:	440b      	add	r3, r1
    349a:	7dfa      	ldrb	r2, [r7, #23]
    349c:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:195 (discriminator 2)
				  MazeSegments->segments[segmentNumber-1].leftWallAvailability[j] = wallLeft;
    349e:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
    34a2:	1e5a      	subs	r2, r3, #1
    34a4:	f897 1022 	ldrb.w	r1, [r7, #34]	; 0x22
    34a8:	68f8      	ldr	r0, [r7, #12]
    34aa:	4613      	mov	r3, r2
    34ac:	005b      	lsls	r3, r3, #1
    34ae:	4413      	add	r3, r2
    34b0:	00db      	lsls	r3, r3, #3
    34b2:	4403      	add	r3, r0
    34b4:	440b      	add	r3, r1
    34b6:	3308      	adds	r3, #8
    34b8:	7dba      	ldrb	r2, [r7, #22]
    34ba:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:182 (discriminator 2)

		  if((numberOfFields == -90)||(numberOfFields == 90)||(numberOfFields == -180)||(numberOfFields == 180)){
			  MazeSegments->segments[segmentNumber-1].SingleSegment = numberOfFields;
		  }
		  else{
			  for(uint8_t j =0; j<numberOfFields;j++){
    34bc:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
    34c0:	3301      	adds	r3, #1
    34c2:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:182 (discriminator 1)
    34c6:	f897 2022 	ldrb.w	r2, [r7, #34]	; 0x22
    34ca:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
    34ce:	429a      	cmp	r2, r3
    34d0:	db93      	blt.n	33fa <getMazeSegment+0x126>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:156
char* getMazeSegment(Maze_segments *MazeSegments,char *buffer, uint8_t numberOfSegments) {
  	  char * pch0;
  	  char * pch1;
  	  pch1 = buffer;
  	  uint8_t sizeOfString = 0;
	  for(uint8_t i =0; i<numberOfSegments;i++){
    34d2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
    34d6:	3301      	adds	r3, #1
    34d8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:156 (discriminator 1)
    34dc:	f897 2023 	ldrb.w	r2, [r7, #35]	; 0x23
    34e0:	79fb      	ldrb	r3, [r7, #7]
    34e2:	429a      	cmp	r2, r3
    34e4:	f4ff af06 	bcc.w	32f4 <getMazeSegment+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:201
			  }
		  }
		  //memset(string, 0, 4);
	  }

	  return (pch1);
    34e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Exploring_Com.c:202
}
    34ea:	4618      	mov	r0, r3
    34ec:	3728      	adds	r7, #40	; 0x28
    34ee:	46bd      	mov	sp, r7
    34f0:	bd80      	pop	{r7, pc}
    34f2:	bf00      	nop

000034f4 <setState>:
setState():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/FSM.c:279

void decreaseValue (uint8_t *value){
	*value = *value -1;
}

void setState(state_t state){
    34f4:	b480      	push	{r7}
    34f6:	b083      	sub	sp, #12
    34f8:	af00      	add	r7, sp, #0
    34fa:	4603      	mov	r3, r0
    34fc:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/FSM.c:280
	actMainState = state;
    34fe:	4b04      	ldr	r3, [pc, #16]	; (3510 <setState+0x1c>)
    3500:	79fa      	ldrb	r2, [r7, #7]
    3502:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/FSM.c:281
}
    3504:	370c      	adds	r7, #12
    3506:	46bd      	mov	sp, r7
    3508:	f85d 7b04 	ldr.w	r7, [sp], #4
    350c:	4770      	bx	lr
    350e:	bf00      	nop
    3510:	20000001 	.word	0x20000001

00003514 <SPI_WriteRead>:
SPI_WriteRead():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:21
/*!
* \brief Writes a byte and reads the value
* \param val Value to write. This value will be shifted out
* \return The value shifted in
*/
static int16_t SPI_WriteRead(int16_t val) {
    3514:	b580      	push	{r7, lr}
    3516:	b084      	sub	sp, #16
    3518:	af00      	add	r7, sp, #0
    351a:	4603      	mov	r3, r0
    351c:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:24
	int16_t ch;

  while (SM1_GetCharsInTxBuf()!=0) {} /* wait until tx is empty */
    351e:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:24 (discriminator 1)
    3520:	f005 f9b6 	bl	8890 <SM1_GetCharsInTxBuf>
    3524:	4603      	mov	r3, r0
    3526:	2b00      	cmp	r3, #0
    3528:	d1fa      	bne.n	3520 <SPI_WriteRead+0xc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:25
  while (SM1_SendChar(val)!=ERR_OK) {} /* send character */
    352a:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:25 (discriminator 1)
    352c:	88fb      	ldrh	r3, [r7, #6]
    352e:	4618      	mov	r0, r3
    3530:	f005 f8ea 	bl	8708 <SM1_SendChar>
    3534:	4603      	mov	r3, r0
    3536:	2b00      	cmp	r3, #0
    3538:	d1f8      	bne.n	352c <SPI_WriteRead+0x18>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:26
  while (SM1_GetCharsInTxBuf()!=0) {} /* wait until data has been sent */
    353a:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:26 (discriminator 1)
    353c:	f005 f9a8 	bl	8890 <SM1_GetCharsInTxBuf>
    3540:	4603      	mov	r3, r0
    3542:	2b00      	cmp	r3, #0
    3544:	d1fa      	bne.n	353c <SPI_WriteRead+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:27
  while (SM1_GetCharsInRxBuf()==0) {} /* wait until we receive data */
    3546:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:27 (discriminator 1)
    3548:	f005 f996 	bl	8878 <SM1_GetCharsInRxBuf>
    354c:	4603      	mov	r3, r0
    354e:	2b00      	cmp	r3, #0
    3550:	d0fa      	beq.n	3548 <SPI_WriteRead+0x34>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:28
  while (SM1_RecvChar(&ch)!=ERR_OK) {} /* get data */
    3552:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:28 (discriminator 1)
    3554:	f107 030e 	add.w	r3, r7, #14
    3558:	4618      	mov	r0, r3
    355a:	f005 f86d 	bl	8638 <SM1_RecvChar>
    355e:	4603      	mov	r3, r0
    3560:	2b00      	cmp	r3, #0
    3562:	d1f7      	bne.n	3554 <SPI_WriteRead+0x40>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:29
  SM1_ClearRxBuf();
    3564:	f005 f942 	bl	87ec <SM1_ClearRxBuf>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:30
  return ch;
    3568:	89fb      	ldrh	r3, [r7, #14]
    356a:	b21b      	sxth	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:31
}
    356c:	4618      	mov	r0, r3
    356e:	3710      	adds	r7, #16
    3570:	46bd      	mov	sp, r7
    3572:	bd80      	pop	{r7, pc}

00003574 <RF_WriteRegister>:
RF_WriteRegister():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:33

void RF_WriteRegister(int8_t reg, int16_t val) {
    3574:	b580      	push	{r7, lr}
    3576:	b082      	sub	sp, #8
    3578:	af00      	add	r7, sp, #0
    357a:	4602      	mov	r2, r0
    357c:	460b      	mov	r3, r1
    357e:	71fa      	strb	r2, [r7, #7]
    3580:	80bb      	strh	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:34
  (void)SPI_WriteRead((reg<<8)|val); /* write register command */
    3582:	f997 3007 	ldrsb.w	r3, [r7, #7]
    3586:	021b      	lsls	r3, r3, #8
    3588:	b29b      	uxth	r3, r3
    358a:	461a      	mov	r2, r3
    358c:	88bb      	ldrh	r3, [r7, #4]
    358e:	4313      	orrs	r3, r2
    3590:	b29b      	uxth	r3, r3
    3592:	b21b      	sxth	r3, r3
    3594:	4618      	mov	r0, r3
    3596:	f7ff ffbd 	bl	3514 <SPI_WriteRead>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:35
}
    359a:	3708      	adds	r7, #8
    359c:	46bd      	mov	sp, r7
    359e:	bd80      	pop	{r7, pc}

000035a0 <RF_ReadRegister>:
RF_ReadRegister():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:37

int16_t RF_ReadRegister(int8_t reg) {
    35a0:	b580      	push	{r7, lr}
    35a2:	b082      	sub	sp, #8
    35a4:	af00      	add	r7, sp, #0
    35a6:	4603      	mov	r3, r0
    35a8:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:38
  return SPI_WriteRead(0b1000000000000000|(reg<<8)); /* write register command */
    35aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
    35ae:	021b      	lsls	r3, r3, #8
    35b0:	b29b      	uxth	r3, r3
    35b2:	ea6f 4343 	mvn.w	r3, r3, lsl #17
    35b6:	ea6f 4353 	mvn.w	r3, r3, lsr #17
    35ba:	b29b      	uxth	r3, r3
    35bc:	b21b      	sxth	r3, r3
    35be:	4618      	mov	r0, r3
    35c0:	f7ff ffa8 	bl	3514 <SPI_WriteRead>
    35c4:	4603      	mov	r3, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:39
}
    35c6:	4618      	mov	r0, r3
    35c8:	3708      	adds	r7, #8
    35ca:	46bd      	mov	sp, r7
    35cc:	bd80      	pop	{r7, pc}
    35ce:	bf00      	nop

000035d0 <initIMU>:
initIMU():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:42

bool initIMU(void)
{
    35d0:	b580      	push	{r7, lr}
    35d2:	b082      	sub	sp, #8
    35d4:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:45
	uint16_t data;
	uint8_t result;
	data = RF_ReadRegister(0x0F);
    35d6:	200f      	movs	r0, #15
    35d8:	f7ff ffe2 	bl	35a0 <RF_ReadRegister>
    35dc:	4603      	mov	r3, r0
    35de:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:46
	data = RF_ReadRegister(0x0F);
    35e0:	200f      	movs	r0, #15
    35e2:	f7ff ffdd 	bl	35a0 <RF_ReadRegister>
    35e6:	4603      	mov	r3, r0
    35e8:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:47
	result=(uint8_t)data;
    35ea:	88fb      	ldrh	r3, [r7, #6]
    35ec:	717b      	strb	r3, [r7, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:49

	if(result == 0x69){
    35ee:	797b      	ldrb	r3, [r7, #5]
    35f0:	2b69      	cmp	r3, #105	; 0x69
    35f2:	d115      	bne.n	3620 <initIMU+0x50>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:50
		RF_WriteRegister(0x12, (int16_t)0x00);//multiple byte access NOT
    35f4:	2012      	movs	r0, #18
    35f6:	2100      	movs	r1, #0
    35f8:	f7ff ffbc 	bl	3574 <RF_WriteRegister>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:52

		RF_WriteRegister(0x10, (int16_t)0x08);//+- 4g full scale
    35fc:	2010      	movs	r0, #16
    35fe:	2108      	movs	r1, #8
    3600:	f7ff ffb8 	bl	3574 <RF_WriteRegister>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:53
		RF_WriteRegister(0x11, (int16_t)0x0C);//500dps full scale
    3604:	2011      	movs	r0, #17
    3606:	210c      	movs	r1, #12
    3608:	f7ff ffb4 	bl	3574 <RF_WriteRegister>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:55

		RF_WriteRegister(0x10, (int16_t)0x88);//1.66kHz Samplingrate
    360c:	2010      	movs	r0, #16
    360e:	2188      	movs	r1, #136	; 0x88
    3610:	f7ff ffb0 	bl	3574 <RF_WriteRegister>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:56
		RF_WriteRegister(0x11, (int16_t)0x8C);// 1.66kHz Samplingrate
    3614:	2011      	movs	r0, #17
    3616:	218c      	movs	r1, #140	; 0x8c
    3618:	f7ff ffac 	bl	3574 <RF_WriteRegister>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:58

		return TRUE;
    361c:	2301      	movs	r3, #1
    361e:	e000      	b.n	3622 <initIMU+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:60
	} else {
		return FALSE;
    3620:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:64
	}


}
    3622:	4618      	mov	r0, r3
    3624:	3708      	adds	r7, #8
    3626:	46bd      	mov	sp, r7
    3628:	bd80      	pop	{r7, pc}
    362a:	bf00      	nop

0000362c <LSM6DSL_ACC_GYRO_GetRawAccData_1>:
LSM6DSL_ACC_GYRO_GetRawAccData_1():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:77
* Input          : pointer to [uint8_t]
* Output         : GetAccData buffer uint8_t
* Return         : Status [MEMS_ERROR, MEMS_SUCCESS]
*******************************************************************************/
void LSM6DSL_ACC_GYRO_GetRawAccData_1(uint8_t *buff)
{
    362c:	b580      	push	{r7, lr}
    362e:	b084      	sub	sp, #16
    3630:	af00      	add	r7, sp, #0
    3632:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:81
uint8_t i, j, k;
  uint8_t numberOfByteForDimension;

  numberOfByteForDimension=6/3;
    3634:	2302      	movs	r3, #2
    3636:	737b      	strb	r3, [r7, #13]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:83

  k=0;
    3638:	2300      	movs	r3, #0
    363a:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:84
  for (i=0; i<numberOfByteForDimension;i++ )
    363c:	2300      	movs	r3, #0
    363e:	73fb      	strb	r3, [r7, #15]
    3640:	e015      	b.n	366e <LSM6DSL_ACC_GYRO_GetRawAccData_1+0x42>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:87 (discriminator 2)
  {
		uint16_t data;
		data = RF_ReadRegister(0x28+k);
    3642:	7bbb      	ldrb	r3, [r7, #14]
    3644:	3328      	adds	r3, #40	; 0x28
    3646:	b2db      	uxtb	r3, r3
    3648:	b2db      	uxtb	r3, r3
    364a:	b25b      	sxtb	r3, r3
    364c:	4618      	mov	r0, r3
    364e:	f7ff ffa7 	bl	35a0 <RF_ReadRegister>
    3652:	4603      	mov	r3, r0
    3654:	817b      	strh	r3, [r7, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:88 (discriminator 2)
		buff[k]=(uint8_t)data;
    3656:	7bbb      	ldrb	r3, [r7, #14]
    3658:	687a      	ldr	r2, [r7, #4]
    365a:	4413      	add	r3, r2
    365c:	897a      	ldrh	r2, [r7, #10]
    365e:	b2d2      	uxtb	r2, r2
    3660:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:89 (discriminator 2)
		k++;
    3662:	7bbb      	ldrb	r3, [r7, #14]
    3664:	3301      	adds	r3, #1
    3666:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:84 (discriminator 2)
  uint8_t numberOfByteForDimension;

  numberOfByteForDimension=6/3;

  k=0;
  for (i=0; i<numberOfByteForDimension;i++ )
    3668:	7bfb      	ldrb	r3, [r7, #15]
    366a:	3301      	adds	r3, #1
    366c:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:84 (discriminator 1)
    366e:	7bfa      	ldrb	r2, [r7, #15]
    3670:	7b7b      	ldrb	r3, [r7, #13]
    3672:	429a      	cmp	r2, r3
    3674:	d3e5      	bcc.n	3642 <LSM6DSL_ACC_GYRO_GetRawAccData_1+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:91
		uint16_t data;
		data = RF_ReadRegister(0x28+k);
		buff[k]=(uint8_t)data;
		k++;
  }
}
    3676:	3710      	adds	r7, #16
    3678:	46bd      	mov	sp, r7
    367a:	bd80      	pop	{r7, pc}

0000367c <LSM6DSL_ACC_GYRO_GetRawGyroData_1>:
LSM6DSL_ACC_GYRO_GetRawGyroData_1():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:101
* Input          : pointer to [uint8_t]
* Output         : GetGyroData buffer uint8_t
* Return         : Status [MEMS_ERROR, MEMS_SUCCESS]
*******************************************************************************/
void LSM6DSL_ACC_GYRO_GetRawGyroData_1(uint8_t *buff)
{
    367c:	b580      	push	{r7, lr}
    367e:	b084      	sub	sp, #16
    3680:	af00      	add	r7, sp, #0
    3682:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:105
	uint8_t i, j, k;
  uint8_t numberOfByteForDimension;

  numberOfByteForDimension=6/3;
    3684:	2302      	movs	r3, #2
    3686:	737b      	strb	r3, [r7, #13]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:107

  k=0;
    3688:	2300      	movs	r3, #0
    368a:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:108
  for (i=0; i<numberOfByteForDimension;i++ )
    368c:	2300      	movs	r3, #0
    368e:	73fb      	strb	r3, [r7, #15]
    3690:	e015      	b.n	36be <LSM6DSL_ACC_GYRO_GetRawGyroData_1+0x42>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:111 (discriminator 2)
  {
		uint16_t data;
		data = RF_ReadRegister(0x26+k);
    3692:	7bbb      	ldrb	r3, [r7, #14]
    3694:	3326      	adds	r3, #38	; 0x26
    3696:	b2db      	uxtb	r3, r3
    3698:	b2db      	uxtb	r3, r3
    369a:	b25b      	sxtb	r3, r3
    369c:	4618      	mov	r0, r3
    369e:	f7ff ff7f 	bl	35a0 <RF_ReadRegister>
    36a2:	4603      	mov	r3, r0
    36a4:	817b      	strh	r3, [r7, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:112 (discriminator 2)
		buff[k]=(uint8_t)data;
    36a6:	7bbb      	ldrb	r3, [r7, #14]
    36a8:	687a      	ldr	r2, [r7, #4]
    36aa:	4413      	add	r3, r2
    36ac:	897a      	ldrh	r2, [r7, #10]
    36ae:	b2d2      	uxtb	r2, r2
    36b0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:113 (discriminator 2)
		k++;
    36b2:	7bbb      	ldrb	r3, [r7, #14]
    36b4:	3301      	adds	r3, #1
    36b6:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:108 (discriminator 2)
  uint8_t numberOfByteForDimension;

  numberOfByteForDimension=6/3;

  k=0;
  for (i=0; i<numberOfByteForDimension;i++ )
    36b8:	7bfb      	ldrb	r3, [r7, #15]
    36ba:	3301      	adds	r3, #1
    36bc:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:108 (discriminator 1)
    36be:	7bfa      	ldrb	r2, [r7, #15]
    36c0:	7b7b      	ldrb	r3, [r7, #13]
    36c2:	429a      	cmp	r2, r3
    36c4:	d3e5      	bcc.n	3692 <LSM6DSL_ACC_GYRO_GetRawGyroData_1+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:115
		uint16_t data;
		data = RF_ReadRegister(0x26+k);
		buff[k]=(uint8_t)data;
		k++;
  }
}
    36c6:	3710      	adds	r7, #16
    36c8:	46bd      	mov	sp, r7
    36ca:	bd80      	pop	{r7, pc}

000036cc <Get_X_AxesRaw_1>:
Get_X_AxesRaw_1():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:124
// * @brief  Read raw data from LSM6DSL Accelerometer
 * @param  pData the pointer where the accelerometer raw data are stored
 * @retval LSM6DSL_STATUS_OK in case of success, an error code otherwise
 */
void Get_X_AxesRaw_1(int16_t *pData)
{
    36cc:	b580      	push	{r7, lr}
    36ce:	b084      	sub	sp, #16
    36d0:	af00      	add	r7, sp, #0
    36d2:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:125
  uint8_t regValue[2] = {0, 0};
    36d4:	2300      	movs	r3, #0
    36d6:	733b      	strb	r3, [r7, #12]
    36d8:	2300      	movs	r3, #0
    36da:	737b      	strb	r3, [r7, #13]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:128

  /* Read output registers from LSM6DSL_ACC_GYRO_OUTX_L_XL to LSM6DSL_ACC_GYRO_OUTZ_H_XL. */
  LSM6DSL_ACC_GYRO_GetRawAccData_1(regValue);
    36dc:	f107 030c 	add.w	r3, r7, #12
    36e0:	4618      	mov	r0, r3
    36e2:	f7ff ffa3 	bl	362c <LSM6DSL_ACC_GYRO_GetRawAccData_1>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:131

  /* Format the data. */
  *pData = ( ( ( ( int16_t )regValue[1] ) << 8 ) + ( int16_t )regValue[0] );
    36e6:	7b7b      	ldrb	r3, [r7, #13]
    36e8:	021b      	lsls	r3, r3, #8
    36ea:	b29a      	uxth	r2, r3
    36ec:	7b3b      	ldrb	r3, [r7, #12]
    36ee:	4413      	add	r3, r2
    36f0:	b29b      	uxth	r3, r3
    36f2:	b29a      	uxth	r2, r3
    36f4:	687b      	ldr	r3, [r7, #4]
    36f6:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:134


}
    36f8:	3710      	adds	r7, #16
    36fa:	46bd      	mov	sp, r7
    36fc:	bd80      	pop	{r7, pc}
    36fe:	bf00      	nop

00003700 <Get_G_AxesRaw_1>:
Get_G_AxesRaw_1():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:142
 * @brief  Read raw data from LSM6DSL Gyroscope
 * @param  pData the pointer where the gyroscope raw data are stored
 * @retval LSM6DSL_STATUS_OK in case of success, an error code otherwise
 */
void Get_G_AxesRaw_1(int16_t *pData)
{
    3700:	b580      	push	{r7, lr}
    3702:	b084      	sub	sp, #16
    3704:	af00      	add	r7, sp, #0
    3706:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:143
  uint8_t regValue[2] = {0, 0};
    3708:	2300      	movs	r3, #0
    370a:	733b      	strb	r3, [r7, #12]
    370c:	2300      	movs	r3, #0
    370e:	737b      	strb	r3, [r7, #13]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:146

  /* Read output registers from LSM6DSL_ACC_GYRO_OUTX_L_G to LSM6DSL_ACC_GYRO_OUTZ_H_G. */
 LSM6DSL_ACC_GYRO_GetRawGyroData_1(regValue);
    3710:	f107 030c 	add.w	r3, r7, #12
    3714:	4618      	mov	r0, r3
    3716:	f7ff ffb1 	bl	367c <LSM6DSL_ACC_GYRO_GetRawGyroData_1>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:149

  /* Format the data. */
  *pData = ( ( ( ( int16_t )regValue[1] ) << 8 ) + ( int16_t )regValue[0] );
    371a:	7b7b      	ldrb	r3, [r7, #13]
    371c:	021b      	lsls	r3, r3, #8
    371e:	b29a      	uxth	r2, r3
    3720:	7b3b      	ldrb	r3, [r7, #12]
    3722:	4413      	add	r3, r2
    3724:	b29b      	uxth	r3, r3
    3726:	b29a      	uxth	r2, r3
    3728:	687b      	ldr	r3, [r7, #4]
    372a:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:151

}
    372c:	3710      	adds	r7, #16
    372e:	46bd      	mov	sp, r7
    3730:	bd80      	pop	{r7, pc}
    3732:	bf00      	nop

00003734 <Get_X_Axes_1>:
Get_X_Axes_1():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:161
 * @brief  Read data from LSM6DSL Accelerometer
 * @param  pData the pointer where the accelerometer data are stored
 * @retval LSM6DSL_STATUS_OK in case of success, an error code otherwise
 */
void Get_X_Axes_1(IMU_data_t *pData)
{
    3734:	b580      	push	{r7, lr}
    3736:	b084      	sub	sp, #16
    3738:	af00      	add	r7, sp, #0
    373a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:166
  int16_t dataRaw;


  /* Read raw data from LSM6DSL output register. */
  Get_X_AxesRaw_1(&dataRaw);
    373c:	f107 030e 	add.w	r3, r7, #14
    3740:	4618      	mov	r0, r3
    3742:	f7ff ffc3 	bl	36cc <Get_X_AxesRaw_1>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:169

  /* Calculate the data. */
  pData->raw_Values.x_Axis_Acc_mg = dataRaw * 0.122f;
    3746:	89fb      	ldrh	r3, [r7, #14]
    3748:	b21b      	sxth	r3, r3
    374a:	ee07 3a90 	vmov	s15, r3
    374e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    3752:	eddf 7a16 	vldr	s15, [pc, #88]	; 37ac <Get_X_Axes_1+0x78>
    3756:	ee67 7a27 	vmul.f32	s15, s14, s15
    375a:	687b      	ldr	r3, [r7, #4]
    375c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:170
  pData->unit_Values.x_Axis_Acc_ms2 = (pData->raw_Values.x_Axis_Acc_mg - pData->bias_Values.bias_x_Axis_Acc_mg)*0.001f*-9.81f;
    3760:	687b      	ldr	r3, [r7, #4]
    3762:	ed93 7a00 	vldr	s14, [r3]
    3766:	687b      	ldr	r3, [r7, #4]
    3768:	edd3 7a04 	vldr	s15, [r3, #16]
    376c:	ee37 7a67 	vsub.f32	s14, s14, s15
    3770:	eddf 7a0f 	vldr	s15, [pc, #60]	; 37b0 <Get_X_Axes_1+0x7c>
    3774:	ee27 7a27 	vmul.f32	s14, s14, s15
    3778:	eddf 7a0e 	vldr	s15, [pc, #56]	; 37b4 <Get_X_Axes_1+0x80>
    377c:	ee67 7a27 	vmul.f32	s15, s14, s15
    3780:	687b      	ldr	r3, [r7, #4]
    3782:	edc3 7a08 	vstr	s15, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:171
  pData->unit_Values.x_Axis_Acc_velocity = pData->unit_Values.x_Axis_Acc_velocity + (pData->unit_Values.x_Axis_Acc_ms2*SAMPLETIME);
    3786:	687b      	ldr	r3, [r7, #4]
    3788:	ed93 7a0b 	vldr	s14, [r3, #44]	; 0x2c
    378c:	687b      	ldr	r3, [r7, #4]
    378e:	edd3 6a08 	vldr	s13, [r3, #32]
    3792:	eddf 7a09 	vldr	s15, [pc, #36]	; 37b8 <Get_X_Axes_1+0x84>
    3796:	ee66 7aa7 	vmul.f32	s15, s13, s15
    379a:	ee77 7a27 	vadd.f32	s15, s14, s15
    379e:	687b      	ldr	r3, [r7, #4]
    37a0:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:172
}
    37a4:	3710      	adds	r7, #16
    37a6:	46bd      	mov	sp, r7
    37a8:	bd80      	pop	{r7, pc}
    37aa:	bf00      	nop
    37ac:	3df9db23 	.word	0x3df9db23
    37b0:	3a83126f 	.word	0x3a83126f
    37b4:	c11cf5c3 	.word	0xc11cf5c3
    37b8:	3a03126f 	.word	0x3a03126f
$d():
    37bc:	00000000 	.word	0x00000000

000037c0 <Get_G_Axes_1>:
Get_G_Axes_1():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:182
 * @brief  Read data from LSM6DSL Gyroscope
 * @param  pData the pointer where the gyroscope data are stored
 * @retval LSM6DSL_STATUS_OK in case of success, an error code otherwise
 */
void Get_G_Axes_1(IMU_data_t *pData)
{
    37c0:	b580      	push	{r7, lr}
    37c2:	b084      	sub	sp, #16
    37c4:	af00      	add	r7, sp, #0
    37c6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:187
  int16_t dataRaw;


  /* Read raw data from LSM6DSL output register. */
  Get_G_AxesRaw_1(&dataRaw);
    37c8:	f107 030e 	add.w	r3, r7, #14
    37cc:	4618      	mov	r0, r3
    37ce:	f7ff ff97 	bl	3700 <Get_G_AxesRaw_1>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:190

  /* Calculate the data. */
  pData->raw_Values.z_Axis_Gyro_mdps = dataRaw * 70.0f;//17.5f at 500dps;
    37d2:	89fb      	ldrh	r3, [r7, #14]
    37d4:	b21b      	sxth	r3, r3
    37d6:	ee07 3a90 	vmov	s15, r3
    37da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    37de:	eddf 7a22 	vldr	s15, [pc, #136]	; 3868 <Get_G_Axes_1+0xa8>
    37e2:	ee67 7a27 	vmul.f32	s15, s14, s15
    37e6:	687b      	ldr	r3, [r7, #4]
    37e8:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:191
  pData->unit_Values.z_Axis_Gyro_dps = (pData->raw_Values.z_Axis_Gyro_mdps - pData->bias_Values.bias_z_Axis_Gyro_mdps)*0.001;
    37ec:	687b      	ldr	r3, [r7, #4]
    37ee:	ed93 7a01 	vldr	s14, [r3, #4]
    37f2:	687b      	ldr	r3, [r7, #4]
    37f4:	edd3 7a05 	vldr	s15, [r3, #20]
    37f8:	ee77 7a67 	vsub.f32	s15, s14, s15
    37fc:	ee17 0a90 	vmov	r0, s15
    3800:	f7fc ffce 	bl	7a0 <__aeabi_f2d>
    3804:	4602      	mov	r2, r0
    3806:	460b      	mov	r3, r1
    3808:	4610      	mov	r0, r2
    380a:	4619      	mov	r1, r3
    380c:	a314      	add	r3, pc, #80	; (adr r3, 3860 <Get_G_Axes_1+0xa0>)
    380e:	e9d3 2300 	ldrd	r2, r3, [r3]
    3812:	f7fd f819 	bl	848 <__aeabi_dmul>
    3816:	4602      	mov	r2, r0
    3818:	460b      	mov	r3, r1
    381a:	4610      	mov	r0, r2
    381c:	4619      	mov	r1, r3
    381e:	f7fd fad5 	bl	dcc <__aeabi_d2f>
    3822:	4602      	mov	r2, r0
    3824:	687b      	ldr	r3, [r7, #4]
    3826:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:192
  pData->unit_Values.z_Axis_Gyro_rps = (pData->unit_Values.z_Axis_Gyro_dps* DEGREE_TO_RADIANT);
    3828:	687b      	ldr	r3, [r7, #4]
    382a:	ed93 7a09 	vldr	s14, [r3, #36]	; 0x24
    382e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 386c <Get_G_Axes_1+0xac>
    3832:	ee67 7a27 	vmul.f32	s15, s14, s15
    3836:	687b      	ldr	r3, [r7, #4]
    3838:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:193
  pData->unit_Values.z_Axis_Gyro_angle = pData->unit_Values.z_Axis_Gyro_angle + (pData->unit_Values.z_Axis_Gyro_dps*SAMPLETIME);
    383c:	687b      	ldr	r3, [r7, #4]
    383e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
    3842:	687b      	ldr	r3, [r7, #4]
    3844:	edd3 6a09 	vldr	s13, [r3, #36]	; 0x24
    3848:	eddf 7a09 	vldr	s15, [pc, #36]	; 3870 <Get_G_Axes_1+0xb0>
    384c:	ee66 7aa7 	vmul.f32	s15, s13, s15
    3850:	ee77 7a27 	vadd.f32	s15, s14, s15
    3854:	687b      	ldr	r3, [r7, #4]
    3856:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:195

}
    385a:	3710      	adds	r7, #16
    385c:	46bd      	mov	sp, r7
    385e:	bd80      	pop	{r7, pc}
    3860:	d2f1a9fc 	.word	0xd2f1a9fc
    3864:	3f50624d 	.word	0x3f50624d
    3868:	428c0000 	.word	0x428c0000
    386c:	3c8efa35 	.word	0x3c8efa35
    3870:	3a03126f 	.word	0x3a03126f
$t():
    3874:	f3af 8000 	nop.w

00003878 <biasCalc>:
biasCalc():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:204

/**
 * TODO: Macro for sample time in Waitms and makro for number of recorded bias values/samples
 */
void biasCalc(void)
{
    3878:	b580      	push	{r7, lr}
    387a:	b082      	sub	sp, #8
    387c:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:205
	for(int i = 0; i<10000; i++){
    387e:	2300      	movs	r3, #0
    3880:	607b      	str	r3, [r7, #4]
    3882:	e034      	b.n	38ee <biasCalc+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:206 (discriminator 2)
		calcIMU_data(&imuData);
    3884:	484e      	ldr	r0, [pc, #312]	; (39c0 <biasCalc+0x148>)
    3886:	f000 f8bf 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:207 (discriminator 2)
		biasACC += imuData.raw_Values.x_Axis_Acc_mg;
    388a:	4b4d      	ldr	r3, [pc, #308]	; (39c0 <biasCalc+0x148>)
    388c:	ed93 7a00 	vldr	s14, [r3]
    3890:	4b4c      	ldr	r3, [pc, #304]	; (39c4 <biasCalc+0x14c>)
    3892:	edd3 7a00 	vldr	s15, [r3]
    3896:	ee77 7a27 	vadd.f32	s15, s14, s15
    389a:	4b4a      	ldr	r3, [pc, #296]	; (39c4 <biasCalc+0x14c>)
    389c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:208 (discriminator 2)
		biasGyro[0] += imuData.raw_Values.x_Axis_Gyro_mdps;
    38a0:	4b49      	ldr	r3, [pc, #292]	; (39c8 <biasCalc+0x150>)
    38a2:	ed93 7a00 	vldr	s14, [r3]
    38a6:	4b46      	ldr	r3, [pc, #280]	; (39c0 <biasCalc+0x148>)
    38a8:	edd3 7a02 	vldr	s15, [r3, #8]
    38ac:	ee77 7a27 	vadd.f32	s15, s14, s15
    38b0:	4b45      	ldr	r3, [pc, #276]	; (39c8 <biasCalc+0x150>)
    38b2:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:209 (discriminator 2)
		biasGyro[1] += imuData.raw_Values.y_Axis_Gyro_mdps;
    38b6:	4b44      	ldr	r3, [pc, #272]	; (39c8 <biasCalc+0x150>)
    38b8:	ed93 7a01 	vldr	s14, [r3, #4]
    38bc:	4b40      	ldr	r3, [pc, #256]	; (39c0 <biasCalc+0x148>)
    38be:	edd3 7a03 	vldr	s15, [r3, #12]
    38c2:	ee77 7a27 	vadd.f32	s15, s14, s15
    38c6:	4b40      	ldr	r3, [pc, #256]	; (39c8 <biasCalc+0x150>)
    38c8:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:210 (discriminator 2)
		biasGyro[2] += imuData.raw_Values.z_Axis_Gyro_mdps;
    38cc:	4b3e      	ldr	r3, [pc, #248]	; (39c8 <biasCalc+0x150>)
    38ce:	ed93 7a02 	vldr	s14, [r3, #8]
    38d2:	4b3b      	ldr	r3, [pc, #236]	; (39c0 <biasCalc+0x148>)
    38d4:	edd3 7a01 	vldr	s15, [r3, #4]
    38d8:	ee77 7a27 	vadd.f32	s15, s14, s15
    38dc:	4b3a      	ldr	r3, [pc, #232]	; (39c8 <biasCalc+0x150>)
    38de:	edc3 7a02 	vstr	s15, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:211 (discriminator 2)
		WAIT1_Waitms(1);
    38e2:	2001      	movs	r0, #1
    38e4:	f006 f878 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:205 (discriminator 2)
/**
 * TODO: Macro for sample time in Waitms and makro for number of recorded bias values/samples
 */
void biasCalc(void)
{
	for(int i = 0; i<10000; i++){
    38e8:	687b      	ldr	r3, [r7, #4]
    38ea:	3301      	adds	r3, #1
    38ec:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:205 (discriminator 1)
    38ee:	687a      	ldr	r2, [r7, #4]
    38f0:	f242 730f 	movw	r3, #9999	; 0x270f
    38f4:	429a      	cmp	r2, r3
    38f6:	ddc5      	ble.n	3884 <biasCalc+0xc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:213
		biasGyro[0] += imuData.raw_Values.x_Axis_Gyro_mdps;
		biasGyro[1] += imuData.raw_Values.y_Axis_Gyro_mdps;
		biasGyro[2] += imuData.raw_Values.z_Axis_Gyro_mdps;
		WAIT1_Waitms(1);
	}
	biasACC = biasACC*0.0001;
    38f8:	4b32      	ldr	r3, [pc, #200]	; (39c4 <biasCalc+0x14c>)
    38fa:	681b      	ldr	r3, [r3, #0]
    38fc:	4618      	mov	r0, r3
    38fe:	f7fc ff4f 	bl	7a0 <__aeabi_f2d>
    3902:	4602      	mov	r2, r0
    3904:	460b      	mov	r3, r1
    3906:	4610      	mov	r0, r2
    3908:	4619      	mov	r1, r3
    390a:	a32b      	add	r3, pc, #172	; (adr r3, 39b8 <biasCalc+0x140>)
    390c:	e9d3 2300 	ldrd	r2, r3, [r3]
    3910:	f7fc ff9a 	bl	848 <__aeabi_dmul>
    3914:	4602      	mov	r2, r0
    3916:	460b      	mov	r3, r1
    3918:	4610      	mov	r0, r2
    391a:	4619      	mov	r1, r3
    391c:	f7fd fa56 	bl	dcc <__aeabi_d2f>
    3920:	4602      	mov	r2, r0
    3922:	4b28      	ldr	r3, [pc, #160]	; (39c4 <biasCalc+0x14c>)
    3924:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:214
	biasGyro[0]  = biasGyro[0]*0.0001;
    3926:	4b28      	ldr	r3, [pc, #160]	; (39c8 <biasCalc+0x150>)
    3928:	681b      	ldr	r3, [r3, #0]
    392a:	4618      	mov	r0, r3
    392c:	f7fc ff38 	bl	7a0 <__aeabi_f2d>
    3930:	4602      	mov	r2, r0
    3932:	460b      	mov	r3, r1
    3934:	4610      	mov	r0, r2
    3936:	4619      	mov	r1, r3
    3938:	a31f      	add	r3, pc, #124	; (adr r3, 39b8 <biasCalc+0x140>)
    393a:	e9d3 2300 	ldrd	r2, r3, [r3]
    393e:	f7fc ff83 	bl	848 <__aeabi_dmul>
    3942:	4602      	mov	r2, r0
    3944:	460b      	mov	r3, r1
    3946:	4610      	mov	r0, r2
    3948:	4619      	mov	r1, r3
    394a:	f7fd fa3f 	bl	dcc <__aeabi_d2f>
    394e:	4602      	mov	r2, r0
    3950:	4b1d      	ldr	r3, [pc, #116]	; (39c8 <biasCalc+0x150>)
    3952:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:215
	biasGyro[1]  = biasGyro[1]*0.0001;
    3954:	4b1c      	ldr	r3, [pc, #112]	; (39c8 <biasCalc+0x150>)
    3956:	685b      	ldr	r3, [r3, #4]
    3958:	4618      	mov	r0, r3
    395a:	f7fc ff21 	bl	7a0 <__aeabi_f2d>
    395e:	4602      	mov	r2, r0
    3960:	460b      	mov	r3, r1
    3962:	4610      	mov	r0, r2
    3964:	4619      	mov	r1, r3
    3966:	a314      	add	r3, pc, #80	; (adr r3, 39b8 <biasCalc+0x140>)
    3968:	e9d3 2300 	ldrd	r2, r3, [r3]
    396c:	f7fc ff6c 	bl	848 <__aeabi_dmul>
    3970:	4602      	mov	r2, r0
    3972:	460b      	mov	r3, r1
    3974:	4610      	mov	r0, r2
    3976:	4619      	mov	r1, r3
    3978:	f7fd fa28 	bl	dcc <__aeabi_d2f>
    397c:	4602      	mov	r2, r0
    397e:	4b12      	ldr	r3, [pc, #72]	; (39c8 <biasCalc+0x150>)
    3980:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:216
	biasGyro[2]  = biasGyro[2]*0.0001;
    3982:	4b11      	ldr	r3, [pc, #68]	; (39c8 <biasCalc+0x150>)
    3984:	689b      	ldr	r3, [r3, #8]
    3986:	4618      	mov	r0, r3
    3988:	f7fc ff0a 	bl	7a0 <__aeabi_f2d>
    398c:	4602      	mov	r2, r0
    398e:	460b      	mov	r3, r1
    3990:	4610      	mov	r0, r2
    3992:	4619      	mov	r1, r3
    3994:	a308      	add	r3, pc, #32	; (adr r3, 39b8 <biasCalc+0x140>)
    3996:	e9d3 2300 	ldrd	r2, r3, [r3]
    399a:	f7fc ff55 	bl	848 <__aeabi_dmul>
    399e:	4602      	mov	r2, r0
    39a0:	460b      	mov	r3, r1
    39a2:	4610      	mov	r0, r2
    39a4:	4619      	mov	r1, r3
    39a6:	f7fd fa11 	bl	dcc <__aeabi_d2f>
    39aa:	4602      	mov	r2, r0
    39ac:	4b06      	ldr	r3, [pc, #24]	; (39c8 <biasCalc+0x150>)
    39ae:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:217
}
    39b0:	3708      	adds	r7, #8
    39b2:	46bd      	mov	sp, r7
    39b4:	bd80      	pop	{r7, pc}
    39b6:	bf00      	nop
    39b8:	eb1c432d 	.word	0xeb1c432d
    39bc:	3f1a36e2 	.word	0x3f1a36e2
    39c0:	20000de4 	.word	0x20000de4
    39c4:	2000128c 	.word	0x2000128c
    39c8:	20001290 	.word	0x20001290
$t():
    39cc:	f3af 8000 	nop.w

000039d0 <getGyroBias_Z>:
getGyroBias_Z():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:219

float getGyroBias_Z(void){
    39d0:	b480      	push	{r7}
    39d2:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:220
 return biasGyro[2];
    39d4:	4b04      	ldr	r3, [pc, #16]	; (39e8 <getGyroBias_Z+0x18>)
    39d6:	689b      	ldr	r3, [r3, #8]
    39d8:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:221
}
    39dc:	eeb0 0a67 	vmov.f32	s0, s15
    39e0:	46bd      	mov	sp, r7
    39e2:	f85d 7b04 	ldr.w	r7, [sp], #4
    39e6:	4770      	bx	lr
    39e8:	20001290 	.word	0x20001290

000039ec <getAccBias>:
getAccBias():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:228
 return biasGyro[1];
}
float getGyroBias_X(void){
 return biasGyro[0];
}
float getAccBias(void){
    39ec:	b480      	push	{r7}
    39ee:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:229
	return biasACC;
    39f0:	4b04      	ldr	r3, [pc, #16]	; (3a04 <getAccBias+0x18>)
    39f2:	681b      	ldr	r3, [r3, #0]
    39f4:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:230
}
    39f8:	eeb0 0a67 	vmov.f32	s0, s15
    39fc:	46bd      	mov	sp, r7
    39fe:	f85d 7b04 	ldr.w	r7, [sp], #4
    3a02:	4770      	bx	lr
    3a04:	2000128c 	.word	0x2000128c

00003a08 <calcIMU_data>:
calcIMU_data():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:332

/**
 *
 */
void calcIMU_data(IMU_data_t *pData)
{
    3a08:	b580      	push	{r7, lr}
    3a0a:	b082      	sub	sp, #8
    3a0c:	af00      	add	r7, sp, #0
    3a0e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:333
	  Get_G_Axes_1(pData);
    3a10:	6878      	ldr	r0, [r7, #4]
    3a12:	f7ff fed5 	bl	37c0 <Get_G_Axes_1>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:334
	  Get_X_Axes_1(pData);
    3a16:	6878      	ldr	r0, [r7, #4]
    3a18:	f7ff fe8c 	bl	3734 <Get_X_Axes_1>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/IMU.c:335
}
    3a1c:	3708      	adds	r7, #8
    3a1e:	46bd      	mov	sp, r7
    3a20:	bd80      	pop	{r7, pc}
    3a22:	bf00      	nop

00003a24 <putStream>:
putStream():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:38
//int16_t raw_dataSen[3][10000];
//uint8_t lookUP[32768];
uint16_t ji;
uint8_t overstepflag;

static void putStream(uint8_t *cmd) {
    3a24:	b580      	push	{r7, lr}
    3a26:	b084      	sub	sp, #16
    3a28:	af00      	add	r7, sp, #0
    3a2a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:40
  uint16_t snt;
  AS_BLE_SendBlock(cmd, strlen((char*)cmd), &snt);
    3a2c:	6878      	ldr	r0, [r7, #4]
    3a2e:	f009 ff27 	bl	d880 <strlen>
    3a32:	4603      	mov	r3, r0
    3a34:	b29a      	uxth	r2, r3
    3a36:	f107 030e 	add.w	r3, r7, #14
    3a3a:	6878      	ldr	r0, [r7, #4]
    3a3c:	4611      	mov	r1, r2
    3a3e:	461a      	mov	r2, r3
    3a40:	f000 ffdc 	bl	49fc <AS_BLE_SendBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:41
}
    3a44:	3710      	adds	r7, #16
    3a46:	46bd      	mov	sp, r7
    3a48:	bd80      	pop	{r7, pc}
    3a4a:	bf00      	nop

00003a4c <saveData>:
saveData():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:124
#if 1
void saveData(float *wallCenterDivergence, float weightDistanceSensor, float v_r[2],  float v_est[2], float q_r[3], float q[3],
		Distance_sensors_HP_filtered *distance_HP, float x_IMU_dot_test, float x_enc_testfloat, float I_mot_ist[2],
	Distance_sensors_LP_filtered *distanceLP, float d_hp_filtered, bool SegmentFinished,
	float gyroXY[2], Distance_Bandpass_t *distanceBandpass, Wall_availability_state *wallState,
	float vc_logging[2], float I_mot[2],float u_bat_test){
    3a4c:	b480      	push	{r7}
    3a4e:	b08b      	sub	sp, #44	; 0x2c
    3a50:	af00      	add	r7, sp, #0
    3a52:	6278      	str	r0, [r7, #36]	; 0x24
    3a54:	ed87 0a08 	vstr	s0, [r7, #32]
    3a58:	61f9      	str	r1, [r7, #28]
    3a5a:	61ba      	str	r2, [r7, #24]
    3a5c:	617b      	str	r3, [r7, #20]
    3a5e:	edc7 0a04 	vstr	s1, [r7, #16]
    3a62:	ed87 1a03 	vstr	s2, [r7, #12]
    3a66:	edc7 1a02 	vstr	s3, [r7, #8]
    3a6a:	ed87 2a01 	vstr	s4, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:125
	if(ji < LOGGING_LENGTH){
    3a6e:	4b59      	ldr	r3, [pc, #356]	; (3bd4 <saveData+0x188>)
    3a70:	881a      	ldrh	r2, [r3, #0]
    3a72:	f640 13c3 	movw	r3, #2499	; 0x9c3
    3a76:	429a      	cmp	r2, r3
    3a78:	f200 80a7 	bhi.w	3bca <saveData+0x17e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:126
		raw_dataFloat[0][ji] = 0;//v_r[0];
    3a7c:	4b55      	ldr	r3, [pc, #340]	; (3bd4 <saveData+0x188>)
    3a7e:	881b      	ldrh	r3, [r3, #0]
    3a80:	4a55      	ldr	r2, [pc, #340]	; (3bd8 <saveData+0x18c>)
    3a82:	009b      	lsls	r3, r3, #2
    3a84:	4413      	add	r3, r2
    3a86:	f04f 0200 	mov.w	r2, #0
    3a8a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:127
		raw_dataFloat[1][ji] = 0;//v_r[1];
    3a8c:	4b51      	ldr	r3, [pc, #324]	; (3bd4 <saveData+0x188>)
    3a8e:	881b      	ldrh	r3, [r3, #0]
    3a90:	4a51      	ldr	r2, [pc, #324]	; (3bd8 <saveData+0x18c>)
    3a92:	f603 13c4 	addw	r3, r3, #2500	; 0x9c4
    3a96:	009b      	lsls	r3, r3, #2
    3a98:	4413      	add	r3, r2
    3a9a:	f04f 0200 	mov.w	r2, #0
    3a9e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:128
		raw_dataFloat[2][ji] = 0;//v_est[0];
    3aa0:	4b4c      	ldr	r3, [pc, #304]	; (3bd4 <saveData+0x188>)
    3aa2:	881b      	ldrh	r3, [r3, #0]
    3aa4:	4a4c      	ldr	r2, [pc, #304]	; (3bd8 <saveData+0x18c>)
    3aa6:	f503 539c 	add.w	r3, r3, #4992	; 0x1380
    3aaa:	3308      	adds	r3, #8
    3aac:	009b      	lsls	r3, r3, #2
    3aae:	4413      	add	r3, r2
    3ab0:	f04f 0200 	mov.w	r2, #0
    3ab4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:129
		raw_dataFloat[3][ji] = 0;//v_est[1];
    3ab6:	4b47      	ldr	r3, [pc, #284]	; (3bd4 <saveData+0x188>)
    3ab8:	881b      	ldrh	r3, [r3, #0]
    3aba:	4a47      	ldr	r2, [pc, #284]	; (3bd8 <saveData+0x18c>)
    3abc:	f503 53ea 	add.w	r3, r3, #7488	; 0x1d40
    3ac0:	330c      	adds	r3, #12
    3ac2:	009b      	lsls	r3, r3, #2
    3ac4:	4413      	add	r3, r2
    3ac6:	f04f 0200 	mov.w	r2, #0
    3aca:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:132
//		raw_dataFloat[2][ji] = vc_logging[0];
//		raw_dataFloat[3][ji] = vc_logging[1];
		raw_dataFloat[4][ji] = 0;//q_r[0];
    3acc:	4b41      	ldr	r3, [pc, #260]	; (3bd4 <saveData+0x188>)
    3ace:	881b      	ldrh	r3, [r3, #0]
    3ad0:	4a41      	ldr	r2, [pc, #260]	; (3bd8 <saveData+0x18c>)
    3ad2:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
    3ad6:	3310      	adds	r3, #16
    3ad8:	009b      	lsls	r3, r3, #2
    3ada:	4413      	add	r3, r2
    3adc:	f04f 0200 	mov.w	r2, #0
    3ae0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:133
		raw_dataFloat[5][ji] = 0;//q_r[1];
    3ae2:	4b3c      	ldr	r3, [pc, #240]	; (3bd4 <saveData+0x188>)
    3ae4:	881b      	ldrh	r3, [r3, #0]
    3ae6:	4a3c      	ldr	r2, [pc, #240]	; (3bd8 <saveData+0x18c>)
    3ae8:	f503 5343 	add.w	r3, r3, #12480	; 0x30c0
    3aec:	3314      	adds	r3, #20
    3aee:	009b      	lsls	r3, r3, #2
    3af0:	4413      	add	r3, r2
    3af2:	f04f 0200 	mov.w	r2, #0
    3af6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:134
		raw_dataFloat[6][ji] = 0;//I_mot_ist[0];
    3af8:	4b36      	ldr	r3, [pc, #216]	; (3bd4 <saveData+0x188>)
    3afa:	881b      	ldrh	r3, [r3, #0]
    3afc:	4a36      	ldr	r2, [pc, #216]	; (3bd8 <saveData+0x18c>)
    3afe:	f503 536a 	add.w	r3, r3, #14976	; 0x3a80
    3b02:	3318      	adds	r3, #24
    3b04:	009b      	lsls	r3, r3, #2
    3b06:	4413      	add	r3, r2
    3b08:	f04f 0200 	mov.w	r2, #0
    3b0c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:135
		raw_dataFloat[7][ji] = 0;//I_mot_ist[1];
    3b0e:	4b31      	ldr	r3, [pc, #196]	; (3bd4 <saveData+0x188>)
    3b10:	881b      	ldrh	r3, [r3, #0]
    3b12:	4a31      	ldr	r2, [pc, #196]	; (3bd8 <saveData+0x18c>)
    3b14:	f503 4388 	add.w	r3, r3, #17408	; 0x4400
    3b18:	335c      	adds	r3, #92	; 0x5c
    3b1a:	009b      	lsls	r3, r3, #2
    3b1c:	4413      	add	r3, r2
    3b1e:	f04f 0200 	mov.w	r2, #0
    3b22:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:136
		raw_dataFloat[8][ji] = 0;//u_bat_test;
    3b24:	4b2b      	ldr	r3, [pc, #172]	; (3bd4 <saveData+0x188>)
    3b26:	881b      	ldrh	r3, [r3, #0]
    3b28:	4a2b      	ldr	r2, [pc, #172]	; (3bd8 <saveData+0x18c>)
    3b2a:	f503 439c 	add.w	r3, r3, #19968	; 0x4e00
    3b2e:	3320      	adds	r3, #32
    3b30:	009b      	lsls	r3, r3, #2
    3b32:	4413      	add	r3, r2
    3b34:	f04f 0200 	mov.w	r2, #0
    3b38:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:137
		raw_dataFloat[8][ji] = 0;//q[1];
    3b3a:	4b26      	ldr	r3, [pc, #152]	; (3bd4 <saveData+0x188>)
    3b3c:	881b      	ldrh	r3, [r3, #0]
    3b3e:	4a26      	ldr	r2, [pc, #152]	; (3bd8 <saveData+0x18c>)
    3b40:	f503 439c 	add.w	r3, r3, #19968	; 0x4e00
    3b44:	3320      	adds	r3, #32
    3b46:	009b      	lsls	r3, r3, #2
    3b48:	4413      	add	r3, r2
    3b4a:	f04f 0200 	mov.w	r2, #0
    3b4e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:138
		raw_dataFloat[9][ji] = 0;//q[2];
    3b50:	4b20      	ldr	r3, [pc, #128]	; (3bd4 <saveData+0x188>)
    3b52:	881b      	ldrh	r3, [r3, #0]
    3b54:	4a20      	ldr	r2, [pc, #128]	; (3bd8 <saveData+0x18c>)
    3b56:	f503 43af 	add.w	r3, r3, #22400	; 0x5780
    3b5a:	3364      	adds	r3, #100	; 0x64
    3b5c:	009b      	lsls	r3, r3, #2
    3b5e:	4413      	add	r3, r2
    3b60:	f04f 0200 	mov.w	r2, #0
    3b64:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:143
//		raw_dataFloat[4][ji] = I_mot[0];
//		raw_dataFloat[5][ji] = I_mot[1];

		/* Walls */
		raw_dataFloat[10][ji] = distanceLP->Right;
    3b66:	4b1b      	ldr	r3, [pc, #108]	; (3bd4 <saveData+0x188>)
    3b68:	881b      	ldrh	r3, [r3, #0]
    3b6a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    3b6c:	6812      	ldr	r2, [r2, #0]
    3b6e:	491a      	ldr	r1, [pc, #104]	; (3bd8 <saveData+0x18c>)
    3b70:	f503 43c3 	add.w	r3, r3, #24960	; 0x6180
    3b74:	3328      	adds	r3, #40	; 0x28
    3b76:	009b      	lsls	r3, r3, #2
    3b78:	440b      	add	r3, r1
    3b7a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:144
		raw_dataFloat[11][ji] = distanceLP->Left;
    3b7c:	4b15      	ldr	r3, [pc, #84]	; (3bd4 <saveData+0x188>)
    3b7e:	881b      	ldrh	r3, [r3, #0]
    3b80:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    3b82:	6852      	ldr	r2, [r2, #4]
    3b84:	4914      	ldr	r1, [pc, #80]	; (3bd8 <saveData+0x18c>)
    3b86:	f503 43d6 	add.w	r3, r3, #27392	; 0x6b00
    3b8a:	336c      	adds	r3, #108	; 0x6c
    3b8c:	009b      	lsls	r3, r3, #2
    3b8e:	440b      	add	r3, r1
    3b90:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:149
//		raw_dataFloat[12][ji] = *wallCenterDivergence;
//		raw_dataFloat[13][ji] = weightDistanceSensor;
//		raw_dataFloat[10][ji] = vc_logging[0];
//		raw_dataFloat[11][ji] = vc_logging[1];
		raw_dataFloat[12][ji] =0;// I_mot[0];
    3b92:	4b10      	ldr	r3, [pc, #64]	; (3bd4 <saveData+0x188>)
    3b94:	881b      	ldrh	r3, [r3, #0]
    3b96:	4a10      	ldr	r2, [pc, #64]	; (3bd8 <saveData+0x18c>)
    3b98:	f503 43ea 	add.w	r3, r3, #29952	; 0x7500
    3b9c:	3330      	adds	r3, #48	; 0x30
    3b9e:	009b      	lsls	r3, r3, #2
    3ba0:	4413      	add	r3, r2
    3ba2:	f04f 0200 	mov.w	r2, #0
    3ba6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:150
		raw_dataFloat[13][ji] =0;// I_mot[1];
    3ba8:	4b0a      	ldr	r3, [pc, #40]	; (3bd4 <saveData+0x188>)
    3baa:	881b      	ldrh	r3, [r3, #0]
    3bac:	4a0a      	ldr	r2, [pc, #40]	; (3bd8 <saveData+0x18c>)
    3bae:	f503 43fd 	add.w	r3, r3, #32384	; 0x7e80
    3bb2:	3374      	adds	r3, #116	; 0x74
    3bb4:	009b      	lsls	r3, r3, #2
    3bb6:	4413      	add	r3, r2
    3bb8:	f04f 0200 	mov.w	r2, #0
    3bbc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:154

		//raw_dataFloat[15][ji] = v_r[0];

		ji++;
    3bbe:	4b05      	ldr	r3, [pc, #20]	; (3bd4 <saveData+0x188>)
    3bc0:	881b      	ldrh	r3, [r3, #0]
    3bc2:	3301      	adds	r3, #1
    3bc4:	b29a      	uxth	r2, r3
    3bc6:	4b03      	ldr	r3, [pc, #12]	; (3bd4 <saveData+0x188>)
    3bc8:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:156
		}
}
    3bca:	372c      	adds	r7, #44	; 0x2c
    3bcc:	46bd      	mov	sp, r7
    3bce:	f85d 7b04 	ldr.w	r7, [sp], #4
    3bd2:	4770      	bx	lr
    3bd4:	2000129c 	.word	0x2000129c
    3bd8:	200012a0 	.word	0x200012a0

00003bdc <printSaveData>:
printSaveData():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:176
	}
}


void printSaveData(void)
{
    3bdc:	b580      	push	{r7, lr}
    3bde:	b0ba      	sub	sp, #232	; 0xe8
    3be0:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:178
	uint8_t ccc[4];
	ccc[0] = '\0';
    3be2:	2300      	movs	r3, #0
    3be4:	f887 30e0 	strb.w	r3, [r7, #224]	; 0xe0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:179
	UTIL1_chcat(ccc, sizeof(ccc), '\n');
    3be8:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
    3bec:	4618      	mov	r0, r3
    3bee:	2104      	movs	r1, #4
    3bf0:	220a      	movs	r2, #10
    3bf2:	f005 fc07 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:180
	uint16_t j = 0;
    3bf6:	2300      	movs	r3, #0
    3bf8:	f8a7 30e6 	strh.w	r3, [r7, #230]	; 0xe6
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:181
	  for(j; j<ji; j++){
    3bfc:	e1b9      	b.n	3f72 <printSaveData+0x396>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:183 (discriminator 2)
		   uint8_t testt[220]; //147, 180 works fine
			testt[0] = '\0';
    3bfe:	2300      	movs	r3, #0
    3c00:	713b      	strb	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:184 (discriminator 2)
			UTIL1_chcat(testt, sizeof(testt), '\n');
    3c02:	1d3b      	adds	r3, r7, #4
    3c04:	4618      	mov	r0, r3
    3c06:	21dc      	movs	r1, #220	; 0xdc
    3c08:	220a      	movs	r2, #10
    3c0a:	f005 fbfb 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:195 (discriminator 2)
//		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataInt[1][j]),1); //Dist left
//		  			  		  //UTIL1_Num16uToStr(testt, sizeof(testt),raw_dataSen[1][j]);
//		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
//		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[0][j]),8);
    3c0e:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3c12:	4ad9      	ldr	r2, [pc, #868]	; (3f78 <printSaveData+0x39c>)
    3c14:	009b      	lsls	r3, r3, #2
    3c16:	4413      	add	r3, r2
    3c18:	edd3 7a00 	vldr	s15, [r3]
    3c1c:	1d3b      	adds	r3, r7, #4
    3c1e:	4618      	mov	r0, r3
    3c20:	21dc      	movs	r1, #220	; 0xdc
    3c22:	eeb0 0a67 	vmov.f32	s0, s15
    3c26:	2208      	movs	r2, #8
    3c28:	f005 fe64 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:196 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3c2c:	1d3b      	adds	r3, r7, #4
    3c2e:	4618      	mov	r0, r3
    3c30:	21dc      	movs	r1, #220	; 0xdc
    3c32:	4ad2      	ldr	r2, [pc, #840]	; (3f7c <printSaveData+0x3a0>)
    3c34:	f005 fbb4 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:197 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3c38:	1d3b      	adds	r3, r7, #4
    3c3a:	4618      	mov	r0, r3
    3c3c:	21dc      	movs	r1, #220	; 0xdc
    3c3e:	2209      	movs	r2, #9
    3c40:	f005 fbe0 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:199 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[1][j]),8);
    3c44:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3c48:	4acb      	ldr	r2, [pc, #812]	; (3f78 <printSaveData+0x39c>)
    3c4a:	f603 13c4 	addw	r3, r3, #2500	; 0x9c4
    3c4e:	009b      	lsls	r3, r3, #2
    3c50:	4413      	add	r3, r2
    3c52:	edd3 7a00 	vldr	s15, [r3]
    3c56:	1d3b      	adds	r3, r7, #4
    3c58:	4618      	mov	r0, r3
    3c5a:	21dc      	movs	r1, #220	; 0xdc
    3c5c:	eeb0 0a67 	vmov.f32	s0, s15
    3c60:	2208      	movs	r2, #8
    3c62:	f005 fe47 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:200 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3c66:	1d3b      	adds	r3, r7, #4
    3c68:	4618      	mov	r0, r3
    3c6a:	21dc      	movs	r1, #220	; 0xdc
    3c6c:	4ac3      	ldr	r2, [pc, #780]	; (3f7c <printSaveData+0x3a0>)
    3c6e:	f005 fb97 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:201 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3c72:	1d3b      	adds	r3, r7, #4
    3c74:	4618      	mov	r0, r3
    3c76:	21dc      	movs	r1, #220	; 0xdc
    3c78:	2209      	movs	r2, #9
    3c7a:	f005 fbc3 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:203 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[2][j]),8);
    3c7e:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3c82:	4abd      	ldr	r2, [pc, #756]	; (3f78 <printSaveData+0x39c>)
    3c84:	f503 539c 	add.w	r3, r3, #4992	; 0x1380
    3c88:	3308      	adds	r3, #8
    3c8a:	009b      	lsls	r3, r3, #2
    3c8c:	4413      	add	r3, r2
    3c8e:	edd3 7a00 	vldr	s15, [r3]
    3c92:	1d3b      	adds	r3, r7, #4
    3c94:	4618      	mov	r0, r3
    3c96:	21dc      	movs	r1, #220	; 0xdc
    3c98:	eeb0 0a67 	vmov.f32	s0, s15
    3c9c:	2208      	movs	r2, #8
    3c9e:	f005 fe29 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:204 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3ca2:	1d3b      	adds	r3, r7, #4
    3ca4:	4618      	mov	r0, r3
    3ca6:	21dc      	movs	r1, #220	; 0xdc
    3ca8:	4ab4      	ldr	r2, [pc, #720]	; (3f7c <printSaveData+0x3a0>)
    3caa:	f005 fb79 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:205 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3cae:	1d3b      	adds	r3, r7, #4
    3cb0:	4618      	mov	r0, r3
    3cb2:	21dc      	movs	r1, #220	; 0xdc
    3cb4:	2209      	movs	r2, #9
    3cb6:	f005 fba5 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:207 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[3][j]),8);
    3cba:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3cbe:	4aae      	ldr	r2, [pc, #696]	; (3f78 <printSaveData+0x39c>)
    3cc0:	f503 53ea 	add.w	r3, r3, #7488	; 0x1d40
    3cc4:	330c      	adds	r3, #12
    3cc6:	009b      	lsls	r3, r3, #2
    3cc8:	4413      	add	r3, r2
    3cca:	edd3 7a00 	vldr	s15, [r3]
    3cce:	1d3b      	adds	r3, r7, #4
    3cd0:	4618      	mov	r0, r3
    3cd2:	21dc      	movs	r1, #220	; 0xdc
    3cd4:	eeb0 0a67 	vmov.f32	s0, s15
    3cd8:	2208      	movs	r2, #8
    3cda:	f005 fe0b 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:208 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3cde:	1d3b      	adds	r3, r7, #4
    3ce0:	4618      	mov	r0, r3
    3ce2:	21dc      	movs	r1, #220	; 0xdc
    3ce4:	4aa5      	ldr	r2, [pc, #660]	; (3f7c <printSaveData+0x3a0>)
    3ce6:	f005 fb5b 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:209 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3cea:	1d3b      	adds	r3, r7, #4
    3cec:	4618      	mov	r0, r3
    3cee:	21dc      	movs	r1, #220	; 0xdc
    3cf0:	2209      	movs	r2, #9
    3cf2:	f005 fb87 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:211 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[4][j]),8);
    3cf6:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3cfa:	4a9f      	ldr	r2, [pc, #636]	; (3f78 <printSaveData+0x39c>)
    3cfc:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
    3d00:	3310      	adds	r3, #16
    3d02:	009b      	lsls	r3, r3, #2
    3d04:	4413      	add	r3, r2
    3d06:	edd3 7a00 	vldr	s15, [r3]
    3d0a:	1d3b      	adds	r3, r7, #4
    3d0c:	4618      	mov	r0, r3
    3d0e:	21dc      	movs	r1, #220	; 0xdc
    3d10:	eeb0 0a67 	vmov.f32	s0, s15
    3d14:	2208      	movs	r2, #8
    3d16:	f005 fded 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:212 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3d1a:	1d3b      	adds	r3, r7, #4
    3d1c:	4618      	mov	r0, r3
    3d1e:	21dc      	movs	r1, #220	; 0xdc
    3d20:	4a96      	ldr	r2, [pc, #600]	; (3f7c <printSaveData+0x3a0>)
    3d22:	f005 fb3d 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:213 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3d26:	1d3b      	adds	r3, r7, #4
    3d28:	4618      	mov	r0, r3
    3d2a:	21dc      	movs	r1, #220	; 0xdc
    3d2c:	2209      	movs	r2, #9
    3d2e:	f005 fb69 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:215 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[5][j]),8);
    3d32:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3d36:	4a90      	ldr	r2, [pc, #576]	; (3f78 <printSaveData+0x39c>)
    3d38:	f503 5343 	add.w	r3, r3, #12480	; 0x30c0
    3d3c:	3314      	adds	r3, #20
    3d3e:	009b      	lsls	r3, r3, #2
    3d40:	4413      	add	r3, r2
    3d42:	edd3 7a00 	vldr	s15, [r3]
    3d46:	1d3b      	adds	r3, r7, #4
    3d48:	4618      	mov	r0, r3
    3d4a:	21dc      	movs	r1, #220	; 0xdc
    3d4c:	eeb0 0a67 	vmov.f32	s0, s15
    3d50:	2208      	movs	r2, #8
    3d52:	f005 fdcf 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:216 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3d56:	1d3b      	adds	r3, r7, #4
    3d58:	4618      	mov	r0, r3
    3d5a:	21dc      	movs	r1, #220	; 0xdc
    3d5c:	4a87      	ldr	r2, [pc, #540]	; (3f7c <printSaveData+0x3a0>)
    3d5e:	f005 fb1f 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:217 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3d62:	1d3b      	adds	r3, r7, #4
    3d64:	4618      	mov	r0, r3
    3d66:	21dc      	movs	r1, #220	; 0xdc
    3d68:	2209      	movs	r2, #9
    3d6a:	f005 fb4b 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:219 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[6][j]),8);
    3d6e:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3d72:	4a81      	ldr	r2, [pc, #516]	; (3f78 <printSaveData+0x39c>)
    3d74:	f503 536a 	add.w	r3, r3, #14976	; 0x3a80
    3d78:	3318      	adds	r3, #24
    3d7a:	009b      	lsls	r3, r3, #2
    3d7c:	4413      	add	r3, r2
    3d7e:	edd3 7a00 	vldr	s15, [r3]
    3d82:	1d3b      	adds	r3, r7, #4
    3d84:	4618      	mov	r0, r3
    3d86:	21dc      	movs	r1, #220	; 0xdc
    3d88:	eeb0 0a67 	vmov.f32	s0, s15
    3d8c:	2208      	movs	r2, #8
    3d8e:	f005 fdb1 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:220 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3d92:	1d3b      	adds	r3, r7, #4
    3d94:	4618      	mov	r0, r3
    3d96:	21dc      	movs	r1, #220	; 0xdc
    3d98:	4a78      	ldr	r2, [pc, #480]	; (3f7c <printSaveData+0x3a0>)
    3d9a:	f005 fb01 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:221 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3d9e:	1d3b      	adds	r3, r7, #4
    3da0:	4618      	mov	r0, r3
    3da2:	21dc      	movs	r1, #220	; 0xdc
    3da4:	2209      	movs	r2, #9
    3da6:	f005 fb2d 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:223 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[7][j]),8);
    3daa:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3dae:	4a72      	ldr	r2, [pc, #456]	; (3f78 <printSaveData+0x39c>)
    3db0:	f503 4388 	add.w	r3, r3, #17408	; 0x4400
    3db4:	335c      	adds	r3, #92	; 0x5c
    3db6:	009b      	lsls	r3, r3, #2
    3db8:	4413      	add	r3, r2
    3dba:	edd3 7a00 	vldr	s15, [r3]
    3dbe:	1d3b      	adds	r3, r7, #4
    3dc0:	4618      	mov	r0, r3
    3dc2:	21dc      	movs	r1, #220	; 0xdc
    3dc4:	eeb0 0a67 	vmov.f32	s0, s15
    3dc8:	2208      	movs	r2, #8
    3dca:	f005 fd93 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:224 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3dce:	1d3b      	adds	r3, r7, #4
    3dd0:	4618      	mov	r0, r3
    3dd2:	21dc      	movs	r1, #220	; 0xdc
    3dd4:	4a69      	ldr	r2, [pc, #420]	; (3f7c <printSaveData+0x3a0>)
    3dd6:	f005 fae3 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:225 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3dda:	1d3b      	adds	r3, r7, #4
    3ddc:	4618      	mov	r0, r3
    3dde:	21dc      	movs	r1, #220	; 0xdc
    3de0:	2209      	movs	r2, #9
    3de2:	f005 fb0f 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:227 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[8][j]),8);
    3de6:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3dea:	4a63      	ldr	r2, [pc, #396]	; (3f78 <printSaveData+0x39c>)
    3dec:	f503 439c 	add.w	r3, r3, #19968	; 0x4e00
    3df0:	3320      	adds	r3, #32
    3df2:	009b      	lsls	r3, r3, #2
    3df4:	4413      	add	r3, r2
    3df6:	edd3 7a00 	vldr	s15, [r3]
    3dfa:	1d3b      	adds	r3, r7, #4
    3dfc:	4618      	mov	r0, r3
    3dfe:	21dc      	movs	r1, #220	; 0xdc
    3e00:	eeb0 0a67 	vmov.f32	s0, s15
    3e04:	2208      	movs	r2, #8
    3e06:	f005 fd75 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:228 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3e0a:	1d3b      	adds	r3, r7, #4
    3e0c:	4618      	mov	r0, r3
    3e0e:	21dc      	movs	r1, #220	; 0xdc
    3e10:	4a5a      	ldr	r2, [pc, #360]	; (3f7c <printSaveData+0x3a0>)
    3e12:	f005 fac5 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:229 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3e16:	1d3b      	adds	r3, r7, #4
    3e18:	4618      	mov	r0, r3
    3e1a:	21dc      	movs	r1, #220	; 0xdc
    3e1c:	2209      	movs	r2, #9
    3e1e:	f005 faf1 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:231 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[9][j]),8);
    3e22:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3e26:	4a54      	ldr	r2, [pc, #336]	; (3f78 <printSaveData+0x39c>)
    3e28:	f503 43af 	add.w	r3, r3, #22400	; 0x5780
    3e2c:	3364      	adds	r3, #100	; 0x64
    3e2e:	009b      	lsls	r3, r3, #2
    3e30:	4413      	add	r3, r2
    3e32:	edd3 7a00 	vldr	s15, [r3]
    3e36:	1d3b      	adds	r3, r7, #4
    3e38:	4618      	mov	r0, r3
    3e3a:	21dc      	movs	r1, #220	; 0xdc
    3e3c:	eeb0 0a67 	vmov.f32	s0, s15
    3e40:	2208      	movs	r2, #8
    3e42:	f005 fd57 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:232 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3e46:	1d3b      	adds	r3, r7, #4
    3e48:	4618      	mov	r0, r3
    3e4a:	21dc      	movs	r1, #220	; 0xdc
    3e4c:	4a4b      	ldr	r2, [pc, #300]	; (3f7c <printSaveData+0x3a0>)
    3e4e:	f005 faa7 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:233 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3e52:	1d3b      	adds	r3, r7, #4
    3e54:	4618      	mov	r0, r3
    3e56:	21dc      	movs	r1, #220	; 0xdc
    3e58:	2209      	movs	r2, #9
    3e5a:	f005 fad3 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:235 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[10][j]),8);
    3e5e:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3e62:	4a45      	ldr	r2, [pc, #276]	; (3f78 <printSaveData+0x39c>)
    3e64:	f503 43c3 	add.w	r3, r3, #24960	; 0x6180
    3e68:	3328      	adds	r3, #40	; 0x28
    3e6a:	009b      	lsls	r3, r3, #2
    3e6c:	4413      	add	r3, r2
    3e6e:	edd3 7a00 	vldr	s15, [r3]
    3e72:	1d3b      	adds	r3, r7, #4
    3e74:	4618      	mov	r0, r3
    3e76:	21dc      	movs	r1, #220	; 0xdc
    3e78:	eeb0 0a67 	vmov.f32	s0, s15
    3e7c:	2208      	movs	r2, #8
    3e7e:	f005 fd39 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:236 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3e82:	1d3b      	adds	r3, r7, #4
    3e84:	4618      	mov	r0, r3
    3e86:	21dc      	movs	r1, #220	; 0xdc
    3e88:	4a3c      	ldr	r2, [pc, #240]	; (3f7c <printSaveData+0x3a0>)
    3e8a:	f005 fa89 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:237 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3e8e:	1d3b      	adds	r3, r7, #4
    3e90:	4618      	mov	r0, r3
    3e92:	21dc      	movs	r1, #220	; 0xdc
    3e94:	2209      	movs	r2, #9
    3e96:	f005 fab5 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:239 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[11][j]),8);
    3e9a:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3e9e:	4a36      	ldr	r2, [pc, #216]	; (3f78 <printSaveData+0x39c>)
    3ea0:	f503 43d6 	add.w	r3, r3, #27392	; 0x6b00
    3ea4:	336c      	adds	r3, #108	; 0x6c
    3ea6:	009b      	lsls	r3, r3, #2
    3ea8:	4413      	add	r3, r2
    3eaa:	edd3 7a00 	vldr	s15, [r3]
    3eae:	1d3b      	adds	r3, r7, #4
    3eb0:	4618      	mov	r0, r3
    3eb2:	21dc      	movs	r1, #220	; 0xdc
    3eb4:	eeb0 0a67 	vmov.f32	s0, s15
    3eb8:	2208      	movs	r2, #8
    3eba:	f005 fd1b 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:240 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3ebe:	1d3b      	adds	r3, r7, #4
    3ec0:	4618      	mov	r0, r3
    3ec2:	21dc      	movs	r1, #220	; 0xdc
    3ec4:	4a2d      	ldr	r2, [pc, #180]	; (3f7c <printSaveData+0x3a0>)
    3ec6:	f005 fa6b 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:241 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3eca:	1d3b      	adds	r3, r7, #4
    3ecc:	4618      	mov	r0, r3
    3ece:	21dc      	movs	r1, #220	; 0xdc
    3ed0:	2209      	movs	r2, #9
    3ed2:	f005 fa97 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:243 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[12][j]),8);
    3ed6:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3eda:	4a27      	ldr	r2, [pc, #156]	; (3f78 <printSaveData+0x39c>)
    3edc:	f503 43ea 	add.w	r3, r3, #29952	; 0x7500
    3ee0:	3330      	adds	r3, #48	; 0x30
    3ee2:	009b      	lsls	r3, r3, #2
    3ee4:	4413      	add	r3, r2
    3ee6:	edd3 7a00 	vldr	s15, [r3]
    3eea:	1d3b      	adds	r3, r7, #4
    3eec:	4618      	mov	r0, r3
    3eee:	21dc      	movs	r1, #220	; 0xdc
    3ef0:	eeb0 0a67 	vmov.f32	s0, s15
    3ef4:	2208      	movs	r2, #8
    3ef6:	f005 fcfd 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:244 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3efa:	1d3b      	adds	r3, r7, #4
    3efc:	4618      	mov	r0, r3
    3efe:	21dc      	movs	r1, #220	; 0xdc
    3f00:	4a1e      	ldr	r2, [pc, #120]	; (3f7c <printSaveData+0x3a0>)
    3f02:	f005 fa4d 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:245 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3f06:	1d3b      	adds	r3, r7, #4
    3f08:	4618      	mov	r0, r3
    3f0a:	21dc      	movs	r1, #220	; 0xdc
    3f0c:	2209      	movs	r2, #9
    3f0e:	f005 fa79 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:247 (discriminator 2)

		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[13][j]),8);
    3f12:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3f16:	4a18      	ldr	r2, [pc, #96]	; (3f78 <printSaveData+0x39c>)
    3f18:	f503 43fd 	add.w	r3, r3, #32384	; 0x7e80
    3f1c:	3374      	adds	r3, #116	; 0x74
    3f1e:	009b      	lsls	r3, r3, #2
    3f20:	4413      	add	r3, r2
    3f22:	edd3 7a00 	vldr	s15, [r3]
    3f26:	1d3b      	adds	r3, r7, #4
    3f28:	4618      	mov	r0, r3
    3f2a:	21dc      	movs	r1, #220	; 0xdc
    3f2c:	eeb0 0a67 	vmov.f32	s0, s15
    3f30:	2208      	movs	r2, #8
    3f32:	f005 fcdf 	bl	98f4 <UTIL1_strcatNumFloat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:248 (discriminator 2)
		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
    3f36:	1d3b      	adds	r3, r7, #4
    3f38:	4618      	mov	r0, r3
    3f3a:	21dc      	movs	r1, #220	; 0xdc
    3f3c:	4a0f      	ldr	r2, [pc, #60]	; (3f7c <printSaveData+0x3a0>)
    3f3e:	f005 fa2f 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:249 (discriminator 2)
		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
    3f42:	1d3b      	adds	r3, r7, #4
    3f44:	4618      	mov	r0, r3
    3f46:	21dc      	movs	r1, #220	; 0xdc
    3f48:	2209      	movs	r2, #9
    3f4a:	f005 fa5b 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:266 (discriminator 2)
//		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
//
//		  			  		  UTIL1_strcatNumFloat(testt, sizeof(testt),(raw_dataFloat[17][j]),8);
//		  			  		  UTIL1_strcat(testt, sizeof(testt)," ");
//		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
		  putStream((uint8_t*)testt);
    3f4e:	1d3b      	adds	r3, r7, #4
    3f50:	4618      	mov	r0, r3
    3f52:	f7ff fd67 	bl	3a24 <putStream>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:267 (discriminator 2)
		  memset(&testt[0], 0, sizeof(testt));
    3f56:	1d3b      	adds	r3, r7, #4
    3f58:	4618      	mov	r0, r3
    3f5a:	2100      	movs	r1, #0
    3f5c:	22dc      	movs	r2, #220	; 0xdc
    3f5e:	f009 fc7a 	bl	d856 <memset>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:268 (discriminator 2)
		  WAIT1_Waitms(50); //20, 40
    3f62:	2032      	movs	r0, #50	; 0x32
    3f64:	f005 fd38 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:181 (discriminator 2)
{
	uint8_t ccc[4];
	ccc[0] = '\0';
	UTIL1_chcat(ccc, sizeof(ccc), '\n');
	uint16_t j = 0;
	  for(j; j<ji; j++){
    3f68:	f8b7 30e6 	ldrh.w	r3, [r7, #230]	; 0xe6
    3f6c:	3301      	adds	r3, #1
    3f6e:	f8a7 30e6 	strh.w	r3, [r7, #230]	; 0xe6
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:181 (discriminator 1)
    3f72:	4b03      	ldr	r3, [pc, #12]	; (3f80 <printSaveData+0x3a4>)
    3f74:	881b      	ldrh	r3, [r3, #0]
    3f76:	e005      	b.n	3f84 <printSaveData+0x3a8>
    3f78:	200012a0 	.word	0x200012a0
    3f7c:	0000dbc4 	.word	0x0000dbc4
    3f80:	2000129c 	.word	0x2000129c
    3f84:	f8b7 20e6 	ldrh.w	r2, [r7, #230]	; 0xe6
    3f88:	429a      	cmp	r2, r3
    3f8a:	f4ff ae38 	bcc.w	3bfe <printSaveData+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Logging.c:270
//		  			  		  UTIL1_chcat(testt, sizeof(testt), '\t');
		  putStream((uint8_t*)testt);
		  memset(&testt[0], 0, sizeof(testt));
		  WAIT1_Waitms(50); //20, 40
	  }
}
    3f8e:	37e8      	adds	r7, #232	; 0xe8
    3f90:	46bd      	mov	sp, r7
    3f92:	bd80      	pop	{r7, pc}

00003f94 <initMotors>:
initMotors():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:26
#include "SLEEP_R.h"
#include "WAIT1.h"

Motor_t motor;

void initMotors(void){
    3f94:	b580      	push	{r7, lr}
    3f96:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:27
	SLEEP_R_ClrVal();
    3f98:	4b1e      	ldr	r3, [pc, #120]	; (4014 <initMotors+0x80>)
    3f9a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    3f9e:	4618      	mov	r0, r3
    3fa0:	f002 ff0e 	bl	6dc0 <BitIoLdd33_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:28
	DRV1_PMODE_ClrVal();
    3fa4:	4b1b      	ldr	r3, [pc, #108]	; (4014 <initMotors+0x80>)
    3fa6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    3fa8:	4618      	mov	r0, r3
    3faa:	f002 f8b5 	bl	6118 <BitIoLdd14_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:29
	WAIT1_Waitms(10);
    3fae:	200a      	movs	r0, #10
    3fb0:	f005 fd12 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:30
	SLEEP_R_SetVal();
    3fb4:	4b17      	ldr	r3, [pc, #92]	; (4014 <initMotors+0x80>)
    3fb6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    3fba:	4618      	mov	r0, r3
    3fbc:	f002 ff10 	bl	6de0 <BitIoLdd33_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:31
	DRV1_EN_SetVal();
    3fc0:	4b14      	ldr	r3, [pc, #80]	; (4014 <initMotors+0x80>)
    3fc2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    3fc4:	4618      	mov	r0, r3
    3fc6:	f002 f859 	bl	607c <BitIoLdd10_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:32
	DRV1_PH_SetVal();
    3fca:	4b12      	ldr	r3, [pc, #72]	; (4014 <initMotors+0x80>)
    3fcc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    3fce:	4618      	mov	r0, r3
    3fd0:	f003 fba8 	bl	7724 <BitIoLdd8_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:34

	SLEEP_L_ClrVal();
    3fd4:	4b0f      	ldr	r3, [pc, #60]	; (4014 <initMotors+0x80>)
    3fd6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    3fda:	4618      	mov	r0, r3
    3fdc:	f002 ff50 	bl	6e80 <BitIoLdd34_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:35
	DRV2_PMODE_ClrVal();
    3fe0:	4b0c      	ldr	r3, [pc, #48]	; (4014 <initMotors+0x80>)
    3fe2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    3fe6:	4618      	mov	r0, r3
    3fe8:	f002 fbee 	bl	67c8 <BitIoLdd23_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:36
	WAIT1_Waitms(10);
    3fec:	200a      	movs	r0, #10
    3fee:	f005 fcf3 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:37
	SLEEP_L_SetVal();
    3ff2:	4b08      	ldr	r3, [pc, #32]	; (4014 <initMotors+0x80>)
    3ff4:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    3ff8:	4618      	mov	r0, r3
    3ffa:	f002 ff51 	bl	6ea0 <BitIoLdd34_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:38
	DRV2_EN_SetVal();
    3ffe:	4b05      	ldr	r3, [pc, #20]	; (4014 <initMotors+0x80>)
    4000:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    4002:	4618      	mov	r0, r3
    4004:	f002 fb36 	bl	6674 <BitIoLdd21_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:39
	DRV2_PH_SetVal();
    4008:	4b02      	ldr	r3, [pc, #8]	; (4014 <initMotors+0x80>)
    400a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    400c:	4618      	mov	r0, r3
    400e:	f002 fb8d 	bl	672c <BitIoLdd22_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:40
}
    4012:	bd80      	pop	{r7, pc}
    4014:	20000480 	.word	0x20000480

00004018 <deinitMotors>:
deinitMotors():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:42

void deinitMotors(void){
    4018:	b580      	push	{r7, lr}
    401a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:44

	DRV1_EN_ClrVal();
    401c:	4b0a      	ldr	r3, [pc, #40]	; (4048 <deinitMotors+0x30>)
    401e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    4020:	4618      	mov	r0, r3
    4022:	f002 f81d 	bl	6060 <BitIoLdd10_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:45
	DRV1_PH_ClrVal();
    4026:	4b08      	ldr	r3, [pc, #32]	; (4048 <deinitMotors+0x30>)
    4028:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    402a:	4618      	mov	r0, r3
    402c:	f003 fb6c 	bl	7708 <BitIoLdd8_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:48


	DRV2_EN_ClrVal();
    4030:	4b05      	ldr	r3, [pc, #20]	; (4048 <deinitMotors+0x30>)
    4032:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    4034:	4618      	mov	r0, r3
    4036:	f002 fb0f 	bl	6658 <BitIoLdd21_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:49
	DRV2_PH_ClrVal();
    403a:	4b03      	ldr	r3, [pc, #12]	; (4048 <deinitMotors+0x30>)
    403c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    403e:	4618      	mov	r0, r3
    4040:	f002 fb66 	bl	6710 <BitIoLdd22_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:50
}
    4044:	bd80      	pop	{r7, pc}
    4046:	bf00      	nop
    4048:	20000480 	.word	0x20000480

0000404c <MotorEnable>:
MotorEnable():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:64
	DRV2_PH_PutVal(parameter.left.DRV2_IN2);
	DRV2_PMODE_PutVal(parameter.left.DRV2_PMODE);
	I_Motor_L_SetValue(&parameter.left.DRV2_VREF);
}

void MotorEnable(bool motor_Right,bool motor_Left){
    404c:	b580      	push	{r7, lr}
    404e:	b082      	sub	sp, #8
    4050:	af00      	add	r7, sp, #0
    4052:	4602      	mov	r2, r0
    4054:	460b      	mov	r3, r1
    4056:	71fa      	strb	r2, [r7, #7]
    4058:	71bb      	strb	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:65
	motor.right.DRV1_IN1 = motor_Right;
    405a:	4b0c      	ldr	r3, [pc, #48]	; (408c <MotorEnable+0x40>)
    405c:	79fa      	ldrb	r2, [r7, #7]
    405e:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:66
	motor.left.DRV2_IN1 = motor_Left;
    4060:	4b0a      	ldr	r3, [pc, #40]	; (408c <MotorEnable+0x40>)
    4062:	79ba      	ldrb	r2, [r7, #6]
    4064:	725a      	strb	r2, [r3, #9]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:67
	DRV1_EN_PutVal(motor.right.DRV1_IN1);
    4066:	4b0a      	ldr	r3, [pc, #40]	; (4090 <MotorEnable+0x44>)
    4068:	6e5a      	ldr	r2, [r3, #100]	; 0x64
    406a:	4b08      	ldr	r3, [pc, #32]	; (408c <MotorEnable+0x40>)
    406c:	785b      	ldrb	r3, [r3, #1]
    406e:	4610      	mov	r0, r2
    4070:	4619      	mov	r1, r3
    4072:	f001 ffdd 	bl	6030 <BitIoLdd10_PutVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:68
	DRV2_EN_PutVal(motor.left.DRV2_IN1);
    4076:	4b06      	ldr	r3, [pc, #24]	; (4090 <MotorEnable+0x44>)
    4078:	6f9a      	ldr	r2, [r3, #120]	; 0x78
    407a:	4b04      	ldr	r3, [pc, #16]	; (408c <MotorEnable+0x40>)
    407c:	7a5b      	ldrb	r3, [r3, #9]
    407e:	4610      	mov	r0, r2
    4080:	4619      	mov	r1, r3
    4082:	f002 fad1 	bl	6628 <BitIoLdd21_PutVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:70

}
    4086:	3708      	adds	r7, #8
    4088:	46bd      	mov	sp, r7
    408a:	bd80      	pop	{r7, pc}
    408c:	20023630 	.word	0x20023630
    4090:	20000480 	.word	0x20000480
$d():
    4094:	00000000 	.word	0x00000000

00004098 <set_VREF>:
set_VREF():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:92
void set_IPROI(uint16_t i_Right, uint16_t i_Left){
	motor.right.DRV1_IPROI = i_Right;
	motor.left.DRV2_IPROI = i_Left;
}

void set_VREF(float vREF_Right, float vREF_Left){
    4098:	b580      	push	{r7, lr}
    409a:	b082      	sub	sp, #8
    409c:	af00      	add	r7, sp, #0
    409e:	ed87 0a01 	vstr	s0, [r7, #4]
    40a2:	edc7 0a00 	vstr	s1, [r7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:93
	if(vREF_Right<0){
    40a6:	edd7 7a01 	vldr	s15, [r7, #4]
    40aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
    40ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    40b2:	d51d      	bpl.n	40f0 <set_VREF+0x58>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:94
		if(vREF_Right<-3.3){
    40b4:	6878      	ldr	r0, [r7, #4]
    40b6:	f7fc fb73 	bl	7a0 <__aeabi_f2d>
    40ba:	4602      	mov	r2, r0
    40bc:	460b      	mov	r3, r1
    40be:	4610      	mov	r0, r2
    40c0:	4619      	mov	r1, r3
    40c2:	a34b      	add	r3, pc, #300	; (adr r3, 41f0 <set_VREF+0x158>)
    40c4:	e9d3 2300 	ldrd	r2, r3, [r3]
    40c8:	f7fc fe30 	bl	d2c <__aeabi_dcmplt>
    40cc:	4603      	mov	r3, r0
    40ce:	2b00      	cmp	r3, #0
    40d0:	d002      	beq.n	40d8 <set_VREF+0x40>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:95
			vREF_Right = -1*-3.3;
    40d2:	4b4b      	ldr	r3, [pc, #300]	; (4200 <set_VREF+0x168>)
    40d4:	607b      	str	r3, [r7, #4]
    40d6:	e005      	b.n	40e4 <set_VREF+0x4c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:98
		}
		else{
			vREF_Right = -1*vREF_Right;
    40d8:	edd7 7a01 	vldr	s15, [r7, #4]
    40dc:	eef1 7a67 	vneg.f32	s15, s15
    40e0:	edc7 7a01 	vstr	s15, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:100 (discriminator 1)
		}
		DRV1_PH_ClrVal();
    40e4:	4b47      	ldr	r3, [pc, #284]	; (4204 <set_VREF+0x16c>)
    40e6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    40e8:	4618      	mov	r0, r3
    40ea:	f003 fb0d 	bl	7708 <BitIoLdd8_ClrVal>
    40ee:	e004      	b.n	40fa <set_VREF+0x62>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:103
	}
	else{
		DRV1_PH_SetVal();
    40f0:	4b44      	ldr	r3, [pc, #272]	; (4204 <set_VREF+0x16c>)
    40f2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    40f4:	4618      	mov	r0, r3
    40f6:	f003 fb15 	bl	7724 <BitIoLdd8_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:107
	}


	if(vREF_Left<0){
    40fa:	edd7 7a00 	vldr	s15, [r7]
    40fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
    4102:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    4106:	d51d      	bpl.n	4144 <set_VREF+0xac>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:108
		if(vREF_Left<-3.3){
    4108:	6838      	ldr	r0, [r7, #0]
    410a:	f7fc fb49 	bl	7a0 <__aeabi_f2d>
    410e:	4602      	mov	r2, r0
    4110:	460b      	mov	r3, r1
    4112:	4610      	mov	r0, r2
    4114:	4619      	mov	r1, r3
    4116:	a336      	add	r3, pc, #216	; (adr r3, 41f0 <set_VREF+0x158>)
    4118:	e9d3 2300 	ldrd	r2, r3, [r3]
    411c:	f7fc fe06 	bl	d2c <__aeabi_dcmplt>
    4120:	4603      	mov	r3, r0
    4122:	2b00      	cmp	r3, #0
    4124:	d002      	beq.n	412c <set_VREF+0x94>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:109
			vREF_Left = -1*-3.3;
    4126:	4b36      	ldr	r3, [pc, #216]	; (4200 <set_VREF+0x168>)
    4128:	603b      	str	r3, [r7, #0]
    412a:	e005      	b.n	4138 <set_VREF+0xa0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:112
		}
		else{
			vREF_Left = -1*vREF_Left;
    412c:	edd7 7a00 	vldr	s15, [r7]
    4130:	eef1 7a67 	vneg.f32	s15, s15
    4134:	edc7 7a00 	vstr	s15, [r7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:114 (discriminator 2)
		}
		DRV2_PH_SetVal();
    4138:	4b32      	ldr	r3, [pc, #200]	; (4204 <set_VREF+0x16c>)
    413a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    413c:	4618      	mov	r0, r3
    413e:	f002 faf5 	bl	672c <BitIoLdd22_SetVal>
    4142:	e004      	b.n	414e <set_VREF+0xb6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:117
	}
	else{
		DRV2_PH_ClrVal();
    4144:	4b2f      	ldr	r3, [pc, #188]	; (4204 <set_VREF+0x16c>)
    4146:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    4148:	4618      	mov	r0, r3
    414a:	f002 fae1 	bl	6710 <BitIoLdd22_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:121
	}


	if(vREF_Right>3.3){
    414e:	6878      	ldr	r0, [r7, #4]
    4150:	f7fc fb26 	bl	7a0 <__aeabi_f2d>
    4154:	4602      	mov	r2, r0
    4156:	460b      	mov	r3, r1
    4158:	4610      	mov	r0, r2
    415a:	4619      	mov	r1, r3
    415c:	a326      	add	r3, pc, #152	; (adr r3, 41f8 <set_VREF+0x160>)
    415e:	e9d3 2300 	ldrd	r2, r3, [r3]
    4162:	f7fc fe01 	bl	d68 <__aeabi_dcmpgt>
    4166:	4603      	mov	r3, r0
    4168:	2b00      	cmp	r3, #0
    416a:	d001      	beq.n	4170 <set_VREF+0xd8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:122
		vREF_Right = 3.3;
    416c:	4b24      	ldr	r3, [pc, #144]	; (4200 <set_VREF+0x168>)
    416e:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:124
	}
	if(vREF_Left>3.3){
    4170:	6838      	ldr	r0, [r7, #0]
    4172:	f7fc fb15 	bl	7a0 <__aeabi_f2d>
    4176:	4602      	mov	r2, r0
    4178:	460b      	mov	r3, r1
    417a:	4610      	mov	r0, r2
    417c:	4619      	mov	r1, r3
    417e:	a31e      	add	r3, pc, #120	; (adr r3, 41f8 <set_VREF+0x160>)
    4180:	e9d3 2300 	ldrd	r2, r3, [r3]
    4184:	f7fc fdf0 	bl	d68 <__aeabi_dcmpgt>
    4188:	4603      	mov	r3, r0
    418a:	2b00      	cmp	r3, #0
    418c:	d001      	beq.n	4192 <set_VREF+0xfa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:125
		vREF_Left = 3.3;
    418e:	4b1c      	ldr	r3, [pc, #112]	; (4200 <set_VREF+0x168>)
    4190:	603b      	str	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:128
	}

		motor.right.DRV1_VREF = (uint16_t)(vREF_Right * Current_TO_DUTY_INTEGER); //version 3: wires connected the other way around!!!!
    4192:	ed97 7a01 	vldr	s14, [r7, #4]
    4196:	eddf 7a1c 	vldr	s15, [pc, #112]	; 4208 <set_VREF+0x170>
    419a:	ee67 7a27 	vmul.f32	s15, s14, s15
    419e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    41a2:	ee17 3a90 	vmov	r3, s15
    41a6:	b29a      	uxth	r2, r3
    41a8:	4b18      	ldr	r3, [pc, #96]	; (420c <set_VREF+0x174>)
    41aa:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:129
		motor.left.DRV2_VREF = (uint16_t)(vREF_Left * Current_TO_DUTY_INTEGER);
    41ac:	ed97 7a00 	vldr	s14, [r7]
    41b0:	eddf 7a15 	vldr	s15, [pc, #84]	; 4208 <set_VREF+0x170>
    41b4:	ee67 7a27 	vmul.f32	s15, s14, s15
    41b8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    41bc:	ee17 3a90 	vmov	r3, s15
    41c0:	b29a      	uxth	r2, r3
    41c2:	4b12      	ldr	r3, [pc, #72]	; (420c <set_VREF+0x174>)
    41c4:	81da      	strh	r2, [r3, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:130
		I_Motor_R_SetValue(&motor.right.DRV1_VREF);
    41c6:	4b0f      	ldr	r3, [pc, #60]	; (4204 <set_VREF+0x16c>)
    41c8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    41ca:	4b11      	ldr	r3, [pc, #68]	; (4210 <set_VREF+0x178>)
    41cc:	881b      	ldrh	r3, [r3, #0]
    41ce:	4610      	mov	r0, r2
    41d0:	4619      	mov	r1, r3
    41d2:	f004 f8f3 	bl	83bc <DacLdd1_SetValue>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:131
		I_Motor_L_SetValue(&motor.left.DRV2_VREF);
    41d6:	4b0b      	ldr	r3, [pc, #44]	; (4204 <set_VREF+0x16c>)
    41d8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
    41da:	4b0e      	ldr	r3, [pc, #56]	; (4214 <set_VREF+0x17c>)
    41dc:	881b      	ldrh	r3, [r3, #0]
    41de:	4610      	mov	r0, r2
    41e0:	4619      	mov	r1, r3
    41e2:	f004 f959 	bl	8498 <DacLdd2_SetValue>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/Motor.c:132
}
    41e6:	3708      	adds	r7, #8
    41e8:	46bd      	mov	sp, r7
    41ea:	bd80      	pop	{r7, pc}
    41ec:	f3af 8000 	nop.w
    41f0:	66666666 	.word	0x66666666
    41f4:	c00a6666 	.word	0xc00a6666
    41f8:	66666666 	.word	0x66666666
    41fc:	400a6666 	.word	0x400a6666
    4200:	40533333 	.word	0x40533333
    4204:	20000480 	.word	0x20000480
    4208:	449b2000 	.word	0x449b2000
    420c:	20023630 	.word	0x20023630
    4210:	20023636 	.word	0x20023636
    4214:	2002363e 	.word	0x2002363e

00004218 <PID_addDerivatedParameters>:
PID_addDerivatedParameters():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:113
//			data->states.I =  data->states.arw + data->states.I;
	/*MEASURED VARIABLE*/
	data->states.yold = data->signals.y;
}

void PID_addDerivatedParameters(PID_data_t *data){
    4218:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
    421c:	b082      	sub	sp, #8
    421e:	af00      	add	r7, sp, #0
    4220:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:115
	data->parameter.bi =
			data->parameter.K * data->parameter.h /
    4222:	687b      	ldr	r3, [r7, #4]
    4224:	e9d3 0118 	ldrd	r0, r1, [r3, #96]	; 0x60
    4228:	687b      	ldr	r3, [r7, #4]
    422a:	e9d3 2316 	ldrd	r2, r3, [r3, #88]	; 0x58
    422e:	f7fc fb0b 	bl	848 <__aeabi_dmul>
    4232:	4602      	mov	r2, r0
    4234:	460b      	mov	r3, r1
    4236:	4610      	mov	r0, r2
    4238:	4619      	mov	r1, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:116
			data->parameter.Ti;
    423a:	687b      	ldr	r3, [r7, #4]
    423c:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:115
	data->states.yold = data->signals.y;
}

void PID_addDerivatedParameters(PID_data_t *data){
	data->parameter.bi =
			data->parameter.K * data->parameter.h /
    4240:	f7fc fc2c 	bl	a9c <__aeabi_ddiv>
    4244:	4602      	mov	r2, r0
    4246:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:114
	/*MEASURED VARIABLE*/
	data->states.yold = data->signals.y;
}

void PID_addDerivatedParameters(PID_data_t *data){
	data->parameter.bi =
    4248:	6879      	ldr	r1, [r7, #4]
    424a:	e9c1 232a 	strd	r2, r3, [r1, #168]	; 0xa8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:119
			data->parameter.K * data->parameter.h /
			data->parameter.Ti;

	data->parameter.ar =
			data->parameter.h /
    424e:	687b      	ldr	r3, [r7, #4]
    4250:	e9d3 0116 	ldrd	r0, r1, [r3, #88]	; 0x58
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:120
			data->parameter.Tt;
    4254:	687b      	ldr	r3, [r7, #4]
    4256:	e9d3 231e 	ldrd	r2, r3, [r3, #120]	; 0x78
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:119
	data->parameter.bi =
			data->parameter.K * data->parameter.h /
			data->parameter.Ti;

	data->parameter.ar =
			data->parameter.h /
    425a:	f7fc fc1f 	bl	a9c <__aeabi_ddiv>
    425e:	4602      	mov	r2, r0
    4260:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:118
void PID_addDerivatedParameters(PID_data_t *data){
	data->parameter.bi =
			data->parameter.K * data->parameter.h /
			data->parameter.Ti;

	data->parameter.ar =
    4262:	6879      	ldr	r1, [r7, #4]
    4264:	e9c1 232c 	strd	r2, r3, [r1, #176]	; 0xb0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:123
			data->parameter.h /
			data->parameter.Tt;

	data->parameter.bd =
			data->parameter.K * data->parameter.N * data->parameter.Td /
    4268:	687b      	ldr	r3, [r7, #4]
    426a:	e9d3 0118 	ldrd	r0, r1, [r3, #96]	; 0x60
    426e:	687b      	ldr	r3, [r7, #4]
    4270:	e9d3 2320 	ldrd	r2, r3, [r3, #128]	; 0x80
    4274:	f7fc fae8 	bl	848 <__aeabi_dmul>
    4278:	4602      	mov	r2, r0
    427a:	460b      	mov	r3, r1
    427c:	4610      	mov	r0, r2
    427e:	4619      	mov	r1, r3
    4280:	687b      	ldr	r3, [r7, #4]
    4282:	e9d3 231c 	ldrd	r2, r3, [r3, #112]	; 0x70
    4286:	f7fc fadf 	bl	848 <__aeabi_dmul>
    428a:	4602      	mov	r2, r0
    428c:	460b      	mov	r3, r1
    428e:	4614      	mov	r4, r2
    4290:	461d      	mov	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:124
			(data->parameter.Td + data->parameter.N * data->parameter.h);
    4292:	687b      	ldr	r3, [r7, #4]
    4294:	e9d3 891c 	ldrd	r8, r9, [r3, #112]	; 0x70
    4298:	687b      	ldr	r3, [r7, #4]
    429a:	e9d3 0120 	ldrd	r0, r1, [r3, #128]	; 0x80
    429e:	687b      	ldr	r3, [r7, #4]
    42a0:	e9d3 2316 	ldrd	r2, r3, [r3, #88]	; 0x58
    42a4:	f7fc fad0 	bl	848 <__aeabi_dmul>
    42a8:	4602      	mov	r2, r0
    42aa:	460b      	mov	r3, r1
    42ac:	4640      	mov	r0, r8
    42ae:	4649      	mov	r1, r9
    42b0:	f7fc f918 	bl	4e4 <__adddf3>
    42b4:	4602      	mov	r2, r0
    42b6:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:123
	data->parameter.ar =
			data->parameter.h /
			data->parameter.Tt;

	data->parameter.bd =
			data->parameter.K * data->parameter.N * data->parameter.Td /
    42b8:	4620      	mov	r0, r4
    42ba:	4629      	mov	r1, r5
    42bc:	f7fc fbee 	bl	a9c <__aeabi_ddiv>
    42c0:	4602      	mov	r2, r0
    42c2:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:122

	data->parameter.ar =
			data->parameter.h /
			data->parameter.Tt;

	data->parameter.bd =
    42c4:	6879      	ldr	r1, [r7, #4]
    42c6:	e9c1 232e 	strd	r2, r3, [r1, #184]	; 0xb8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:127
			data->parameter.K * data->parameter.N * data->parameter.Td /
			(data->parameter.Td + data->parameter.N * data->parameter.h);

	data->parameter.ad =
			data->parameter.Td /
    42ca:	687b      	ldr	r3, [r7, #4]
    42cc:	e9d3 451c 	ldrd	r4, r5, [r3, #112]	; 0x70
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:128
			(data->parameter.Td + data->parameter.N *  data->parameter.h);
    42d0:	687b      	ldr	r3, [r7, #4]
    42d2:	e9d3 891c 	ldrd	r8, r9, [r3, #112]	; 0x70
    42d6:	687b      	ldr	r3, [r7, #4]
    42d8:	e9d3 0120 	ldrd	r0, r1, [r3, #128]	; 0x80
    42dc:	687b      	ldr	r3, [r7, #4]
    42de:	e9d3 2316 	ldrd	r2, r3, [r3, #88]	; 0x58
    42e2:	f7fc fab1 	bl	848 <__aeabi_dmul>
    42e6:	4602      	mov	r2, r0
    42e8:	460b      	mov	r3, r1
    42ea:	4640      	mov	r0, r8
    42ec:	4649      	mov	r1, r9
    42ee:	f7fc f8f9 	bl	4e4 <__adddf3>
    42f2:	4602      	mov	r2, r0
    42f4:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:127
	data->parameter.bd =
			data->parameter.K * data->parameter.N * data->parameter.Td /
			(data->parameter.Td + data->parameter.N * data->parameter.h);

	data->parameter.ad =
			data->parameter.Td /
    42f6:	4620      	mov	r0, r4
    42f8:	4629      	mov	r1, r5
    42fa:	f7fc fbcf 	bl	a9c <__aeabi_ddiv>
    42fe:	4602      	mov	r2, r0
    4300:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:126

	data->parameter.bd =
			data->parameter.K * data->parameter.N * data->parameter.Td /
			(data->parameter.Td + data->parameter.N * data->parameter.h);

	data->parameter.ad =
    4302:	6879      	ldr	r1, [r7, #4]
    4304:	e9c1 2330 	strd	r2, r3, [r1, #192]	; 0xc0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:130
			data->parameter.Td /
			(data->parameter.Td + data->parameter.N *  data->parameter.h);

	data->states.P = 0;
    4308:	6879      	ldr	r1, [r7, #4]
    430a:	f04f 0200 	mov.w	r2, #0
    430e:	f04f 0300 	mov.w	r3, #0
    4312:	e9c1 2308 	strd	r2, r3, [r1, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:131
	data->states.I = 0;
    4316:	6879      	ldr	r1, [r7, #4]
    4318:	f04f 0200 	mov.w	r2, #0
    431c:	f04f 0300 	mov.w	r3, #0
    4320:	e9c1 230a 	strd	r2, r3, [r1, #40]	; 0x28
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:132
	data->states.D = 0;
    4324:	6879      	ldr	r1, [r7, #4]
    4326:	f04f 0200 	mov.w	r2, #0
    432a:	f04f 0300 	mov.w	r3, #0
    432e:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:133
	data->states.yold = 0;
    4332:	6879      	ldr	r1, [r7, #4]
    4334:	f04f 0200 	mov.w	r2, #0
    4338:	f04f 0300 	mov.w	r3, #0
    433c:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/PID.c:134
}
    4340:	3708      	adds	r7, #8
    4342:	46bd      	mov	sp, r7
    4344:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}

00004348 <main>:
main():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/main.c:160


/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
    4348:	b580      	push	{r7, lr}
    434a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/main.c:166
  /* Write your local variable definition here */

  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/


	PE_low_level_init();
    434c:	f7fc fdee 	bl	f2c <PE_low_level_init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/main.c:169
  /*** End of Processor Expert internal initialization.                    ***/

	APP_Start();
    4350:	f7fe f912 	bl	2578 <APP_Start>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Sources/main.c:178 (discriminator 1)
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
    4354:	e7fe      	b.n	4354 <main+0xc>
    4356:	bf00      	nop

00004358 <__copy_rom_section>:
__copy_rom_section():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:44

/*
 *	Routine to copy a single section from ROM to RAM ...
 */
void __copy_rom_section(unsigned long dst, unsigned long src, unsigned long size)
{
    4358:	b480      	push	{r7}
    435a:	b08b      	sub	sp, #44	; 0x2c
    435c:	af00      	add	r7, sp, #0
    435e:	60f8      	str	r0, [r7, #12]
    4360:	60b9      	str	r1, [r7, #8]
    4362:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:45
	unsigned long len = size;
    4364:	687b      	ldr	r3, [r7, #4]
    4366:	627b      	str	r3, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:47

	const unsigned int size_int = sizeof(int);
    4368:	2304      	movs	r3, #4
    436a:	623b      	str	r3, [r7, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:48
	const unsigned int mask_int = sizeof(int)-1;
    436c:	2303      	movs	r3, #3
    436e:	61fb      	str	r3, [r7, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:50

	const unsigned int size_short = sizeof(short);
    4370:	2302      	movs	r3, #2
    4372:	61bb      	str	r3, [r7, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:51
	const unsigned int mask_short = sizeof(short)-1;
    4374:	2301      	movs	r3, #1
    4376:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:53

	const unsigned int size_char = sizeof(char);
    4378:	2301      	movs	r3, #1
    437a:	613b      	str	r3, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:55

	if( dst == src || size == 0)
    437c:	68fa      	ldr	r2, [r7, #12]
    437e:	68bb      	ldr	r3, [r7, #8]
    4380:	429a      	cmp	r2, r3
    4382:	d002      	beq.n	438a <__copy_rom_section+0x32>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:55 (discriminator 1)
    4384:	687b      	ldr	r3, [r7, #4]
    4386:	2b00      	cmp	r3, #0
    4388:	d100      	bne.n	438c <__copy_rom_section+0x34>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:57
	{
		return;
    438a:	e051      	b.n	4430 <__copy_rom_section+0xd8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:61
	}


	while( len > 0)
    438c:	e04d      	b.n	442a <__copy_rom_section+0xd2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:64
	{

		if( !(src & mask_int) && !(dst & mask_int) && len >= size_int)
    438e:	68ba      	ldr	r2, [r7, #8]
    4390:	69fb      	ldr	r3, [r7, #28]
    4392:	4013      	ands	r3, r2
    4394:	2b00      	cmp	r3, #0
    4396:	d119      	bne.n	43cc <__copy_rom_section+0x74>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:64 (discriminator 1)
    4398:	68fa      	ldr	r2, [r7, #12]
    439a:	69fb      	ldr	r3, [r7, #28]
    439c:	4013      	ands	r3, r2
    439e:	2b00      	cmp	r3, #0
    43a0:	d114      	bne.n	43cc <__copy_rom_section+0x74>
    43a2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    43a4:	6a3b      	ldr	r3, [r7, #32]
    43a6:	429a      	cmp	r2, r3
    43a8:	d310      	bcc.n	43cc <__copy_rom_section+0x74>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:66
		{
			*((int *)dst)  = *((int*)src);
    43aa:	68fb      	ldr	r3, [r7, #12]
    43ac:	68ba      	ldr	r2, [r7, #8]
    43ae:	6812      	ldr	r2, [r2, #0]
    43b0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:67
			dst += size_int;
    43b2:	68fa      	ldr	r2, [r7, #12]
    43b4:	6a3b      	ldr	r3, [r7, #32]
    43b6:	4413      	add	r3, r2
    43b8:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:68
			src += size_int;
    43ba:	68ba      	ldr	r2, [r7, #8]
    43bc:	6a3b      	ldr	r3, [r7, #32]
    43be:	4413      	add	r3, r2
    43c0:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:69
			len -= size_int;
    43c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    43c4:	6a3b      	ldr	r3, [r7, #32]
    43c6:	1ad3      	subs	r3, r2, r3
    43c8:	627b      	str	r3, [r7, #36]	; 0x24
    43ca:	e02e      	b.n	442a <__copy_rom_section+0xd2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:71
		}
		else if( !(src & mask_short) && !(dst & mask_short) && len >= size_short)
    43cc:	68ba      	ldr	r2, [r7, #8]
    43ce:	697b      	ldr	r3, [r7, #20]
    43d0:	4013      	ands	r3, r2
    43d2:	2b00      	cmp	r3, #0
    43d4:	d119      	bne.n	440a <__copy_rom_section+0xb2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:71 (discriminator 1)
    43d6:	68fa      	ldr	r2, [r7, #12]
    43d8:	697b      	ldr	r3, [r7, #20]
    43da:	4013      	ands	r3, r2
    43dc:	2b00      	cmp	r3, #0
    43de:	d114      	bne.n	440a <__copy_rom_section+0xb2>
    43e0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    43e2:	69bb      	ldr	r3, [r7, #24]
    43e4:	429a      	cmp	r2, r3
    43e6:	d310      	bcc.n	440a <__copy_rom_section+0xb2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:73
		{
			*((short *)dst)  = *((short*)src);
    43e8:	68fb      	ldr	r3, [r7, #12]
    43ea:	68ba      	ldr	r2, [r7, #8]
    43ec:	8812      	ldrh	r2, [r2, #0]
    43ee:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:74
			dst += size_short;
    43f0:	68fa      	ldr	r2, [r7, #12]
    43f2:	69bb      	ldr	r3, [r7, #24]
    43f4:	4413      	add	r3, r2
    43f6:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:75
			src += size_short;
    43f8:	68ba      	ldr	r2, [r7, #8]
    43fa:	69bb      	ldr	r3, [r7, #24]
    43fc:	4413      	add	r3, r2
    43fe:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:76
			len -= size_short;
    4400:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    4402:	69bb      	ldr	r3, [r7, #24]
    4404:	1ad3      	subs	r3, r2, r3
    4406:	627b      	str	r3, [r7, #36]	; 0x24
    4408:	e00f      	b.n	442a <__copy_rom_section+0xd2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:80
		}
		else
		{
			*((char *)dst)  = *((char*)src);
    440a:	68fb      	ldr	r3, [r7, #12]
    440c:	68ba      	ldr	r2, [r7, #8]
    440e:	7812      	ldrb	r2, [r2, #0]
    4410:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:81
			dst += size_char;
    4412:	68fa      	ldr	r2, [r7, #12]
    4414:	693b      	ldr	r3, [r7, #16]
    4416:	4413      	add	r3, r2
    4418:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:82
			src += size_char;
    441a:	68ba      	ldr	r2, [r7, #8]
    441c:	693b      	ldr	r3, [r7, #16]
    441e:	4413      	add	r3, r2
    4420:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:83
			len -= size_char;
    4422:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    4424:	693b      	ldr	r3, [r7, #16]
    4426:	1ad3      	subs	r3, r2, r3
    4428:	627b      	str	r3, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:61 (discriminator 1)
	{
		return;
	}


	while( len > 0)
    442a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    442c:	2b00      	cmp	r3, #0
    442e:	d1ae      	bne.n	438e <__copy_rom_section+0x36>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:86
			dst += size_char;
			src += size_char;
			len -= size_char;
		}
	}
}
    4430:	372c      	adds	r7, #44	; 0x2c
    4432:	46bd      	mov	sp, r7
    4434:	f85d 7b04 	ldr.w	r7, [sp], #4
    4438:	4770      	bx	lr
    443a:	bf00      	nop

0000443c <__copy_rom_sections_to_ram>:
__copy_rom_sections_to_ram():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:98
 *  It is a table of RomInfo
 *	structures.  The final entry in the table has all-zero
 *	fields.
 */
void __copy_rom_sections_to_ram(void)
{
    443c:	b590      	push	{r4, r7, lr}
    443e:	b083      	sub	sp, #12
    4440:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:102

	int				index;

	if (__S_romp == 0L) return;
    4442:	4b24      	ldr	r3, [pc, #144]	; (44d4 <__copy_rom_sections_to_ram+0x98>)
    4444:	2b00      	cmp	r3, #0
    4446:	d100      	bne.n	444a <__copy_rom_sections_to_ram+0xe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:102 (discriminator 1)
    4448:	e040      	b.n	44cc <__copy_rom_sections_to_ram+0x90>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:107

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
    444a:	2300      	movs	r3, #0
    444c:	607b      	str	r3, [r7, #4]
    444e:	e01e      	b.n	448e <__copy_rom_sections_to_ram+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:113
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
	{
		__copy_rom_section( __S_romp[index].Target,
    4450:	4920      	ldr	r1, [pc, #128]	; (44d4 <__copy_rom_sections_to_ram+0x98>)
    4452:	687a      	ldr	r2, [r7, #4]
    4454:	4613      	mov	r3, r2
    4456:	005b      	lsls	r3, r3, #1
    4458:	4413      	add	r3, r2
    445a:	009b      	lsls	r3, r3, #2
    445c:	440b      	add	r3, r1
    445e:	6858      	ldr	r0, [r3, #4]
    4460:	491c      	ldr	r1, [pc, #112]	; (44d4 <__copy_rom_sections_to_ram+0x98>)
    4462:	687a      	ldr	r2, [r7, #4]
    4464:	4613      	mov	r3, r2
    4466:	005b      	lsls	r3, r3, #1
    4468:	4413      	add	r3, r2
    446a:	009b      	lsls	r3, r3, #2
    446c:	440b      	add	r3, r1
    446e:	6819      	ldr	r1, [r3, #0]
    4470:	4c18      	ldr	r4, [pc, #96]	; (44d4 <__copy_rom_sections_to_ram+0x98>)
    4472:	687a      	ldr	r2, [r7, #4]
    4474:	4613      	mov	r3, r2
    4476:	005b      	lsls	r3, r3, #1
    4478:	4413      	add	r3, r2
    447a:	009b      	lsls	r3, r3, #2
    447c:	4423      	add	r3, r4
    447e:	3308      	adds	r3, #8
    4480:	681b      	ldr	r3, [r3, #0]
    4482:	461a      	mov	r2, r3
    4484:	f7ff ff68 	bl	4358 <__copy_rom_section>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:111
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
		 ++index)
    4488:	687b      	ldr	r3, [r7, #4]
    448a:	3301      	adds	r3, #1
    448c:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:108 (discriminator 1)

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
    448e:	4911      	ldr	r1, [pc, #68]	; (44d4 <__copy_rom_sections_to_ram+0x98>)
    4490:	687a      	ldr	r2, [r7, #4]
    4492:	4613      	mov	r3, r2
    4494:	005b      	lsls	r3, r3, #1
    4496:	4413      	add	r3, r2
    4498:	009b      	lsls	r3, r3, #2
    449a:	440b      	add	r3, r1
    449c:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:107 (discriminator 1)
	if (__S_romp == 0L) return;

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
    449e:	2b00      	cmp	r3, #0
    44a0:	d1d6      	bne.n	4450 <__copy_rom_sections_to_ram+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:109
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
    44a2:	490c      	ldr	r1, [pc, #48]	; (44d4 <__copy_rom_sections_to_ram+0x98>)
    44a4:	687a      	ldr	r2, [r7, #4]
    44a6:	4613      	mov	r3, r2
    44a8:	005b      	lsls	r3, r3, #1
    44aa:	4413      	add	r3, r2
    44ac:	009b      	lsls	r3, r3, #2
    44ae:	440b      	add	r3, r1
    44b0:	685b      	ldr	r3, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:108

	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
    44b2:	2b00      	cmp	r3, #0
    44b4:	d1cc      	bne.n	4450 <__copy_rom_sections_to_ram+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:110
		 __S_romp[index].Target != 0 ||
		 __S_romp[index].Size != 0;
    44b6:	4907      	ldr	r1, [pc, #28]	; (44d4 <__copy_rom_sections_to_ram+0x98>)
    44b8:	687a      	ldr	r2, [r7, #4]
    44ba:	4613      	mov	r3, r2
    44bc:	005b      	lsls	r3, r3, #1
    44be:	4413      	add	r3, r2
    44c0:	009b      	lsls	r3, r3, #2
    44c2:	440b      	add	r3, r1
    44c4:	3308      	adds	r3, #8
    44c6:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:109
	/*
	 *	Go through the entire table, copying sections from ROM to RAM.
	 */
	for (index = 0;
		 __S_romp[index].Source != 0 ||
		 __S_romp[index].Target != 0 ||
    44c8:	2b00      	cmp	r3, #0
    44ca:	d1c1      	bne.n	4450 <__copy_rom_sections_to_ram+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:118
		__copy_rom_section( __S_romp[index].Target,
							__S_romp[index].Source,
							__S_romp[index].Size );

	}
}
    44cc:	370c      	adds	r7, #12
    44ce:	46bd      	mov	sp, r7
    44d0:	bd90      	pop	{r4, r7, pc}
    44d2:	bf00      	nop
    44d4:	0000e30c 	.word	0x0000e30c

000044d8 <__init_registers>:
__init_registers():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:168
  }
}
#endif

void __attribute__ ((weak)) __init_registers(void)
{
    44d8:	b480      	push	{r7}
    44da:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:171
  #if defined(SCB_CPACR)
  /* Initialize FPU */
  SCB_CPACR |= SCB_CPACR_CP10(3U) | SCB_CPACR_CP11(3U); 
    44dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    44e0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
    44e4:	f8d2 2d88 	ldr.w	r2, [r2, #3464]	; 0xd88
    44e8:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
    44ec:	f8c3 2d88 	str.w	r2, [r3, #3464]	; 0xd88
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:174
  #endif

}
    44f0:	46bd      	mov	sp, r7
    44f2:	f85d 7b04 	ldr.w	r7, [sp], #4
    44f6:	4770      	bx	lr

000044f8 <__init_user>:
__init_user():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:182
{

}

void __attribute__ ((weak)) __init_user(void)
{
    44f8:	b480      	push	{r7}
    44fa:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:184

}
    44fc:	46bd      	mov	sp, r7
    44fe:	f85d 7b04 	ldr.w	r7, [sp], #4
    4502:	4770      	bx	lr

00004504 <__thumb_startup>:
__thumb_startup():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:197
	__thumb_startup();
}

__attribute__((naked)) void __thumb_startup(void)
{
int addr = (int)__SP_INIT;
    4504:	4c0b      	ldr	r4, [pc, #44]	; (4534 <skip_sp+0x16>)
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:202

    /* setup the stack before we attempt anything else
       skip stack setup if __SP_INIT is 0
       assume sp is already setup. */
    __asm (
    4506:	4620      	mov	r0, r4
    4508:	2800      	cmp	r0, #0
    450a:	f000 8008 	beq.w	451e <skip_sp>
    450e:	4685      	mov	sp, r0
    4510:	b081      	sub	sp, #4
    4512:	f04f 0000 	mov.w	r0, #0
    4516:	ea6f 0000 	mvn.w	r0, r0
    451a:	9000      	str	r0, [sp, #0]
    451c:	b001      	add	sp, #4

0000451e <skip_sp>:
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:216
    "add  sp,#4\n\t"
    "skip_sp:\n\t"
    ::"r"(addr));

    /* Setup registers */
    __init_registers();
    451e:	f7ff ffdb 	bl	44d8 <__init_registers>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:219
    
    /* setup hardware */
    __init_hardware();
    4522:	f7fc fcb9 	bl	e98 <__init_hardware>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:222
    
    /* SUPPORT_ROM_TO_RAM */
    __copy_rom_sections_to_ram();
    4526:	f7ff ff89 	bl	443c <__copy_rom_sections_to_ram>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:225
    
    /* initializations before main, user specific */
    __init_user();
    452a:	f7ff ffe5 	bl	44f8 <__init_user>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:228

#ifndef __ATOLLIC__
    _start();
    452e:	f7fb ff99 	bl	464 <_mainCRTStartup>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Project_Settings/Startup_Code/startup.c:238 (discriminator 1)
    __libc_init_array();
    main();
#endif

    /*	should never get here */
    while (1);
    4532:	e7fe      	b.n	4532 <skip_sp+0x14>
    4534:	20030000 	.word	0x20030000

00004538 <ADC_0_MainMeasure>:
ADC_0_MainMeasure():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:136
**         the polling mode.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void ADC_0_MainMeasure(void)
{
    4538:	b580      	push	{r7, lr}
    453a:	b082      	sub	sp, #8
    453c:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:139
  byte SumChan;                        /* Counter of measured channels */

  for (SumChan=0U; SumChan<5U; SumChan++) {
    453e:	2300      	movs	r3, #0
    4540:	71fb      	strb	r3, [r7, #7]
    4542:	e024      	b.n	458e <ADC_0_MainMeasure+0x56>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:140
    SampleGroup[0].ChannelIdx = SumChan;
    4544:	4b18      	ldr	r3, [pc, #96]	; (45a8 <ADC_0_MainMeasure+0x70>)
    4546:	79fa      	ldrb	r2, [r7, #7]
    4548:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:141
    (void)AdcLdd2_CreateSampleGroup(AdcLdd2_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    454a:	4b18      	ldr	r3, [pc, #96]	; (45ac <ADC_0_MainMeasure+0x74>)
    454c:	681b      	ldr	r3, [r3, #0]
    454e:	4618      	mov	r0, r3
    4550:	4915      	ldr	r1, [pc, #84]	; (45a8 <ADC_0_MainMeasure+0x70>)
    4552:	2201      	movs	r2, #1
    4554:	f001 fb36 	bl	5bc4 <AdcLdd2_CreateSampleGroup>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:142
    (void)AdcLdd2_StartSingleMeasurement(AdcLdd2_DeviceDataPtr);
    4558:	4b14      	ldr	r3, [pc, #80]	; (45ac <ADC_0_MainMeasure+0x74>)
    455a:	681b      	ldr	r3, [r3, #0]
    455c:	4618      	mov	r0, r3
    455e:	f001 fb05 	bl	5b6c <AdcLdd2_StartSingleMeasurement>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:143
    while (AdcLdd2_GetMeasurementCompleteStatus(AdcLdd2_DeviceDataPtr) == FALSE) {} /* Wait for AD conversion complete */
    4562:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:143 (discriminator 1)
    4564:	4b11      	ldr	r3, [pc, #68]	; (45ac <ADC_0_MainMeasure+0x74>)
    4566:	681b      	ldr	r3, [r3, #0]
    4568:	4618      	mov	r0, r3
    456a:	f001 fb91 	bl	5c90 <AdcLdd2_GetMeasurementCompleteStatus>
    456e:	4603      	mov	r3, r0
    4570:	2b00      	cmp	r3, #0
    4572:	d0f7      	beq.n	4564 <ADC_0_MainMeasure+0x2c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:144
    AdcLdd2_GetMeasuredValues(AdcLdd2_DeviceDataPtr, (LDD_TData *)&ADC_0_OutV[SumChan]);
    4574:	4b0d      	ldr	r3, [pc, #52]	; (45ac <ADC_0_MainMeasure+0x74>)
    4576:	681a      	ldr	r2, [r3, #0]
    4578:	79fb      	ldrb	r3, [r7, #7]
    457a:	0059      	lsls	r1, r3, #1
    457c:	4b0c      	ldr	r3, [pc, #48]	; (45b0 <ADC_0_MainMeasure+0x78>)
    457e:	440b      	add	r3, r1
    4580:	4610      	mov	r0, r2
    4582:	4619      	mov	r1, r3
    4584:	f001 fb58 	bl	5c38 <AdcLdd2_GetMeasuredValues>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:139
*/
static void ADC_0_MainMeasure(void)
{
  byte SumChan;                        /* Counter of measured channels */

  for (SumChan=0U; SumChan<5U; SumChan++) {
    4588:	79fb      	ldrb	r3, [r7, #7]
    458a:	3301      	adds	r3, #1
    458c:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:139 (discriminator 1)
    458e:	79fb      	ldrb	r3, [r7, #7]
    4590:	2b04      	cmp	r3, #4
    4592:	d9d7      	bls.n	4544 <ADC_0_MainMeasure+0xc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:146
    (void)AdcLdd2_CreateSampleGroup(AdcLdd2_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    (void)AdcLdd2_StartSingleMeasurement(AdcLdd2_DeviceDataPtr);
    while (AdcLdd2_GetMeasurementCompleteStatus(AdcLdd2_DeviceDataPtr) == FALSE) {} /* Wait for AD conversion complete */
    AdcLdd2_GetMeasuredValues(AdcLdd2_DeviceDataPtr, (LDD_TData *)&ADC_0_OutV[SumChan]);
  }
  OutFlg = TRUE;                       /* Measured values are available */
    4594:	4b07      	ldr	r3, [pc, #28]	; (45b4 <ADC_0_MainMeasure+0x7c>)
    4596:	2201      	movs	r2, #1
    4598:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:147
  ModeFlg = STOP;                      /* Set the device to the stop mode */
    459a:	4b07      	ldr	r3, [pc, #28]	; (45b8 <ADC_0_MainMeasure+0x80>)
    459c:	2200      	movs	r2, #0
    459e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:148
}
    45a0:	3708      	adds	r7, #8
    45a2:	46bd      	mov	sp, r7
    45a4:	bd80      	pop	{r7, pc}
    45a6:	bf00      	nop
    45a8:	2000012c 	.word	0x2000012c
    45ac:	20023640 	.word	0x20023640
    45b0:	20023644 	.word	0x20023644
    45b4:	20000134 	.word	0x20000134
    45b8:	2000012a 	.word	0x2000012a

000045bc <ADC_0_HWEnDi>:
ADC_0_HWEnDi():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:161
**         Enable and Disable methods and several internal methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ADC_0_HWEnDi(void)
{
    45bc:	b580      	push	{r7, lr}
    45be:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:162
  if (EnUser) {                        /* Enable device? */
    45c0:	4b0e      	ldr	r3, [pc, #56]	; (45fc <ADC_0_HWEnDi+0x40>)
    45c2:	781b      	ldrb	r3, [r3, #0]
    45c4:	2b00      	cmp	r3, #0
    45c6:	d012      	beq.n	45ee <ADC_0_HWEnDi+0x32>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:163
    (void)AdcLdd2_Enable(AdcLdd2_DeviceDataPtr); /* Enable device */
    45c8:	4b0d      	ldr	r3, [pc, #52]	; (4600 <ADC_0_HWEnDi+0x44>)
    45ca:	681b      	ldr	r3, [r3, #0]
    45cc:	4618      	mov	r0, r3
    45ce:	f001 faa5 	bl	5b1c <AdcLdd2_Enable>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:164
    if (ModeFlg) {                     /* Start or stop measurement? */
    45d2:	4b0c      	ldr	r3, [pc, #48]	; (4604 <ADC_0_HWEnDi+0x48>)
    45d4:	781b      	ldrb	r3, [r3, #0]
    45d6:	b2db      	uxtb	r3, r3
    45d8:	2b00      	cmp	r3, #0
    45da:	d00d      	beq.n	45f8 <ADC_0_HWEnDi+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:165
      OutFlg = FALSE;                  /* Output values aren't available */
    45dc:	4b0a      	ldr	r3, [pc, #40]	; (4608 <ADC_0_HWEnDi+0x4c>)
    45de:	2200      	movs	r2, #0
    45e0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:166
      SampleGroup[0].ChannelIdx = 0U;
    45e2:	4b0a      	ldr	r3, [pc, #40]	; (460c <ADC_0_HWEnDi+0x50>)
    45e4:	2200      	movs	r2, #0
    45e6:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:167
      ADC_0_MainMeasure();
    45e8:	f7ff ffa6 	bl	4538 <ADC_0_MainMeasure>
    45ec:	e004      	b.n	45f8 <ADC_0_HWEnDi+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:171
    }
  }
  else {
    (void)AdcLdd2_Disable(AdcLdd2_DeviceDataPtr); /* Disable device */
    45ee:	4b04      	ldr	r3, [pc, #16]	; (4600 <ADC_0_HWEnDi+0x44>)
    45f0:	681b      	ldr	r3, [r3, #0]
    45f2:	4618      	mov	r0, r3
    45f4:	f001 faa0 	bl	5b38 <AdcLdd2_Disable>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:173
  }
}
    45f8:	bd80      	pop	{r7, pc}
    45fa:	bf00      	nop
    45fc:	20000129 	.word	0x20000129
    4600:	20023640 	.word	0x20023640
    4604:	2000012a 	.word	0x2000012a
    4608:	20000134 	.word	0x20000134
    460c:	2000012c 	.word	0x2000012c

00004610 <PE_ADC_0_Measure>:
PE_ADC_0_Measure():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:261
**                           ERR_DISABLED - Device is disabled
**                           ERR_BUSY - A conversion is already running
*/
/* ===================================================================*/
byte PE_ADC_0_Measure(void)
{
    4610:	b580      	push	{r7, lr}
    4612:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:262
  if (!EnUser) {                       /* Is the device disabled by user? */
    4614:	4b0a      	ldr	r3, [pc, #40]	; (4640 <PE_ADC_0_Measure+0x30>)
    4616:	781b      	ldrb	r3, [r3, #0]
    4618:	2b00      	cmp	r3, #0
    461a:	d101      	bne.n	4620 <PE_ADC_0_Measure+0x10>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:263
    return ERR_DISABLED;               /* If yes then error */
    461c:	2307      	movs	r3, #7
    461e:	e00c      	b.n	463a <PE_ADC_0_Measure+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:265
  }
  if (ModeFlg != STOP) {               /* Is the device in different mode than "stop"? */
    4620:	4b08      	ldr	r3, [pc, #32]	; (4644 <PE_ADC_0_Measure+0x34>)
    4622:	781b      	ldrb	r3, [r3, #0]
    4624:	b2db      	uxtb	r3, r3
    4626:	2b00      	cmp	r3, #0
    4628:	d001      	beq.n	462e <PE_ADC_0_Measure+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:266
    return ERR_BUSY;                   /* If yes then error */
    462a:	2308      	movs	r3, #8
    462c:	e005      	b.n	463a <PE_ADC_0_Measure+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:268
  }
  ModeFlg = MEASURE;                   /* Set state of device to the measure mode */
    462e:	4b05      	ldr	r3, [pc, #20]	; (4644 <PE_ADC_0_Measure+0x34>)
    4630:	2201      	movs	r2, #1
    4632:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:269
  ADC_0_HWEnDi();                      /* Enable the device */
    4634:	f7ff ffc2 	bl	45bc <ADC_0_HWEnDi>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:270
  return ERR_OK;                       /* OK */
    4638:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:271
}
    463a:	4618      	mov	r0, r3
    463c:	bd80      	pop	{r7, pc}
    463e:	bf00      	nop
    4640:	20000129 	.word	0x20000129
    4644:	2000012a 	.word	0x2000012a

00004648 <ADC_0_GetValue16>:
ADC_0_GetValue16():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:302
**                           error may not be supported on some CPUs
**                           (see generated code).
*/
/* ===================================================================*/
byte ADC_0_GetValue16(word *Values)
{
    4648:	b480      	push	{r7}
    464a:	b083      	sub	sp, #12
    464c:	af00      	add	r7, sp, #0
    464e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:303
  if (!OutFlg) {                       /* Is output flag set? */
    4650:	4b15      	ldr	r3, [pc, #84]	; (46a8 <ADC_0_GetValue16+0x60>)
    4652:	781b      	ldrb	r3, [r3, #0]
    4654:	b2db      	uxtb	r3, r3
    4656:	2b00      	cmp	r3, #0
    4658:	d101      	bne.n	465e <ADC_0_GetValue16+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:304
    return ERR_NOTAVAIL;               /* If no then error */
    465a:	2309      	movs	r3, #9
    465c:	e01d      	b.n	469a <ADC_0_GetValue16+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:306
  }
  Values[0] = ADC_0_OutV[0];           /* Save measured values to the output buffer */
    465e:	4b13      	ldr	r3, [pc, #76]	; (46ac <ADC_0_GetValue16+0x64>)
    4660:	881b      	ldrh	r3, [r3, #0]
    4662:	b29a      	uxth	r2, r3
    4664:	687b      	ldr	r3, [r7, #4]
    4666:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:307
  Values[1] = ADC_0_OutV[1];           /* Save measured values to the output buffer */
    4668:	687b      	ldr	r3, [r7, #4]
    466a:	3302      	adds	r3, #2
    466c:	4a0f      	ldr	r2, [pc, #60]	; (46ac <ADC_0_GetValue16+0x64>)
    466e:	8852      	ldrh	r2, [r2, #2]
    4670:	b292      	uxth	r2, r2
    4672:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:308
  Values[2] = ADC_0_OutV[2];           /* Save measured values to the output buffer */
    4674:	687b      	ldr	r3, [r7, #4]
    4676:	3304      	adds	r3, #4
    4678:	4a0c      	ldr	r2, [pc, #48]	; (46ac <ADC_0_GetValue16+0x64>)
    467a:	8892      	ldrh	r2, [r2, #4]
    467c:	b292      	uxth	r2, r2
    467e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:309
  Values[3] = ADC_0_OutV[3];           /* Save measured values to the output buffer */
    4680:	687b      	ldr	r3, [r7, #4]
    4682:	3306      	adds	r3, #6
    4684:	4a09      	ldr	r2, [pc, #36]	; (46ac <ADC_0_GetValue16+0x64>)
    4686:	88d2      	ldrh	r2, [r2, #6]
    4688:	b292      	uxth	r2, r2
    468a:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:310
  Values[4] = ADC_0_OutV[4];           /* Save measured values to the output buffer */
    468c:	687b      	ldr	r3, [r7, #4]
    468e:	3308      	adds	r3, #8
    4690:	4a06      	ldr	r2, [pc, #24]	; (46ac <ADC_0_GetValue16+0x64>)
    4692:	8912      	ldrh	r2, [r2, #8]
    4694:	b292      	uxth	r2, r2
    4696:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:311
  return ERR_OK;                       /* OK */
    4698:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:312
}
    469a:	4618      	mov	r0, r3
    469c:	370c      	adds	r7, #12
    469e:	46bd      	mov	sp, r7
    46a0:	f85d 7b04 	ldr.w	r7, [sp], #4
    46a4:	4770      	bx	lr
    46a6:	bf00      	nop
    46a8:	20000134 	.word	0x20000134
    46ac:	20023644 	.word	0x20023644

000046b0 <ADC_0_Init>:
ADC_0_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:369
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ADC_0_Init(void)
{
    46b0:	b580      	push	{r7, lr}
    46b2:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:370
  EnUser = TRUE;                       /* Enable device */
    46b4:	4b07      	ldr	r3, [pc, #28]	; (46d4 <ADC_0_Init+0x24>)
    46b6:	2201      	movs	r2, #1
    46b8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:371
  OutFlg = FALSE;                      /* No measured value */
    46ba:	4b07      	ldr	r3, [pc, #28]	; (46d8 <ADC_0_Init+0x28>)
    46bc:	2200      	movs	r2, #0
    46be:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:372
  ModeFlg = STOP;                      /* Device isn't running */
    46c0:	4b06      	ldr	r3, [pc, #24]	; (46dc <ADC_0_Init+0x2c>)
    46c2:	2200      	movs	r2, #0
    46c4:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:373
  AdcLdd2_DeviceDataPtr = AdcLdd2_Init(NULL); /* Calling init method of the inherited component */
    46c6:	2000      	movs	r0, #0
    46c8:	f001 f9ba 	bl	5a40 <AdcLdd2_Init>
    46cc:	4602      	mov	r2, r0
    46ce:	4b04      	ldr	r3, [pc, #16]	; (46e0 <ADC_0_Init+0x30>)
    46d0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_0.c:374
}
    46d2:	bd80      	pop	{r7, pc}
    46d4:	20000129 	.word	0x20000129
    46d8:	20000134 	.word	0x20000134
    46dc:	2000012a 	.word	0x2000012a
    46e0:	20023640 	.word	0x20023640

000046e4 <ADC_1_MainMeasure>:
ADC_1_MainMeasure():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:133
**         the polling mode.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void ADC_1_MainMeasure(void)
{
    46e4:	b580      	push	{r7, lr}
    46e6:	b082      	sub	sp, #8
    46e8:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:136
  byte SumChan;                        /* Counter of measured channels */

  OutFlg = FALSE;                      /* Output values aren't available */
    46ea:	4b1c      	ldr	r3, [pc, #112]	; (475c <ADC_1_MainMeasure+0x78>)
    46ec:	2200      	movs	r2, #0
    46ee:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:137
  SumChan = 0U;                        /* Set the counter of measured channels to 0 */
    46f0:	2300      	movs	r3, #0
    46f2:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:139

  for (SumChan=0U; SumChan<5U; SumChan++) {
    46f4:	2300      	movs	r3, #0
    46f6:	71fb      	strb	r3, [r7, #7]
    46f8:	e024      	b.n	4744 <ADC_1_MainMeasure+0x60>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:140
    SampleGroup[0].ChannelIdx = SumChan;
    46fa:	4b19      	ldr	r3, [pc, #100]	; (4760 <ADC_1_MainMeasure+0x7c>)
    46fc:	79fa      	ldrb	r2, [r7, #7]
    46fe:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:141
    (void)AdcLdd3_CreateSampleGroup(AdcLdd3_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    4700:	4b18      	ldr	r3, [pc, #96]	; (4764 <ADC_1_MainMeasure+0x80>)
    4702:	681b      	ldr	r3, [r3, #0]
    4704:	4618      	mov	r0, r3
    4706:	4916      	ldr	r1, [pc, #88]	; (4760 <ADC_1_MainMeasure+0x7c>)
    4708:	2201      	movs	r2, #1
    470a:	f001 fb6d 	bl	5de8 <AdcLdd3_CreateSampleGroup>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:142
    (void)AdcLdd3_StartSingleMeasurement(AdcLdd3_DeviceDataPtr);
    470e:	4b15      	ldr	r3, [pc, #84]	; (4764 <ADC_1_MainMeasure+0x80>)
    4710:	681b      	ldr	r3, [r3, #0]
    4712:	4618      	mov	r0, r3
    4714:	f001 fb42 	bl	5d9c <AdcLdd3_StartSingleMeasurement>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:143
    while (AdcLdd3_GetMeasurementCompleteStatus(AdcLdd3_DeviceDataPtr) == FALSE) {} /* Wait for AD conversion complete */
    4718:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:143 (discriminator 1)
    471a:	4b12      	ldr	r3, [pc, #72]	; (4764 <ADC_1_MainMeasure+0x80>)
    471c:	681b      	ldr	r3, [r3, #0]
    471e:	4618      	mov	r0, r3
    4720:	f001 fbbc 	bl	5e9c <AdcLdd3_GetMeasurementCompleteStatus>
    4724:	4603      	mov	r3, r0
    4726:	2b00      	cmp	r3, #0
    4728:	d0f7      	beq.n	471a <ADC_1_MainMeasure+0x36>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:144
    AdcLdd3_GetMeasuredValues(AdcLdd3_DeviceDataPtr, (LDD_TData *)&ADC_1_OutV[SumChan]);
    472a:	4b0e      	ldr	r3, [pc, #56]	; (4764 <ADC_1_MainMeasure+0x80>)
    472c:	681a      	ldr	r2, [r3, #0]
    472e:	79fb      	ldrb	r3, [r7, #7]
    4730:	0059      	lsls	r1, r3, #1
    4732:	4b0d      	ldr	r3, [pc, #52]	; (4768 <ADC_1_MainMeasure+0x84>)
    4734:	440b      	add	r3, r1
    4736:	4610      	mov	r0, r2
    4738:	4619      	mov	r1, r3
    473a:	f001 fb89 	bl	5e50 <AdcLdd3_GetMeasuredValues>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:139
  byte SumChan;                        /* Counter of measured channels */

  OutFlg = FALSE;                      /* Output values aren't available */
  SumChan = 0U;                        /* Set the counter of measured channels to 0 */

  for (SumChan=0U; SumChan<5U; SumChan++) {
    473e:	79fb      	ldrb	r3, [r7, #7]
    4740:	3301      	adds	r3, #1
    4742:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:139 (discriminator 1)
    4744:	79fb      	ldrb	r3, [r7, #7]
    4746:	2b04      	cmp	r3, #4
    4748:	d9d7      	bls.n	46fa <ADC_1_MainMeasure+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:146
    (void)AdcLdd3_CreateSampleGroup(AdcLdd3_DeviceDataPtr, (LDD_ADC_TSample *)SampleGroup, 1U); /* Configure sample group */
    (void)AdcLdd3_StartSingleMeasurement(AdcLdd3_DeviceDataPtr);
    while (AdcLdd3_GetMeasurementCompleteStatus(AdcLdd3_DeviceDataPtr) == FALSE) {} /* Wait for AD conversion complete */
    AdcLdd3_GetMeasuredValues(AdcLdd3_DeviceDataPtr, (LDD_TData *)&ADC_1_OutV[SumChan]);
  }
  OutFlg = TRUE;                       /* Measured values are available */
    474a:	4b04      	ldr	r3, [pc, #16]	; (475c <ADC_1_MainMeasure+0x78>)
    474c:	2201      	movs	r2, #1
    474e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:147
  ModeFlg = STOP;                      /* Set the device to the stop mode */
    4750:	4b06      	ldr	r3, [pc, #24]	; (476c <ADC_1_MainMeasure+0x88>)
    4752:	2200      	movs	r2, #0
    4754:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:148
}
    4756:	3708      	adds	r7, #8
    4758:	46bd      	mov	sp, r7
    475a:	bd80      	pop	{r7, pc}
    475c:	20000140 	.word	0x20000140
    4760:	20000138 	.word	0x20000138
    4764:	2002365c 	.word	0x2002365c
    4768:	20023650 	.word	0x20023650
    476c:	20000135 	.word	0x20000135

00004770 <PE_ADC_1_Measure>:
PE_ADC_1_Measure():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:183
**                           ERR_DISABLED - Device is disabled
**                           ERR_BUSY - A conversion is already running
*/
/* ===================================================================*/
byte PE_ADC_1_Measure(void)
{
    4770:	b580      	push	{r7, lr}
    4772:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:184
  if (ModeFlg != STOP) {               /* Is the device in different mode than "stop"? */
    4774:	4b07      	ldr	r3, [pc, #28]	; (4794 <PE_ADC_1_Measure+0x24>)
    4776:	781b      	ldrb	r3, [r3, #0]
    4778:	b2db      	uxtb	r3, r3
    477a:	2b00      	cmp	r3, #0
    477c:	d001      	beq.n	4782 <PE_ADC_1_Measure+0x12>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:185
    return ERR_BUSY;                   /* If yes then error */
    477e:	2308      	movs	r3, #8
    4780:	e005      	b.n	478e <PE_ADC_1_Measure+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:187
  }
  ModeFlg = MEASURE;                   /* Set state of device to the measure mode */
    4782:	4b04      	ldr	r3, [pc, #16]	; (4794 <PE_ADC_1_Measure+0x24>)
    4784:	2201      	movs	r2, #1
    4786:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:188
  ADC_1_MainMeasure();
    4788:	f7ff ffac 	bl	46e4 <ADC_1_MainMeasure>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:189
  return ERR_OK;                       /* OK */
    478c:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:190
}
    478e:	4618      	mov	r0, r3
    4790:	bd80      	pop	{r7, pc}
    4792:	bf00      	nop
    4794:	20000135 	.word	0x20000135

00004798 <ADC_1_GetValue16>:
ADC_1_GetValue16():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:221
**                           error may not be supported on some CPUs
**                           (see generated code).
*/
/* ===================================================================*/
byte ADC_1_GetValue16(word *Values)
{
    4798:	b480      	push	{r7}
    479a:	b083      	sub	sp, #12
    479c:	af00      	add	r7, sp, #0
    479e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:222
  if (!OutFlg) {                       /* Is output flag set? */
    47a0:	4b15      	ldr	r3, [pc, #84]	; (47f8 <ADC_1_GetValue16+0x60>)
    47a2:	781b      	ldrb	r3, [r3, #0]
    47a4:	b2db      	uxtb	r3, r3
    47a6:	2b00      	cmp	r3, #0
    47a8:	d101      	bne.n	47ae <ADC_1_GetValue16+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:223
    return ERR_NOTAVAIL;               /* If no then error */
    47aa:	2309      	movs	r3, #9
    47ac:	e01d      	b.n	47ea <ADC_1_GetValue16+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:225
  }
  Values[0] = ADC_1_OutV[0];           /* Save measured values to the output buffer */
    47ae:	4b13      	ldr	r3, [pc, #76]	; (47fc <ADC_1_GetValue16+0x64>)
    47b0:	881b      	ldrh	r3, [r3, #0]
    47b2:	b29a      	uxth	r2, r3
    47b4:	687b      	ldr	r3, [r7, #4]
    47b6:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:226
  Values[1] = ADC_1_OutV[1];           /* Save measured values to the output buffer */
    47b8:	687b      	ldr	r3, [r7, #4]
    47ba:	3302      	adds	r3, #2
    47bc:	4a0f      	ldr	r2, [pc, #60]	; (47fc <ADC_1_GetValue16+0x64>)
    47be:	8852      	ldrh	r2, [r2, #2]
    47c0:	b292      	uxth	r2, r2
    47c2:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:227
  Values[2] = ADC_1_OutV[2];           /* Save measured values to the output buffer */
    47c4:	687b      	ldr	r3, [r7, #4]
    47c6:	3304      	adds	r3, #4
    47c8:	4a0c      	ldr	r2, [pc, #48]	; (47fc <ADC_1_GetValue16+0x64>)
    47ca:	8892      	ldrh	r2, [r2, #4]
    47cc:	b292      	uxth	r2, r2
    47ce:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:228
  Values[3] = ADC_1_OutV[3];           /* Save measured values to the output buffer */
    47d0:	687b      	ldr	r3, [r7, #4]
    47d2:	3306      	adds	r3, #6
    47d4:	4a09      	ldr	r2, [pc, #36]	; (47fc <ADC_1_GetValue16+0x64>)
    47d6:	88d2      	ldrh	r2, [r2, #6]
    47d8:	b292      	uxth	r2, r2
    47da:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:229
  Values[4] = ADC_1_OutV[4];           /* Save measured values to the output buffer */
    47dc:	687b      	ldr	r3, [r7, #4]
    47de:	3308      	adds	r3, #8
    47e0:	4a06      	ldr	r2, [pc, #24]	; (47fc <ADC_1_GetValue16+0x64>)
    47e2:	8912      	ldrh	r2, [r2, #8]
    47e4:	b292      	uxth	r2, r2
    47e6:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:230
  return ERR_OK;                       /* OK */
    47e8:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:231
}
    47ea:	4618      	mov	r0, r3
    47ec:	370c      	adds	r7, #12
    47ee:	46bd      	mov	sp, r7
    47f0:	f85d 7b04 	ldr.w	r7, [sp], #4
    47f4:	4770      	bx	lr
    47f6:	bf00      	nop
    47f8:	20000140 	.word	0x20000140
    47fc:	20023650 	.word	0x20023650

00004800 <ADC_1_Init>:
ADC_1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:285
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ADC_1_Init(void)
{
    4800:	b580      	push	{r7, lr}
    4802:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:286
  OutFlg = FALSE;                      /* No measured value */
    4804:	4b06      	ldr	r3, [pc, #24]	; (4820 <ADC_1_Init+0x20>)
    4806:	2200      	movs	r2, #0
    4808:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:287
  ModeFlg = STOP;                      /* Device isn't running */
    480a:	4b06      	ldr	r3, [pc, #24]	; (4824 <ADC_1_Init+0x24>)
    480c:	2200      	movs	r2, #0
    480e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:288
  AdcLdd3_DeviceDataPtr = AdcLdd3_Init(NULL); /* Calling init method of the inherited component */
    4810:	2000      	movs	r0, #0
    4812:	f001 fa57 	bl	5cc4 <AdcLdd3_Init>
    4816:	4602      	mov	r2, r0
    4818:	4b03      	ldr	r3, [pc, #12]	; (4828 <ADC_1_Init+0x28>)
    481a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ADC_1.c:289
}
    481c:	bd80      	pop	{r7, pc}
    481e:	bf00      	nop
    4820:	20000140 	.word	0x20000140
    4824:	20000135 	.word	0x20000135
    4828:	2002365c 	.word	0x2002365c

0000482c <HWEnDi>:
HWEnDi():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:172
**         Disable methods and several internal methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void HWEnDi(void)
{
    482c:	b580      	push	{r7, lr}
    482e:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:173
  (void)ASerialLdd1_ReceiveBlock(ASerialLdd1_DeviceDataPtr, &BufferRead, 1U); /* Receive one data byte */
    4830:	4b03      	ldr	r3, [pc, #12]	; (4840 <HWEnDi+0x14>)
    4832:	681b      	ldr	r3, [r3, #0]
    4834:	4618      	mov	r0, r3
    4836:	4903      	ldr	r1, [pc, #12]	; (4844 <HWEnDi+0x18>)
    4838:	2201      	movs	r2, #1
    483a:	f000 fc8d 	bl	5158 <ASerialLdd1_ReceiveBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:174
}
    483e:	bd80      	pop	{r7, pc}
    4840:	20023660 	.word	0x20023660
    4844:	20000200 	.word	0x20000200

00004848 <AS_BLE_RecvChar>:
AS_BLE_RecvChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:209
**                           <GetError> method can be used for error
**                           specification)
** ===================================================================
*/
byte AS_BLE_RecvChar(AS_BLE_TComData *Chr)
{
    4848:	b480      	push	{r7}
    484a:	b085      	sub	sp, #20
    484c:	af00      	add	r7, sp, #0
    484e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:210
  byte Result = ERR_OK;                /* Return error code */
    4850:	2300      	movs	r3, #0
    4852:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:212

  if (AS_BLE_InpLen > 0x00U) {         /* Is number of received chars greater than 0? */
    4854:	4b2c      	ldr	r3, [pc, #176]	; (4908 <AS_BLE_RecvChar+0xc0>)
    4856:	881b      	ldrh	r3, [r3, #0]
    4858:	2b00      	cmp	r3, #0
    485a:	d04b      	beq.n	48f4 <AS_BLE_RecvChar+0xac>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:213
    EnterCritical();                   /* Disable global interrupts */
    485c:	f3ef 8013 	mrs	r0, FAULTMASK
    4860:	b671      	cpsid	f
    4862:	73b8      	strb	r0, [r7, #14]
    4864:	4b29      	ldr	r3, [pc, #164]	; (490c <AS_BLE_RecvChar+0xc4>)
    4866:	781b      	ldrb	r3, [r3, #0]
    4868:	b2db      	uxtb	r3, r3
    486a:	3301      	adds	r3, #1
    486c:	b2db      	uxtb	r3, r3
    486e:	4a27      	ldr	r2, [pc, #156]	; (490c <AS_BLE_RecvChar+0xc4>)
    4870:	4619      	mov	r1, r3
    4872:	7011      	strb	r1, [r2, #0]
    4874:	2b01      	cmp	r3, #1
    4876:	d102      	bne.n	487e <AS_BLE_RecvChar+0x36>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:213 (discriminator 1)
    4878:	7bba      	ldrb	r2, [r7, #14]
    487a:	4b25      	ldr	r3, [pc, #148]	; (4910 <AS_BLE_RecvChar+0xc8>)
    487c:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:214
    AS_BLE_InpLen--;                   /* Decrease number of received chars */
    487e:	4b22      	ldr	r3, [pc, #136]	; (4908 <AS_BLE_RecvChar+0xc0>)
    4880:	881b      	ldrh	r3, [r3, #0]
    4882:	3b01      	subs	r3, #1
    4884:	b29a      	uxth	r2, r3
    4886:	4b20      	ldr	r3, [pc, #128]	; (4908 <AS_BLE_RecvChar+0xc0>)
    4888:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:215
    *Chr = InpBuffer[InpIndexR++];     /* Received char */
    488a:	4b22      	ldr	r3, [pc, #136]	; (4914 <AS_BLE_RecvChar+0xcc>)
    488c:	881b      	ldrh	r3, [r3, #0]
    488e:	1c5a      	adds	r2, r3, #1
    4890:	b291      	uxth	r1, r2
    4892:	4a20      	ldr	r2, [pc, #128]	; (4914 <AS_BLE_RecvChar+0xcc>)
    4894:	8011      	strh	r1, [r2, #0]
    4896:	4a20      	ldr	r2, [pc, #128]	; (4918 <AS_BLE_RecvChar+0xd0>)
    4898:	5cd2      	ldrb	r2, [r2, r3]
    489a:	687b      	ldr	r3, [r7, #4]
    489c:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:216
    if (InpIndexR >= AS_BLE_INP_BUF_SIZE) { /* Is the index out of the receive buffer? */
    489e:	4b1d      	ldr	r3, [pc, #116]	; (4914 <AS_BLE_RecvChar+0xcc>)
    48a0:	881b      	ldrh	r3, [r3, #0]
    48a2:	2bb3      	cmp	r3, #179	; 0xb3
    48a4:	d902      	bls.n	48ac <AS_BLE_RecvChar+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:217
      InpIndexR = 0x00U;               /* Set index to the first item into the receive buffer */
    48a6:	4b1b      	ldr	r3, [pc, #108]	; (4914 <AS_BLE_RecvChar+0xcc>)
    48a8:	2200      	movs	r2, #0
    48aa:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:219
    }
    Result = (byte)((SerFlag & (OVERRUN_ERR|COMMON_ERR|FULL_RX))? ERR_COMMON : ERR_OK);
    48ac:	4b1b      	ldr	r3, [pc, #108]	; (491c <AS_BLE_RecvChar+0xd4>)
    48ae:	881b      	ldrh	r3, [r3, #0]
    48b0:	461a      	mov	r2, r3
    48b2:	f640 0341 	movw	r3, #2113	; 0x841
    48b6:	4013      	ands	r3, r2
    48b8:	2b00      	cmp	r3, #0
    48ba:	d001      	beq.n	48c0 <AS_BLE_RecvChar+0x78>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:219 (discriminator 1)
    48bc:	2319      	movs	r3, #25
    48be:	e000      	b.n	48c2 <AS_BLE_RecvChar+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:219 (discriminator 2)
    48c0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:219 (discriminator 3)
    48c2:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:220 (discriminator 3)
    SerFlag &= (word)~(word)(OVERRUN_ERR|COMMON_ERR|FULL_RX|CHAR_IN_RX); /* Clear all errors in the status variable */
    48c4:	4b15      	ldr	r3, [pc, #84]	; (491c <AS_BLE_RecvChar+0xd4>)
    48c6:	881b      	ldrh	r3, [r3, #0]
    48c8:	f423 6304 	bic.w	r3, r3, #2112	; 0x840
    48cc:	f023 0309 	bic.w	r3, r3, #9
    48d0:	b29a      	uxth	r2, r3
    48d2:	4b12      	ldr	r3, [pc, #72]	; (491c <AS_BLE_RecvChar+0xd4>)
    48d4:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:221 (discriminator 3)
    ExitCritical();                    /* Enable global interrupts */
    48d6:	4b0d      	ldr	r3, [pc, #52]	; (490c <AS_BLE_RecvChar+0xc4>)
    48d8:	781b      	ldrb	r3, [r3, #0]
    48da:	b2db      	uxtb	r3, r3
    48dc:	3b01      	subs	r3, #1
    48de:	b2db      	uxtb	r3, r3
    48e0:	4a0a      	ldr	r2, [pc, #40]	; (490c <AS_BLE_RecvChar+0xc4>)
    48e2:	4619      	mov	r1, r3
    48e4:	7011      	strb	r1, [r2, #0]
    48e6:	2b00      	cmp	r3, #0
    48e8:	d106      	bne.n	48f8 <AS_BLE_RecvChar+0xb0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:221 (discriminator 1)
    48ea:	4b09      	ldr	r3, [pc, #36]	; (4910 <AS_BLE_RecvChar+0xc8>)
    48ec:	7818      	ldrb	r0, [r3, #0]
    48ee:	f380 8813 	msr	FAULTMASK, r0
    48f2:	e001      	b.n	48f8 <AS_BLE_RecvChar+0xb0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:223
  } else {
    return ERR_RXEMPTY;                /* Receiver is empty */
    48f4:	230a      	movs	r3, #10
    48f6:	e000      	b.n	48fa <AS_BLE_RecvChar+0xb2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:225
  }
  return Result;                       /* Return error code */
    48f8:	7bfb      	ldrb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:226
}
    48fa:	4618      	mov	r0, r3
    48fc:	3714      	adds	r7, #20
    48fe:	46bd      	mov	sp, r7
    4900:	f85d 7b04 	ldr.w	r7, [sp], #4
    4904:	4770      	bx	lr
    4906:	bf00      	nop
    4908:	20000144 	.word	0x20000144
    490c:	2000010c 	.word	0x2000010c
    4910:	20000b80 	.word	0x20000b80
    4914:	20000146 	.word	0x20000146
    4918:	2000014c 	.word	0x2000014c
    491c:	20000142 	.word	0x20000142

00004920 <AS_BLE_SendChar>:
AS_BLE_SendChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:251
**                           the active speed mode
**                           ERR_TXFULL - Transmitter is full
** ===================================================================
*/
byte AS_BLE_SendChar(AS_BLE_TComData Chr)
{
    4920:	b580      	push	{r7, lr}
    4922:	b084      	sub	sp, #16
    4924:	af00      	add	r7, sp, #0
    4926:	4603      	mov	r3, r0
    4928:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:252
  if (AS_BLE_OutLen == AS_BLE_OUT_BUF_SIZE) { /* Is number of chars in buffer is the same as a size of the transmit buffer */
    492a:	4b2c      	ldr	r3, [pc, #176]	; (49dc <AS_BLE_SendChar+0xbc>)
    492c:	881b      	ldrh	r3, [r3, #0]
    492e:	2bb4      	cmp	r3, #180	; 0xb4
    4930:	d101      	bne.n	4936 <AS_BLE_SendChar+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:253
    return ERR_TXFULL;                 /* If yes then error */
    4932:	230b      	movs	r3, #11
    4934:	e04e      	b.n	49d4 <AS_BLE_SendChar+0xb4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:255
  }
  EnterCritical();                     /* Disable global interrupts */
    4936:	f3ef 8013 	mrs	r0, FAULTMASK
    493a:	b671      	cpsid	f
    493c:	73f8      	strb	r0, [r7, #15]
    493e:	4b28      	ldr	r3, [pc, #160]	; (49e0 <AS_BLE_SendChar+0xc0>)
    4940:	781b      	ldrb	r3, [r3, #0]
    4942:	b2db      	uxtb	r3, r3
    4944:	3301      	adds	r3, #1
    4946:	b2db      	uxtb	r3, r3
    4948:	4a25      	ldr	r2, [pc, #148]	; (49e0 <AS_BLE_SendChar+0xc0>)
    494a:	4619      	mov	r1, r3
    494c:	7011      	strb	r1, [r2, #0]
    494e:	2b01      	cmp	r3, #1
    4950:	d102      	bne.n	4958 <AS_BLE_SendChar+0x38>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:255 (discriminator 1)
    4952:	7bfa      	ldrb	r2, [r7, #15]
    4954:	4b23      	ldr	r3, [pc, #140]	; (49e4 <AS_BLE_SendChar+0xc4>)
    4956:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:256
  AS_BLE_OutLen++;                     /* Increase number of bytes in the transmit buffer */
    4958:	4b20      	ldr	r3, [pc, #128]	; (49dc <AS_BLE_SendChar+0xbc>)
    495a:	881b      	ldrh	r3, [r3, #0]
    495c:	3301      	adds	r3, #1
    495e:	b29a      	uxth	r2, r3
    4960:	4b1e      	ldr	r3, [pc, #120]	; (49dc <AS_BLE_SendChar+0xbc>)
    4962:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:257
  OutBuffer[OutIndexW++] = Chr;        /* Store char to buffer */
    4964:	4b20      	ldr	r3, [pc, #128]	; (49e8 <AS_BLE_SendChar+0xc8>)
    4966:	881b      	ldrh	r3, [r3, #0]
    4968:	1c5a      	adds	r2, r3, #1
    496a:	b291      	uxth	r1, r2
    496c:	4a1e      	ldr	r2, [pc, #120]	; (49e8 <AS_BLE_SendChar+0xc8>)
    496e:	8011      	strh	r1, [r2, #0]
    4970:	4a1e      	ldr	r2, [pc, #120]	; (49ec <AS_BLE_SendChar+0xcc>)
    4972:	79f9      	ldrb	r1, [r7, #7]
    4974:	54d1      	strb	r1, [r2, r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:258
  if (OutIndexW >= AS_BLE_OUT_BUF_SIZE) { /* Is the pointer out of the transmit buffer */
    4976:	4b1c      	ldr	r3, [pc, #112]	; (49e8 <AS_BLE_SendChar+0xc8>)
    4978:	881b      	ldrh	r3, [r3, #0]
    497a:	2bb3      	cmp	r3, #179	; 0xb3
    497c:	d902      	bls.n	4984 <AS_BLE_SendChar+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:259
    OutIndexW = 0x00U;                 /* Set index to first item in the transmit buffer */
    497e:	4b1a      	ldr	r3, [pc, #104]	; (49e8 <AS_BLE_SendChar+0xc8>)
    4980:	2200      	movs	r2, #0
    4982:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:261
  }
  if ((SerFlag & RUNINT_FROM_TX) == 0U) {
    4984:	4b1a      	ldr	r3, [pc, #104]	; (49f0 <AS_BLE_SendChar+0xd0>)
    4986:	881b      	ldrh	r3, [r3, #0]
    4988:	f003 0320 	and.w	r3, r3, #32
    498c:	2b00      	cmp	r3, #0
    498e:	d112      	bne.n	49b6 <AS_BLE_SendChar+0x96>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:262
    SerFlag |= RUNINT_FROM_TX;         /* Set flag "running int from TX"? */
    4990:	4b17      	ldr	r3, [pc, #92]	; (49f0 <AS_BLE_SendChar+0xd0>)
    4992:	881b      	ldrh	r3, [r3, #0]
    4994:	f043 0320 	orr.w	r3, r3, #32
    4998:	b29a      	uxth	r2, r3
    499a:	4b15      	ldr	r3, [pc, #84]	; (49f0 <AS_BLE_SendChar+0xd0>)
    499c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:263
    (void)ASerialLdd1_SendBlock(ASerialLdd1_DeviceDataPtr, (LDD_TData *)&OutBuffer[OutIndexR], 1U); /* Send one data byte */
    499e:	4b15      	ldr	r3, [pc, #84]	; (49f4 <AS_BLE_SendChar+0xd4>)
    49a0:	681a      	ldr	r2, [r3, #0]
    49a2:	4b15      	ldr	r3, [pc, #84]	; (49f8 <AS_BLE_SendChar+0xd8>)
    49a4:	881b      	ldrh	r3, [r3, #0]
    49a6:	4619      	mov	r1, r3
    49a8:	4b10      	ldr	r3, [pc, #64]	; (49ec <AS_BLE_SendChar+0xcc>)
    49aa:	440b      	add	r3, r1
    49ac:	4610      	mov	r0, r2
    49ae:	4619      	mov	r1, r3
    49b0:	2201      	movs	r2, #1
    49b2:	f000 fc19 	bl	51e8 <ASerialLdd1_SendBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:265
  }
  ExitCritical();                      /* Enable global interrupts */
    49b6:	4b0a      	ldr	r3, [pc, #40]	; (49e0 <AS_BLE_SendChar+0xc0>)
    49b8:	781b      	ldrb	r3, [r3, #0]
    49ba:	b2db      	uxtb	r3, r3
    49bc:	3b01      	subs	r3, #1
    49be:	b2db      	uxtb	r3, r3
    49c0:	4a07      	ldr	r2, [pc, #28]	; (49e0 <AS_BLE_SendChar+0xc0>)
    49c2:	4619      	mov	r1, r3
    49c4:	7011      	strb	r1, [r2, #0]
    49c6:	2b00      	cmp	r3, #0
    49c8:	d103      	bne.n	49d2 <AS_BLE_SendChar+0xb2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:265 (discriminator 1)
    49ca:	4b06      	ldr	r3, [pc, #24]	; (49e4 <AS_BLE_SendChar+0xc4>)
    49cc:	7818      	ldrb	r0, [r3, #0]
    49ce:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:266
  return ERR_OK;                       /* OK */
    49d2:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:267
}
    49d4:	4618      	mov	r0, r3
    49d6:	3710      	adds	r7, #16
    49d8:	46bd      	mov	sp, r7
    49da:	bd80      	pop	{r7, pc}
    49dc:	20000202 	.word	0x20000202
    49e0:	2000010c 	.word	0x2000010c
    49e4:	20000b80 	.word	0x20000b80
    49e8:	20000206 	.word	0x20000206
    49ec:	20000208 	.word	0x20000208
    49f0:	20000142 	.word	0x20000142
    49f4:	20023660 	.word	0x20023660
    49f8:	20000204 	.word	0x20000204

000049fc <AS_BLE_SendBlock>:
AS_BLE_SendBlock():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:349
**                           ERR_TXFULL - It was not possible to send
**                           requested number of bytes
** ===================================================================
*/
byte AS_BLE_SendBlock(AS_BLE_TComData *Ptr, word Size, word *Snd)
{
    49fc:	b580      	push	{r7, lr}
    49fe:	b088      	sub	sp, #32
    4a00:	af00      	add	r7, sp, #0
    4a02:	60f8      	str	r0, [r7, #12]
    4a04:	460b      	mov	r3, r1
    4a06:	607a      	str	r2, [r7, #4]
    4a08:	817b      	strh	r3, [r7, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:350
  word count = 0x00U;                  /* Number of sent chars */
    4a0a:	2300      	movs	r3, #0
    4a0c:	83fb      	strh	r3, [r7, #30]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:351
  AS_BLE_TComData *TmpPtr = Ptr;       /* Temporary output buffer pointer */
    4a0e:	68fb      	ldr	r3, [r7, #12]
    4a10:	61bb      	str	r3, [r7, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:353

  while ((count < Size) && (AS_BLE_OutLen < AS_BLE_OUT_BUF_SIZE)) { /* While there is some char desired to send left and output buffer is not full do */
    4a12:	e054      	b.n	4abe <AS_BLE_SendBlock+0xc2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:354
    EnterCritical();                   /* Enter the critical section */
    4a14:	f3ef 8013 	mrs	r0, FAULTMASK
    4a18:	b671      	cpsid	f
    4a1a:	75f8      	strb	r0, [r7, #23]
    4a1c:	4b33      	ldr	r3, [pc, #204]	; (4aec <AS_BLE_SendBlock+0xf0>)
    4a1e:	781b      	ldrb	r3, [r3, #0]
    4a20:	b2db      	uxtb	r3, r3
    4a22:	3301      	adds	r3, #1
    4a24:	b2db      	uxtb	r3, r3
    4a26:	4a31      	ldr	r2, [pc, #196]	; (4aec <AS_BLE_SendBlock+0xf0>)
    4a28:	4619      	mov	r1, r3
    4a2a:	7011      	strb	r1, [r2, #0]
    4a2c:	2b01      	cmp	r3, #1
    4a2e:	d102      	bne.n	4a36 <AS_BLE_SendBlock+0x3a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:354 (discriminator 1)
    4a30:	7dfa      	ldrb	r2, [r7, #23]
    4a32:	4b2f      	ldr	r3, [pc, #188]	; (4af0 <AS_BLE_SendBlock+0xf4>)
    4a34:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:355
    AS_BLE_OutLen++;                   /* Increase number of bytes in the transmit buffer */
    4a36:	4b2f      	ldr	r3, [pc, #188]	; (4af4 <AS_BLE_SendBlock+0xf8>)
    4a38:	881b      	ldrh	r3, [r3, #0]
    4a3a:	3301      	adds	r3, #1
    4a3c:	b29a      	uxth	r2, r3
    4a3e:	4b2d      	ldr	r3, [pc, #180]	; (4af4 <AS_BLE_SendBlock+0xf8>)
    4a40:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:356
    OutBuffer[OutIndexW++] = *TmpPtr++; /* Store char to buffer */
    4a42:	4b2d      	ldr	r3, [pc, #180]	; (4af8 <AS_BLE_SendBlock+0xfc>)
    4a44:	881b      	ldrh	r3, [r3, #0]
    4a46:	1c5a      	adds	r2, r3, #1
    4a48:	b291      	uxth	r1, r2
    4a4a:	4a2b      	ldr	r2, [pc, #172]	; (4af8 <AS_BLE_SendBlock+0xfc>)
    4a4c:	8011      	strh	r1, [r2, #0]
    4a4e:	461a      	mov	r2, r3
    4a50:	69bb      	ldr	r3, [r7, #24]
    4a52:	1c59      	adds	r1, r3, #1
    4a54:	61b9      	str	r1, [r7, #24]
    4a56:	7819      	ldrb	r1, [r3, #0]
    4a58:	4b28      	ldr	r3, [pc, #160]	; (4afc <AS_BLE_SendBlock+0x100>)
    4a5a:	5499      	strb	r1, [r3, r2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:357
    if (OutIndexW >= AS_BLE_OUT_BUF_SIZE) { /* Is the index out of the transmit buffer? */
    4a5c:	4b26      	ldr	r3, [pc, #152]	; (4af8 <AS_BLE_SendBlock+0xfc>)
    4a5e:	881b      	ldrh	r3, [r3, #0]
    4a60:	2bb3      	cmp	r3, #179	; 0xb3
    4a62:	d902      	bls.n	4a6a <AS_BLE_SendBlock+0x6e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:358
      OutIndexW = 0x00U;               /* Set index to the first item in the transmit buffer */
    4a64:	4b24      	ldr	r3, [pc, #144]	; (4af8 <AS_BLE_SendBlock+0xfc>)
    4a66:	2200      	movs	r2, #0
    4a68:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:360
    }
    count++;                           /* Increase the count of sent data */
    4a6a:	8bfb      	ldrh	r3, [r7, #30]
    4a6c:	3301      	adds	r3, #1
    4a6e:	83fb      	strh	r3, [r7, #30]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:361
    if ((SerFlag & RUNINT_FROM_TX) == 0U) {
    4a70:	4b23      	ldr	r3, [pc, #140]	; (4b00 <AS_BLE_SendBlock+0x104>)
    4a72:	881b      	ldrh	r3, [r3, #0]
    4a74:	f003 0320 	and.w	r3, r3, #32
    4a78:	2b00      	cmp	r3, #0
    4a7a:	d112      	bne.n	4aa2 <AS_BLE_SendBlock+0xa6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:362
      SerFlag |= RUNINT_FROM_TX;       /* Set flag "running int from TX"? */
    4a7c:	4b20      	ldr	r3, [pc, #128]	; (4b00 <AS_BLE_SendBlock+0x104>)
    4a7e:	881b      	ldrh	r3, [r3, #0]
    4a80:	f043 0320 	orr.w	r3, r3, #32
    4a84:	b29a      	uxth	r2, r3
    4a86:	4b1e      	ldr	r3, [pc, #120]	; (4b00 <AS_BLE_SendBlock+0x104>)
    4a88:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:363
      (void)ASerialLdd1_SendBlock(ASerialLdd1_DeviceDataPtr, (LDD_TData *)&OutBuffer[OutIndexR], 1U); /* Send one data byte */
    4a8a:	4b1e      	ldr	r3, [pc, #120]	; (4b04 <AS_BLE_SendBlock+0x108>)
    4a8c:	681a      	ldr	r2, [r3, #0]
    4a8e:	4b1e      	ldr	r3, [pc, #120]	; (4b08 <AS_BLE_SendBlock+0x10c>)
    4a90:	881b      	ldrh	r3, [r3, #0]
    4a92:	4619      	mov	r1, r3
    4a94:	4b19      	ldr	r3, [pc, #100]	; (4afc <AS_BLE_SendBlock+0x100>)
    4a96:	440b      	add	r3, r1
    4a98:	4610      	mov	r0, r2
    4a9a:	4619      	mov	r1, r3
    4a9c:	2201      	movs	r2, #1
    4a9e:	f000 fba3 	bl	51e8 <ASerialLdd1_SendBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:365
    }
    ExitCritical();                    /* Exit the critical section */
    4aa2:	4b12      	ldr	r3, [pc, #72]	; (4aec <AS_BLE_SendBlock+0xf0>)
    4aa4:	781b      	ldrb	r3, [r3, #0]
    4aa6:	b2db      	uxtb	r3, r3
    4aa8:	3b01      	subs	r3, #1
    4aaa:	b2db      	uxtb	r3, r3
    4aac:	4a0f      	ldr	r2, [pc, #60]	; (4aec <AS_BLE_SendBlock+0xf0>)
    4aae:	4619      	mov	r1, r3
    4ab0:	7011      	strb	r1, [r2, #0]
    4ab2:	2b00      	cmp	r3, #0
    4ab4:	d103      	bne.n	4abe <AS_BLE_SendBlock+0xc2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:365 (discriminator 1)
    4ab6:	4b0e      	ldr	r3, [pc, #56]	; (4af0 <AS_BLE_SendBlock+0xf4>)
    4ab8:	7818      	ldrb	r0, [r3, #0]
    4aba:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:353 (discriminator 1)
byte AS_BLE_SendBlock(AS_BLE_TComData *Ptr, word Size, word *Snd)
{
  word count = 0x00U;                  /* Number of sent chars */
  AS_BLE_TComData *TmpPtr = Ptr;       /* Temporary output buffer pointer */

  while ((count < Size) && (AS_BLE_OutLen < AS_BLE_OUT_BUF_SIZE)) { /* While there is some char desired to send left and output buffer is not full do */
    4abe:	8bfa      	ldrh	r2, [r7, #30]
    4ac0:	897b      	ldrh	r3, [r7, #10]
    4ac2:	429a      	cmp	r2, r3
    4ac4:	d203      	bcs.n	4ace <AS_BLE_SendBlock+0xd2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:353 (discriminator 2)
    4ac6:	4b0b      	ldr	r3, [pc, #44]	; (4af4 <AS_BLE_SendBlock+0xf8>)
    4ac8:	881b      	ldrh	r3, [r3, #0]
    4aca:	2bb3      	cmp	r3, #179	; 0xb3
    4acc:	d9a2      	bls.n	4a14 <AS_BLE_SendBlock+0x18>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:367
      SerFlag |= RUNINT_FROM_TX;       /* Set flag "running int from TX"? */
      (void)ASerialLdd1_SendBlock(ASerialLdd1_DeviceDataPtr, (LDD_TData *)&OutBuffer[OutIndexR], 1U); /* Send one data byte */
    }
    ExitCritical();                    /* Exit the critical section */
  }
  *Snd = count;                        /* Return number of sent chars */
    4ace:	687b      	ldr	r3, [r7, #4]
    4ad0:	8bfa      	ldrh	r2, [r7, #30]
    4ad2:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:368
  if (count != Size) {                 /* Is the number of sent chars less then desired number of chars */
    4ad4:	8bfa      	ldrh	r2, [r7, #30]
    4ad6:	897b      	ldrh	r3, [r7, #10]
    4ad8:	429a      	cmp	r2, r3
    4ada:	d001      	beq.n	4ae0 <AS_BLE_SendBlock+0xe4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:369
    return ERR_TXFULL;                 /* If yes then error */
    4adc:	230b      	movs	r3, #11
    4ade:	e000      	b.n	4ae2 <AS_BLE_SendBlock+0xe6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:371
  }
  return ERR_OK;                       /* OK */
    4ae0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:372
}
    4ae2:	4618      	mov	r0, r3
    4ae4:	3720      	adds	r7, #32
    4ae6:	46bd      	mov	sp, r7
    4ae8:	bd80      	pop	{r7, pc}
    4aea:	bf00      	nop
    4aec:	2000010c 	.word	0x2000010c
    4af0:	20000b80 	.word	0x20000b80
    4af4:	20000202 	.word	0x20000202
    4af8:	20000206 	.word	0x20000206
    4afc:	20000208 	.word	0x20000208
    4b00:	20000142 	.word	0x20000142
    4b04:	20023660 	.word	0x20023660
    4b08:	20000204 	.word	0x20000204

00004b0c <AS_BLE_GetCharsInRxBuf>:
AS_BLE_GetCharsInRxBuf():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:438
**         ---             - The number of characters in the input
**                           buffer.
** ===================================================================
*/
word AS_BLE_GetCharsInRxBuf(void)
{
    4b0c:	b480      	push	{r7}
    4b0e:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:439
  return AS_BLE_InpLen;                /* Return number of chars in receive buffer */
    4b10:	4b03      	ldr	r3, [pc, #12]	; (4b20 <AS_BLE_GetCharsInRxBuf+0x14>)
    4b12:	881b      	ldrh	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:440
}
    4b14:	4618      	mov	r0, r3
    4b16:	46bd      	mov	sp, r7
    4b18:	f85d 7b04 	ldr.w	r7, [sp], #4
    4b1c:	4770      	bx	lr
    4b1e:	bf00      	nop
    4b20:	20000144 	.word	0x20000144

00004b24 <AS_BLE_Init>:
AS_BLE_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:472
**         application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AS_BLE_Init(void)
{
    4b24:	b580      	push	{r7, lr}
    4b26:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:473
  SerFlag = 0x00U;                     /* Reset flags */
    4b28:	4b0e      	ldr	r3, [pc, #56]	; (4b64 <AS_BLE_Init+0x40>)
    4b2a:	2200      	movs	r2, #0
    4b2c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:474
  AS_BLE_InpLen = 0x00U;               /* No char in the receive buffer */
    4b2e:	4b0e      	ldr	r3, [pc, #56]	; (4b68 <AS_BLE_Init+0x44>)
    4b30:	2200      	movs	r2, #0
    4b32:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:475
  InpIndexR = 0x00U;                   /* Set index on the first item in the receive buffer */
    4b34:	4b0d      	ldr	r3, [pc, #52]	; (4b6c <AS_BLE_Init+0x48>)
    4b36:	2200      	movs	r2, #0
    4b38:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:476
  InpIndexW = 0x00U;
    4b3a:	4b0d      	ldr	r3, [pc, #52]	; (4b70 <AS_BLE_Init+0x4c>)
    4b3c:	2200      	movs	r2, #0
    4b3e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:477
  AS_BLE_OutLen = 0x00U;               /* No char in the transmit buffer */
    4b40:	4b0c      	ldr	r3, [pc, #48]	; (4b74 <AS_BLE_Init+0x50>)
    4b42:	2200      	movs	r2, #0
    4b44:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:478
  OutIndexR = 0x00U;                   /* Set index on the first item in the transmit buffer */
    4b46:	4b0c      	ldr	r3, [pc, #48]	; (4b78 <AS_BLE_Init+0x54>)
    4b48:	2200      	movs	r2, #0
    4b4a:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:479
  OutIndexW = 0x00U;
    4b4c:	4b0b      	ldr	r3, [pc, #44]	; (4b7c <AS_BLE_Init+0x58>)
    4b4e:	2200      	movs	r2, #0
    4b50:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:480
  ASerialLdd1_DeviceDataPtr = ASerialLdd1_Init(NULL); /* Calling init method of the inherited component */
    4b52:	2000      	movs	r0, #0
    4b54:	f000 fa14 	bl	4f80 <ASerialLdd1_Init>
    4b58:	4602      	mov	r2, r0
    4b5a:	4b09      	ldr	r3, [pc, #36]	; (4b80 <AS_BLE_Init+0x5c>)
    4b5c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:481
  HWEnDi();                            /* Enable/disable device according to status flags */
    4b5e:	f7ff fe65 	bl	482c <HWEnDi>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:482
}
    4b62:	bd80      	pop	{r7, pc}
    4b64:	20000142 	.word	0x20000142
    4b68:	20000144 	.word	0x20000144
    4b6c:	20000146 	.word	0x20000146
    4b70:	20000148 	.word	0x20000148
    4b74:	20000202 	.word	0x20000202
    4b78:	20000204 	.word	0x20000204
    4b7c:	20000206 	.word	0x20000206
    4b80:	20023660 	.word	0x20023660

00004b84 <ASerialLdd1_OnBlockReceived>:
ASerialLdd1_OnBlockReceived():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:498
**         moved to the input buffer.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd1_OnBlockReceived(LDD_TUserData *UserDataPtr)
{
    4b84:	b580      	push	{r7, lr}
    4b86:	b082      	sub	sp, #8
    4b88:	af00      	add	r7, sp, #0
    4b8a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:501

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  if (AS_BLE_InpLen < AS_BLE_INP_BUF_SIZE) { /* Is number of bytes in the receive buffer lower than size of buffer? */
    4b8c:	4b16      	ldr	r3, [pc, #88]	; (4be8 <ASerialLdd1_OnBlockReceived+0x64>)
    4b8e:	881b      	ldrh	r3, [r3, #0]
    4b90:	2bb3      	cmp	r3, #179	; 0xb3
    4b92:	d817      	bhi.n	4bc4 <ASerialLdd1_OnBlockReceived+0x40>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:502
    AS_BLE_InpLen++;                   /* Increase number of chars in the receive buffer */
    4b94:	4b14      	ldr	r3, [pc, #80]	; (4be8 <ASerialLdd1_OnBlockReceived+0x64>)
    4b96:	881b      	ldrh	r3, [r3, #0]
    4b98:	3301      	adds	r3, #1
    4b9a:	b29a      	uxth	r2, r3
    4b9c:	4b12      	ldr	r3, [pc, #72]	; (4be8 <ASerialLdd1_OnBlockReceived+0x64>)
    4b9e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:503
    InpBuffer[InpIndexW++] = (AS_BLE_TComData)BufferRead; /* Save received char to the receive buffer */
    4ba0:	4b12      	ldr	r3, [pc, #72]	; (4bec <ASerialLdd1_OnBlockReceived+0x68>)
    4ba2:	881b      	ldrh	r3, [r3, #0]
    4ba4:	1c5a      	adds	r2, r3, #1
    4ba6:	b291      	uxth	r1, r2
    4ba8:	4a10      	ldr	r2, [pc, #64]	; (4bec <ASerialLdd1_OnBlockReceived+0x68>)
    4baa:	8011      	strh	r1, [r2, #0]
    4bac:	4a10      	ldr	r2, [pc, #64]	; (4bf0 <ASerialLdd1_OnBlockReceived+0x6c>)
    4bae:	7811      	ldrb	r1, [r2, #0]
    4bb0:	4a10      	ldr	r2, [pc, #64]	; (4bf4 <ASerialLdd1_OnBlockReceived+0x70>)
    4bb2:	54d1      	strb	r1, [r2, r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:504
    if (InpIndexW >= AS_BLE_INP_BUF_SIZE) { /* Is the index out of the receive buffer? */
    4bb4:	4b0d      	ldr	r3, [pc, #52]	; (4bec <ASerialLdd1_OnBlockReceived+0x68>)
    4bb6:	881b      	ldrh	r3, [r3, #0]
    4bb8:	2bb3      	cmp	r3, #179	; 0xb3
    4bba:	d90a      	bls.n	4bd2 <ASerialLdd1_OnBlockReceived+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:505
      InpIndexW = 0x00U;               /* Set index on the first item into the receive buffer */
    4bbc:	4b0b      	ldr	r3, [pc, #44]	; (4bec <ASerialLdd1_OnBlockReceived+0x68>)
    4bbe:	2200      	movs	r2, #0
    4bc0:	801a      	strh	r2, [r3, #0]
    4bc2:	e006      	b.n	4bd2 <ASerialLdd1_OnBlockReceived+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:508
    }
  } else {
    SerFlag |= FULL_RX;                /* Set flag "full RX buffer" */
    4bc4:	4b0c      	ldr	r3, [pc, #48]	; (4bf8 <ASerialLdd1_OnBlockReceived+0x74>)
    4bc6:	881b      	ldrh	r3, [r3, #0]
    4bc8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    4bcc:	b29a      	uxth	r2, r3
    4bce:	4b0a      	ldr	r3, [pc, #40]	; (4bf8 <ASerialLdd1_OnBlockReceived+0x74>)
    4bd0:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:510
  }
  (void)ASerialLdd1_ReceiveBlock(ASerialLdd1_DeviceDataPtr, &BufferRead, 1U); /* Receive one data byte */
    4bd2:	4b0a      	ldr	r3, [pc, #40]	; (4bfc <ASerialLdd1_OnBlockReceived+0x78>)
    4bd4:	681b      	ldr	r3, [r3, #0]
    4bd6:	4618      	mov	r0, r3
    4bd8:	4905      	ldr	r1, [pc, #20]	; (4bf0 <ASerialLdd1_OnBlockReceived+0x6c>)
    4bda:	2201      	movs	r2, #1
    4bdc:	f000 fabc 	bl	5158 <ASerialLdd1_ReceiveBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:511
}
    4be0:	3708      	adds	r7, #8
    4be2:	46bd      	mov	sp, r7
    4be4:	bd80      	pop	{r7, pc}
    4be6:	bf00      	nop
    4be8:	20000144 	.word	0x20000144
    4bec:	20000148 	.word	0x20000148
    4bf0:	20000200 	.word	0x20000200
    4bf4:	2000014c 	.word	0x2000014c
    4bf8:	20000142 	.word	0x20000142
    4bfc:	20023660 	.word	0x20023660

00004c00 <ASerialLdd1_OnBlockSent>:
ASerialLdd1_OnBlockSent():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:526
**         buffer is moved to the transmitter.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd1_OnBlockSent(LDD_TUserData *UserDataPtr)
{
    4c00:	b580      	push	{r7, lr}
    4c02:	b082      	sub	sp, #8
    4c04:	af00      	add	r7, sp, #0
    4c06:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:528
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  OutIndexR++;
    4c08:	4b1a      	ldr	r3, [pc, #104]	; (4c74 <ASerialLdd1_OnBlockSent+0x74>)
    4c0a:	881b      	ldrh	r3, [r3, #0]
    4c0c:	3301      	adds	r3, #1
    4c0e:	b29a      	uxth	r2, r3
    4c10:	4b18      	ldr	r3, [pc, #96]	; (4c74 <ASerialLdd1_OnBlockSent+0x74>)
    4c12:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:529
  if (OutIndexR >= AS_BLE_OUT_BUF_SIZE) { /* Is the index out of the transmit buffer? */
    4c14:	4b17      	ldr	r3, [pc, #92]	; (4c74 <ASerialLdd1_OnBlockSent+0x74>)
    4c16:	881b      	ldrh	r3, [r3, #0]
    4c18:	2bb3      	cmp	r3, #179	; 0xb3
    4c1a:	d902      	bls.n	4c22 <ASerialLdd1_OnBlockSent+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:530
    OutIndexR = 0x00U;                 /* Set index on the first item into the transmit buffer */
    4c1c:	4b15      	ldr	r3, [pc, #84]	; (4c74 <ASerialLdd1_OnBlockSent+0x74>)
    4c1e:	2200      	movs	r2, #0
    4c20:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:532
  }
  AS_BLE_OutLen--;                     /* Decrease number of chars in the transmit buffer */
    4c22:	4b15      	ldr	r3, [pc, #84]	; (4c78 <ASerialLdd1_OnBlockSent+0x78>)
    4c24:	881b      	ldrh	r3, [r3, #0]
    4c26:	3b01      	subs	r3, #1
    4c28:	b29a      	uxth	r2, r3
    4c2a:	4b13      	ldr	r3, [pc, #76]	; (4c78 <ASerialLdd1_OnBlockSent+0x78>)
    4c2c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:533
  if (AS_BLE_OutLen != 0U) {           /* Is number of bytes in the transmit buffer greater then 0? */
    4c2e:	4b12      	ldr	r3, [pc, #72]	; (4c78 <ASerialLdd1_OnBlockSent+0x78>)
    4c30:	881b      	ldrh	r3, [r3, #0]
    4c32:	2b00      	cmp	r3, #0
    4c34:	d013      	beq.n	4c5e <ASerialLdd1_OnBlockSent+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:534
    SerFlag |= RUNINT_FROM_TX;         /* Set flag "running int from TX"? */
    4c36:	4b11      	ldr	r3, [pc, #68]	; (4c7c <ASerialLdd1_OnBlockSent+0x7c>)
    4c38:	881b      	ldrh	r3, [r3, #0]
    4c3a:	f043 0320 	orr.w	r3, r3, #32
    4c3e:	b29a      	uxth	r2, r3
    4c40:	4b0e      	ldr	r3, [pc, #56]	; (4c7c <ASerialLdd1_OnBlockSent+0x7c>)
    4c42:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:535
    (void)ASerialLdd1_SendBlock(ASerialLdd1_DeviceDataPtr, (LDD_TData *)&OutBuffer[OutIndexR], 1U); /* Send one data byte */
    4c44:	4b0e      	ldr	r3, [pc, #56]	; (4c80 <ASerialLdd1_OnBlockSent+0x80>)
    4c46:	681a      	ldr	r2, [r3, #0]
    4c48:	4b0a      	ldr	r3, [pc, #40]	; (4c74 <ASerialLdd1_OnBlockSent+0x74>)
    4c4a:	881b      	ldrh	r3, [r3, #0]
    4c4c:	4619      	mov	r1, r3
    4c4e:	4b0d      	ldr	r3, [pc, #52]	; (4c84 <ASerialLdd1_OnBlockSent+0x84>)
    4c50:	440b      	add	r3, r1
    4c52:	4610      	mov	r0, r2
    4c54:	4619      	mov	r1, r3
    4c56:	2201      	movs	r2, #1
    4c58:	f000 fac6 	bl	51e8 <ASerialLdd1_SendBlock>
    4c5c:	e006      	b.n	4c6c <ASerialLdd1_OnBlockSent+0x6c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:537
  } else {
    SerFlag &= (byte)~(RUNINT_FROM_TX); /* Clear "running int from TX" and "full TX buff" flags */
    4c5e:	4b07      	ldr	r3, [pc, #28]	; (4c7c <ASerialLdd1_OnBlockSent+0x7c>)
    4c60:	881b      	ldrh	r3, [r3, #0]
    4c62:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    4c66:	b29a      	uxth	r2, r3
    4c68:	4b04      	ldr	r3, [pc, #16]	; (4c7c <ASerialLdd1_OnBlockSent+0x7c>)
    4c6a:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:539
  }
}
    4c6c:	3708      	adds	r7, #8
    4c6e:	46bd      	mov	sp, r7
    4c70:	bd80      	pop	{r7, pc}
    4c72:	bf00      	nop
    4c74:	20000204 	.word	0x20000204
    4c78:	20000202 	.word	0x20000202
    4c7c:	20000142 	.word	0x20000142
    4c80:	20023660 	.word	0x20023660
    4c84:	20000208 	.word	0x20000208

00004c88 <ASerialLdd1_OnError>:
ASerialLdd1_OnError():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:552
**         returned by a given method) occurs.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd1_OnError(LDD_TUserData *UserDataPtr)
{
    4c88:	b580      	push	{r7, lr}
    4c8a:	b084      	sub	sp, #16
    4c8c:	af00      	add	r7, sp, #0
    4c8e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:556
  LDD_SERIAL_TError SerialErrorMask;   /* Serial error mask variable */

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  (void)ASerialLdd1_GetError(ASerialLdd1_DeviceDataPtr, &SerialErrorMask); /* Get error state */
    4c90:	4b21      	ldr	r3, [pc, #132]	; (4d18 <ASerialLdd1_OnError+0x90>)
    4c92:	681a      	ldr	r2, [r3, #0]
    4c94:	f107 030c 	add.w	r3, r7, #12
    4c98:	4610      	mov	r0, r2
    4c9a:	4619      	mov	r1, r3
    4c9c:	f000 fbe8 	bl	5470 <ASerialLdd1_GetError>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:557
  if (SerialErrorMask != 0U) {
    4ca0:	68fb      	ldr	r3, [r7, #12]
    4ca2:	2b00      	cmp	r3, #0
    4ca4:	d034      	beq.n	4d10 <ASerialLdd1_OnError+0x88>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:558
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_PARITY_ERROR) != 0U ) ? PARITY_ERR : 0U);
    4ca6:	68fb      	ldr	r3, [r7, #12]
    4ca8:	f003 0302 	and.w	r3, r3, #2
    4cac:	2b00      	cmp	r3, #0
    4cae:	d001      	beq.n	4cb4 <ASerialLdd1_OnError+0x2c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:558 (discriminator 1)
    4cb0:	2304      	movs	r3, #4
    4cb2:	e000      	b.n	4cb6 <ASerialLdd1_OnError+0x2e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:558 (discriminator 2)
    4cb4:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:558 (discriminator 3)
    4cb6:	4a19      	ldr	r2, [pc, #100]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4cb8:	8812      	ldrh	r2, [r2, #0]
    4cba:	4313      	orrs	r3, r2
    4cbc:	b29a      	uxth	r2, r3
    4cbe:	4b17      	ldr	r3, [pc, #92]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4cc0:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:559 (discriminator 3)
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_NOISE_ERROR) != 0U ) ? NOISE_ERR : 0U);
    4cc2:	68fb      	ldr	r3, [r7, #12]
    4cc4:	f003 0308 	and.w	r3, r3, #8
    4cc8:	2b00      	cmp	r3, #0
    4cca:	d001      	beq.n	4cd0 <ASerialLdd1_OnError+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:559 (discriminator 1)
    4ccc:	2380      	movs	r3, #128	; 0x80
    4cce:	e000      	b.n	4cd2 <ASerialLdd1_OnError+0x4a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:559 (discriminator 2)
    4cd0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:559 (discriminator 3)
    4cd2:	4a12      	ldr	r2, [pc, #72]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4cd4:	8812      	ldrh	r2, [r2, #0]
    4cd6:	4313      	orrs	r3, r2
    4cd8:	b29a      	uxth	r2, r3
    4cda:	4b10      	ldr	r3, [pc, #64]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4cdc:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:560 (discriminator 3)
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_RX_OVERRUN) != 0U ) ? OVERRUN_ERR : 0U);
    4cde:	68fb      	ldr	r3, [r7, #12]
    4ce0:	b29b      	uxth	r3, r3
    4ce2:	f003 0301 	and.w	r3, r3, #1
    4ce6:	b29a      	uxth	r2, r3
    4ce8:	4b0c      	ldr	r3, [pc, #48]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4cea:	881b      	ldrh	r3, [r3, #0]
    4cec:	4313      	orrs	r3, r2
    4cee:	b29a      	uxth	r2, r3
    4cf0:	4b0a      	ldr	r3, [pc, #40]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4cf2:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:561 (discriminator 3)
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_FRAMING_ERROR) != 0U ) ? FRAMING_ERR : 0U);
    4cf4:	68fb      	ldr	r3, [r7, #12]
    4cf6:	f003 0304 	and.w	r3, r3, #4
    4cfa:	2b00      	cmp	r3, #0
    4cfc:	d001      	beq.n	4d02 <ASerialLdd1_OnError+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:561 (discriminator 1)
    4cfe:	2302      	movs	r3, #2
    4d00:	e000      	b.n	4d04 <ASerialLdd1_OnError+0x7c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:561 (discriminator 2)
    4d02:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:561 (discriminator 3)
    4d04:	4a05      	ldr	r2, [pc, #20]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4d06:	8812      	ldrh	r2, [r2, #0]
    4d08:	4313      	orrs	r3, r2
    4d0a:	b29a      	uxth	r2, r3
    4d0c:	4b03      	ldr	r3, [pc, #12]	; (4d1c <ASerialLdd1_OnError+0x94>)
    4d0e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:563
  }
}
    4d10:	3710      	adds	r7, #16
    4d12:	46bd      	mov	sp, r7
    4d14:	bd80      	pop	{r7, pc}
    4d16:	bf00      	nop
    4d18:	20023660 	.word	0x20023660
    4d1c:	20000142 	.word	0x20000142

00004d20 <ASerialLdd1_OnBreak>:
ASerialLdd1_OnBreak():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:575
**         This event is called when a break occurs on the input channel.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd1_OnBreak(LDD_TUserData *UserDataPtr)
{
    4d20:	b480      	push	{r7}
    4d22:	b083      	sub	sp, #12
    4d24:	af00      	add	r7, sp, #0
    4d26:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:577
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  SerFlag |= FRAMING_ERR;              /* Set framing error flag */
    4d28:	4b05      	ldr	r3, [pc, #20]	; (4d40 <ASerialLdd1_OnBreak+0x20>)
    4d2a:	881b      	ldrh	r3, [r3, #0]
    4d2c:	f043 0302 	orr.w	r3, r3, #2
    4d30:	b29a      	uxth	r2, r3
    4d32:	4b03      	ldr	r3, [pc, #12]	; (4d40 <ASerialLdd1_OnBreak+0x20>)
    4d34:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_BLE.c:578
}
    4d36:	370c      	adds	r7, #12
    4d38:	46bd      	mov	sp, r7
    4d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
    4d3e:	4770      	bx	lr
    4d40:	20000142 	.word	0x20000142

00004d44 <HWEnDi>:
HWEnDi():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:172
**         Disable methods and several internal methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void HWEnDi(void)
{
    4d44:	b580      	push	{r7, lr}
    4d46:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:173
  (void)ASerialLdd2_ReceiveBlock(ASerialLdd2_DeviceDataPtr, &BufferRead, 1U); /* Receive one data byte */
    4d48:	4b03      	ldr	r3, [pc, #12]	; (4d58 <HWEnDi+0x14>)
    4d4a:	681b      	ldr	r3, [r3, #0]
    4d4c:	4618      	mov	r0, r3
    4d4e:	4903      	ldr	r1, [pc, #12]	; (4d5c <HWEnDi+0x18>)
    4d50:	2201      	movs	r2, #1
    4d52:	f000 fcb1 	bl	56b8 <ASerialLdd2_ReceiveBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:174
}
    4d56:	bd80      	pop	{r7, pc}
    4d58:	20023664 	.word	0x20023664
    4d5c:	20000304 	.word	0x20000304

00004d60 <AS_PRG_Init>:
AS_PRG_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:472
**         application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void AS_PRG_Init(void)
{
    4d60:	b580      	push	{r7, lr}
    4d62:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:473
  SerFlag = 0x00U;                     /* Reset flags */
    4d64:	4b0e      	ldr	r3, [pc, #56]	; (4da0 <AS_PRG_Init+0x40>)
    4d66:	2200      	movs	r2, #0
    4d68:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:474
  AS_PRG_InpLen = 0x00U;               /* No char in the receive buffer */
    4d6a:	4b0e      	ldr	r3, [pc, #56]	; (4da4 <AS_PRG_Init+0x44>)
    4d6c:	2200      	movs	r2, #0
    4d6e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:475
  InpIndexR = 0x00U;                   /* Set index on the first item in the receive buffer */
    4d70:	4b0d      	ldr	r3, [pc, #52]	; (4da8 <AS_PRG_Init+0x48>)
    4d72:	2200      	movs	r2, #0
    4d74:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:476
  InpIndexW = 0x00U;
    4d76:	4b0d      	ldr	r3, [pc, #52]	; (4dac <AS_PRG_Init+0x4c>)
    4d78:	2200      	movs	r2, #0
    4d7a:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:477
  AS_PRG_OutLen = 0x00U;               /* No char in the transmit buffer */
    4d7c:	4b0c      	ldr	r3, [pc, #48]	; (4db0 <AS_PRG_Init+0x50>)
    4d7e:	2200      	movs	r2, #0
    4d80:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:478
  OutIndexR = 0x00U;                   /* Set index on the first item in the transmit buffer */
    4d82:	4b0c      	ldr	r3, [pc, #48]	; (4db4 <AS_PRG_Init+0x54>)
    4d84:	2200      	movs	r2, #0
    4d86:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:479
  OutIndexW = 0x00U;
    4d88:	4b0b      	ldr	r3, [pc, #44]	; (4db8 <AS_PRG_Init+0x58>)
    4d8a:	2200      	movs	r2, #0
    4d8c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:480
  ASerialLdd2_DeviceDataPtr = ASerialLdd2_Init(NULL); /* Calling init method of the inherited component */
    4d8e:	2000      	movs	r0, #0
    4d90:	f000 fba6 	bl	54e0 <ASerialLdd2_Init>
    4d94:	4602      	mov	r2, r0
    4d96:	4b09      	ldr	r3, [pc, #36]	; (4dbc <AS_PRG_Init+0x5c>)
    4d98:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:481
  HWEnDi();                            /* Enable/disable device according to status flags */
    4d9a:	f7ff ffd3 	bl	4d44 <HWEnDi>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:482
}
    4d9e:	bd80      	pop	{r7, pc}
    4da0:	200002bc 	.word	0x200002bc
    4da4:	200002be 	.word	0x200002be
    4da8:	200002c0 	.word	0x200002c0
    4dac:	200002c2 	.word	0x200002c2
    4db0:	20000306 	.word	0x20000306
    4db4:	20000308 	.word	0x20000308
    4db8:	2000030a 	.word	0x2000030a
    4dbc:	20023664 	.word	0x20023664

00004dc0 <ASerialLdd2_OnBlockReceived>:
ASerialLdd2_OnBlockReceived():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:498
**         moved to the input buffer.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd2_OnBlockReceived(LDD_TUserData *UserDataPtr)
{
    4dc0:	b580      	push	{r7, lr}
    4dc2:	b082      	sub	sp, #8
    4dc4:	af00      	add	r7, sp, #0
    4dc6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:501

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  if (AS_PRG_InpLen < AS_PRG_INP_BUF_SIZE) { /* Is number of bytes in the receive buffer lower than size of buffer? */
    4dc8:	4b16      	ldr	r3, [pc, #88]	; (4e24 <ASerialLdd2_OnBlockReceived+0x64>)
    4dca:	881b      	ldrh	r3, [r3, #0]
    4dcc:	2b3f      	cmp	r3, #63	; 0x3f
    4dce:	d817      	bhi.n	4e00 <ASerialLdd2_OnBlockReceived+0x40>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:502
    AS_PRG_InpLen++;                   /* Increase number of chars in the receive buffer */
    4dd0:	4b14      	ldr	r3, [pc, #80]	; (4e24 <ASerialLdd2_OnBlockReceived+0x64>)
    4dd2:	881b      	ldrh	r3, [r3, #0]
    4dd4:	3301      	adds	r3, #1
    4dd6:	b29a      	uxth	r2, r3
    4dd8:	4b12      	ldr	r3, [pc, #72]	; (4e24 <ASerialLdd2_OnBlockReceived+0x64>)
    4dda:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:503
    InpBuffer[InpIndexW++] = (AS_PRG_TComData)BufferRead; /* Save received char to the receive buffer */
    4ddc:	4b12      	ldr	r3, [pc, #72]	; (4e28 <ASerialLdd2_OnBlockReceived+0x68>)
    4dde:	881b      	ldrh	r3, [r3, #0]
    4de0:	1c5a      	adds	r2, r3, #1
    4de2:	b291      	uxth	r1, r2
    4de4:	4a10      	ldr	r2, [pc, #64]	; (4e28 <ASerialLdd2_OnBlockReceived+0x68>)
    4de6:	8011      	strh	r1, [r2, #0]
    4de8:	4a10      	ldr	r2, [pc, #64]	; (4e2c <ASerialLdd2_OnBlockReceived+0x6c>)
    4dea:	7811      	ldrb	r1, [r2, #0]
    4dec:	4a10      	ldr	r2, [pc, #64]	; (4e30 <ASerialLdd2_OnBlockReceived+0x70>)
    4dee:	54d1      	strb	r1, [r2, r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:504
    if (InpIndexW >= AS_PRG_INP_BUF_SIZE) { /* Is the index out of the receive buffer? */
    4df0:	4b0d      	ldr	r3, [pc, #52]	; (4e28 <ASerialLdd2_OnBlockReceived+0x68>)
    4df2:	881b      	ldrh	r3, [r3, #0]
    4df4:	2b3f      	cmp	r3, #63	; 0x3f
    4df6:	d90a      	bls.n	4e0e <ASerialLdd2_OnBlockReceived+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:505
      InpIndexW = 0x00U;               /* Set index on the first item into the receive buffer */
    4df8:	4b0b      	ldr	r3, [pc, #44]	; (4e28 <ASerialLdd2_OnBlockReceived+0x68>)
    4dfa:	2200      	movs	r2, #0
    4dfc:	801a      	strh	r2, [r3, #0]
    4dfe:	e006      	b.n	4e0e <ASerialLdd2_OnBlockReceived+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:508
    }
  } else {
    SerFlag |= FULL_RX;                /* Set flag "full RX buffer" */
    4e00:	4b0c      	ldr	r3, [pc, #48]	; (4e34 <ASerialLdd2_OnBlockReceived+0x74>)
    4e02:	881b      	ldrh	r3, [r3, #0]
    4e04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    4e08:	b29a      	uxth	r2, r3
    4e0a:	4b0a      	ldr	r3, [pc, #40]	; (4e34 <ASerialLdd2_OnBlockReceived+0x74>)
    4e0c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:510
  }
  (void)ASerialLdd2_ReceiveBlock(ASerialLdd2_DeviceDataPtr, &BufferRead, 1U); /* Receive one data byte */
    4e0e:	4b0a      	ldr	r3, [pc, #40]	; (4e38 <ASerialLdd2_OnBlockReceived+0x78>)
    4e10:	681b      	ldr	r3, [r3, #0]
    4e12:	4618      	mov	r0, r3
    4e14:	4905      	ldr	r1, [pc, #20]	; (4e2c <ASerialLdd2_OnBlockReceived+0x6c>)
    4e16:	2201      	movs	r2, #1
    4e18:	f000 fc4e 	bl	56b8 <ASerialLdd2_ReceiveBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:511
}
    4e1c:	3708      	adds	r7, #8
    4e1e:	46bd      	mov	sp, r7
    4e20:	bd80      	pop	{r7, pc}
    4e22:	bf00      	nop
    4e24:	200002be 	.word	0x200002be
    4e28:	200002c2 	.word	0x200002c2
    4e2c:	20000304 	.word	0x20000304
    4e30:	200002c4 	.word	0x200002c4
    4e34:	200002bc 	.word	0x200002bc
    4e38:	20023664 	.word	0x20023664

00004e3c <ASerialLdd2_OnBlockSent>:
ASerialLdd2_OnBlockSent():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:526
**         buffer is moved to the transmitter.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd2_OnBlockSent(LDD_TUserData *UserDataPtr)
{
    4e3c:	b580      	push	{r7, lr}
    4e3e:	b082      	sub	sp, #8
    4e40:	af00      	add	r7, sp, #0
    4e42:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:528
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  OutIndexR++;
    4e44:	4b1a      	ldr	r3, [pc, #104]	; (4eb0 <ASerialLdd2_OnBlockSent+0x74>)
    4e46:	881b      	ldrh	r3, [r3, #0]
    4e48:	3301      	adds	r3, #1
    4e4a:	b29a      	uxth	r2, r3
    4e4c:	4b18      	ldr	r3, [pc, #96]	; (4eb0 <ASerialLdd2_OnBlockSent+0x74>)
    4e4e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:529
  if (OutIndexR >= AS_PRG_OUT_BUF_SIZE) { /* Is the index out of the transmit buffer? */
    4e50:	4b17      	ldr	r3, [pc, #92]	; (4eb0 <ASerialLdd2_OnBlockSent+0x74>)
    4e52:	881b      	ldrh	r3, [r3, #0]
    4e54:	2b3f      	cmp	r3, #63	; 0x3f
    4e56:	d902      	bls.n	4e5e <ASerialLdd2_OnBlockSent+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:530
    OutIndexR = 0x00U;                 /* Set index on the first item into the transmit buffer */
    4e58:	4b15      	ldr	r3, [pc, #84]	; (4eb0 <ASerialLdd2_OnBlockSent+0x74>)
    4e5a:	2200      	movs	r2, #0
    4e5c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:532
  }
  AS_PRG_OutLen--;                     /* Decrease number of chars in the transmit buffer */
    4e5e:	4b15      	ldr	r3, [pc, #84]	; (4eb4 <ASerialLdd2_OnBlockSent+0x78>)
    4e60:	881b      	ldrh	r3, [r3, #0]
    4e62:	3b01      	subs	r3, #1
    4e64:	b29a      	uxth	r2, r3
    4e66:	4b13      	ldr	r3, [pc, #76]	; (4eb4 <ASerialLdd2_OnBlockSent+0x78>)
    4e68:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:533
  if (AS_PRG_OutLen != 0U) {           /* Is number of bytes in the transmit buffer greater then 0? */
    4e6a:	4b12      	ldr	r3, [pc, #72]	; (4eb4 <ASerialLdd2_OnBlockSent+0x78>)
    4e6c:	881b      	ldrh	r3, [r3, #0]
    4e6e:	2b00      	cmp	r3, #0
    4e70:	d013      	beq.n	4e9a <ASerialLdd2_OnBlockSent+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:534
    SerFlag |= RUNINT_FROM_TX;         /* Set flag "running int from TX"? */
    4e72:	4b11      	ldr	r3, [pc, #68]	; (4eb8 <ASerialLdd2_OnBlockSent+0x7c>)
    4e74:	881b      	ldrh	r3, [r3, #0]
    4e76:	f043 0320 	orr.w	r3, r3, #32
    4e7a:	b29a      	uxth	r2, r3
    4e7c:	4b0e      	ldr	r3, [pc, #56]	; (4eb8 <ASerialLdd2_OnBlockSent+0x7c>)
    4e7e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:535
    (void)ASerialLdd2_SendBlock(ASerialLdd2_DeviceDataPtr, (LDD_TData *)&OutBuffer[OutIndexR], 1U); /* Send one data byte */
    4e80:	4b0e      	ldr	r3, [pc, #56]	; (4ebc <ASerialLdd2_OnBlockSent+0x80>)
    4e82:	681a      	ldr	r2, [r3, #0]
    4e84:	4b0a      	ldr	r3, [pc, #40]	; (4eb0 <ASerialLdd2_OnBlockSent+0x74>)
    4e86:	881b      	ldrh	r3, [r3, #0]
    4e88:	4619      	mov	r1, r3
    4e8a:	4b0d      	ldr	r3, [pc, #52]	; (4ec0 <ASerialLdd2_OnBlockSent+0x84>)
    4e8c:	440b      	add	r3, r1
    4e8e:	4610      	mov	r0, r2
    4e90:	4619      	mov	r1, r3
    4e92:	2201      	movs	r2, #1
    4e94:	f000 fc58 	bl	5748 <ASerialLdd2_SendBlock>
    4e98:	e006      	b.n	4ea8 <ASerialLdd2_OnBlockSent+0x6c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:537
  } else {
    SerFlag &= (byte)~(RUNINT_FROM_TX); /* Clear "running int from TX" and "full TX buff" flags */
    4e9a:	4b07      	ldr	r3, [pc, #28]	; (4eb8 <ASerialLdd2_OnBlockSent+0x7c>)
    4e9c:	881b      	ldrh	r3, [r3, #0]
    4e9e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    4ea2:	b29a      	uxth	r2, r3
    4ea4:	4b04      	ldr	r3, [pc, #16]	; (4eb8 <ASerialLdd2_OnBlockSent+0x7c>)
    4ea6:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:539
  }
}
    4ea8:	3708      	adds	r7, #8
    4eaa:	46bd      	mov	sp, r7
    4eac:	bd80      	pop	{r7, pc}
    4eae:	bf00      	nop
    4eb0:	20000308 	.word	0x20000308
    4eb4:	20000306 	.word	0x20000306
    4eb8:	200002bc 	.word	0x200002bc
    4ebc:	20023664 	.word	0x20023664
    4ec0:	2000030c 	.word	0x2000030c

00004ec4 <ASerialLdd2_OnError>:
ASerialLdd2_OnError():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:552
**         returned by a given method) occurs.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd2_OnError(LDD_TUserData *UserDataPtr)
{
    4ec4:	b580      	push	{r7, lr}
    4ec6:	b084      	sub	sp, #16
    4ec8:	af00      	add	r7, sp, #0
    4eca:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:556
  LDD_SERIAL_TError SerialErrorMask;   /* Serial error mask variable */

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  (void)ASerialLdd2_GetError(ASerialLdd2_DeviceDataPtr, &SerialErrorMask); /* Get error state */
    4ecc:	4b21      	ldr	r3, [pc, #132]	; (4f54 <ASerialLdd2_OnError+0x90>)
    4ece:	681a      	ldr	r2, [r3, #0]
    4ed0:	f107 030c 	add.w	r3, r7, #12
    4ed4:	4610      	mov	r0, r2
    4ed6:	4619      	mov	r1, r3
    4ed8:	f000 fd7a 	bl	59d0 <ASerialLdd2_GetError>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:557
  if (SerialErrorMask != 0U) {
    4edc:	68fb      	ldr	r3, [r7, #12]
    4ede:	2b00      	cmp	r3, #0
    4ee0:	d034      	beq.n	4f4c <ASerialLdd2_OnError+0x88>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:558
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_PARITY_ERROR) != 0U ) ? PARITY_ERR : 0U);
    4ee2:	68fb      	ldr	r3, [r7, #12]
    4ee4:	f003 0302 	and.w	r3, r3, #2
    4ee8:	2b00      	cmp	r3, #0
    4eea:	d001      	beq.n	4ef0 <ASerialLdd2_OnError+0x2c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:558 (discriminator 1)
    4eec:	2304      	movs	r3, #4
    4eee:	e000      	b.n	4ef2 <ASerialLdd2_OnError+0x2e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:558 (discriminator 2)
    4ef0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:558 (discriminator 3)
    4ef2:	4a19      	ldr	r2, [pc, #100]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4ef4:	8812      	ldrh	r2, [r2, #0]
    4ef6:	4313      	orrs	r3, r2
    4ef8:	b29a      	uxth	r2, r3
    4efa:	4b17      	ldr	r3, [pc, #92]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4efc:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:559 (discriminator 3)
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_NOISE_ERROR) != 0U ) ? NOISE_ERR : 0U);
    4efe:	68fb      	ldr	r3, [r7, #12]
    4f00:	f003 0308 	and.w	r3, r3, #8
    4f04:	2b00      	cmp	r3, #0
    4f06:	d001      	beq.n	4f0c <ASerialLdd2_OnError+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:559 (discriminator 1)
    4f08:	2380      	movs	r3, #128	; 0x80
    4f0a:	e000      	b.n	4f0e <ASerialLdd2_OnError+0x4a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:559 (discriminator 2)
    4f0c:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:559 (discriminator 3)
    4f0e:	4a12      	ldr	r2, [pc, #72]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4f10:	8812      	ldrh	r2, [r2, #0]
    4f12:	4313      	orrs	r3, r2
    4f14:	b29a      	uxth	r2, r3
    4f16:	4b10      	ldr	r3, [pc, #64]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4f18:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:560 (discriminator 3)
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_RX_OVERRUN) != 0U ) ? OVERRUN_ERR : 0U);
    4f1a:	68fb      	ldr	r3, [r7, #12]
    4f1c:	b29b      	uxth	r3, r3
    4f1e:	f003 0301 	and.w	r3, r3, #1
    4f22:	b29a      	uxth	r2, r3
    4f24:	4b0c      	ldr	r3, [pc, #48]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4f26:	881b      	ldrh	r3, [r3, #0]
    4f28:	4313      	orrs	r3, r2
    4f2a:	b29a      	uxth	r2, r3
    4f2c:	4b0a      	ldr	r3, [pc, #40]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4f2e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:561 (discriminator 3)
    SerFlag |= (((SerialErrorMask & LDD_SERIAL_FRAMING_ERROR) != 0U ) ? FRAMING_ERR : 0U);
    4f30:	68fb      	ldr	r3, [r7, #12]
    4f32:	f003 0304 	and.w	r3, r3, #4
    4f36:	2b00      	cmp	r3, #0
    4f38:	d001      	beq.n	4f3e <ASerialLdd2_OnError+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:561 (discriminator 1)
    4f3a:	2302      	movs	r3, #2
    4f3c:	e000      	b.n	4f40 <ASerialLdd2_OnError+0x7c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:561 (discriminator 2)
    4f3e:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:561 (discriminator 3)
    4f40:	4a05      	ldr	r2, [pc, #20]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4f42:	8812      	ldrh	r2, [r2, #0]
    4f44:	4313      	orrs	r3, r2
    4f46:	b29a      	uxth	r2, r3
    4f48:	4b03      	ldr	r3, [pc, #12]	; (4f58 <ASerialLdd2_OnError+0x94>)
    4f4a:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:563
  }
}
    4f4c:	3710      	adds	r7, #16
    4f4e:	46bd      	mov	sp, r7
    4f50:	bd80      	pop	{r7, pc}
    4f52:	bf00      	nop
    4f54:	20023664 	.word	0x20023664
    4f58:	200002bc 	.word	0x200002bc

00004f5c <ASerialLdd2_OnBreak>:
ASerialLdd2_OnBreak():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:575
**         This event is called when a break occurs on the input channel.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void ASerialLdd2_OnBreak(LDD_TUserData *UserDataPtr)
{
    4f5c:	b480      	push	{r7}
    4f5e:	b083      	sub	sp, #12
    4f60:	af00      	add	r7, sp, #0
    4f62:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:577
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  SerFlag |= FRAMING_ERR;              /* Set framing error flag */
    4f64:	4b05      	ldr	r3, [pc, #20]	; (4f7c <ASerialLdd2_OnBreak+0x20>)
    4f66:	881b      	ldrh	r3, [r3, #0]
    4f68:	f043 0302 	orr.w	r3, r3, #2
    4f6c:	b29a      	uxth	r2, r3
    4f6e:	4b03      	ldr	r3, [pc, #12]	; (4f7c <ASerialLdd2_OnBreak+0x20>)
    4f70:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AS_PRG.c:578
}
    4f72:	370c      	adds	r7, #12
    4f74:	46bd      	mov	sp, r7
    4f76:	f85d 7b04 	ldr.w	r7, [sp], #4
    4f7a:	4770      	bx	lr
    4f7c:	200002bc 	.word	0x200002bc

00004f80 <ASerialLdd1_Init>:
ASerialLdd1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:161
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* ASerialLdd1_Init(LDD_TUserData *UserDataPtr)
{
    4f80:	b480      	push	{r7}
    4f82:	b085      	sub	sp, #20
    4f84:	af00      	add	r7, sp, #0
    4f86:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:165
  /* Allocate device structure */
  ASerialLdd1_TDeviceDataPtr DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    4f88:	4b6b      	ldr	r3, [pc, #428]	; (5138 <ASerialLdd1_Init+0x1b8>)
    4f8a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:168

  /* Clear the receive counters and pointer */
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Clear the counter of received characters */
    4f8c:	68fb      	ldr	r3, [r7, #12]
    4f8e:	2200      	movs	r2, #0
    4f90:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:169
  DeviceDataPrv->InpDataNumReq = 0x00U; /* Clear the counter of characters to receive by ReceiveBlock() */
    4f92:	68fb      	ldr	r3, [r7, #12]
    4f94:	2200      	movs	r2, #0
    4f96:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:170
  DeviceDataPrv->InpDataPtr = NULL;    /* Clear the buffer pointer for received characters */
    4f98:	68fb      	ldr	r3, [r7, #12]
    4f9a:	2200      	movs	r2, #0
    4f9c:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:172
  /* Clear the transmit counters and pointer */
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters */
    4f9e:	68fb      	ldr	r3, [r7, #12]
    4fa0:	2200      	movs	r2, #0
    4fa2:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:173
  DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    4fa4:	68fb      	ldr	r3, [r7, #12]
    4fa6:	2200      	movs	r2, #0
    4fa8:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:174
  DeviceDataPrv->OutDataPtr = NULL;    /* Clear the buffer pointer for data to be transmitted */
    4faa:	68fb      	ldr	r3, [r7, #12]
    4fac:	2200      	movs	r2, #0
    4fae:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:175
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    4fb0:	68fb      	ldr	r3, [r7, #12]
    4fb2:	687a      	ldr	r2, [r7, #4]
    4fb4:	61da      	str	r2, [r3, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:178
  /* Allocate interrupt vectors */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_UART3_RX_TX__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    4fb6:	4b61      	ldr	r3, [pc, #388]	; (513c <ASerialLdd1_Init+0x1bc>)
    4fb8:	68fa      	ldr	r2, [r7, #12]
    4fba:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:180
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_UART3_ERR__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    4fbc:	4b60      	ldr	r3, [pc, #384]	; (5140 <ASerialLdd1_Init+0x1c0>)
    4fbe:	68fa      	ldr	r2, [r7, #12]
    4fc0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:182
  /* SIM_SCGC4: UART3=1 */
  SIM_SCGC4 |= SIM_SCGC4_UART3_MASK;
    4fc2:	4960      	ldr	r1, [pc, #384]	; (5144 <ASerialLdd1_Init+0x1c4>)
    4fc4:	4b5f      	ldr	r3, [pc, #380]	; (5144 <ASerialLdd1_Init+0x1c4>)
    4fc6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    4fca:	3314      	adds	r3, #20
    4fcc:	681b      	ldr	r3, [r3, #0]
    4fce:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    4fd2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    4fd6:	3314      	adds	r3, #20
    4fd8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:184
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    4fda:	495a      	ldr	r1, [pc, #360]	; (5144 <ASerialLdd1_Init+0x1c4>)
    4fdc:	4b59      	ldr	r3, [pc, #356]	; (5144 <ASerialLdd1_Init+0x1c4>)
    4fde:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    4fe2:	3318      	adds	r3, #24
    4fe4:	681b      	ldr	r3, [r3, #0]
    4fe6:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    4fea:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    4fee:	3318      	adds	r3, #24
    4ff0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:186
  /* PORTB_PCR10: ISF=0,MUX=3 */
  PORTB_PCR10 = (uint32_t)((PORTB_PCR10 & (uint32_t)~(uint32_t)(
    4ff2:	4a55      	ldr	r2, [pc, #340]	; (5148 <ASerialLdd1_Init+0x1c8>)
    4ff4:	4b54      	ldr	r3, [pc, #336]	; (5148 <ASerialLdd1_Init+0x1c8>)
    4ff6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4ff8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    4ffc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5000:	f443 7340 	orr.w	r3, r3, #768	; 0x300
    5004:	6293      	str	r3, [r2, #40]	; 0x28
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:193
                 PORT_PCR_MUX(0x04)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x03)
                ));
  /* PORTB_PCR11: ISF=0,MUX=3 */
  PORTB_PCR11 = (uint32_t)((PORTB_PCR11 & (uint32_t)~(uint32_t)(
    5006:	4a50      	ldr	r2, [pc, #320]	; (5148 <ASerialLdd1_Init+0x1c8>)
    5008:	4b4f      	ldr	r3, [pc, #316]	; (5148 <ASerialLdd1_Init+0x1c8>)
    500a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    500c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5010:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5014:	f443 7340 	orr.w	r3, r3, #768	; 0x300
    5018:	62d3      	str	r3, [r2, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:200
                 PORT_PCR_MUX(0x04)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x03)
                ));
  /* NVICIP37: PRI37=0x70 */
  NVICIP37 = NVIC_IP_PRI37(0x70);
    501a:	4b4c      	ldr	r3, [pc, #304]	; (514c <ASerialLdd1_Init+0x1cc>)
    501c:	2270      	movs	r2, #112	; 0x70
    501e:	f883 2325 	strb.w	r2, [r3, #805]	; 0x325
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:202
  /* NVICISER1: SETENA|=0x20 */
  NVICISER1 |= NVIC_ISER_SETENA(0x20);
    5022:	4b4a      	ldr	r3, [pc, #296]	; (514c <ASerialLdd1_Init+0x1cc>)
    5024:	4a49      	ldr	r2, [pc, #292]	; (514c <ASerialLdd1_Init+0x1cc>)
    5026:	6852      	ldr	r2, [r2, #4]
    5028:	f042 0220 	orr.w	r2, r2, #32
    502c:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:204
  /* NVICIP38: PRI38=0x70 */
  NVICIP38 = NVIC_IP_PRI38(0x70);
    502e:	4b47      	ldr	r3, [pc, #284]	; (514c <ASerialLdd1_Init+0x1cc>)
    5030:	2270      	movs	r2, #112	; 0x70
    5032:	f883 2326 	strb.w	r2, [r3, #806]	; 0x326
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:206
  /* NVICISER1: SETENA|=0x40 */
  NVICISER1 |= NVIC_ISER_SETENA(0x40);
    5036:	4b45      	ldr	r3, [pc, #276]	; (514c <ASerialLdd1_Init+0x1cc>)
    5038:	4a44      	ldr	r2, [pc, #272]	; (514c <ASerialLdd1_Init+0x1cc>)
    503a:	6852      	ldr	r2, [r2, #4]
    503c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    5040:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:207
  UART_PDD_EnableTransmitter(UART3_BASE_PTR, PDD_DISABLE); /* Disable transmitter. */
    5042:	4b43      	ldr	r3, [pc, #268]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5044:	4a42      	ldr	r2, [pc, #264]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5046:	78d2      	ldrb	r2, [r2, #3]
    5048:	b2d2      	uxtb	r2, r2
    504a:	f022 0208 	bic.w	r2, r2, #8
    504e:	b2d2      	uxtb	r2, r2
    5050:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:208
  UART_PDD_EnableReceiver(UART3_BASE_PTR, PDD_DISABLE); /* Disable receiver. */
    5052:	4b3f      	ldr	r3, [pc, #252]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5054:	4a3e      	ldr	r2, [pc, #248]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5056:	78d2      	ldrb	r2, [r2, #3]
    5058:	b2d2      	uxtb	r2, r2
    505a:	f022 0204 	bic.w	r2, r2, #4
    505e:	b2d2      	uxtb	r2, r2
    5060:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:209
  DeviceDataPrv->SerFlag = 0x00U;      /* Reset flags */
    5062:	68fb      	ldr	r3, [r7, #12]
    5064:	2200      	movs	r2, #0
    5066:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:210
  DeviceDataPrv->ErrFlag = 0x00U;      /* Reset error flags */
    5068:	68fb      	ldr	r3, [r7, #12]
    506a:	2200      	movs	r2, #0
    506c:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:212
  /* UART3_C1: LOOPS=0,UARTSWAI=0,RSRC=0,M=0,WAKE=0,ILT=0,PE=0,PT=0 */
  UART3_C1 = 0x00U;                    /*  Set the C1 register */
    506e:	4b38      	ldr	r3, [pc, #224]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5070:	2200      	movs	r2, #0
    5072:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:214
  /* UART3_C3: R8=0,T8=0,TXDIR=0,TXINV=0,ORIE=0,NEIE=0,FEIE=0,PEIE=0 */
  UART3_C3 = 0x00U;                    /*  Set the C3 register */
    5074:	4b36      	ldr	r3, [pc, #216]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5076:	2200      	movs	r2, #0
    5078:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:216
  /* UART3_C4: MAEN1=0,MAEN2=0,M10=0,BRFA=0 */
  UART3_C4 = UART_C4_BRFA(0x00);       /*  Set the C4 register */
    507a:	4b35      	ldr	r3, [pc, #212]	; (5150 <ASerialLdd1_Init+0x1d0>)
    507c:	2200      	movs	r2, #0
    507e:	729a      	strb	r2, [r3, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:218
  /* UART3_S2: LBKDIF=0,RXEDGIF=0,MSBF=0,RXINV=0,RWUID=0,BRK13=0,LBKDE=0,RAF=0 */
  UART3_S2 = 0x00U;                    /*  Set the S2 register */
    5080:	4b33      	ldr	r3, [pc, #204]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5082:	2200      	movs	r2, #0
    5084:	715a      	strb	r2, [r3, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:220
  /* UART3_MODEM: ??=0,??=0,??=0,??=0,RXRTSE=0,TXRTSPOL=0,TXRTSE=0,TXCTSE=0 */
  UART3_MODEM = 0x00U;                 /*  Set the MODEM register */
    5086:	4b32      	ldr	r3, [pc, #200]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5088:	2200      	movs	r2, #0
    508a:	735a      	strb	r2, [r3, #13]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:221
  UART_PDD_SetBaudRateFineAdjust(UART3_BASE_PTR, 3u); /* Set baud rate fine adjust */
    508c:	4b30      	ldr	r3, [pc, #192]	; (5150 <ASerialLdd1_Init+0x1d0>)
    508e:	4a30      	ldr	r2, [pc, #192]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5090:	7a92      	ldrb	r2, [r2, #10]
    5092:	b2d2      	uxtb	r2, r2
    5094:	b2d2      	uxtb	r2, r2
    5096:	f022 021f 	bic.w	r2, r2, #31
    509a:	b2d2      	uxtb	r2, r2
    509c:	f042 0203 	orr.w	r2, r2, #3
    50a0:	b2d2      	uxtb	r2, r2
    50a2:	b2d2      	uxtb	r2, r2
    50a4:	729a      	strb	r2, [r3, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:222
  UART_PDD_SetBaudRate(UART3_BASE_PTR, 65U); /* Set the baud rate register. */
    50a6:	4b2a      	ldr	r3, [pc, #168]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50a8:	4a29      	ldr	r2, [pc, #164]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50aa:	7812      	ldrb	r2, [r2, #0]
    50ac:	b2d2      	uxtb	r2, r2
    50ae:	f022 021f 	bic.w	r2, r2, #31
    50b2:	b2d2      	uxtb	r2, r2
    50b4:	701a      	strb	r2, [r3, #0]
    50b6:	4b26      	ldr	r3, [pc, #152]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50b8:	2241      	movs	r2, #65	; 0x41
    50ba:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:223
  UART_PDD_EnableFifo(UART3_BASE_PTR, (UART_PDD_TX_FIFO_ENABLE | UART_PDD_RX_FIFO_ENABLE)); /* Enable RX and TX FIFO */
    50bc:	4b24      	ldr	r3, [pc, #144]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50be:	4a24      	ldr	r2, [pc, #144]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50c0:	7c12      	ldrb	r2, [r2, #16]
    50c2:	b2d2      	uxtb	r2, r2
    50c4:	f062 0277 	orn	r2, r2, #119	; 0x77
    50c8:	b2d2      	uxtb	r2, r2
    50ca:	741a      	strb	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:224
  UART_PDD_FlushFifo(UART3_BASE_PTR, (UART_PDD_TX_FIFO_FLUSH | UART_PDD_RX_FIFO_FLUSH)); /* Flush RX and TX FIFO */
    50cc:	4b20      	ldr	r3, [pc, #128]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50ce:	4a20      	ldr	r2, [pc, #128]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50d0:	7c52      	ldrb	r2, [r2, #17]
    50d2:	b2d2      	uxtb	r2, r2
    50d4:	f062 023f 	orn	r2, r2, #63	; 0x3f
    50d8:	b2d2      	uxtb	r2, r2
    50da:	745a      	strb	r2, [r3, #17]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:225
  UART_PDD_EnableTransmitter(UART3_BASE_PTR, PDD_ENABLE); /* Enable transmitter */
    50dc:	4b1c      	ldr	r3, [pc, #112]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50de:	4a1c      	ldr	r2, [pc, #112]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50e0:	78d2      	ldrb	r2, [r2, #3]
    50e2:	b2d2      	uxtb	r2, r2
    50e4:	b2d2      	uxtb	r2, r2
    50e6:	f042 0208 	orr.w	r2, r2, #8
    50ea:	b2d2      	uxtb	r2, r2
    50ec:	b2d2      	uxtb	r2, r2
    50ee:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:226
  UART_PDD_EnableReceiver(UART3_BASE_PTR, PDD_ENABLE); /* Enable receiver */
    50f0:	4b17      	ldr	r3, [pc, #92]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50f2:	4a17      	ldr	r2, [pc, #92]	; (5150 <ASerialLdd1_Init+0x1d0>)
    50f4:	78d2      	ldrb	r2, [r2, #3]
    50f6:	b2d2      	uxtb	r2, r2
    50f8:	b2d2      	uxtb	r2, r2
    50fa:	f042 0204 	orr.w	r2, r2, #4
    50fe:	b2d2      	uxtb	r2, r2
    5100:	b2d2      	uxtb	r2, r2
    5102:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:227
  UART_PDD_EnableInterrupt(UART3_BASE_PTR, ( UART_PDD_INTERRUPT_RECEIVER | UART_PDD_INTERRUPT_PARITY_ERROR | UART_PDD_INTERRUPT_FRAMING_ERROR | UART_PDD_INTERRUPT_NOISE_ERROR | UART_PDD_INTERRUPT_OVERRUN_ERROR )); /* Enable interrupts */
    5104:	4b12      	ldr	r3, [pc, #72]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5106:	4a12      	ldr	r2, [pc, #72]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5108:	78d2      	ldrb	r2, [r2, #3]
    510a:	b2d2      	uxtb	r2, r2
    510c:	f042 0220 	orr.w	r2, r2, #32
    5110:	b2d2      	uxtb	r2, r2
    5112:	70da      	strb	r2, [r3, #3]
    5114:	4b0e      	ldr	r3, [pc, #56]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5116:	4a0e      	ldr	r2, [pc, #56]	; (5150 <ASerialLdd1_Init+0x1d0>)
    5118:	7992      	ldrb	r2, [r2, #6]
    511a:	b2d2      	uxtb	r2, r2
    511c:	f042 020f 	orr.w	r2, r2, #15
    5120:	b2d2      	uxtb	r2, r2
    5122:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:229
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_ASerialLdd1_ID,DeviceDataPrv);
    5124:	4b0b      	ldr	r3, [pc, #44]	; (5154 <ASerialLdd1_Init+0x1d4>)
    5126:	68fa      	ldr	r2, [r7, #12]
    5128:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:230
  return ((LDD_TDeviceData *)DeviceDataPrv);
    512a:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:231
}
    512c:	4618      	mov	r0, r3
    512e:	3714      	adds	r7, #20
    5130:	46bd      	mov	sp, r7
    5132:	f85d 7b04 	ldr.w	r7, [sp], #4
    5136:	4770      	bx	lr
    5138:	2000034c 	.word	0x2000034c
    513c:	2000036c 	.word	0x2000036c
    5140:	20000370 	.word	0x20000370
    5144:	40047000 	.word	0x40047000
    5148:	4004a000 	.word	0x4004a000
    514c:	e000e100 	.word	0xe000e100
    5150:	4006d000 	.word	0x4006d000
    5154:	20000480 	.word	0x20000480

00005158 <ASerialLdd1_ReceiveBlock>:
ASerialLdd1_ReceiveBlock():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:278
**                           ERR_BUSY - The previous receive request is
**                           pending.
*/
/* ===================================================================*/
LDD_TError ASerialLdd1_ReceiveBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    5158:	b480      	push	{r7}
    515a:	b087      	sub	sp, #28
    515c:	af00      	add	r7, sp, #0
    515e:	60f8      	str	r0, [r7, #12]
    5160:	60b9      	str	r1, [r7, #8]
    5162:	4613      	mov	r3, r2
    5164:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:279
  ASerialLdd1_TDeviceDataPtr DeviceDataPrv = (ASerialLdd1_TDeviceDataPtr)DeviceDataPtr;
    5166:	68fb      	ldr	r3, [r7, #12]
    5168:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:281

  if (Size == 0U) {                    /* Is the parameter Size within an expected range? */
    516a:	88fb      	ldrh	r3, [r7, #6]
    516c:	2b00      	cmp	r3, #0
    516e:	d101      	bne.n	5174 <ASerialLdd1_ReceiveBlock+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:282
    return ERR_PARAM_SIZE;             /* If no then error */
    5170:	2384      	movs	r3, #132	; 0x84
    5172:	e02e      	b.n	51d2 <ASerialLdd1_ReceiveBlock+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:284
  }
  if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the previous receive operation pending? */
    5174:	697b      	ldr	r3, [r7, #20]
    5176:	8a1b      	ldrh	r3, [r3, #16]
    5178:	2b00      	cmp	r3, #0
    517a:	d001      	beq.n	5180 <ASerialLdd1_ReceiveBlock+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:285
    return ERR_BUSY;                   /* If yes then error */
    517c:	2308      	movs	r3, #8
    517e:	e028      	b.n	51d2 <ASerialLdd1_ReceiveBlock+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:288
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    5180:	f3ef 8013 	mrs	r0, FAULTMASK
    5184:	b671      	cpsid	f
    5186:	74f8      	strb	r0, [r7, #19]
    5188:	4b15      	ldr	r3, [pc, #84]	; (51e0 <ASerialLdd1_ReceiveBlock+0x88>)
    518a:	781b      	ldrb	r3, [r3, #0]
    518c:	b2db      	uxtb	r3, r3
    518e:	3301      	adds	r3, #1
    5190:	b2db      	uxtb	r3, r3
    5192:	4a13      	ldr	r2, [pc, #76]	; (51e0 <ASerialLdd1_ReceiveBlock+0x88>)
    5194:	4619      	mov	r1, r3
    5196:	7011      	strb	r1, [r2, #0]
    5198:	2b01      	cmp	r3, #1
    519a:	d102      	bne.n	51a2 <ASerialLdd1_ReceiveBlock+0x4a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:288 (discriminator 1)
    519c:	7cfa      	ldrb	r2, [r7, #19]
    519e:	4b11      	ldr	r3, [pc, #68]	; (51e4 <ASerialLdd1_ReceiveBlock+0x8c>)
    51a0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:289
  DeviceDataPrv->InpDataPtr = (uint8_t*)BufferPtr; /* Store a pointer to the input data. */
    51a2:	697b      	ldr	r3, [r7, #20]
    51a4:	68ba      	ldr	r2, [r7, #8]
    51a6:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:290
  DeviceDataPrv->InpDataNumReq = Size; /* Store a number of characters to be received. */
    51a8:	697b      	ldr	r3, [r7, #20]
    51aa:	88fa      	ldrh	r2, [r7, #6]
    51ac:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:291
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Set number of received characters to zero. */
    51ae:	697b      	ldr	r3, [r7, #20]
    51b0:	2200      	movs	r2, #0
    51b2:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:293
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    51b4:	4b0a      	ldr	r3, [pc, #40]	; (51e0 <ASerialLdd1_ReceiveBlock+0x88>)
    51b6:	781b      	ldrb	r3, [r3, #0]
    51b8:	b2db      	uxtb	r3, r3
    51ba:	3b01      	subs	r3, #1
    51bc:	b2db      	uxtb	r3, r3
    51be:	4a08      	ldr	r2, [pc, #32]	; (51e0 <ASerialLdd1_ReceiveBlock+0x88>)
    51c0:	4619      	mov	r1, r3
    51c2:	7011      	strb	r1, [r2, #0]
    51c4:	2b00      	cmp	r3, #0
    51c6:	d103      	bne.n	51d0 <ASerialLdd1_ReceiveBlock+0x78>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:293 (discriminator 1)
    51c8:	4b06      	ldr	r3, [pc, #24]	; (51e4 <ASerialLdd1_ReceiveBlock+0x8c>)
    51ca:	7818      	ldrb	r0, [r3, #0]
    51cc:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:294
  return ERR_OK;                       /* OK */
    51d0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:295
}
    51d2:	4618      	mov	r0, r3
    51d4:	371c      	adds	r7, #28
    51d6:	46bd      	mov	sp, r7
    51d8:	f85d 7b04 	ldr.w	r7, [sp], #4
    51dc:	4770      	bx	lr
    51de:	bf00      	nop
    51e0:	2000010c 	.word	0x2000010c
    51e4:	20000b80 	.word	0x20000b80

000051e8 <ASerialLdd1_SendBlock>:
ASerialLdd1_SendBlock():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:338
**                           ERR_BUSY - The previous transmit request is
**                           pending.
*/
/* ===================================================================*/
LDD_TError ASerialLdd1_SendBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    51e8:	b480      	push	{r7}
    51ea:	b087      	sub	sp, #28
    51ec:	af00      	add	r7, sp, #0
    51ee:	60f8      	str	r0, [r7, #12]
    51f0:	60b9      	str	r1, [r7, #8]
    51f2:	4613      	mov	r3, r2
    51f4:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:339
  ASerialLdd1_TDeviceDataPtr DeviceDataPrv = (ASerialLdd1_TDeviceDataPtr)DeviceDataPtr;
    51f6:	68fb      	ldr	r3, [r7, #12]
    51f8:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:341

  if (Size == 0U) {                    /* Is the parameter Size within an expected range? */
    51fa:	88fb      	ldrh	r3, [r7, #6]
    51fc:	2b00      	cmp	r3, #0
    51fe:	d101      	bne.n	5204 <ASerialLdd1_SendBlock+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:342
    return ERR_PARAM_SIZE;             /* If no then error */
    5200:	2384      	movs	r3, #132	; 0x84
    5202:	e042      	b.n	528a <ASerialLdd1_SendBlock+0xa2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:344
  }
  if (DeviceDataPrv->OutDataNumReq != 0x00U) { /* Is the previous transmit operation pending? */
    5204:	697b      	ldr	r3, [r7, #20]
    5206:	8b1b      	ldrh	r3, [r3, #24]
    5208:	2b00      	cmp	r3, #0
    520a:	d001      	beq.n	5210 <ASerialLdd1_SendBlock+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:345
    return ERR_BUSY;                   /* If yes then error */
    520c:	2308      	movs	r3, #8
    520e:	e03c      	b.n	528a <ASerialLdd1_SendBlock+0xa2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:348
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    5210:	f3ef 8013 	mrs	r0, FAULTMASK
    5214:	b671      	cpsid	f
    5216:	74f8      	strb	r0, [r7, #19]
    5218:	4b1f      	ldr	r3, [pc, #124]	; (5298 <ASerialLdd1_SendBlock+0xb0>)
    521a:	781b      	ldrb	r3, [r3, #0]
    521c:	b2db      	uxtb	r3, r3
    521e:	3301      	adds	r3, #1
    5220:	b2db      	uxtb	r3, r3
    5222:	4a1d      	ldr	r2, [pc, #116]	; (5298 <ASerialLdd1_SendBlock+0xb0>)
    5224:	4619      	mov	r1, r3
    5226:	7011      	strb	r1, [r2, #0]
    5228:	2b01      	cmp	r3, #1
    522a:	d102      	bne.n	5232 <ASerialLdd1_SendBlock+0x4a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:348 (discriminator 1)
    522c:	7cfa      	ldrb	r2, [r7, #19]
    522e:	4b1b      	ldr	r3, [pc, #108]	; (529c <ASerialLdd1_SendBlock+0xb4>)
    5230:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:349
  DeviceDataPrv->OutDataPtr = (uint8_t*)BufferPtr; /* Set a pointer to the output data. */
    5232:	697b      	ldr	r3, [r7, #20]
    5234:	68ba      	ldr	r2, [r7, #8]
    5236:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:350
  DeviceDataPrv->OutDataNumReq = Size; /* Set the counter of characters to be sent. */
    5238:	697b      	ldr	r3, [r7, #20]
    523a:	88fa      	ldrh	r2, [r7, #6]
    523c:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:351
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters. */
    523e:	697b      	ldr	r3, [r7, #20]
    5240:	2200      	movs	r2, #0
    5242:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:352
  DeviceDataPrv->SerFlag |= ENABLED_TX_INT; /* Set the flag ENABLED_TX_INT */
    5244:	697b      	ldr	r3, [r7, #20]
    5246:	881b      	ldrh	r3, [r3, #0]
    5248:	f043 0301 	orr.w	r3, r3, #1
    524c:	b29a      	uxth	r2, r3
    524e:	697b      	ldr	r3, [r7, #20]
    5250:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:353
  UART_PDD_EnableInterrupt(UART3_BASE_PTR, UART_PDD_INTERRUPT_TRANSMITTER); /* Enable TX interrupt */
    5252:	4b13      	ldr	r3, [pc, #76]	; (52a0 <ASerialLdd1_SendBlock+0xb8>)
    5254:	4a12      	ldr	r2, [pc, #72]	; (52a0 <ASerialLdd1_SendBlock+0xb8>)
    5256:	78d2      	ldrb	r2, [r2, #3]
    5258:	b2d2      	uxtb	r2, r2
    525a:	f062 027f 	orn	r2, r2, #127	; 0x7f
    525e:	b2d2      	uxtb	r2, r2
    5260:	70da      	strb	r2, [r3, #3]
    5262:	4b0f      	ldr	r3, [pc, #60]	; (52a0 <ASerialLdd1_SendBlock+0xb8>)
    5264:	4a0e      	ldr	r2, [pc, #56]	; (52a0 <ASerialLdd1_SendBlock+0xb8>)
    5266:	7992      	ldrb	r2, [r2, #6]
    5268:	b2d2      	uxtb	r2, r2
    526a:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:355
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    526c:	4b0a      	ldr	r3, [pc, #40]	; (5298 <ASerialLdd1_SendBlock+0xb0>)
    526e:	781b      	ldrb	r3, [r3, #0]
    5270:	b2db      	uxtb	r3, r3
    5272:	3b01      	subs	r3, #1
    5274:	b2db      	uxtb	r3, r3
    5276:	4a08      	ldr	r2, [pc, #32]	; (5298 <ASerialLdd1_SendBlock+0xb0>)
    5278:	4619      	mov	r1, r3
    527a:	7011      	strb	r1, [r2, #0]
    527c:	2b00      	cmp	r3, #0
    527e:	d103      	bne.n	5288 <ASerialLdd1_SendBlock+0xa0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:355 (discriminator 1)
    5280:	4b06      	ldr	r3, [pc, #24]	; (529c <ASerialLdd1_SendBlock+0xb4>)
    5282:	7818      	ldrb	r0, [r3, #0]
    5284:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:356
  return ERR_OK;                       /* OK */
    5288:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:357
}
    528a:	4618      	mov	r0, r3
    528c:	371c      	adds	r7, #28
    528e:	46bd      	mov	sp, r7
    5290:	f85d 7b04 	ldr.w	r7, [sp], #4
    5294:	4770      	bx	lr
    5296:	bf00      	nop
    5298:	2000010c 	.word	0x2000010c
    529c:	20000b80 	.word	0x20000b80
    52a0:	4006d000 	.word	0x4006d000

000052a4 <InterruptRx>:
InterruptRx():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:370
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptRx(ASerialLdd1_TDeviceDataPtr DeviceDataPrv)
{
    52a4:	b590      	push	{r4, r7, lr}
    52a6:	b083      	sub	sp, #12
    52a8:	af00      	add	r7, sp, #0
    52aa:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:373
  register uint16_t Data;              /* Temporary variable for data */

  Data = (uint16_t)UART_PDD_GetChar8(UART3_BASE_PTR); /* Read an 8-bit character from the receiver */
    52ac:	4b12      	ldr	r3, [pc, #72]	; (52f8 <InterruptRx+0x54>)
    52ae:	79db      	ldrb	r3, [r3, #7]
    52b0:	b2db      	uxtb	r3, r3
    52b2:	461c      	mov	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:374
  if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the receive block operation pending? */
    52b4:	687b      	ldr	r3, [r7, #4]
    52b6:	8a1b      	ldrh	r3, [r3, #16]
    52b8:	2b00      	cmp	r3, #0
    52ba:	d01a      	beq.n	52f2 <InterruptRx+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:375
    *(DeviceDataPrv->InpDataPtr++) = (uint8_t)Data; /* Put an 8-bit character to the receive buffer */
    52bc:	687b      	ldr	r3, [r7, #4]
    52be:	68db      	ldr	r3, [r3, #12]
    52c0:	1c59      	adds	r1, r3, #1
    52c2:	687a      	ldr	r2, [r7, #4]
    52c4:	60d1      	str	r1, [r2, #12]
    52c6:	b2e2      	uxtb	r2, r4
    52c8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:376
    DeviceDataPrv->InpRecvDataNum++;   /* Increment received char. counter */
    52ca:	687b      	ldr	r3, [r7, #4]
    52cc:	891b      	ldrh	r3, [r3, #8]
    52ce:	3301      	adds	r3, #1
    52d0:	b29a      	uxth	r2, r3
    52d2:	687b      	ldr	r3, [r7, #4]
    52d4:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:377
    if (DeviceDataPrv->InpRecvDataNum == DeviceDataPrv->InpDataNumReq) { /* Is the requested number of characters received? */
    52d6:	687b      	ldr	r3, [r7, #4]
    52d8:	891a      	ldrh	r2, [r3, #8]
    52da:	687b      	ldr	r3, [r7, #4]
    52dc:	8a1b      	ldrh	r3, [r3, #16]
    52de:	429a      	cmp	r2, r3
    52e0:	d107      	bne.n	52f2 <InterruptRx+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:378
      DeviceDataPrv->InpDataNumReq = 0x00U; /* If yes then clear number of requested characters to be received. */
    52e2:	687b      	ldr	r3, [r7, #4]
    52e4:	2200      	movs	r2, #0
    52e6:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:379
      ASerialLdd1_OnBlockReceived(DeviceDataPrv->UserDataPtr);
    52e8:	687b      	ldr	r3, [r7, #4]
    52ea:	69db      	ldr	r3, [r3, #28]
    52ec:	4618      	mov	r0, r3
    52ee:	f7ff fc49 	bl	4b84 <ASerialLdd1_OnBlockReceived>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:382
    }
  }
}
    52f2:	370c      	adds	r7, #12
    52f4:	46bd      	mov	sp, r7
    52f6:	bd90      	pop	{r4, r7, pc}
    52f8:	4006d000 	.word	0x4006d000

000052fc <InterruptTx>:
InterruptTx():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:395
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptTx(ASerialLdd1_TDeviceDataPtr DeviceDataPrv)
{
    52fc:	b580      	push	{r7, lr}
    52fe:	b082      	sub	sp, #8
    5300:	af00      	add	r7, sp, #0
    5302:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:397

  if (DeviceDataPrv->OutSentDataNum < DeviceDataPrv->OutDataNumReq) { /* Is number of sent characters less than the number of requested incoming characters? */
    5304:	687b      	ldr	r3, [r7, #4]
    5306:	8a5a      	ldrh	r2, [r3, #18]
    5308:	687b      	ldr	r3, [r7, #4]
    530a:	8b1b      	ldrh	r3, [r3, #24]
    530c:	429a      	cmp	r2, r3
    530e:	d21c      	bcs.n	534a <InterruptTx+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:398
    UART_PDD_PutChar8(UART3_BASE_PTR, *(DeviceDataPrv->OutDataPtr++)); /* Put a 8-bit character to the transmit register */
    5310:	4a19      	ldr	r2, [pc, #100]	; (5378 <InterruptTx+0x7c>)
    5312:	687b      	ldr	r3, [r7, #4]
    5314:	695b      	ldr	r3, [r3, #20]
    5316:	1c58      	adds	r0, r3, #1
    5318:	6879      	ldr	r1, [r7, #4]
    531a:	6148      	str	r0, [r1, #20]
    531c:	781b      	ldrb	r3, [r3, #0]
    531e:	71d3      	strb	r3, [r2, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:399
    DeviceDataPrv->OutSentDataNum++;   /* Increment the counter of sent characters. */
    5320:	687b      	ldr	r3, [r7, #4]
    5322:	8a5b      	ldrh	r3, [r3, #18]
    5324:	3301      	adds	r3, #1
    5326:	b29a      	uxth	r2, r3
    5328:	687b      	ldr	r3, [r7, #4]
    532a:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:400
    if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
    532c:	687b      	ldr	r3, [r7, #4]
    532e:	8a5a      	ldrh	r2, [r3, #18]
    5330:	687b      	ldr	r3, [r7, #4]
    5332:	8b1b      	ldrh	r3, [r3, #24]
    5334:	429a      	cmp	r2, r3
    5336:	d11c      	bne.n	5372 <InterruptTx+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:401
      DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    5338:	687b      	ldr	r3, [r7, #4]
    533a:	2200      	movs	r2, #0
    533c:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:402
      ASerialLdd1_OnBlockSent(DeviceDataPrv->UserDataPtr);
    533e:	687b      	ldr	r3, [r7, #4]
    5340:	69db      	ldr	r3, [r3, #28]
    5342:	4618      	mov	r0, r3
    5344:	f7ff fc5c 	bl	4c00 <ASerialLdd1_OnBlockSent>
    5348:	e013      	b.n	5372 <InterruptTx+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:405
    }
  } else {
    UART_PDD_DisableInterrupt(UART3_BASE_PTR, UART_PDD_INTERRUPT_TRANSMITTER); /* Disable TX interrupt */
    534a:	4b0b      	ldr	r3, [pc, #44]	; (5378 <InterruptTx+0x7c>)
    534c:	4a0a      	ldr	r2, [pc, #40]	; (5378 <InterruptTx+0x7c>)
    534e:	78d2      	ldrb	r2, [r2, #3]
    5350:	b2d2      	uxtb	r2, r2
    5352:	f002 027f 	and.w	r2, r2, #127	; 0x7f
    5356:	b2d2      	uxtb	r2, r2
    5358:	70da      	strb	r2, [r3, #3]
    535a:	4b07      	ldr	r3, [pc, #28]	; (5378 <InterruptTx+0x7c>)
    535c:	4a06      	ldr	r2, [pc, #24]	; (5378 <InterruptTx+0x7c>)
    535e:	7992      	ldrb	r2, [r2, #6]
    5360:	b2d2      	uxtb	r2, r2
    5362:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:406
    DeviceDataPrv->SerFlag &= (uint16_t)(~(uint16_t)ENABLED_TX_INT); /* Clear the flag ENABLED_TX_INT */
    5364:	687b      	ldr	r3, [r7, #4]
    5366:	881b      	ldrh	r3, [r3, #0]
    5368:	f023 0301 	bic.w	r3, r3, #1
    536c:	b29a      	uxth	r2, r3
    536e:	687b      	ldr	r3, [r7, #4]
    5370:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:408
  }
}
    5372:	3708      	adds	r7, #8
    5374:	46bd      	mov	sp, r7
    5376:	bd80      	pop	{r7, pc}
    5378:	4006d000 	.word	0x4006d000

0000537c <ASerialLdd1_Interrupt>:
ASerialLdd1_Interrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:421
**         interrupt. Calls InterruptTX/InterruptRX methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(ASerialLdd1_Interrupt)
{
    537c:	4668      	mov	r0, sp
    537e:	f020 0107 	bic.w	r1, r0, #7
    5382:	468d      	mov	sp, r1
    5384:	e92d 41f1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, lr}
    5388:	b083      	sub	sp, #12
    538a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:423
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  ASerialLdd1_TDeviceDataPtr DeviceDataPrv = INT_UART3_RX_TX__DEFAULT_RTOS_ISRPARAM;
    538c:	4b36      	ldr	r3, [pc, #216]	; (5468 <ASerialLdd1_Interrupt+0xec>)
    538e:	681b      	ldr	r3, [r3, #0]
    5390:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:424
  register uint32_t StatReg = UART_PDD_ReadInterruptStatusReg(UART3_BASE_PTR); /* Read status register */
    5392:	4b36      	ldr	r3, [pc, #216]	; (546c <ASerialLdd1_Interrupt+0xf0>)
    5394:	791b      	ldrb	r3, [r3, #4]
    5396:	b2db      	uxtb	r3, r3
    5398:	461c      	mov	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:425
  register uint16_t OnErrorFlags = 0U; /* Temporary variable for flags */
    539a:	2500      	movs	r5, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:426
  register uint8_t  OnBreakFlag = 0U;  /* Temporary variable flag for OnBreak event */
    539c:	2600      	movs	r6, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:429
  register uint16_t Data;              /* Temporary variable for data */

  if (StatReg & (UART_S1_NF_MASK | UART_S1_OR_MASK | UART_S1_FE_MASK | UART_S1_PF_MASK)) { /* Is any error flag set? */
    539e:	f004 030f 	and.w	r3, r4, #15
    53a2:	2b00      	cmp	r3, #0
    53a4:	d046      	beq.n	5434 <ASerialLdd1_Interrupt+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:430
    Data = (uint16_t)UART_PDD_GetChar8(UART3_BASE_PTR); /* Read an 8-bit character from receiver */
    53a6:	4b31      	ldr	r3, [pc, #196]	; (546c <ASerialLdd1_Interrupt+0xf0>)
    53a8:	79db      	ldrb	r3, [r3, #7]
    53aa:	b2db      	uxtb	r3, r3
    53ac:	4698      	mov	r8, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:431
    if ((StatReg & UART_S1_FE_MASK) != 0U) { /* Is the framing error detected? */
    53ae:	f004 0302 	and.w	r3, r4, #2
    53b2:	2b00      	cmp	r3, #0
    53b4:	d014      	beq.n	53e0 <ASerialLdd1_Interrupt+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:432
      if (((StatReg & UART_S1_RDRF_MASK) != 0U) && (Data == 0U)) { /* Is the zero character in the receiver? */
    53b6:	f004 0320 	and.w	r3, r4, #32
    53ba:	2b00      	cmp	r3, #0
    53bc:	d00d      	beq.n	53da <ASerialLdd1_Interrupt+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:432 (discriminator 1)
    53be:	f1b8 0f00 	cmp.w	r8, #0
    53c2:	d10a      	bne.n	53da <ASerialLdd1_Interrupt+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:433
        OnBreakFlag++;
    53c4:	4633      	mov	r3, r6
    53c6:	3301      	adds	r3, #1
    53c8:	b2de      	uxtb	r6, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:434
        DeviceDataPrv->SerFlag |= BREAK_DETECTED; /* If yes then set the flag */
    53ca:	687b      	ldr	r3, [r7, #4]
    53cc:	881b      	ldrh	r3, [r3, #0]
    53ce:	f043 0302 	orr.w	r3, r3, #2
    53d2:	b29a      	uxth	r2, r3
    53d4:	687b      	ldr	r3, [r7, #4]
    53d6:	801a      	strh	r2, [r3, #0]
    53d8:	e002      	b.n	53e0 <ASerialLdd1_Interrupt+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:436
      } else {
        OnErrorFlags |= LDD_SERIAL_FRAMING_ERROR; /* If yes then set the flag */
    53da:	f045 0304 	orr.w	r3, r5, #4
    53de:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:439
      }
    }
    if ((StatReg & UART_S1_OR_MASK) != 0U) { /* Is the overrun error flag set? */
    53e0:	f004 0308 	and.w	r3, r4, #8
    53e4:	2b00      	cmp	r3, #0
    53e6:	d002      	beq.n	53ee <ASerialLdd1_Interrupt+0x72>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:440
      OnErrorFlags |= LDD_SERIAL_RX_OVERRUN; /* If yes then set the flag */
    53e8:	f045 0301 	orr.w	r3, r5, #1
    53ec:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:442
    }
    if ((StatReg & UART_S1_PF_MASK) != 0U) { /* Is the parity error flag set? */
    53ee:	f004 0301 	and.w	r3, r4, #1
    53f2:	2b00      	cmp	r3, #0
    53f4:	d002      	beq.n	53fc <ASerialLdd1_Interrupt+0x80>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:443
      OnErrorFlags |= LDD_SERIAL_PARITY_ERROR; /* If yes then set the flag */
    53f6:	f045 0302 	orr.w	r3, r5, #2
    53fa:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:445
    }
    if ((StatReg & UART_S1_NF_MASK) != 0U) { /* Is the noise error flag set? */
    53fc:	f004 0304 	and.w	r3, r4, #4
    5400:	2b00      	cmp	r3, #0
    5402:	d002      	beq.n	540a <ASerialLdd1_Interrupt+0x8e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:446
      OnErrorFlags |= LDD_SERIAL_NOISE_ERROR; /* If yes then set the flag */
    5404:	f045 0308 	orr.w	r3, r5, #8
    5408:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:448
    }
    DeviceDataPrv->ErrFlag |= OnErrorFlags; /* Copy flags status to ErrFlag status variable */
    540a:	687b      	ldr	r3, [r7, #4]
    540c:	685a      	ldr	r2, [r3, #4]
    540e:	462b      	mov	r3, r5
    5410:	431a      	orrs	r2, r3
    5412:	687b      	ldr	r3, [r7, #4]
    5414:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:449
    StatReg &= (uint32_t)(~(uint32_t)UART_S1_RDRF_MASK); /* Clear the receive data flag to discard the errorneous data */
    5416:	f024 0420 	bic.w	r4, r4, #32
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:450
    if (OnBreakFlag != 0U) {
    541a:	2e00      	cmp	r6, #0
    541c:	d005      	beq.n	542a <ASerialLdd1_Interrupt+0xae>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:451
      ASerialLdd1_OnBreak(DeviceDataPrv->UserDataPtr); /* If yes then invoke user event */
    541e:	687b      	ldr	r3, [r7, #4]
    5420:	69db      	ldr	r3, [r3, #28]
    5422:	4618      	mov	r0, r3
    5424:	f7ff fc7c 	bl	4d20 <ASerialLdd1_OnBreak>
    5428:	e004      	b.n	5434 <ASerialLdd1_Interrupt+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:453
    } else {
      ASerialLdd1_OnError(DeviceDataPrv->UserDataPtr); /* Invoke user event */
    542a:	687b      	ldr	r3, [r7, #4]
    542c:	69db      	ldr	r3, [r3, #28]
    542e:	4618      	mov	r0, r3
    5430:	f7ff fc2a 	bl	4c88 <ASerialLdd1_OnError>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:456
    }
  }
  if (StatReg & UART_S1_RDRF_MASK) {   /* Is the receiver's interrupt flag set? */
    5434:	f004 0320 	and.w	r3, r4, #32
    5438:	2b00      	cmp	r3, #0
    543a:	d002      	beq.n	5442 <ASerialLdd1_Interrupt+0xc6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:457
    InterruptRx(DeviceDataPrv);        /* If yes, then invoke the internal service routine. This routine is inlined. */
    543c:	6878      	ldr	r0, [r7, #4]
    543e:	f7ff ff31 	bl	52a4 <InterruptRx>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:459
  }
  if (DeviceDataPrv->SerFlag & ENABLED_TX_INT) { /* Is the transmitter interrupt enabled? */
    5442:	687b      	ldr	r3, [r7, #4]
    5444:	881b      	ldrh	r3, [r3, #0]
    5446:	f003 0301 	and.w	r3, r3, #1
    544a:	2b00      	cmp	r3, #0
    544c:	d006      	beq.n	545c <ASerialLdd1_Interrupt+0xe0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:460
    if (StatReg & UART_S1_TDRE_MASK) { /* Is the transmitter empty? */
    544e:	f004 0380 	and.w	r3, r4, #128	; 0x80
    5452:	2b00      	cmp	r3, #0
    5454:	d002      	beq.n	545c <ASerialLdd1_Interrupt+0xe0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:461
      InterruptTx(DeviceDataPrv);      /* If yes, then invoke the internal service routine. This routine is inlined. */
    5456:	6878      	ldr	r0, [r7, #4]
    5458:	f7ff ff50 	bl	52fc <InterruptTx>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:464
    }
  }
}
    545c:	370c      	adds	r7, #12
    545e:	46bd      	mov	sp, r7
    5460:	e8bd 41f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, lr}
    5464:	4685      	mov	sp, r0
    5466:	4770      	bx	lr
    5468:	2000036c 	.word	0x2000036c
    546c:	4006d000 	.word	0x4006d000

00005470 <ASerialLdd1_GetError>:
ASerialLdd1_GetError():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:496
**                           the active clock configuration
**                           ERR_DISABLED - Component is disabled
*/
/* ===================================================================*/
LDD_TError ASerialLdd1_GetError(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TError *ErrorPtr)
{
    5470:	b480      	push	{r7}
    5472:	b085      	sub	sp, #20
    5474:	af00      	add	r7, sp, #0
    5476:	6078      	str	r0, [r7, #4]
    5478:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:497
  ASerialLdd1_TDeviceDataPtr DeviceDataPrv = (ASerialLdd1_TDeviceDataPtr)DeviceDataPtr;
    547a:	687b      	ldr	r3, [r7, #4]
    547c:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:500

  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    547e:	f3ef 8013 	mrs	r0, FAULTMASK
    5482:	b671      	cpsid	f
    5484:	72f8      	strb	r0, [r7, #11]
    5486:	4b14      	ldr	r3, [pc, #80]	; (54d8 <ASerialLdd1_GetError+0x68>)
    5488:	781b      	ldrb	r3, [r3, #0]
    548a:	b2db      	uxtb	r3, r3
    548c:	3301      	adds	r3, #1
    548e:	b2db      	uxtb	r3, r3
    5490:	4a11      	ldr	r2, [pc, #68]	; (54d8 <ASerialLdd1_GetError+0x68>)
    5492:	4619      	mov	r1, r3
    5494:	7011      	strb	r1, [r2, #0]
    5496:	2b01      	cmp	r3, #1
    5498:	d102      	bne.n	54a0 <ASerialLdd1_GetError+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:500 (discriminator 1)
    549a:	7afa      	ldrb	r2, [r7, #11]
    549c:	4b0f      	ldr	r3, [pc, #60]	; (54dc <ASerialLdd1_GetError+0x6c>)
    549e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:501
  *ErrorPtr = DeviceDataPrv->ErrFlag;
    54a0:	68fb      	ldr	r3, [r7, #12]
    54a2:	685a      	ldr	r2, [r3, #4]
    54a4:	683b      	ldr	r3, [r7, #0]
    54a6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:502
  DeviceDataPrv->ErrFlag = 0x00U;      /* Reset error flags */
    54a8:	68fb      	ldr	r3, [r7, #12]
    54aa:	2200      	movs	r2, #0
    54ac:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:504
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    54ae:	4b0a      	ldr	r3, [pc, #40]	; (54d8 <ASerialLdd1_GetError+0x68>)
    54b0:	781b      	ldrb	r3, [r3, #0]
    54b2:	b2db      	uxtb	r3, r3
    54b4:	3b01      	subs	r3, #1
    54b6:	b2db      	uxtb	r3, r3
    54b8:	4a07      	ldr	r2, [pc, #28]	; (54d8 <ASerialLdd1_GetError+0x68>)
    54ba:	4619      	mov	r1, r3
    54bc:	7011      	strb	r1, [r2, #0]
    54be:	2b00      	cmp	r3, #0
    54c0:	d103      	bne.n	54ca <ASerialLdd1_GetError+0x5a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:504 (discriminator 1)
    54c2:	4b06      	ldr	r3, [pc, #24]	; (54dc <ASerialLdd1_GetError+0x6c>)
    54c4:	7818      	ldrb	r0, [r3, #0]
    54c6:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:505
  return ERR_OK;                       /* OK */
    54ca:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd1.c:506
}
    54cc:	4618      	mov	r0, r3
    54ce:	3714      	adds	r7, #20
    54d0:	46bd      	mov	sp, r7
    54d2:	f85d 7b04 	ldr.w	r7, [sp], #4
    54d6:	4770      	bx	lr
    54d8:	2000010c 	.word	0x2000010c
    54dc:	20000b80 	.word	0x20000b80

000054e0 <ASerialLdd2_Init>:
ASerialLdd2_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:161
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* ASerialLdd2_Init(LDD_TUserData *UserDataPtr)
{
    54e0:	b480      	push	{r7}
    54e2:	b085      	sub	sp, #20
    54e4:	af00      	add	r7, sp, #0
    54e6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:165
  /* Allocate device structure */
  ASerialLdd2_TDeviceDataPtr DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    54e8:	4b6b      	ldr	r3, [pc, #428]	; (5698 <ASerialLdd2_Init+0x1b8>)
    54ea:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:168

  /* Clear the receive counters and pointer */
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Clear the counter of received characters */
    54ec:	68fb      	ldr	r3, [r7, #12]
    54ee:	2200      	movs	r2, #0
    54f0:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:169
  DeviceDataPrv->InpDataNumReq = 0x00U; /* Clear the counter of characters to receive by ReceiveBlock() */
    54f2:	68fb      	ldr	r3, [r7, #12]
    54f4:	2200      	movs	r2, #0
    54f6:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:170
  DeviceDataPrv->InpDataPtr = NULL;    /* Clear the buffer pointer for received characters */
    54f8:	68fb      	ldr	r3, [r7, #12]
    54fa:	2200      	movs	r2, #0
    54fc:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:172
  /* Clear the transmit counters and pointer */
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters */
    54fe:	68fb      	ldr	r3, [r7, #12]
    5500:	2200      	movs	r2, #0
    5502:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:173
  DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    5504:	68fb      	ldr	r3, [r7, #12]
    5506:	2200      	movs	r2, #0
    5508:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:174
  DeviceDataPrv->OutDataPtr = NULL;    /* Clear the buffer pointer for data to be transmitted */
    550a:	68fb      	ldr	r3, [r7, #12]
    550c:	2200      	movs	r2, #0
    550e:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:175
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5510:	68fb      	ldr	r3, [r7, #12]
    5512:	687a      	ldr	r2, [r7, #4]
    5514:	61da      	str	r2, [r3, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:178
  /* Allocate interrupt vectors */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_UART0_RX_TX__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    5516:	4b61      	ldr	r3, [pc, #388]	; (569c <ASerialLdd2_Init+0x1bc>)
    5518:	68fa      	ldr	r2, [r7, #12]
    551a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:180
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_UART0_ERR__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    551c:	4b60      	ldr	r3, [pc, #384]	; (56a0 <ASerialLdd2_Init+0x1c0>)
    551e:	68fa      	ldr	r2, [r7, #12]
    5520:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:182
  /* SIM_SCGC4: UART0=1 */
  SIM_SCGC4 |= SIM_SCGC4_UART0_MASK;
    5522:	4960      	ldr	r1, [pc, #384]	; (56a4 <ASerialLdd2_Init+0x1c4>)
    5524:	4b5f      	ldr	r3, [pc, #380]	; (56a4 <ASerialLdd2_Init+0x1c4>)
    5526:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    552a:	3314      	adds	r3, #20
    552c:	681b      	ldr	r3, [r3, #0]
    552e:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    5532:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5536:	3314      	adds	r3, #20
    5538:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:184
  /* SIM_SCGC5: PORTA=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
    553a:	495a      	ldr	r1, [pc, #360]	; (56a4 <ASerialLdd2_Init+0x1c4>)
    553c:	4b59      	ldr	r3, [pc, #356]	; (56a4 <ASerialLdd2_Init+0x1c4>)
    553e:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5542:	3318      	adds	r3, #24
    5544:	681b      	ldr	r3, [r3, #0]
    5546:	f443 7200 	orr.w	r2, r3, #512	; 0x200
    554a:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    554e:	3318      	adds	r3, #24
    5550:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:186
  /* PORTA_PCR1: ISF=0,MUX=2 */
  PORTA_PCR1 = (uint32_t)((PORTA_PCR1 & (uint32_t)~(uint32_t)(
    5552:	4a55      	ldr	r2, [pc, #340]	; (56a8 <ASerialLdd2_Init+0x1c8>)
    5554:	4b54      	ldr	r3, [pc, #336]	; (56a8 <ASerialLdd2_Init+0x1c8>)
    5556:	685b      	ldr	r3, [r3, #4]
    5558:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    555c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5560:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    5564:	6053      	str	r3, [r2, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:193
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* PORTA_PCR2: ISF=0,MUX=2 */
  PORTA_PCR2 = (uint32_t)((PORTA_PCR2 & (uint32_t)~(uint32_t)(
    5566:	4a50      	ldr	r2, [pc, #320]	; (56a8 <ASerialLdd2_Init+0x1c8>)
    5568:	4b4f      	ldr	r3, [pc, #316]	; (56a8 <ASerialLdd2_Init+0x1c8>)
    556a:	689b      	ldr	r3, [r3, #8]
    556c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5570:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5574:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    5578:	6093      	str	r3, [r2, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:200
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* NVICIP31: PRI31=0x70 */
  NVICIP31 = NVIC_IP_PRI31(0x70);
    557a:	4b4c      	ldr	r3, [pc, #304]	; (56ac <ASerialLdd2_Init+0x1cc>)
    557c:	2270      	movs	r2, #112	; 0x70
    557e:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:202
  /* NVICISER0: SETENA|=0x80000000 */
  NVICISER0 |= NVIC_ISER_SETENA(0x80000000);
    5582:	4b4a      	ldr	r3, [pc, #296]	; (56ac <ASerialLdd2_Init+0x1cc>)
    5584:	4a49      	ldr	r2, [pc, #292]	; (56ac <ASerialLdd2_Init+0x1cc>)
    5586:	6812      	ldr	r2, [r2, #0]
    5588:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
    558c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:204
  /* NVICIP32: PRI32=0x70 */
  NVICIP32 = NVIC_IP_PRI32(0x70);
    558e:	4b47      	ldr	r3, [pc, #284]	; (56ac <ASerialLdd2_Init+0x1cc>)
    5590:	2270      	movs	r2, #112	; 0x70
    5592:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:206
  /* NVICISER1: SETENA|=1 */
  NVICISER1 |= NVIC_ISER_SETENA(0x01);
    5596:	4b45      	ldr	r3, [pc, #276]	; (56ac <ASerialLdd2_Init+0x1cc>)
    5598:	4a44      	ldr	r2, [pc, #272]	; (56ac <ASerialLdd2_Init+0x1cc>)
    559a:	6852      	ldr	r2, [r2, #4]
    559c:	f042 0201 	orr.w	r2, r2, #1
    55a0:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:207
  UART_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_DISABLE); /* Disable transmitter. */
    55a2:	4b43      	ldr	r3, [pc, #268]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55a4:	4a42      	ldr	r2, [pc, #264]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55a6:	78d2      	ldrb	r2, [r2, #3]
    55a8:	b2d2      	uxtb	r2, r2
    55aa:	f022 0208 	bic.w	r2, r2, #8
    55ae:	b2d2      	uxtb	r2, r2
    55b0:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:208
  UART_PDD_EnableReceiver(UART0_BASE_PTR, PDD_DISABLE); /* Disable receiver. */
    55b2:	4b3f      	ldr	r3, [pc, #252]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55b4:	4a3e      	ldr	r2, [pc, #248]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55b6:	78d2      	ldrb	r2, [r2, #3]
    55b8:	b2d2      	uxtb	r2, r2
    55ba:	f022 0204 	bic.w	r2, r2, #4
    55be:	b2d2      	uxtb	r2, r2
    55c0:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:209
  DeviceDataPrv->SerFlag = 0x00U;      /* Reset flags */
    55c2:	68fb      	ldr	r3, [r7, #12]
    55c4:	2200      	movs	r2, #0
    55c6:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:210
  DeviceDataPrv->ErrFlag = 0x00U;      /* Reset error flags */
    55c8:	68fb      	ldr	r3, [r7, #12]
    55ca:	2200      	movs	r2, #0
    55cc:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:212
  /* UART0_C1: LOOPS=0,UARTSWAI=0,RSRC=0,M=0,WAKE=0,ILT=0,PE=0,PT=0 */
  UART0_C1 = 0x00U;                    /*  Set the C1 register */
    55ce:	4b38      	ldr	r3, [pc, #224]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55d0:	2200      	movs	r2, #0
    55d2:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:214
  /* UART0_C3: R8=0,T8=0,TXDIR=0,TXINV=0,ORIE=0,NEIE=0,FEIE=0,PEIE=0 */
  UART0_C3 = 0x00U;                    /*  Set the C3 register */
    55d4:	4b36      	ldr	r3, [pc, #216]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55d6:	2200      	movs	r2, #0
    55d8:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:216
  /* UART0_C4: MAEN1=0,MAEN2=0,M10=0,BRFA=0 */
  UART0_C4 = UART_C4_BRFA(0x00);       /*  Set the C4 register */
    55da:	4b35      	ldr	r3, [pc, #212]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55dc:	2200      	movs	r2, #0
    55de:	729a      	strb	r2, [r3, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:218
  /* UART0_S2: LBKDIF=0,RXEDGIF=0,MSBF=0,RXINV=0,RWUID=0,BRK13=0,LBKDE=0,RAF=0 */
  UART0_S2 = 0x00U;                    /*  Set the S2 register */
    55e0:	4b33      	ldr	r3, [pc, #204]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55e2:	2200      	movs	r2, #0
    55e4:	715a      	strb	r2, [r3, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:220
  /* UART0_MODEM: ??=0,??=0,??=0,??=0,RXRTSE=0,TXRTSPOL=0,TXRTSE=0,TXCTSE=0 */
  UART0_MODEM = 0x00U;                 /*  Set the MODEM register */
    55e6:	4b32      	ldr	r3, [pc, #200]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55e8:	2200      	movs	r2, #0
    55ea:	735a      	strb	r2, [r3, #13]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:221
  UART_PDD_SetBaudRateFineAdjust(UART0_BASE_PTR, 7u); /* Set baud rate fine adjust */
    55ec:	4b30      	ldr	r3, [pc, #192]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55ee:	4a30      	ldr	r2, [pc, #192]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    55f0:	7a92      	ldrb	r2, [r2, #10]
    55f2:	b2d2      	uxtb	r2, r2
    55f4:	b2d2      	uxtb	r2, r2
    55f6:	f022 021f 	bic.w	r2, r2, #31
    55fa:	b2d2      	uxtb	r2, r2
    55fc:	f042 0207 	orr.w	r2, r2, #7
    5600:	b2d2      	uxtb	r2, r2
    5602:	b2d2      	uxtb	r2, r2
    5604:	729a      	strb	r2, [r3, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:222
  UART_PDD_SetBaudRate(UART0_BASE_PTR, 130U); /* Set the baud rate register. */
    5606:	4b2a      	ldr	r3, [pc, #168]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5608:	4a29      	ldr	r2, [pc, #164]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    560a:	7812      	ldrb	r2, [r2, #0]
    560c:	b2d2      	uxtb	r2, r2
    560e:	f022 021f 	bic.w	r2, r2, #31
    5612:	b2d2      	uxtb	r2, r2
    5614:	701a      	strb	r2, [r3, #0]
    5616:	4b26      	ldr	r3, [pc, #152]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5618:	2282      	movs	r2, #130	; 0x82
    561a:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:223
  UART_PDD_EnableFifo(UART0_BASE_PTR, (UART_PDD_TX_FIFO_ENABLE | UART_PDD_RX_FIFO_ENABLE)); /* Enable RX and TX FIFO */
    561c:	4b24      	ldr	r3, [pc, #144]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    561e:	4a24      	ldr	r2, [pc, #144]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5620:	7c12      	ldrb	r2, [r2, #16]
    5622:	b2d2      	uxtb	r2, r2
    5624:	f062 0277 	orn	r2, r2, #119	; 0x77
    5628:	b2d2      	uxtb	r2, r2
    562a:	741a      	strb	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:224
  UART_PDD_FlushFifo(UART0_BASE_PTR, (UART_PDD_TX_FIFO_FLUSH | UART_PDD_RX_FIFO_FLUSH)); /* Flush RX and TX FIFO */
    562c:	4b20      	ldr	r3, [pc, #128]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    562e:	4a20      	ldr	r2, [pc, #128]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5630:	7c52      	ldrb	r2, [r2, #17]
    5632:	b2d2      	uxtb	r2, r2
    5634:	f062 023f 	orn	r2, r2, #63	; 0x3f
    5638:	b2d2      	uxtb	r2, r2
    563a:	745a      	strb	r2, [r3, #17]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:225
  UART_PDD_EnableTransmitter(UART0_BASE_PTR, PDD_ENABLE); /* Enable transmitter */
    563c:	4b1c      	ldr	r3, [pc, #112]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    563e:	4a1c      	ldr	r2, [pc, #112]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5640:	78d2      	ldrb	r2, [r2, #3]
    5642:	b2d2      	uxtb	r2, r2
    5644:	b2d2      	uxtb	r2, r2
    5646:	f042 0208 	orr.w	r2, r2, #8
    564a:	b2d2      	uxtb	r2, r2
    564c:	b2d2      	uxtb	r2, r2
    564e:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:226
  UART_PDD_EnableReceiver(UART0_BASE_PTR, PDD_ENABLE); /* Enable receiver */
    5650:	4b17      	ldr	r3, [pc, #92]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5652:	4a17      	ldr	r2, [pc, #92]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5654:	78d2      	ldrb	r2, [r2, #3]
    5656:	b2d2      	uxtb	r2, r2
    5658:	b2d2      	uxtb	r2, r2
    565a:	f042 0204 	orr.w	r2, r2, #4
    565e:	b2d2      	uxtb	r2, r2
    5660:	b2d2      	uxtb	r2, r2
    5662:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:227
  UART_PDD_EnableInterrupt(UART0_BASE_PTR, ( UART_PDD_INTERRUPT_RECEIVER | UART_PDD_INTERRUPT_PARITY_ERROR | UART_PDD_INTERRUPT_FRAMING_ERROR | UART_PDD_INTERRUPT_NOISE_ERROR | UART_PDD_INTERRUPT_OVERRUN_ERROR )); /* Enable interrupts */
    5664:	4b12      	ldr	r3, [pc, #72]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5666:	4a12      	ldr	r2, [pc, #72]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5668:	78d2      	ldrb	r2, [r2, #3]
    566a:	b2d2      	uxtb	r2, r2
    566c:	f042 0220 	orr.w	r2, r2, #32
    5670:	b2d2      	uxtb	r2, r2
    5672:	70da      	strb	r2, [r3, #3]
    5674:	4b0e      	ldr	r3, [pc, #56]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5676:	4a0e      	ldr	r2, [pc, #56]	; (56b0 <ASerialLdd2_Init+0x1d0>)
    5678:	7992      	ldrb	r2, [r2, #6]
    567a:	b2d2      	uxtb	r2, r2
    567c:	f042 020f 	orr.w	r2, r2, #15
    5680:	b2d2      	uxtb	r2, r2
    5682:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:229
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_ASerialLdd2_ID,DeviceDataPrv);
    5684:	4b0b      	ldr	r3, [pc, #44]	; (56b4 <ASerialLdd2_Init+0x1d4>)
    5686:	68fa      	ldr	r2, [r7, #12]
    5688:	635a      	str	r2, [r3, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:230
  return ((LDD_TDeviceData *)DeviceDataPrv);
    568a:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:231
}
    568c:	4618      	mov	r0, r3
    568e:	3714      	adds	r7, #20
    5690:	46bd      	mov	sp, r7
    5692:	f85d 7b04 	ldr.w	r7, [sp], #4
    5696:	4770      	bx	lr
    5698:	20000374 	.word	0x20000374
    569c:	20000394 	.word	0x20000394
    56a0:	20000398 	.word	0x20000398
    56a4:	40047000 	.word	0x40047000
    56a8:	40049000 	.word	0x40049000
    56ac:	e000e100 	.word	0xe000e100
    56b0:	4006a000 	.word	0x4006a000
    56b4:	20000480 	.word	0x20000480

000056b8 <ASerialLdd2_ReceiveBlock>:
ASerialLdd2_ReceiveBlock():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:278
**                           ERR_BUSY - The previous receive request is
**                           pending.
*/
/* ===================================================================*/
LDD_TError ASerialLdd2_ReceiveBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    56b8:	b480      	push	{r7}
    56ba:	b087      	sub	sp, #28
    56bc:	af00      	add	r7, sp, #0
    56be:	60f8      	str	r0, [r7, #12]
    56c0:	60b9      	str	r1, [r7, #8]
    56c2:	4613      	mov	r3, r2
    56c4:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:279
  ASerialLdd2_TDeviceDataPtr DeviceDataPrv = (ASerialLdd2_TDeviceDataPtr)DeviceDataPtr;
    56c6:	68fb      	ldr	r3, [r7, #12]
    56c8:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:281

  if (Size == 0U) {                    /* Is the parameter Size within an expected range? */
    56ca:	88fb      	ldrh	r3, [r7, #6]
    56cc:	2b00      	cmp	r3, #0
    56ce:	d101      	bne.n	56d4 <ASerialLdd2_ReceiveBlock+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:282
    return ERR_PARAM_SIZE;             /* If no then error */
    56d0:	2384      	movs	r3, #132	; 0x84
    56d2:	e02e      	b.n	5732 <ASerialLdd2_ReceiveBlock+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:284
  }
  if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the previous receive operation pending? */
    56d4:	697b      	ldr	r3, [r7, #20]
    56d6:	8a1b      	ldrh	r3, [r3, #16]
    56d8:	2b00      	cmp	r3, #0
    56da:	d001      	beq.n	56e0 <ASerialLdd2_ReceiveBlock+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:285
    return ERR_BUSY;                   /* If yes then error */
    56dc:	2308      	movs	r3, #8
    56de:	e028      	b.n	5732 <ASerialLdd2_ReceiveBlock+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:288
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    56e0:	f3ef 8013 	mrs	r0, FAULTMASK
    56e4:	b671      	cpsid	f
    56e6:	74f8      	strb	r0, [r7, #19]
    56e8:	4b15      	ldr	r3, [pc, #84]	; (5740 <ASerialLdd2_ReceiveBlock+0x88>)
    56ea:	781b      	ldrb	r3, [r3, #0]
    56ec:	b2db      	uxtb	r3, r3
    56ee:	3301      	adds	r3, #1
    56f0:	b2db      	uxtb	r3, r3
    56f2:	4a13      	ldr	r2, [pc, #76]	; (5740 <ASerialLdd2_ReceiveBlock+0x88>)
    56f4:	4619      	mov	r1, r3
    56f6:	7011      	strb	r1, [r2, #0]
    56f8:	2b01      	cmp	r3, #1
    56fa:	d102      	bne.n	5702 <ASerialLdd2_ReceiveBlock+0x4a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:288 (discriminator 1)
    56fc:	7cfa      	ldrb	r2, [r7, #19]
    56fe:	4b11      	ldr	r3, [pc, #68]	; (5744 <ASerialLdd2_ReceiveBlock+0x8c>)
    5700:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:289
  DeviceDataPrv->InpDataPtr = (uint8_t*)BufferPtr; /* Store a pointer to the input data. */
    5702:	697b      	ldr	r3, [r7, #20]
    5704:	68ba      	ldr	r2, [r7, #8]
    5706:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:290
  DeviceDataPrv->InpDataNumReq = Size; /* Store a number of characters to be received. */
    5708:	697b      	ldr	r3, [r7, #20]
    570a:	88fa      	ldrh	r2, [r7, #6]
    570c:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:291
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Set number of received characters to zero. */
    570e:	697b      	ldr	r3, [r7, #20]
    5710:	2200      	movs	r2, #0
    5712:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:293
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    5714:	4b0a      	ldr	r3, [pc, #40]	; (5740 <ASerialLdd2_ReceiveBlock+0x88>)
    5716:	781b      	ldrb	r3, [r3, #0]
    5718:	b2db      	uxtb	r3, r3
    571a:	3b01      	subs	r3, #1
    571c:	b2db      	uxtb	r3, r3
    571e:	4a08      	ldr	r2, [pc, #32]	; (5740 <ASerialLdd2_ReceiveBlock+0x88>)
    5720:	4619      	mov	r1, r3
    5722:	7011      	strb	r1, [r2, #0]
    5724:	2b00      	cmp	r3, #0
    5726:	d103      	bne.n	5730 <ASerialLdd2_ReceiveBlock+0x78>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:293 (discriminator 1)
    5728:	4b06      	ldr	r3, [pc, #24]	; (5744 <ASerialLdd2_ReceiveBlock+0x8c>)
    572a:	7818      	ldrb	r0, [r3, #0]
    572c:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:294
  return ERR_OK;                       /* OK */
    5730:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:295
}
    5732:	4618      	mov	r0, r3
    5734:	371c      	adds	r7, #28
    5736:	46bd      	mov	sp, r7
    5738:	f85d 7b04 	ldr.w	r7, [sp], #4
    573c:	4770      	bx	lr
    573e:	bf00      	nop
    5740:	2000010c 	.word	0x2000010c
    5744:	20000b80 	.word	0x20000b80

00005748 <ASerialLdd2_SendBlock>:
ASerialLdd2_SendBlock():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:338
**                           ERR_BUSY - The previous transmit request is
**                           pending.
*/
/* ===================================================================*/
LDD_TError ASerialLdd2_SendBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    5748:	b480      	push	{r7}
    574a:	b087      	sub	sp, #28
    574c:	af00      	add	r7, sp, #0
    574e:	60f8      	str	r0, [r7, #12]
    5750:	60b9      	str	r1, [r7, #8]
    5752:	4613      	mov	r3, r2
    5754:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:339
  ASerialLdd2_TDeviceDataPtr DeviceDataPrv = (ASerialLdd2_TDeviceDataPtr)DeviceDataPtr;
    5756:	68fb      	ldr	r3, [r7, #12]
    5758:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:341

  if (Size == 0U) {                    /* Is the parameter Size within an expected range? */
    575a:	88fb      	ldrh	r3, [r7, #6]
    575c:	2b00      	cmp	r3, #0
    575e:	d101      	bne.n	5764 <ASerialLdd2_SendBlock+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:342
    return ERR_PARAM_SIZE;             /* If no then error */
    5760:	2384      	movs	r3, #132	; 0x84
    5762:	e042      	b.n	57ea <ASerialLdd2_SendBlock+0xa2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:344
  }
  if (DeviceDataPrv->OutDataNumReq != 0x00U) { /* Is the previous transmit operation pending? */
    5764:	697b      	ldr	r3, [r7, #20]
    5766:	8b1b      	ldrh	r3, [r3, #24]
    5768:	2b00      	cmp	r3, #0
    576a:	d001      	beq.n	5770 <ASerialLdd2_SendBlock+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:345
    return ERR_BUSY;                   /* If yes then error */
    576c:	2308      	movs	r3, #8
    576e:	e03c      	b.n	57ea <ASerialLdd2_SendBlock+0xa2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:348
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    5770:	f3ef 8013 	mrs	r0, FAULTMASK
    5774:	b671      	cpsid	f
    5776:	74f8      	strb	r0, [r7, #19]
    5778:	4b1f      	ldr	r3, [pc, #124]	; (57f8 <ASerialLdd2_SendBlock+0xb0>)
    577a:	781b      	ldrb	r3, [r3, #0]
    577c:	b2db      	uxtb	r3, r3
    577e:	3301      	adds	r3, #1
    5780:	b2db      	uxtb	r3, r3
    5782:	4a1d      	ldr	r2, [pc, #116]	; (57f8 <ASerialLdd2_SendBlock+0xb0>)
    5784:	4619      	mov	r1, r3
    5786:	7011      	strb	r1, [r2, #0]
    5788:	2b01      	cmp	r3, #1
    578a:	d102      	bne.n	5792 <ASerialLdd2_SendBlock+0x4a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:348 (discriminator 1)
    578c:	7cfa      	ldrb	r2, [r7, #19]
    578e:	4b1b      	ldr	r3, [pc, #108]	; (57fc <ASerialLdd2_SendBlock+0xb4>)
    5790:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:349
  DeviceDataPrv->OutDataPtr = (uint8_t*)BufferPtr; /* Set a pointer to the output data. */
    5792:	697b      	ldr	r3, [r7, #20]
    5794:	68ba      	ldr	r2, [r7, #8]
    5796:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:350
  DeviceDataPrv->OutDataNumReq = Size; /* Set the counter of characters to be sent. */
    5798:	697b      	ldr	r3, [r7, #20]
    579a:	88fa      	ldrh	r2, [r7, #6]
    579c:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:351
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters. */
    579e:	697b      	ldr	r3, [r7, #20]
    57a0:	2200      	movs	r2, #0
    57a2:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:352
  DeviceDataPrv->SerFlag |= ENABLED_TX_INT; /* Set the flag ENABLED_TX_INT */
    57a4:	697b      	ldr	r3, [r7, #20]
    57a6:	881b      	ldrh	r3, [r3, #0]
    57a8:	f043 0301 	orr.w	r3, r3, #1
    57ac:	b29a      	uxth	r2, r3
    57ae:	697b      	ldr	r3, [r7, #20]
    57b0:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:353
  UART_PDD_EnableInterrupt(UART0_BASE_PTR, UART_PDD_INTERRUPT_TRANSMITTER); /* Enable TX interrupt */
    57b2:	4b13      	ldr	r3, [pc, #76]	; (5800 <ASerialLdd2_SendBlock+0xb8>)
    57b4:	4a12      	ldr	r2, [pc, #72]	; (5800 <ASerialLdd2_SendBlock+0xb8>)
    57b6:	78d2      	ldrb	r2, [r2, #3]
    57b8:	b2d2      	uxtb	r2, r2
    57ba:	f062 027f 	orn	r2, r2, #127	; 0x7f
    57be:	b2d2      	uxtb	r2, r2
    57c0:	70da      	strb	r2, [r3, #3]
    57c2:	4b0f      	ldr	r3, [pc, #60]	; (5800 <ASerialLdd2_SendBlock+0xb8>)
    57c4:	4a0e      	ldr	r2, [pc, #56]	; (5800 <ASerialLdd2_SendBlock+0xb8>)
    57c6:	7992      	ldrb	r2, [r2, #6]
    57c8:	b2d2      	uxtb	r2, r2
    57ca:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:355
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    57cc:	4b0a      	ldr	r3, [pc, #40]	; (57f8 <ASerialLdd2_SendBlock+0xb0>)
    57ce:	781b      	ldrb	r3, [r3, #0]
    57d0:	b2db      	uxtb	r3, r3
    57d2:	3b01      	subs	r3, #1
    57d4:	b2db      	uxtb	r3, r3
    57d6:	4a08      	ldr	r2, [pc, #32]	; (57f8 <ASerialLdd2_SendBlock+0xb0>)
    57d8:	4619      	mov	r1, r3
    57da:	7011      	strb	r1, [r2, #0]
    57dc:	2b00      	cmp	r3, #0
    57de:	d103      	bne.n	57e8 <ASerialLdd2_SendBlock+0xa0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:355 (discriminator 1)
    57e0:	4b06      	ldr	r3, [pc, #24]	; (57fc <ASerialLdd2_SendBlock+0xb4>)
    57e2:	7818      	ldrb	r0, [r3, #0]
    57e4:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:356
  return ERR_OK;                       /* OK */
    57e8:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:357
}
    57ea:	4618      	mov	r0, r3
    57ec:	371c      	adds	r7, #28
    57ee:	46bd      	mov	sp, r7
    57f0:	f85d 7b04 	ldr.w	r7, [sp], #4
    57f4:	4770      	bx	lr
    57f6:	bf00      	nop
    57f8:	2000010c 	.word	0x2000010c
    57fc:	20000b80 	.word	0x20000b80
    5800:	4006a000 	.word	0x4006a000

00005804 <InterruptRx>:
InterruptRx():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:370
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptRx(ASerialLdd2_TDeviceDataPtr DeviceDataPrv)
{
    5804:	b590      	push	{r4, r7, lr}
    5806:	b083      	sub	sp, #12
    5808:	af00      	add	r7, sp, #0
    580a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:373
  register uint16_t Data;              /* Temporary variable for data */

  Data = (uint16_t)UART_PDD_GetChar8(UART0_BASE_PTR); /* Read an 8-bit character from the receiver */
    580c:	4b12      	ldr	r3, [pc, #72]	; (5858 <InterruptRx+0x54>)
    580e:	79db      	ldrb	r3, [r3, #7]
    5810:	b2db      	uxtb	r3, r3
    5812:	461c      	mov	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:374
  if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the receive block operation pending? */
    5814:	687b      	ldr	r3, [r7, #4]
    5816:	8a1b      	ldrh	r3, [r3, #16]
    5818:	2b00      	cmp	r3, #0
    581a:	d01a      	beq.n	5852 <InterruptRx+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:375
    *(DeviceDataPrv->InpDataPtr++) = (uint8_t)Data; /* Put an 8-bit character to the receive buffer */
    581c:	687b      	ldr	r3, [r7, #4]
    581e:	68db      	ldr	r3, [r3, #12]
    5820:	1c59      	adds	r1, r3, #1
    5822:	687a      	ldr	r2, [r7, #4]
    5824:	60d1      	str	r1, [r2, #12]
    5826:	b2e2      	uxtb	r2, r4
    5828:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:376
    DeviceDataPrv->InpRecvDataNum++;   /* Increment received char. counter */
    582a:	687b      	ldr	r3, [r7, #4]
    582c:	891b      	ldrh	r3, [r3, #8]
    582e:	3301      	adds	r3, #1
    5830:	b29a      	uxth	r2, r3
    5832:	687b      	ldr	r3, [r7, #4]
    5834:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:377
    if (DeviceDataPrv->InpRecvDataNum == DeviceDataPrv->InpDataNumReq) { /* Is the requested number of characters received? */
    5836:	687b      	ldr	r3, [r7, #4]
    5838:	891a      	ldrh	r2, [r3, #8]
    583a:	687b      	ldr	r3, [r7, #4]
    583c:	8a1b      	ldrh	r3, [r3, #16]
    583e:	429a      	cmp	r2, r3
    5840:	d107      	bne.n	5852 <InterruptRx+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:378
      DeviceDataPrv->InpDataNumReq = 0x00U; /* If yes then clear number of requested characters to be received. */
    5842:	687b      	ldr	r3, [r7, #4]
    5844:	2200      	movs	r2, #0
    5846:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:379
      ASerialLdd2_OnBlockReceived(DeviceDataPrv->UserDataPtr);
    5848:	687b      	ldr	r3, [r7, #4]
    584a:	69db      	ldr	r3, [r3, #28]
    584c:	4618      	mov	r0, r3
    584e:	f7ff fab7 	bl	4dc0 <ASerialLdd2_OnBlockReceived>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:382
    }
  }
}
    5852:	370c      	adds	r7, #12
    5854:	46bd      	mov	sp, r7
    5856:	bd90      	pop	{r4, r7, pc}
    5858:	4006a000 	.word	0x4006a000

0000585c <InterruptTx>:
InterruptTx():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:395
**         peripheral(s) and eventually invokes the bean's event(s).
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void InterruptTx(ASerialLdd2_TDeviceDataPtr DeviceDataPrv)
{
    585c:	b580      	push	{r7, lr}
    585e:	b082      	sub	sp, #8
    5860:	af00      	add	r7, sp, #0
    5862:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:397

  if (DeviceDataPrv->OutSentDataNum < DeviceDataPrv->OutDataNumReq) { /* Is number of sent characters less than the number of requested incoming characters? */
    5864:	687b      	ldr	r3, [r7, #4]
    5866:	8a5a      	ldrh	r2, [r3, #18]
    5868:	687b      	ldr	r3, [r7, #4]
    586a:	8b1b      	ldrh	r3, [r3, #24]
    586c:	429a      	cmp	r2, r3
    586e:	d21c      	bcs.n	58aa <InterruptTx+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:398
    UART_PDD_PutChar8(UART0_BASE_PTR, *(DeviceDataPrv->OutDataPtr++)); /* Put a 8-bit character to the transmit register */
    5870:	4a19      	ldr	r2, [pc, #100]	; (58d8 <InterruptTx+0x7c>)
    5872:	687b      	ldr	r3, [r7, #4]
    5874:	695b      	ldr	r3, [r3, #20]
    5876:	1c58      	adds	r0, r3, #1
    5878:	6879      	ldr	r1, [r7, #4]
    587a:	6148      	str	r0, [r1, #20]
    587c:	781b      	ldrb	r3, [r3, #0]
    587e:	71d3      	strb	r3, [r2, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:399
    DeviceDataPrv->OutSentDataNum++;   /* Increment the counter of sent characters. */
    5880:	687b      	ldr	r3, [r7, #4]
    5882:	8a5b      	ldrh	r3, [r3, #18]
    5884:	3301      	adds	r3, #1
    5886:	b29a      	uxth	r2, r3
    5888:	687b      	ldr	r3, [r7, #4]
    588a:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:400
    if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
    588c:	687b      	ldr	r3, [r7, #4]
    588e:	8a5a      	ldrh	r2, [r3, #18]
    5890:	687b      	ldr	r3, [r7, #4]
    5892:	8b1b      	ldrh	r3, [r3, #24]
    5894:	429a      	cmp	r2, r3
    5896:	d11c      	bne.n	58d2 <InterruptTx+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:401
      DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    5898:	687b      	ldr	r3, [r7, #4]
    589a:	2200      	movs	r2, #0
    589c:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:402
      ASerialLdd2_OnBlockSent(DeviceDataPrv->UserDataPtr);
    589e:	687b      	ldr	r3, [r7, #4]
    58a0:	69db      	ldr	r3, [r3, #28]
    58a2:	4618      	mov	r0, r3
    58a4:	f7ff faca 	bl	4e3c <ASerialLdd2_OnBlockSent>
    58a8:	e013      	b.n	58d2 <InterruptTx+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:405
    }
  } else {
    UART_PDD_DisableInterrupt(UART0_BASE_PTR, UART_PDD_INTERRUPT_TRANSMITTER); /* Disable TX interrupt */
    58aa:	4b0b      	ldr	r3, [pc, #44]	; (58d8 <InterruptTx+0x7c>)
    58ac:	4a0a      	ldr	r2, [pc, #40]	; (58d8 <InterruptTx+0x7c>)
    58ae:	78d2      	ldrb	r2, [r2, #3]
    58b0:	b2d2      	uxtb	r2, r2
    58b2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
    58b6:	b2d2      	uxtb	r2, r2
    58b8:	70da      	strb	r2, [r3, #3]
    58ba:	4b07      	ldr	r3, [pc, #28]	; (58d8 <InterruptTx+0x7c>)
    58bc:	4a06      	ldr	r2, [pc, #24]	; (58d8 <InterruptTx+0x7c>)
    58be:	7992      	ldrb	r2, [r2, #6]
    58c0:	b2d2      	uxtb	r2, r2
    58c2:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:406
    DeviceDataPrv->SerFlag &= (uint16_t)(~(uint16_t)ENABLED_TX_INT); /* Clear the flag ENABLED_TX_INT */
    58c4:	687b      	ldr	r3, [r7, #4]
    58c6:	881b      	ldrh	r3, [r3, #0]
    58c8:	f023 0301 	bic.w	r3, r3, #1
    58cc:	b29a      	uxth	r2, r3
    58ce:	687b      	ldr	r3, [r7, #4]
    58d0:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:408
  }
}
    58d2:	3708      	adds	r7, #8
    58d4:	46bd      	mov	sp, r7
    58d6:	bd80      	pop	{r7, pc}
    58d8:	4006a000 	.word	0x4006a000

000058dc <ASerialLdd2_Interrupt>:
ASerialLdd2_Interrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:421
**         interrupt. Calls InterruptTX/InterruptRX methods.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(ASerialLdd2_Interrupt)
{
    58dc:	4668      	mov	r0, sp
    58de:	f020 0107 	bic.w	r1, r0, #7
    58e2:	468d      	mov	sp, r1
    58e4:	e92d 41f1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, lr}
    58e8:	b083      	sub	sp, #12
    58ea:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:423
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  ASerialLdd2_TDeviceDataPtr DeviceDataPrv = INT_UART0_RX_TX__DEFAULT_RTOS_ISRPARAM;
    58ec:	4b36      	ldr	r3, [pc, #216]	; (59c8 <ASerialLdd2_Interrupt+0xec>)
    58ee:	681b      	ldr	r3, [r3, #0]
    58f0:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:424
  register uint32_t StatReg = UART_PDD_ReadInterruptStatusReg(UART0_BASE_PTR); /* Read status register */
    58f2:	4b36      	ldr	r3, [pc, #216]	; (59cc <ASerialLdd2_Interrupt+0xf0>)
    58f4:	791b      	ldrb	r3, [r3, #4]
    58f6:	b2db      	uxtb	r3, r3
    58f8:	461c      	mov	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:425
  register uint16_t OnErrorFlags = 0U; /* Temporary variable for flags */
    58fa:	2500      	movs	r5, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:426
  register uint8_t  OnBreakFlag = 0U;  /* Temporary variable flag for OnBreak event */
    58fc:	2600      	movs	r6, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:429
  register uint16_t Data;              /* Temporary variable for data */

  if (StatReg & (UART_S1_NF_MASK | UART_S1_OR_MASK | UART_S1_FE_MASK | UART_S1_PF_MASK)) { /* Is any error flag set? */
    58fe:	f004 030f 	and.w	r3, r4, #15
    5902:	2b00      	cmp	r3, #0
    5904:	d046      	beq.n	5994 <ASerialLdd2_Interrupt+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:430
    Data = (uint16_t)UART_PDD_GetChar8(UART0_BASE_PTR); /* Read an 8-bit character from receiver */
    5906:	4b31      	ldr	r3, [pc, #196]	; (59cc <ASerialLdd2_Interrupt+0xf0>)
    5908:	79db      	ldrb	r3, [r3, #7]
    590a:	b2db      	uxtb	r3, r3
    590c:	4698      	mov	r8, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:431
    if ((StatReg & UART_S1_FE_MASK) != 0U) { /* Is the framing error detected? */
    590e:	f004 0302 	and.w	r3, r4, #2
    5912:	2b00      	cmp	r3, #0
    5914:	d014      	beq.n	5940 <ASerialLdd2_Interrupt+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:432
      if (((StatReg & UART_S1_RDRF_MASK) != 0U) && (Data == 0U)) { /* Is the zero character in the receiver? */
    5916:	f004 0320 	and.w	r3, r4, #32
    591a:	2b00      	cmp	r3, #0
    591c:	d00d      	beq.n	593a <ASerialLdd2_Interrupt+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:432 (discriminator 1)
    591e:	f1b8 0f00 	cmp.w	r8, #0
    5922:	d10a      	bne.n	593a <ASerialLdd2_Interrupt+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:433
        OnBreakFlag++;
    5924:	4633      	mov	r3, r6
    5926:	3301      	adds	r3, #1
    5928:	b2de      	uxtb	r6, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:434
        DeviceDataPrv->SerFlag |= BREAK_DETECTED; /* If yes then set the flag */
    592a:	687b      	ldr	r3, [r7, #4]
    592c:	881b      	ldrh	r3, [r3, #0]
    592e:	f043 0302 	orr.w	r3, r3, #2
    5932:	b29a      	uxth	r2, r3
    5934:	687b      	ldr	r3, [r7, #4]
    5936:	801a      	strh	r2, [r3, #0]
    5938:	e002      	b.n	5940 <ASerialLdd2_Interrupt+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:436
      } else {
        OnErrorFlags |= LDD_SERIAL_FRAMING_ERROR; /* If yes then set the flag */
    593a:	f045 0304 	orr.w	r3, r5, #4
    593e:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:439
      }
    }
    if ((StatReg & UART_S1_OR_MASK) != 0U) { /* Is the overrun error flag set? */
    5940:	f004 0308 	and.w	r3, r4, #8
    5944:	2b00      	cmp	r3, #0
    5946:	d002      	beq.n	594e <ASerialLdd2_Interrupt+0x72>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:440
      OnErrorFlags |= LDD_SERIAL_RX_OVERRUN; /* If yes then set the flag */
    5948:	f045 0301 	orr.w	r3, r5, #1
    594c:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:442
    }
    if ((StatReg & UART_S1_PF_MASK) != 0U) { /* Is the parity error flag set? */
    594e:	f004 0301 	and.w	r3, r4, #1
    5952:	2b00      	cmp	r3, #0
    5954:	d002      	beq.n	595c <ASerialLdd2_Interrupt+0x80>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:443
      OnErrorFlags |= LDD_SERIAL_PARITY_ERROR; /* If yes then set the flag */
    5956:	f045 0302 	orr.w	r3, r5, #2
    595a:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:445
    }
    if ((StatReg & UART_S1_NF_MASK) != 0U) { /* Is the noise error flag set? */
    595c:	f004 0304 	and.w	r3, r4, #4
    5960:	2b00      	cmp	r3, #0
    5962:	d002      	beq.n	596a <ASerialLdd2_Interrupt+0x8e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:446
      OnErrorFlags |= LDD_SERIAL_NOISE_ERROR; /* If yes then set the flag */
    5964:	f045 0308 	orr.w	r3, r5, #8
    5968:	b29d      	uxth	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:448
    }
    DeviceDataPrv->ErrFlag |= OnErrorFlags; /* Copy flags status to ErrFlag status variable */
    596a:	687b      	ldr	r3, [r7, #4]
    596c:	685a      	ldr	r2, [r3, #4]
    596e:	462b      	mov	r3, r5
    5970:	431a      	orrs	r2, r3
    5972:	687b      	ldr	r3, [r7, #4]
    5974:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:449
    StatReg &= (uint32_t)(~(uint32_t)UART_S1_RDRF_MASK); /* Clear the receive data flag to discard the errorneous data */
    5976:	f024 0420 	bic.w	r4, r4, #32
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:450
    if (OnBreakFlag != 0U) {
    597a:	2e00      	cmp	r6, #0
    597c:	d005      	beq.n	598a <ASerialLdd2_Interrupt+0xae>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:451
      ASerialLdd2_OnBreak(DeviceDataPrv->UserDataPtr); /* If yes then invoke user event */
    597e:	687b      	ldr	r3, [r7, #4]
    5980:	69db      	ldr	r3, [r3, #28]
    5982:	4618      	mov	r0, r3
    5984:	f7ff faea 	bl	4f5c <ASerialLdd2_OnBreak>
    5988:	e004      	b.n	5994 <ASerialLdd2_Interrupt+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:453
    } else {
      ASerialLdd2_OnError(DeviceDataPrv->UserDataPtr); /* Invoke user event */
    598a:	687b      	ldr	r3, [r7, #4]
    598c:	69db      	ldr	r3, [r3, #28]
    598e:	4618      	mov	r0, r3
    5990:	f7ff fa98 	bl	4ec4 <ASerialLdd2_OnError>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:456
    }
  }
  if (StatReg & UART_S1_RDRF_MASK) {   /* Is the receiver's interrupt flag set? */
    5994:	f004 0320 	and.w	r3, r4, #32
    5998:	2b00      	cmp	r3, #0
    599a:	d002      	beq.n	59a2 <ASerialLdd2_Interrupt+0xc6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:457
    InterruptRx(DeviceDataPrv);        /* If yes, then invoke the internal service routine. This routine is inlined. */
    599c:	6878      	ldr	r0, [r7, #4]
    599e:	f7ff ff31 	bl	5804 <InterruptRx>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:459
  }
  if (DeviceDataPrv->SerFlag & ENABLED_TX_INT) { /* Is the transmitter interrupt enabled? */
    59a2:	687b      	ldr	r3, [r7, #4]
    59a4:	881b      	ldrh	r3, [r3, #0]
    59a6:	f003 0301 	and.w	r3, r3, #1
    59aa:	2b00      	cmp	r3, #0
    59ac:	d006      	beq.n	59bc <ASerialLdd2_Interrupt+0xe0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:460
    if (StatReg & UART_S1_TDRE_MASK) { /* Is the transmitter empty? */
    59ae:	f004 0380 	and.w	r3, r4, #128	; 0x80
    59b2:	2b00      	cmp	r3, #0
    59b4:	d002      	beq.n	59bc <ASerialLdd2_Interrupt+0xe0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:461
      InterruptTx(DeviceDataPrv);      /* If yes, then invoke the internal service routine. This routine is inlined. */
    59b6:	6878      	ldr	r0, [r7, #4]
    59b8:	f7ff ff50 	bl	585c <InterruptTx>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:464
    }
  }
}
    59bc:	370c      	adds	r7, #12
    59be:	46bd      	mov	sp, r7
    59c0:	e8bd 41f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, lr}
    59c4:	4685      	mov	sp, r0
    59c6:	4770      	bx	lr
    59c8:	20000394 	.word	0x20000394
    59cc:	4006a000 	.word	0x4006a000

000059d0 <ASerialLdd2_GetError>:
ASerialLdd2_GetError():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:496
**                           the active clock configuration
**                           ERR_DISABLED - Component is disabled
*/
/* ===================================================================*/
LDD_TError ASerialLdd2_GetError(LDD_TDeviceData *DeviceDataPtr, LDD_SERIAL_TError *ErrorPtr)
{
    59d0:	b480      	push	{r7}
    59d2:	b085      	sub	sp, #20
    59d4:	af00      	add	r7, sp, #0
    59d6:	6078      	str	r0, [r7, #4]
    59d8:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:497
  ASerialLdd2_TDeviceDataPtr DeviceDataPrv = (ASerialLdd2_TDeviceDataPtr)DeviceDataPtr;
    59da:	687b      	ldr	r3, [r7, #4]
    59dc:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:500

  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    59de:	f3ef 8013 	mrs	r0, FAULTMASK
    59e2:	b671      	cpsid	f
    59e4:	72f8      	strb	r0, [r7, #11]
    59e6:	4b14      	ldr	r3, [pc, #80]	; (5a38 <ASerialLdd2_GetError+0x68>)
    59e8:	781b      	ldrb	r3, [r3, #0]
    59ea:	b2db      	uxtb	r3, r3
    59ec:	3301      	adds	r3, #1
    59ee:	b2db      	uxtb	r3, r3
    59f0:	4a11      	ldr	r2, [pc, #68]	; (5a38 <ASerialLdd2_GetError+0x68>)
    59f2:	4619      	mov	r1, r3
    59f4:	7011      	strb	r1, [r2, #0]
    59f6:	2b01      	cmp	r3, #1
    59f8:	d102      	bne.n	5a00 <ASerialLdd2_GetError+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:500 (discriminator 1)
    59fa:	7afa      	ldrb	r2, [r7, #11]
    59fc:	4b0f      	ldr	r3, [pc, #60]	; (5a3c <ASerialLdd2_GetError+0x6c>)
    59fe:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:501
  *ErrorPtr = DeviceDataPrv->ErrFlag;
    5a00:	68fb      	ldr	r3, [r7, #12]
    5a02:	685a      	ldr	r2, [r3, #4]
    5a04:	683b      	ldr	r3, [r7, #0]
    5a06:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:502
  DeviceDataPrv->ErrFlag = 0x00U;      /* Reset error flags */
    5a08:	68fb      	ldr	r3, [r7, #12]
    5a0a:	2200      	movs	r2, #0
    5a0c:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:504
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    5a0e:	4b0a      	ldr	r3, [pc, #40]	; (5a38 <ASerialLdd2_GetError+0x68>)
    5a10:	781b      	ldrb	r3, [r3, #0]
    5a12:	b2db      	uxtb	r3, r3
    5a14:	3b01      	subs	r3, #1
    5a16:	b2db      	uxtb	r3, r3
    5a18:	4a07      	ldr	r2, [pc, #28]	; (5a38 <ASerialLdd2_GetError+0x68>)
    5a1a:	4619      	mov	r1, r3
    5a1c:	7011      	strb	r1, [r2, #0]
    5a1e:	2b00      	cmp	r3, #0
    5a20:	d103      	bne.n	5a2a <ASerialLdd2_GetError+0x5a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:504 (discriminator 1)
    5a22:	4b06      	ldr	r3, [pc, #24]	; (5a3c <ASerialLdd2_GetError+0x6c>)
    5a24:	7818      	ldrb	r0, [r3, #0]
    5a26:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:505
  return ERR_OK;                       /* OK */
    5a2a:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/ASerialLdd2.c:506
}
    5a2c:	4618      	mov	r0, r3
    5a2e:	3714      	adds	r7, #20
    5a30:	46bd      	mov	sp, r7
    5a32:	f85d 7b04 	ldr.w	r7, [sp], #4
    5a36:	4770      	bx	lr
    5a38:	2000010c 	.word	0x2000010c
    5a3c:	20000b80 	.word	0x20000b80

00005a40 <AdcLdd2_Init>:
AdcLdd2_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:193
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* AdcLdd2_Init(LDD_TUserData *UserDataPtr)
{
    5a40:	b480      	push	{r7}
    5a42:	b085      	sub	sp, #20
    5a44:	af00      	add	r7, sp, #0
    5a46:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:198
  /* Allocate LDD device structure */
  AdcLdd2_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    5a48:	4b2f      	ldr	r3, [pc, #188]	; (5b08 <AdcLdd2_Init+0xc8>)
    5a4a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:199
  DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
    5a4c:	68fb      	ldr	r3, [r7, #12]
    5a4e:	687a      	ldr	r2, [r7, #4]
    5a50:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:200
  DeviceDataPrv->SampleCount = 0U;     /* Initializing SampleCount for right access of some methods to SC1n registers before first conversion is done */
    5a52:	68fb      	ldr	r3, [r7, #12]
    5a54:	2200      	movs	r2, #0
    5a56:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:201
  DeviceDataPrv->EnUser = TRUE;        /* Enable device */
    5a58:	68fb      	ldr	r3, [r7, #12]
    5a5a:	2201      	movs	r2, #1
    5a5c:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:203
  /* SIM_SCGC6: ADC0=1 */
  SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    5a5e:	492b      	ldr	r1, [pc, #172]	; (5b0c <AdcLdd2_Init+0xcc>)
    5a60:	4b2a      	ldr	r3, [pc, #168]	; (5b0c <AdcLdd2_Init+0xcc>)
    5a62:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5a66:	331c      	adds	r3, #28
    5a68:	681b      	ldr	r3, [r3, #0]
    5a6a:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
    5a6e:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5a72:	331c      	adds	r3, #28
    5a74:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:206
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    5a76:	4925      	ldr	r1, [pc, #148]	; (5b0c <AdcLdd2_Init+0xcc>)
    5a78:	4b24      	ldr	r3, [pc, #144]	; (5b0c <AdcLdd2_Init+0xcc>)
    5a7a:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5a7e:	3318      	adds	r3, #24
    5a80:	681b      	ldr	r3, [r3, #0]
    5a82:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    5a86:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5a8a:	3318      	adds	r3, #24
    5a8c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:208
  /* SIM_SCGC6: ADC0=1 */
  SIM_SCGC6 |= SIM_SCGC6_ADC0_MASK;
    5a8e:	491f      	ldr	r1, [pc, #124]	; (5b0c <AdcLdd2_Init+0xcc>)
    5a90:	4b1e      	ldr	r3, [pc, #120]	; (5b0c <AdcLdd2_Init+0xcc>)
    5a92:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5a96:	331c      	adds	r3, #28
    5a98:	681b      	ldr	r3, [r3, #0]
    5a9a:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
    5a9e:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5aa2:	331c      	adds	r3, #28
    5aa4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:211
  /* Initialization of pin routing */
  /* PORTE_PCR24: ISF=0,MUX=0 */
  PORTE_PCR24 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    5aa6:	4a1a      	ldr	r2, [pc, #104]	; (5b10 <AdcLdd2_Init+0xd0>)
    5aa8:	4b19      	ldr	r3, [pc, #100]	; (5b10 <AdcLdd2_Init+0xd0>)
    5aaa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    5aac:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5ab0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5ab4:	6613      	str	r3, [r2, #96]	; 0x60
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:213
  /* PORTE_PCR25: ISF=0,MUX=0 */
  PORTE_PCR25 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    5ab6:	4a16      	ldr	r2, [pc, #88]	; (5b10 <AdcLdd2_Init+0xd0>)
    5ab8:	4b15      	ldr	r3, [pc, #84]	; (5b10 <AdcLdd2_Init+0xd0>)
    5aba:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    5abc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5ac0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5ac4:	6653      	str	r3, [r2, #100]	; 0x64
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:215
  /* ADC0_SC2: REFSEL=0 */
  ADC0_SC2 &= (uint32_t)~(uint32_t)(ADC_SC2_REFSEL(0x03));
    5ac6:	4b13      	ldr	r3, [pc, #76]	; (5b14 <AdcLdd2_Init+0xd4>)
    5ac8:	4a12      	ldr	r2, [pc, #72]	; (5b14 <AdcLdd2_Init+0xd4>)
    5aca:	6a12      	ldr	r2, [r2, #32]
    5acc:	f022 0203 	bic.w	r2, r2, #3
    5ad0:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:217
  /* ADC0_CFG1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADLPC=0,ADIV=2,ADLSMP=0,MODE=3,ADICLK=0 */
  ADC0_CFG1 = ADC_CFG1_ADIV(0x02) |
    5ad2:	4b10      	ldr	r3, [pc, #64]	; (5b14 <AdcLdd2_Init+0xd4>)
    5ad4:	224c      	movs	r2, #76	; 0x4c
    5ad6:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:222
              ADC_CFG1_MODE(0x03) |
              ADC_CFG1_ADICLK(0x00);

  /* ADC0_CFG2: MUXSEL=0,ADACKEN=0,ADHSC=1,ADLSTS=0 */
  ADC0_CFG2 = (uint32_t)((ADC0_CFG2 & (uint32_t)~(uint32_t)(
    5ad8:	4b0e      	ldr	r3, [pc, #56]	; (5b14 <AdcLdd2_Init+0xd4>)
    5ada:	4a0e      	ldr	r2, [pc, #56]	; (5b14 <AdcLdd2_Init+0xd4>)
    5adc:	68d2      	ldr	r2, [r2, #12]
    5ade:	f022 021f 	bic.w	r2, r2, #31
    5ae2:	f042 0204 	orr.w	r2, r2, #4
    5ae6:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:230
               ADC_CFG2_ADLSTS(0x03)
              )) | (uint32_t)(
               ADC_CFG2_ADHSC_MASK
              ));
  /* ADC0_SC2: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADACT=0,ADTRG=0,ACFE=0,ACFGT=0,ACREN=0,DMAEN=0,REFSEL=0 */
  ADC0_SC2 = ADC_SC2_REFSEL(0x00);
    5ae8:	4b0a      	ldr	r3, [pc, #40]	; (5b14 <AdcLdd2_Init+0xd4>)
    5aea:	2200      	movs	r2, #0
    5aec:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:232
  /* ADC0_SC3: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CAL=0,CALF=1,??=0,??=0,ADCO=0,AVGE=0,AVGS=0 */
  ADC0_SC3 = (ADC_SC3_CALF_MASK | ADC_SC3_AVGS(0x00));
    5aee:	4b09      	ldr	r3, [pc, #36]	; (5b14 <AdcLdd2_Init+0xd4>)
    5af0:	2240      	movs	r2, #64	; 0x40
    5af2:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:234
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_AdcLdd2_ID,DeviceDataPrv);
    5af4:	4b08      	ldr	r3, [pc, #32]	; (5b18 <AdcLdd2_Init+0xd8>)
    5af6:	68fa      	ldr	r2, [r7, #12]
    5af8:	649a      	str	r2, [r3, #72]	; 0x48
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:235
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the data data structure */
    5afa:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:236
}
    5afc:	4618      	mov	r0, r3
    5afe:	3714      	adds	r7, #20
    5b00:	46bd      	mov	sp, r7
    5b02:	f85d 7b04 	ldr.w	r7, [sp], #4
    5b06:	4770      	bx	lr
    5b08:	2000039c 	.word	0x2000039c
    5b0c:	40047000 	.word	0x40047000
    5b10:	4004d000 	.word	0x4004d000
    5b14:	4003b000 	.word	0x4003b000
    5b18:	20000480 	.word	0x20000480

00005b1c <AdcLdd2_Enable>:
AdcLdd2_Enable():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:261
**                           ERR_SPEED - The device doesn't work in the
**                           active clock configuration
*/
/* ===================================================================*/
LDD_TError AdcLdd2_Enable(LDD_TDeviceData *DeviceDataPtr)
{
    5b1c:	b480      	push	{r7}
    5b1e:	b083      	sub	sp, #12
    5b20:	af00      	add	r7, sp, #0
    5b22:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:262
  ((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->EnUser = TRUE; /* Set the flag "device enabled" */
    5b24:	687b      	ldr	r3, [r7, #4]
    5b26:	2201      	movs	r2, #1
    5b28:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:263
  return ERR_OK;                       /* If yes then set the flag "device enabled" */
    5b2a:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:264
}
    5b2c:	4618      	mov	r0, r3
    5b2e:	370c      	adds	r7, #12
    5b30:	46bd      	mov	sp, r7
    5b32:	f85d 7b04 	ldr.w	r7, [sp], #4
    5b36:	4770      	bx	lr

00005b38 <AdcLdd2_Disable>:
AdcLdd2_Disable():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:293
**                           ERR_SPEED - The device doesn't work in the
**                           active clock configuration
*/
/* ===================================================================*/
LDD_TError AdcLdd2_Disable(LDD_TDeviceData *DeviceDataPtr)
{
    5b38:	b480      	push	{r7}
    5b3a:	b083      	sub	sp, #12
    5b3c:	af00      	add	r7, sp, #0
    5b3e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:294
  ((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->EnUser = FALSE; /* Set the flag "device disabled" */
    5b40:	687b      	ldr	r3, [r7, #4]
    5b42:	2200      	movs	r2, #0
    5b44:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:295
  ADC_PDD_SetConversionTriggerType(ADC0_BASE_PTR, ADC_PDD_SW_TRIGGER); /* Select SW triggering */
    5b46:	4b08      	ldr	r3, [pc, #32]	; (5b68 <AdcLdd2_Disable+0x30>)
    5b48:	4a07      	ldr	r2, [pc, #28]	; (5b68 <AdcLdd2_Disable+0x30>)
    5b4a:	6a12      	ldr	r2, [r2, #32]
    5b4c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    5b50:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:296
  ADC_PDD_WriteStatusControl1Reg(ADC0_BASE_PTR, 0U, 0x1FU); /* Disable device */
    5b52:	4b05      	ldr	r3, [pc, #20]	; (5b68 <AdcLdd2_Disable+0x30>)
    5b54:	221f      	movs	r2, #31
    5b56:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:297
  return ERR_OK;                       /* If yes then set the flag "device enabled" */
    5b58:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:298
}
    5b5a:	4618      	mov	r0, r3
    5b5c:	370c      	adds	r7, #12
    5b5e:	46bd      	mov	sp, r7
    5b60:	f85d 7b04 	ldr.w	r7, [sp], #4
    5b64:	4770      	bx	lr
    5b66:	bf00      	nop
    5b68:	4003b000 	.word	0x4003b000

00005b6c <AdcLdd2_StartSingleMeasurement>:
AdcLdd2_StartSingleMeasurement():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:339
**                           ERR_DISABLED - Component is disabled
**                           ERR_BUSY - A measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd2_StartSingleMeasurement(LDD_TDeviceData *DeviceDataPtr)
{
    5b6c:	b480      	push	{r7}
    5b6e:	b083      	sub	sp, #12
    5b70:	af00      	add	r7, sp, #0
    5b72:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:342
  /* Device state test - this test can be disabled by setting the "Ignore enable test"
     property to the "yes" value in the "Configuration inspector" */
  if (!((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->EnUser) { /* Is the device disabled by user? */
    5b74:	687b      	ldr	r3, [r7, #4]
    5b76:	785b      	ldrb	r3, [r3, #1]
    5b78:	2b00      	cmp	r3, #0
    5b7a:	d101      	bne.n	5b80 <AdcLdd2_StartSingleMeasurement+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:343
    return ERR_DISABLED;               /* If yes then error */
    5b7c:	2307      	movs	r3, #7
    5b7e:	e018      	b.n	5bb2 <AdcLdd2_StartSingleMeasurement+0x46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:345
  }
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
    5b80:	4b0f      	ldr	r3, [pc, #60]	; (5bc0 <AdcLdd2_StartSingleMeasurement+0x54>)
    5b82:	6a1b      	ldr	r3, [r3, #32]
    5b84:	f003 0380 	and.w	r3, r3, #128	; 0x80
    5b88:	2b00      	cmp	r3, #0
    5b8a:	d001      	beq.n	5b90 <AdcLdd2_StartSingleMeasurement+0x24>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:346
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    5b8c:	2308      	movs	r3, #8
    5b8e:	e010      	b.n	5bb2 <AdcLdd2_StartSingleMeasurement+0x46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:348
  }
  ADC_PDD_SetContinuousMode(ADC0_BASE_PTR, ADC_PDD_ONE_CONVERSION); /* Set one conversion mode */
    5b90:	4b0b      	ldr	r3, [pc, #44]	; (5bc0 <AdcLdd2_StartSingleMeasurement+0x54>)
    5b92:	4a0b      	ldr	r2, [pc, #44]	; (5bc0 <AdcLdd2_StartSingleMeasurement+0x54>)
    5b94:	6a52      	ldr	r2, [r2, #36]	; 0x24
    5b96:	f022 0248 	bic.w	r2, r2, #72	; 0x48
    5b9a:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:349
  ADC_PDD_SetConversionTriggerType(ADC0_BASE_PTR, ADC_PDD_SW_TRIGGER); /* Select SW triggering */
    5b9c:	4b08      	ldr	r3, [pc, #32]	; (5bc0 <AdcLdd2_StartSingleMeasurement+0x54>)
    5b9e:	4a08      	ldr	r2, [pc, #32]	; (5bc0 <AdcLdd2_StartSingleMeasurement+0x54>)
    5ba0:	6a12      	ldr	r2, [r2, #32]
    5ba2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    5ba6:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:350
  ADC_PDD_WriteStatusControl1Reg(ADC0_BASE_PTR, 0U, ((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->FirstSample); /* Set sample 0 and start conversion */
    5ba8:	4b05      	ldr	r3, [pc, #20]	; (5bc0 <AdcLdd2_StartSingleMeasurement+0x54>)
    5baa:	687a      	ldr	r2, [r7, #4]
    5bac:	7892      	ldrb	r2, [r2, #2]
    5bae:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:351
  return ERR_OK;                       /* OK */
    5bb0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:352
}
    5bb2:	4618      	mov	r0, r3
    5bb4:	370c      	adds	r7, #12
    5bb6:	46bd      	mov	sp, r7
    5bb8:	f85d 7b04 	ldr.w	r7, [sp], #4
    5bbc:	4770      	bx	lr
    5bbe:	bf00      	nop
    5bc0:	4003b000 	.word	0x4003b000

00005bc4 <AdcLdd2_CreateSampleGroup>:
AdcLdd2_CreateSampleGroup():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:396
**                           variable value is out of range
**                           ERR_BUSY - Measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd2_CreateSampleGroup(LDD_TDeviceData *DeviceDataPtr, LDD_ADC_TSample *SampleGroupPtr, uint8_t SampleCount)
{
    5bc4:	b480      	push	{r7}
    5bc6:	b087      	sub	sp, #28
    5bc8:	af00      	add	r7, sp, #0
    5bca:	60f8      	str	r0, [r7, #12]
    5bcc:	60b9      	str	r1, [r7, #8]
    5bce:	4613      	mov	r3, r2
    5bd0:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:397
  AdcLdd2_TDeviceDataPtr DeviceDataPrv = (AdcLdd2_TDeviceDataPtr)DeviceDataPtr;
    5bd2:	68fb      	ldr	r3, [r7, #12]
    5bd4:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:401

  /* Device state test - this test can be disabled by setting the "Ignore enable test"
     property to the "yes" value in the "Configuration inspector" */
  if (!((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->EnUser) { /* Is the device disabled by user? */
    5bd6:	68fb      	ldr	r3, [r7, #12]
    5bd8:	785b      	ldrb	r3, [r3, #1]
    5bda:	2b00      	cmp	r3, #0
    5bdc:	d101      	bne.n	5be2 <AdcLdd2_CreateSampleGroup+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:402
    return ERR_DISABLED;               /* If yes then error */
    5bde:	2307      	movs	r3, #7
    5be0:	e01f      	b.n	5c22 <AdcLdd2_CreateSampleGroup+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:406
  }
  /* Sample count test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((SampleCount > AdcLdd2_MAX_HW_SAMPLE_COUNT) || (SampleCount == 0U)) { /* Is number of sample greater then supported by the HW? */
    5be2:	79fb      	ldrb	r3, [r7, #7]
    5be4:	2b01      	cmp	r3, #1
    5be6:	d802      	bhi.n	5bee <AdcLdd2_CreateSampleGroup+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:406 (discriminator 1)
    5be8:	79fb      	ldrb	r3, [r7, #7]
    5bea:	2b00      	cmp	r3, #0
    5bec:	d101      	bne.n	5bf2 <AdcLdd2_CreateSampleGroup+0x2e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:407
    return ERR_PARAM_SAMPLE_COUNT;     /* Yes, return ERR_PARAM_SAMPLE_COUNT */
    5bee:	2396      	movs	r3, #150	; 0x96
    5bf0:	e017      	b.n	5c22 <AdcLdd2_CreateSampleGroup+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:409
  }
  if (ADC_PDD_GetConversionActiveFlag(ADC0_BASE_PTR) != 0U) { /* Last measurement still pending? */
    5bf2:	4b0f      	ldr	r3, [pc, #60]	; (5c30 <AdcLdd2_CreateSampleGroup+0x6c>)
    5bf4:	6a1b      	ldr	r3, [r3, #32]
    5bf6:	f003 0380 	and.w	r3, r3, #128	; 0x80
    5bfa:	2b00      	cmp	r3, #0
    5bfc:	d001      	beq.n	5c02 <AdcLdd2_CreateSampleGroup+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:410
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    5bfe:	2308      	movs	r3, #8
    5c00:	e00f      	b.n	5c22 <AdcLdd2_CreateSampleGroup+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:412
  }
  DeviceDataPrv->SampleCount = SampleCount; /* Remember sample count */
    5c02:	697b      	ldr	r3, [r7, #20]
    5c04:	79fa      	ldrb	r2, [r7, #7]
    5c06:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:415
  /* Channel index test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (SampleGroupPtr[0].ChannelIdx >= AdcLdd2_CHANNEL_COUNT) { /* Is channel index out of range? */
    5c08:	68bb      	ldr	r3, [r7, #8]
    5c0a:	781b      	ldrb	r3, [r3, #0]
    5c0c:	2b04      	cmp	r3, #4
    5c0e:	d901      	bls.n	5c14 <AdcLdd2_CreateSampleGroup+0x50>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:416
    return ERR_PARAM_INDEX;            /* Yes, return ERR_PARAM_INDEX */
    5c10:	2382      	movs	r3, #130	; 0x82
    5c12:	e006      	b.n	5c22 <AdcLdd2_CreateSampleGroup+0x5e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:418
  }
  DeviceDataPrv->FirstSample = ChannelToPin[SampleGroupPtr[0].ChannelIdx]; /* Remember first sample */
    5c14:	68bb      	ldr	r3, [r7, #8]
    5c16:	781b      	ldrb	r3, [r3, #0]
    5c18:	4a06      	ldr	r2, [pc, #24]	; (5c34 <AdcLdd2_CreateSampleGroup+0x70>)
    5c1a:	5cd2      	ldrb	r2, [r2, r3]
    5c1c:	697b      	ldr	r3, [r7, #20]
    5c1e:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:419
  return ERR_OK;                       /* OK */
    5c20:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:420
}
    5c22:	4618      	mov	r0, r3
    5c24:	371c      	adds	r7, #28
    5c26:	46bd      	mov	sp, r7
    5c28:	f85d 7b04 	ldr.w	r7, [sp], #4
    5c2c:	4770      	bx	lr
    5c2e:	bf00      	nop
    5c30:	4003b000 	.word	0x4003b000
    5c34:	0000decc 	.word	0x0000decc

00005c38 <AdcLdd2_GetMeasuredValues>:
AdcLdd2_GetMeasuredValues():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:455
**                           active clock configuration
**                           ERR_DISABLED - Component is disabled
*/
/* ===================================================================*/
LDD_TError AdcLdd2_GetMeasuredValues(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr)
{
    5c38:	b480      	push	{r7}
    5c3a:	b085      	sub	sp, #20
    5c3c:	af00      	add	r7, sp, #0
    5c3e:	6078      	str	r0, [r7, #4]
    5c40:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:457
  uint8_t Sample;
  AdcLdd2_TResultData *pBuffer = (AdcLdd2_TResultData *)BufferPtr;
    5c42:	683b      	ldr	r3, [r7, #0]
    5c44:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:461

  /* Device state test - this test can be disabled by setting the "Ignore enable test"
     property to the "yes" value in the "Configuration inspector" */
  if (!((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->EnUser) { /* Is the device disabled by user? */
    5c46:	687b      	ldr	r3, [r7, #4]
    5c48:	785b      	ldrb	r3, [r3, #1]
    5c4a:	2b00      	cmp	r3, #0
    5c4c:	d101      	bne.n	5c52 <AdcLdd2_GetMeasuredValues+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:462
    return ERR_DISABLED;               /* If yes then error */
    5c4e:	2307      	movs	r3, #7
    5c50:	e016      	b.n	5c80 <AdcLdd2_GetMeasuredValues+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:466
  }
  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    5c52:	2300      	movs	r3, #0
    5c54:	73fb      	strb	r3, [r7, #15]
    5c56:	e00d      	b.n	5c74 <AdcLdd2_GetMeasuredValues+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:467 (discriminator 2)
    pBuffer[Sample] =(uint16_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
    5c58:	7bfb      	ldrb	r3, [r7, #15]
    5c5a:	005b      	lsls	r3, r3, #1
    5c5c:	68ba      	ldr	r2, [r7, #8]
    5c5e:	4413      	add	r3, r2
    5c60:	4a0a      	ldr	r2, [pc, #40]	; (5c8c <AdcLdd2_GetMeasuredValues+0x54>)
    5c62:	7bf9      	ldrb	r1, [r7, #15]
    5c64:	3104      	adds	r1, #4
    5c66:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
    5c6a:	b292      	uxth	r2, r2
    5c6c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:466 (discriminator 2)
  if (!((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->EnUser) { /* Is the device disabled by user? */
    return ERR_DISABLED;               /* If yes then error */
  }
  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd2_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    5c6e:	7bfb      	ldrb	r3, [r7, #15]
    5c70:	3301      	adds	r3, #1
    5c72:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:466 (discriminator 1)
    5c74:	687b      	ldr	r3, [r7, #4]
    5c76:	781b      	ldrb	r3, [r3, #0]
    5c78:	7bfa      	ldrb	r2, [r7, #15]
    5c7a:	429a      	cmp	r2, r3
    5c7c:	d3ec      	bcc.n	5c58 <AdcLdd2_GetMeasuredValues+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:469
    pBuffer[Sample] =(uint16_t)(ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, Sample));
  }
  return ERR_OK;                       /* OK */
    5c7e:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:470
}
    5c80:	4618      	mov	r0, r3
    5c82:	3714      	adds	r7, #20
    5c84:	46bd      	mov	sp, r7
    5c86:	f85d 7b04 	ldr.w	r7, [sp], #4
    5c8a:	4770      	bx	lr
    5c8c:	4003b000 	.word	0x4003b000

00005c90 <AdcLdd2_GetMeasurementCompleteStatus>:
AdcLdd2_GetMeasurementCompleteStatus():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:493
**                           true - Measurement is done
**                           false - Measurement is in progress
*/
/* ===================================================================*/
bool AdcLdd2_GetMeasurementCompleteStatus(LDD_TDeviceData *DeviceDataPtr)
{
    5c90:	b480      	push	{r7}
    5c92:	b085      	sub	sp, #20
    5c94:	af00      	add	r7, sp, #0
    5c96:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:496
  uint32_t Status;
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  Status = ADC_PDD_GetConversionCompleteFlag(ADC0_BASE_PTR, 0U); /* Get conversion complete flag from HW */
    5c98:	4b09      	ldr	r3, [pc, #36]	; (5cc0 <AdcLdd2_GetMeasurementCompleteStatus+0x30>)
    5c9a:	681b      	ldr	r3, [r3, #0]
    5c9c:	f003 0380 	and.w	r3, r3, #128	; 0x80
    5ca0:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:497
  if (Status) {
    5ca2:	68fb      	ldr	r3, [r7, #12]
    5ca4:	2b00      	cmp	r3, #0
    5ca6:	d003      	beq.n	5cb0 <AdcLdd2_GetMeasurementCompleteStatus+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:498
    (void)ADC_PDD_GetResultValueRaw(ADC0_BASE_PTR, 0U); /* Clear conversion complete flag */
    5ca8:	4b05      	ldr	r3, [pc, #20]	; (5cc0 <AdcLdd2_GetMeasurementCompleteStatus+0x30>)
    5caa:	691b      	ldr	r3, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:499
    return (bool)(TRUE);               /* Return TRUE if measurement has been done */
    5cac:	2301      	movs	r3, #1
    5cae:	e000      	b.n	5cb2 <AdcLdd2_GetMeasurementCompleteStatus+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:501
  }
  return (bool)(FALSE);                /* Return FALSE if measurement has not been done */
    5cb0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd2.c:502
}
    5cb2:	4618      	mov	r0, r3
    5cb4:	3714      	adds	r7, #20
    5cb6:	46bd      	mov	sp, r7
    5cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
    5cbc:	4770      	bx	lr
    5cbe:	bf00      	nop
    5cc0:	4003b000 	.word	0x4003b000

00005cc4 <AdcLdd3_Init>:
AdcLdd3_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:190
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* AdcLdd3_Init(LDD_TUserData *UserDataPtr)
{
    5cc4:	b480      	push	{r7}
    5cc6:	b085      	sub	sp, #20
    5cc8:	af00      	add	r7, sp, #0
    5cca:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:195
  /* Allocate LDD device structure */
  AdcLdd3_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    5ccc:	4b2e      	ldr	r3, [pc, #184]	; (5d88 <AdcLdd3_Init+0xc4>)
    5cce:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:196
  DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
    5cd0:	68fb      	ldr	r3, [r7, #12]
    5cd2:	687a      	ldr	r2, [r7, #4]
    5cd4:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:197
  DeviceDataPrv->SampleCount = 0U;     /* Initializing SampleCount for right access of some methods to SC1n registers before first conversion is done */
    5cd6:	68fb      	ldr	r3, [r7, #12]
    5cd8:	2200      	movs	r2, #0
    5cda:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:199
  /* SIM_SCGC3: ADC1=1 */
  SIM_SCGC3 |= SIM_SCGC3_ADC1_MASK;
    5cdc:	492b      	ldr	r1, [pc, #172]	; (5d8c <AdcLdd3_Init+0xc8>)
    5cde:	4b2b      	ldr	r3, [pc, #172]	; (5d8c <AdcLdd3_Init+0xc8>)
    5ce0:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5ce4:	3310      	adds	r3, #16
    5ce6:	681b      	ldr	r3, [r3, #0]
    5ce8:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
    5cec:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5cf0:	3310      	adds	r3, #16
    5cf2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:202
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    5cf4:	4925      	ldr	r1, [pc, #148]	; (5d8c <AdcLdd3_Init+0xc8>)
    5cf6:	4b25      	ldr	r3, [pc, #148]	; (5d8c <AdcLdd3_Init+0xc8>)
    5cf8:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5cfc:	3318      	adds	r3, #24
    5cfe:	681b      	ldr	r3, [r3, #0]
    5d00:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    5d04:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5d08:	3318      	adds	r3, #24
    5d0a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:204
  /* SIM_SCGC3: ADC1=1 */
  SIM_SCGC3 |= SIM_SCGC3_ADC1_MASK;
    5d0c:	491f      	ldr	r1, [pc, #124]	; (5d8c <AdcLdd3_Init+0xc8>)
    5d0e:	4b1f      	ldr	r3, [pc, #124]	; (5d8c <AdcLdd3_Init+0xc8>)
    5d10:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5d14:	3310      	adds	r3, #16
    5d16:	681b      	ldr	r3, [r3, #0]
    5d18:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
    5d1c:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5d20:	3310      	adds	r3, #16
    5d22:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:207
  /* Initialization of pin routing */
  /* PORTB_PCR6: ISF=0,MUX=0 */
  PORTB_PCR6 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    5d24:	4a1a      	ldr	r2, [pc, #104]	; (5d90 <AdcLdd3_Init+0xcc>)
    5d26:	4b1a      	ldr	r3, [pc, #104]	; (5d90 <AdcLdd3_Init+0xcc>)
    5d28:	699b      	ldr	r3, [r3, #24]
    5d2a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5d2e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5d32:	6193      	str	r3, [r2, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:209
  /* PORTB_PCR7: ISF=0,MUX=0 */
  PORTB_PCR7 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
    5d34:	4a16      	ldr	r2, [pc, #88]	; (5d90 <AdcLdd3_Init+0xcc>)
    5d36:	4b16      	ldr	r3, [pc, #88]	; (5d90 <AdcLdd3_Init+0xcc>)
    5d38:	69db      	ldr	r3, [r3, #28]
    5d3a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5d3e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5d42:	61d3      	str	r3, [r2, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:211
  /* ADC1_SC2: REFSEL=0 */
  ADC1_SC2 &= (uint32_t)~(uint32_t)(ADC_SC2_REFSEL(0x03));
    5d44:	4b13      	ldr	r3, [pc, #76]	; (5d94 <AdcLdd3_Init+0xd0>)
    5d46:	4a13      	ldr	r2, [pc, #76]	; (5d94 <AdcLdd3_Init+0xd0>)
    5d48:	6a12      	ldr	r2, [r2, #32]
    5d4a:	f022 0203 	bic.w	r2, r2, #3
    5d4e:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:213
  /* ADC1_CFG1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADLPC=0,ADIV=2,ADLSMP=0,MODE=3,ADICLK=0 */
  ADC1_CFG1 = ADC_CFG1_ADIV(0x02) |
    5d50:	4b10      	ldr	r3, [pc, #64]	; (5d94 <AdcLdd3_Init+0xd0>)
    5d52:	224c      	movs	r2, #76	; 0x4c
    5d54:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:218
              ADC_CFG1_MODE(0x03) |
              ADC_CFG1_ADICLK(0x00);

  /* ADC1_CFG2: MUXSEL=0,ADACKEN=0,ADHSC=1,ADLSTS=0 */
  ADC1_CFG2 = (uint32_t)((ADC1_CFG2 & (uint32_t)~(uint32_t)(
    5d56:	4b0f      	ldr	r3, [pc, #60]	; (5d94 <AdcLdd3_Init+0xd0>)
    5d58:	4a0e      	ldr	r2, [pc, #56]	; (5d94 <AdcLdd3_Init+0xd0>)
    5d5a:	68d2      	ldr	r2, [r2, #12]
    5d5c:	f022 021f 	bic.w	r2, r2, #31
    5d60:	f042 0204 	orr.w	r2, r2, #4
    5d64:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:226
               ADC_CFG2_ADLSTS(0x03)
              )) | (uint32_t)(
               ADC_CFG2_ADHSC_MASK
              ));
  /* ADC1_SC2: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,ADACT=0,ADTRG=0,ACFE=0,ACFGT=0,ACREN=0,DMAEN=0,REFSEL=0 */
  ADC1_SC2 = ADC_SC2_REFSEL(0x00);
    5d66:	4b0b      	ldr	r3, [pc, #44]	; (5d94 <AdcLdd3_Init+0xd0>)
    5d68:	2200      	movs	r2, #0
    5d6a:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:228
  /* ADC1_SC3: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CAL=0,CALF=1,??=0,??=0,ADCO=0,AVGE=0,AVGS=0 */
  ADC1_SC3 = (ADC_SC3_CALF_MASK | ADC_SC3_AVGS(0x00));
    5d6c:	4b09      	ldr	r3, [pc, #36]	; (5d94 <AdcLdd3_Init+0xd0>)
    5d6e:	2240      	movs	r2, #64	; 0x40
    5d70:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:230
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_AdcLdd3_ID,DeviceDataPrv);
    5d72:	4b09      	ldr	r3, [pc, #36]	; (5d98 <AdcLdd3_Init+0xd4>)
    5d74:	68fa      	ldr	r2, [r7, #12]
    5d76:	65da      	str	r2, [r3, #92]	; 0x5c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:231
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the data data structure */
    5d78:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:232
}
    5d7a:	4618      	mov	r0, r3
    5d7c:	3714      	adds	r7, #20
    5d7e:	46bd      	mov	sp, r7
    5d80:	f85d 7b04 	ldr.w	r7, [sp], #4
    5d84:	4770      	bx	lr
    5d86:	bf00      	nop
    5d88:	200003a4 	.word	0x200003a4
    5d8c:	40047000 	.word	0x40047000
    5d90:	4004a000 	.word	0x4004a000
    5d94:	400bb000 	.word	0x400bb000
    5d98:	20000480 	.word	0x20000480

00005d9c <AdcLdd3_StartSingleMeasurement>:
AdcLdd3_StartSingleMeasurement():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:273
**                           ERR_DISABLED - Component is disabled
**                           ERR_BUSY - A measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd3_StartSingleMeasurement(LDD_TDeviceData *DeviceDataPtr)
{
    5d9c:	b480      	push	{r7}
    5d9e:	b083      	sub	sp, #12
    5da0:	af00      	add	r7, sp, #0
    5da2:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:275
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (ADC_PDD_GetConversionActiveFlag(ADC1_BASE_PTR) != 0U) { /* Last measurement still pending? */
    5da4:	4b0f      	ldr	r3, [pc, #60]	; (5de4 <AdcLdd3_StartSingleMeasurement+0x48>)
    5da6:	6a1b      	ldr	r3, [r3, #32]
    5da8:	f003 0380 	and.w	r3, r3, #128	; 0x80
    5dac:	2b00      	cmp	r3, #0
    5dae:	d001      	beq.n	5db4 <AdcLdd3_StartSingleMeasurement+0x18>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:276
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    5db0:	2308      	movs	r3, #8
    5db2:	e010      	b.n	5dd6 <AdcLdd3_StartSingleMeasurement+0x3a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:278
  }
  ADC_PDD_SetContinuousMode(ADC1_BASE_PTR, ADC_PDD_ONE_CONVERSION); /* Set one conversion mode */
    5db4:	4b0b      	ldr	r3, [pc, #44]	; (5de4 <AdcLdd3_StartSingleMeasurement+0x48>)
    5db6:	4a0b      	ldr	r2, [pc, #44]	; (5de4 <AdcLdd3_StartSingleMeasurement+0x48>)
    5db8:	6a52      	ldr	r2, [r2, #36]	; 0x24
    5dba:	f022 0248 	bic.w	r2, r2, #72	; 0x48
    5dbe:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:279
  ADC_PDD_SetConversionTriggerType(ADC1_BASE_PTR, ADC_PDD_SW_TRIGGER); /* Select SW triggering */
    5dc0:	4b08      	ldr	r3, [pc, #32]	; (5de4 <AdcLdd3_StartSingleMeasurement+0x48>)
    5dc2:	4a08      	ldr	r2, [pc, #32]	; (5de4 <AdcLdd3_StartSingleMeasurement+0x48>)
    5dc4:	6a12      	ldr	r2, [r2, #32]
    5dc6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    5dca:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:280
  ADC_PDD_WriteStatusControl1Reg(ADC1_BASE_PTR, 0U, ((AdcLdd3_TDeviceDataPtr)DeviceDataPtr)->FirstSample); /* Set sample 0 and start conversion */
    5dcc:	4b05      	ldr	r3, [pc, #20]	; (5de4 <AdcLdd3_StartSingleMeasurement+0x48>)
    5dce:	687a      	ldr	r2, [r7, #4]
    5dd0:	7852      	ldrb	r2, [r2, #1]
    5dd2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:281
  return ERR_OK;                       /* OK */
    5dd4:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:282
}
    5dd6:	4618      	mov	r0, r3
    5dd8:	370c      	adds	r7, #12
    5dda:	46bd      	mov	sp, r7
    5ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
    5de0:	4770      	bx	lr
    5de2:	bf00      	nop
    5de4:	400bb000 	.word	0x400bb000

00005de8 <AdcLdd3_CreateSampleGroup>:
AdcLdd3_CreateSampleGroup():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:326
**                           variable value is out of range
**                           ERR_BUSY - Measurement is in progress 
*/
/* ===================================================================*/
LDD_TError AdcLdd3_CreateSampleGroup(LDD_TDeviceData *DeviceDataPtr, LDD_ADC_TSample *SampleGroupPtr, uint8_t SampleCount)
{
    5de8:	b480      	push	{r7}
    5dea:	b087      	sub	sp, #28
    5dec:	af00      	add	r7, sp, #0
    5dee:	60f8      	str	r0, [r7, #12]
    5df0:	60b9      	str	r1, [r7, #8]
    5df2:	4613      	mov	r3, r2
    5df4:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:327
  AdcLdd3_TDeviceDataPtr DeviceDataPrv = (AdcLdd3_TDeviceDataPtr)DeviceDataPtr;
    5df6:	68fb      	ldr	r3, [r7, #12]
    5df8:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:331

  /* Sample count test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((SampleCount > AdcLdd3_MAX_HW_SAMPLE_COUNT) || (SampleCount == 0U)) { /* Is number of sample greater then supported by the HW? */
    5dfa:	79fb      	ldrb	r3, [r7, #7]
    5dfc:	2b01      	cmp	r3, #1
    5dfe:	d802      	bhi.n	5e06 <AdcLdd3_CreateSampleGroup+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:331 (discriminator 1)
    5e00:	79fb      	ldrb	r3, [r7, #7]
    5e02:	2b00      	cmp	r3, #0
    5e04:	d101      	bne.n	5e0a <AdcLdd3_CreateSampleGroup+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:332
    return ERR_PARAM_SAMPLE_COUNT;     /* Yes, return ERR_PARAM_SAMPLE_COUNT */
    5e06:	2396      	movs	r3, #150	; 0x96
    5e08:	e017      	b.n	5e3a <AdcLdd3_CreateSampleGroup+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:334
  }
  if (ADC_PDD_GetConversionActiveFlag(ADC1_BASE_PTR) != 0U) { /* Last measurement still pending? */
    5e0a:	4b0f      	ldr	r3, [pc, #60]	; (5e48 <AdcLdd3_CreateSampleGroup+0x60>)
    5e0c:	6a1b      	ldr	r3, [r3, #32]
    5e0e:	f003 0380 	and.w	r3, r3, #128	; 0x80
    5e12:	2b00      	cmp	r3, #0
    5e14:	d001      	beq.n	5e1a <AdcLdd3_CreateSampleGroup+0x32>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:335
    return ERR_BUSY;                   /* Yes, return ERR_BUSY */
    5e16:	2308      	movs	r3, #8
    5e18:	e00f      	b.n	5e3a <AdcLdd3_CreateSampleGroup+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:337
  }
  DeviceDataPrv->SampleCount = SampleCount; /* Remember sample count */
    5e1a:	697b      	ldr	r3, [r7, #20]
    5e1c:	79fa      	ldrb	r2, [r7, #7]
    5e1e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:340
  /* Channel index test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (SampleGroupPtr[0].ChannelIdx >= AdcLdd3_CHANNEL_COUNT) { /* Is channel index out of range? */
    5e20:	68bb      	ldr	r3, [r7, #8]
    5e22:	781b      	ldrb	r3, [r3, #0]
    5e24:	2b04      	cmp	r3, #4
    5e26:	d901      	bls.n	5e2c <AdcLdd3_CreateSampleGroup+0x44>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:341
    return ERR_PARAM_INDEX;            /* Yes, return ERR_PARAM_INDEX */
    5e28:	2382      	movs	r3, #130	; 0x82
    5e2a:	e006      	b.n	5e3a <AdcLdd3_CreateSampleGroup+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:343
  }
  DeviceDataPrv->FirstSample = ChannelToPin[SampleGroupPtr[0].ChannelIdx]; /* Remember first sample */
    5e2c:	68bb      	ldr	r3, [r7, #8]
    5e2e:	781b      	ldrb	r3, [r3, #0]
    5e30:	4a06      	ldr	r2, [pc, #24]	; (5e4c <AdcLdd3_CreateSampleGroup+0x64>)
    5e32:	5cd2      	ldrb	r2, [r2, r3]
    5e34:	697b      	ldr	r3, [r7, #20]
    5e36:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:344
  return ERR_OK;                       /* OK */
    5e38:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:345
}
    5e3a:	4618      	mov	r0, r3
    5e3c:	371c      	adds	r7, #28
    5e3e:	46bd      	mov	sp, r7
    5e40:	f85d 7b04 	ldr.w	r7, [sp], #4
    5e44:	4770      	bx	lr
    5e46:	bf00      	nop
    5e48:	400bb000 	.word	0x400bb000
    5e4c:	0000ded4 	.word	0x0000ded4

00005e50 <AdcLdd3_GetMeasuredValues>:
AdcLdd3_GetMeasuredValues():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:380
**                           active clock configuration
**                           ERR_DISABLED - Component is disabled
*/
/* ===================================================================*/
LDD_TError AdcLdd3_GetMeasuredValues(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr)
{
    5e50:	b480      	push	{r7}
    5e52:	b085      	sub	sp, #20
    5e54:	af00      	add	r7, sp, #0
    5e56:	6078      	str	r0, [r7, #4]
    5e58:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:382
  uint8_t Sample;
  AdcLdd3_TResultData *pBuffer = (AdcLdd3_TResultData *)BufferPtr;
    5e5a:	683b      	ldr	r3, [r7, #0]
    5e5c:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:386

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd3_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    5e5e:	2300      	movs	r3, #0
    5e60:	73fb      	strb	r3, [r7, #15]
    5e62:	e00d      	b.n	5e80 <AdcLdd3_GetMeasuredValues+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:387 (discriminator 2)
    pBuffer[Sample] =(uint16_t)(ADC_PDD_GetResultValueRaw(ADC1_BASE_PTR, Sample));
    5e64:	7bfb      	ldrb	r3, [r7, #15]
    5e66:	005b      	lsls	r3, r3, #1
    5e68:	68ba      	ldr	r2, [r7, #8]
    5e6a:	4413      	add	r3, r2
    5e6c:	4a0a      	ldr	r2, [pc, #40]	; (5e98 <AdcLdd3_GetMeasuredValues+0x48>)
    5e6e:	7bf9      	ldrb	r1, [r7, #15]
    5e70:	3104      	adds	r1, #4
    5e72:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
    5e76:	b292      	uxth	r2, r2
    5e78:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:386 (discriminator 2)
  uint8_t Sample;
  AdcLdd3_TResultData *pBuffer = (AdcLdd3_TResultData *)BufferPtr;

  /* Copy values from result registers defined in the active sample
     group to the user supplied buffer */
  for (Sample = 0U; Sample < ((AdcLdd3_TDeviceDataPtr)DeviceDataPtr)->SampleCount; Sample++) {
    5e7a:	7bfb      	ldrb	r3, [r7, #15]
    5e7c:	3301      	adds	r3, #1
    5e7e:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:386 (discriminator 1)
    5e80:	687b      	ldr	r3, [r7, #4]
    5e82:	781b      	ldrb	r3, [r3, #0]
    5e84:	7bfa      	ldrb	r2, [r7, #15]
    5e86:	429a      	cmp	r2, r3
    5e88:	d3ec      	bcc.n	5e64 <AdcLdd3_GetMeasuredValues+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:389
    pBuffer[Sample] =(uint16_t)(ADC_PDD_GetResultValueRaw(ADC1_BASE_PTR, Sample));
  }
  return ERR_OK;                       /* OK */
    5e8a:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:390
}
    5e8c:	4618      	mov	r0, r3
    5e8e:	3714      	adds	r7, #20
    5e90:	46bd      	mov	sp, r7
    5e92:	f85d 7b04 	ldr.w	r7, [sp], #4
    5e96:	4770      	bx	lr
    5e98:	400bb000 	.word	0x400bb000

00005e9c <AdcLdd3_GetMeasurementCompleteStatus>:
AdcLdd3_GetMeasurementCompleteStatus():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:413
**                           true - Measurement is done
**                           false - Measurement is in progress
*/
/* ===================================================================*/
bool AdcLdd3_GetMeasurementCompleteStatus(LDD_TDeviceData *DeviceDataPtr)
{
    5e9c:	b480      	push	{r7}
    5e9e:	b085      	sub	sp, #20
    5ea0:	af00      	add	r7, sp, #0
    5ea2:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:416
  uint32_t Status;
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  Status = ADC_PDD_GetConversionCompleteFlag(ADC1_BASE_PTR, 0U); /* Get conversion complete flag from HW */
    5ea4:	4b09      	ldr	r3, [pc, #36]	; (5ecc <AdcLdd3_GetMeasurementCompleteStatus+0x30>)
    5ea6:	681b      	ldr	r3, [r3, #0]
    5ea8:	f003 0380 	and.w	r3, r3, #128	; 0x80
    5eac:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:417
  if (Status) {
    5eae:	68fb      	ldr	r3, [r7, #12]
    5eb0:	2b00      	cmp	r3, #0
    5eb2:	d003      	beq.n	5ebc <AdcLdd3_GetMeasurementCompleteStatus+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:418
    (void)ADC_PDD_GetResultValueRaw(ADC1_BASE_PTR, 0U); /* Clear conversion complete flag */
    5eb4:	4b05      	ldr	r3, [pc, #20]	; (5ecc <AdcLdd3_GetMeasurementCompleteStatus+0x30>)
    5eb6:	691b      	ldr	r3, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:419
    return (bool)(TRUE);               /* Return TRUE if measurement has been done */
    5eb8:	2301      	movs	r3, #1
    5eba:	e000      	b.n	5ebe <AdcLdd3_GetMeasurementCompleteStatus+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:421
  }
  return (bool)(FALSE);                /* Return FALSE if measurement has not been done */
    5ebc:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/AdcLdd3.c:422
}
    5ebe:	4618      	mov	r0, r3
    5ec0:	3714      	adds	r7, #20
    5ec2:	46bd      	mov	sp, r7
    5ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
    5ec8:	4770      	bx	lr
    5eca:	bf00      	nop
    5ecc:	400bb000 	.word	0x400bb000

00005ed0 <BitIoLdd1_Init>:
BitIoLdd1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd1_Init(LDD_TUserData *UserDataPtr)
{
    5ed0:	b480      	push	{r7}
    5ed2:	b085      	sub	sp, #20
    5ed4:	af00      	add	r7, sp, #0
    5ed6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:126
  /* Allocate device structure */
  BitIoLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    5ed8:	4b18      	ldr	r3, [pc, #96]	; (5f3c <BitIoLdd1_Init+0x6c>)
    5eda:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5edc:	68fb      	ldr	r3, [r7, #12]
    5ede:	687a      	ldr	r2, [r7, #4]
    5ee0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTC=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    5ee2:	4917      	ldr	r1, [pc, #92]	; (5f40 <BitIoLdd1_Init+0x70>)
    5ee4:	4b16      	ldr	r3, [pc, #88]	; (5f40 <BitIoLdd1_Init+0x70>)
    5ee6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5eea:	3318      	adds	r3, #24
    5eec:	681b      	ldr	r3, [r3, #0]
    5eee:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
    5ef2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5ef6:	3318      	adds	r3, #24
    5ef8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:133
  /* Configure pin as output */
  /* GPIOC_PDDR: PDD|=0x0100 */
  GPIOC_PDDR |= GPIO_PDDR_PDD(0x0100);
    5efa:	4b12      	ldr	r3, [pc, #72]	; (5f44 <BitIoLdd1_Init+0x74>)
    5efc:	4a11      	ldr	r2, [pc, #68]	; (5f44 <BitIoLdd1_Init+0x74>)
    5efe:	6952      	ldr	r2, [r2, #20]
    5f00:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    5f04:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:136
  /* Set initialization value */
  /* GPIOC_PDOR: PDO&=~0x0100 */
  GPIOC_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0100));
    5f06:	4b0f      	ldr	r3, [pc, #60]	; (5f44 <BitIoLdd1_Init+0x74>)
    5f08:	4a0e      	ldr	r2, [pc, #56]	; (5f44 <BitIoLdd1_Init+0x74>)
    5f0a:	6812      	ldr	r2, [r2, #0]
    5f0c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
    5f10:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:139
  /* Initialization of pin routing */
  /* PORTC_PCR8: ISF=0,MUX=1 */
  PORTC_PCR8 = (uint32_t)((PORTC_PCR8 & (uint32_t)~(uint32_t)(
    5f12:	4a0d      	ldr	r2, [pc, #52]	; (5f48 <BitIoLdd1_Init+0x78>)
    5f14:	4b0c      	ldr	r3, [pc, #48]	; (5f48 <BitIoLdd1_Init+0x78>)
    5f16:	6a1b      	ldr	r3, [r3, #32]
    5f18:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5f1c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    5f20:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    5f24:	6213      	str	r3, [r2, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:146
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd1_ID,DeviceDataPrv);
    5f26:	4b09      	ldr	r3, [pc, #36]	; (5f4c <BitIoLdd1_Init+0x7c>)
    5f28:	68fa      	ldr	r2, [r7, #12]
    5f2a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    5f2c:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:148
}
    5f2e:	4618      	mov	r0, r3
    5f30:	3714      	adds	r7, #20
    5f32:	46bd      	mov	sp, r7
    5f34:	f85d 7b04 	ldr.w	r7, [sp], #4
    5f38:	4770      	bx	lr
    5f3a:	bf00      	nop
    5f3c:	200003ac 	.word	0x200003ac
    5f40:	40047000 	.word	0x40047000
    5f44:	400ff080 	.word	0x400ff080
    5f48:	4004b000 	.word	0x4004b000
    5f4c:	20000480 	.word	0x20000480

00005f50 <BitIoLdd1_ClrVal>:
BitIoLdd1_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:193
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    5f50:	b480      	push	{r7}
    5f52:	b083      	sub	sp, #12
    5f54:	af00      	add	r7, sp, #0
    5f56:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:195
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
    5f58:	4b04      	ldr	r3, [pc, #16]	; (5f6c <BitIoLdd1_ClrVal+0x1c>)
    5f5a:	f44f 7280 	mov.w	r2, #256	; 0x100
    5f5e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:196
}
    5f60:	370c      	adds	r7, #12
    5f62:	46bd      	mov	sp, r7
    5f64:	f85d 7b04 	ldr.w	r7, [sp], #4
    5f68:	4770      	bx	lr
    5f6a:	bf00      	nop
    5f6c:	400ff080 	.word	0x400ff080

00005f70 <BitIoLdd1_SetVal>:
BitIoLdd1_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:213
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    5f70:	b480      	push	{r7}
    5f72:	b083      	sub	sp, #12
    5f74:	af00      	add	r7, sp, #0
    5f76:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:215
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
    5f78:	4b04      	ldr	r3, [pc, #16]	; (5f8c <BitIoLdd1_SetVal+0x1c>)
    5f7a:	f44f 7280 	mov.w	r2, #256	; 0x100
    5f7e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:216
}
    5f80:	370c      	adds	r7, #12
    5f82:	46bd      	mov	sp, r7
    5f84:	f85d 7b04 	ldr.w	r7, [sp], #4
    5f88:	4770      	bx	lr
    5f8a:	bf00      	nop
    5f8c:	400ff080 	.word	0x400ff080

00005f90 <BitIoLdd1_NegVal>:
BitIoLdd1_NegVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:233
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd1_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    5f90:	b480      	push	{r7}
    5f92:	b083      	sub	sp, #12
    5f94:	af00      	add	r7, sp, #0
    5f96:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:235
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd1_MODULE_BASE_ADDRESS, BitIoLdd1_PORT_MASK);
    5f98:	4b04      	ldr	r3, [pc, #16]	; (5fac <BitIoLdd1_NegVal+0x1c>)
    5f9a:	f44f 7280 	mov.w	r2, #256	; 0x100
    5f9e:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd1.c:236
}
    5fa0:	370c      	adds	r7, #12
    5fa2:	46bd      	mov	sp, r7
    5fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
    5fa8:	4770      	bx	lr
    5faa:	bf00      	nop
    5fac:	400ff080 	.word	0x400ff080

00005fb0 <BitIoLdd10_Init>:
BitIoLdd10_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd10_Init(LDD_TUserData *UserDataPtr)
{
    5fb0:	b480      	push	{r7}
    5fb2:	b085      	sub	sp, #20
    5fb4:	af00      	add	r7, sp, #0
    5fb6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:127
  /* Allocate device structure */
  BitIoLdd10_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    5fb8:	4b18      	ldr	r3, [pc, #96]	; (601c <BitIoLdd10_Init+0x6c>)
    5fba:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    5fbc:	68fb      	ldr	r3, [r7, #12]
    5fbe:	687a      	ldr	r2, [r7, #4]
    5fc0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    5fc2:	4917      	ldr	r1, [pc, #92]	; (6020 <BitIoLdd10_Init+0x70>)
    5fc4:	4b16      	ldr	r3, [pc, #88]	; (6020 <BitIoLdd10_Init+0x70>)
    5fc6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    5fca:	3318      	adds	r3, #24
    5fcc:	681b      	ldr	r3, [r3, #0]
    5fce:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    5fd2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    5fd6:	3318      	adds	r3, #24
    5fd8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:134
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=0x20 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x20);
    5fda:	4b12      	ldr	r3, [pc, #72]	; (6024 <BitIoLdd10_Init+0x74>)
    5fdc:	4a11      	ldr	r2, [pc, #68]	; (6024 <BitIoLdd10_Init+0x74>)
    5fde:	6952      	ldr	r2, [r2, #20]
    5fe0:	f042 0220 	orr.w	r2, r2, #32
    5fe4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:137
  /* Set initialization value */
  /* GPIOE_PDOR: PDO&=~0x20 */
  GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x20));
    5fe6:	4b0f      	ldr	r3, [pc, #60]	; (6024 <BitIoLdd10_Init+0x74>)
    5fe8:	4a0e      	ldr	r2, [pc, #56]	; (6024 <BitIoLdd10_Init+0x74>)
    5fea:	6812      	ldr	r2, [r2, #0]
    5fec:	f022 0220 	bic.w	r2, r2, #32
    5ff0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:140
  /* Initialization of pin routing */
  /* PORTE_PCR5: ISF=0,MUX=1 */
  PORTE_PCR5 = (uint32_t)((PORTE_PCR5 & (uint32_t)~(uint32_t)(
    5ff2:	4a0d      	ldr	r2, [pc, #52]	; (6028 <BitIoLdd10_Init+0x78>)
    5ff4:	4b0c      	ldr	r3, [pc, #48]	; (6028 <BitIoLdd10_Init+0x78>)
    5ff6:	695b      	ldr	r3, [r3, #20]
    5ff8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    5ffc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6000:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6004:	6153      	str	r3, [r2, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd10_ID,DeviceDataPrv);
    6006:	4b09      	ldr	r3, [pc, #36]	; (602c <BitIoLdd10_Init+0x7c>)
    6008:	68fa      	ldr	r2, [r7, #12]
    600a:	665a      	str	r2, [r3, #100]	; 0x64
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    600c:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:149
}
    600e:	4618      	mov	r0, r3
    6010:	3714      	adds	r7, #20
    6012:	46bd      	mov	sp, r7
    6014:	f85d 7b04 	ldr.w	r7, [sp], #4
    6018:	4770      	bx	lr
    601a:	bf00      	nop
    601c:	200003b0 	.word	0x200003b0
    6020:	40047000 	.word	0x40047000
    6024:	400ff100 	.word	0x400ff100
    6028:	4004d000 	.word	0x4004d000
    602c:	20000480 	.word	0x20000480

00006030 <BitIoLdd10_PutVal>:
BitIoLdd10_PutVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:239
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
void BitIoLdd10_PutVal(LDD_TDeviceData *DeviceDataPtr, bool Val)
{
    6030:	b480      	push	{r7}
    6032:	b083      	sub	sp, #12
    6034:	af00      	add	r7, sp, #0
    6036:	6078      	str	r0, [r7, #4]
    6038:	460b      	mov	r3, r1
    603a:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:241
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (Val) {
    603c:	78fb      	ldrb	r3, [r7, #3]
    603e:	2b00      	cmp	r3, #0
    6040:	d003      	beq.n	604a <BitIoLdd10_PutVal+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:242
    GPIO_PDD_SetPortDataOutputMask(BitIoLdd10_MODULE_BASE_ADDRESS, BitIoLdd10_PORT_MASK);
    6042:	4b06      	ldr	r3, [pc, #24]	; (605c <BitIoLdd10_PutVal+0x2c>)
    6044:	2220      	movs	r2, #32
    6046:	605a      	str	r2, [r3, #4]
    6048:	e002      	b.n	6050 <BitIoLdd10_PutVal+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:244
  } else { /* !Val */
    GPIO_PDD_ClearPortDataOutputMask(BitIoLdd10_MODULE_BASE_ADDRESS, BitIoLdd10_PORT_MASK);
    604a:	4b04      	ldr	r3, [pc, #16]	; (605c <BitIoLdd10_PutVal+0x2c>)
    604c:	2220      	movs	r2, #32
    604e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:246
  } /* !Val */
}
    6050:	370c      	adds	r7, #12
    6052:	46bd      	mov	sp, r7
    6054:	f85d 7b04 	ldr.w	r7, [sp], #4
    6058:	4770      	bx	lr
    605a:	bf00      	nop
    605c:	400ff100 	.word	0x400ff100

00006060 <BitIoLdd10_ClrVal>:
BitIoLdd10_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:263
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd10_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6060:	b480      	push	{r7}
    6062:	b083      	sub	sp, #12
    6064:	af00      	add	r7, sp, #0
    6066:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:265
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd10_MODULE_BASE_ADDRESS, BitIoLdd10_PORT_MASK);
    6068:	4b03      	ldr	r3, [pc, #12]	; (6078 <BitIoLdd10_ClrVal+0x18>)
    606a:	2220      	movs	r2, #32
    606c:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:266
}
    606e:	370c      	adds	r7, #12
    6070:	46bd      	mov	sp, r7
    6072:	f85d 7b04 	ldr.w	r7, [sp], #4
    6076:	4770      	bx	lr
    6078:	400ff100 	.word	0x400ff100

0000607c <BitIoLdd10_SetVal>:
BitIoLdd10_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:283
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd10_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    607c:	b480      	push	{r7}
    607e:	b083      	sub	sp, #12
    6080:	af00      	add	r7, sp, #0
    6082:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:285
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd10_MODULE_BASE_ADDRESS, BitIoLdd10_PORT_MASK);
    6084:	4b03      	ldr	r3, [pc, #12]	; (6094 <BitIoLdd10_SetVal+0x18>)
    6086:	2220      	movs	r2, #32
    6088:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd10.c:286
}
    608a:	370c      	adds	r7, #12
    608c:	46bd      	mov	sp, r7
    608e:	f85d 7b04 	ldr.w	r7, [sp], #4
    6092:	4770      	bx	lr
    6094:	400ff100 	.word	0x400ff100

00006098 <BitIoLdd14_Init>:
BitIoLdd14_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd14_Init(LDD_TUserData *UserDataPtr)
{
    6098:	b480      	push	{r7}
    609a:	b085      	sub	sp, #20
    609c:	af00      	add	r7, sp, #0
    609e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:127
  /* Allocate device structure */
  BitIoLdd14_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    60a0:	4b18      	ldr	r3, [pc, #96]	; (6104 <BitIoLdd14_Init+0x6c>)
    60a2:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    60a4:	68fb      	ldr	r3, [r7, #12]
    60a6:	687a      	ldr	r2, [r7, #4]
    60a8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    60aa:	4917      	ldr	r1, [pc, #92]	; (6108 <BitIoLdd14_Init+0x70>)
    60ac:	4b16      	ldr	r3, [pc, #88]	; (6108 <BitIoLdd14_Init+0x70>)
    60ae:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    60b2:	3318      	adds	r3, #24
    60b4:	681b      	ldr	r3, [r3, #0]
    60b6:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    60ba:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    60be:	3318      	adds	r3, #24
    60c0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:134
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x20 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x20);
    60c2:	4b12      	ldr	r3, [pc, #72]	; (610c <BitIoLdd14_Init+0x74>)
    60c4:	4a11      	ldr	r2, [pc, #68]	; (610c <BitIoLdd14_Init+0x74>)
    60c6:	6952      	ldr	r2, [r2, #20]
    60c8:	f042 0220 	orr.w	r2, r2, #32
    60cc:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:137
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x20 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x20));
    60ce:	4b0f      	ldr	r3, [pc, #60]	; (610c <BitIoLdd14_Init+0x74>)
    60d0:	4a0e      	ldr	r2, [pc, #56]	; (610c <BitIoLdd14_Init+0x74>)
    60d2:	6812      	ldr	r2, [r2, #0]
    60d4:	f022 0220 	bic.w	r2, r2, #32
    60d8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:140
  /* Initialization of pin routing */
  /* PORTD_PCR5: ISF=0,MUX=1 */
  PORTD_PCR5 = (uint32_t)((PORTD_PCR5 & (uint32_t)~(uint32_t)(
    60da:	4a0d      	ldr	r2, [pc, #52]	; (6110 <BitIoLdd14_Init+0x78>)
    60dc:	4b0c      	ldr	r3, [pc, #48]	; (6110 <BitIoLdd14_Init+0x78>)
    60de:	695b      	ldr	r3, [r3, #20]
    60e0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    60e4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    60e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    60ec:	6153      	str	r3, [r2, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd14_ID,DeviceDataPrv);
    60ee:	4b09      	ldr	r3, [pc, #36]	; (6114 <BitIoLdd14_Init+0x7c>)
    60f0:	68fa      	ldr	r2, [r7, #12]
    60f2:	66da      	str	r2, [r3, #108]	; 0x6c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    60f4:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:149
}
    60f6:	4618      	mov	r0, r3
    60f8:	3714      	adds	r7, #20
    60fa:	46bd      	mov	sp, r7
    60fc:	f85d 7b04 	ldr.w	r7, [sp], #4
    6100:	4770      	bx	lr
    6102:	bf00      	nop
    6104:	200003b4 	.word	0x200003b4
    6108:	40047000 	.word	0x40047000
    610c:	400ff0c0 	.word	0x400ff0c0
    6110:	4004c000 	.word	0x4004c000
    6114:	20000480 	.word	0x20000480

00006118 <BitIoLdd14_ClrVal>:
BitIoLdd14_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:263
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd14_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6118:	b480      	push	{r7}
    611a:	b083      	sub	sp, #12
    611c:	af00      	add	r7, sp, #0
    611e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:265
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd14_MODULE_BASE_ADDRESS, BitIoLdd14_PORT_MASK);
    6120:	4b03      	ldr	r3, [pc, #12]	; (6130 <BitIoLdd14_ClrVal+0x18>)
    6122:	2220      	movs	r2, #32
    6124:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd14.c:266
}
    6126:	370c      	adds	r7, #12
    6128:	46bd      	mov	sp, r7
    612a:	f85d 7b04 	ldr.w	r7, [sp], #4
    612e:	4770      	bx	lr
    6130:	400ff0c0 	.word	0x400ff0c0

00006134 <BitIoLdd15_Init>:
BitIoLdd15_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd15_Init(LDD_TUserData *UserDataPtr)
{
    6134:	b480      	push	{r7}
    6136:	b085      	sub	sp, #20
    6138:	af00      	add	r7, sp, #0
    613a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:127
  /* Allocate device structure */
  BitIoLdd15_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    613c:	4b18      	ldr	r3, [pc, #96]	; (61a0 <BitIoLdd15_Init+0x6c>)
    613e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6140:	68fb      	ldr	r3, [r7, #12]
    6142:	687a      	ldr	r2, [r7, #4]
    6144:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    6146:	4917      	ldr	r1, [pc, #92]	; (61a4 <BitIoLdd15_Init+0x70>)
    6148:	4b16      	ldr	r3, [pc, #88]	; (61a4 <BitIoLdd15_Init+0x70>)
    614a:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    614e:	3318      	adds	r3, #24
    6150:	681b      	ldr	r3, [r3, #0]
    6152:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    6156:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    615a:	3318      	adds	r3, #24
    615c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:134
  /* Configure pin as input */
  /* GPIOD_PDDR: PDD&=~0x40 */
  GPIOD_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x40));
    615e:	4b12      	ldr	r3, [pc, #72]	; (61a8 <BitIoLdd15_Init+0x74>)
    6160:	4a11      	ldr	r2, [pc, #68]	; (61a8 <BitIoLdd15_Init+0x74>)
    6162:	6952      	ldr	r2, [r2, #20]
    6164:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    6168:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:137
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x40 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x40));
    616a:	4b0f      	ldr	r3, [pc, #60]	; (61a8 <BitIoLdd15_Init+0x74>)
    616c:	4a0e      	ldr	r2, [pc, #56]	; (61a8 <BitIoLdd15_Init+0x74>)
    616e:	6812      	ldr	r2, [r2, #0]
    6170:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    6174:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:140
  /* Initialization of pin routing */
  /* PORTD_PCR6: ISF=0,MUX=1 */
  PORTD_PCR6 = (uint32_t)((PORTD_PCR6 & (uint32_t)~(uint32_t)(
    6176:	4a0d      	ldr	r2, [pc, #52]	; (61ac <BitIoLdd15_Init+0x78>)
    6178:	4b0c      	ldr	r3, [pc, #48]	; (61ac <BitIoLdd15_Init+0x78>)
    617a:	699b      	ldr	r3, [r3, #24]
    617c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6180:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6184:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6188:	6193      	str	r3, [r2, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd15_ID,DeviceDataPrv);
    618a:	4b09      	ldr	r3, [pc, #36]	; (61b0 <BitIoLdd15_Init+0x7c>)
    618c:	68fa      	ldr	r2, [r7, #12]
    618e:	675a      	str	r2, [r3, #116]	; 0x74
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6190:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd15.c:149
}
    6192:	4618      	mov	r0, r3
    6194:	3714      	adds	r7, #20
    6196:	46bd      	mov	sp, r7
    6198:	f85d 7b04 	ldr.w	r7, [sp], #4
    619c:	4770      	bx	lr
    619e:	bf00      	nop
    61a0:	200003b8 	.word	0x200003b8
    61a4:	40047000 	.word	0x40047000
    61a8:	400ff0c0 	.word	0x400ff0c0
    61ac:	4004c000 	.word	0x4004c000
    61b0:	20000480 	.word	0x20000480

000061b4 <BitIoLdd16_Init>:
BitIoLdd16_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd16_Init(LDD_TUserData *UserDataPtr)
{
    61b4:	b480      	push	{r7}
    61b6:	b085      	sub	sp, #20
    61b8:	af00      	add	r7, sp, #0
    61ba:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:123
  /* Allocate device structure */
  BitIoLdd16_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    61bc:	4b15      	ldr	r3, [pc, #84]	; (6214 <BitIoLdd16_Init+0x60>)
    61be:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    61c0:	68fb      	ldr	r3, [r7, #12]
    61c2:	687a      	ldr	r2, [r7, #4]
    61c4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    61c6:	4914      	ldr	r1, [pc, #80]	; (6218 <BitIoLdd16_Init+0x64>)
    61c8:	4b13      	ldr	r3, [pc, #76]	; (6218 <BitIoLdd16_Init+0x64>)
    61ca:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    61ce:	3318      	adds	r3, #24
    61d0:	681b      	ldr	r3, [r3, #0]
    61d2:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    61d6:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    61da:	3318      	adds	r3, #24
    61dc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:130
  /* Configure pin as input */
  /* GPIOB_PDDR: PDD&=~4 */
  GPIOB_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x04));
    61de:	4b0f      	ldr	r3, [pc, #60]	; (621c <BitIoLdd16_Init+0x68>)
    61e0:	4a0e      	ldr	r2, [pc, #56]	; (621c <BitIoLdd16_Init+0x68>)
    61e2:	6952      	ldr	r2, [r2, #20]
    61e4:	f022 0204 	bic.w	r2, r2, #4
    61e8:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:133
  /* Initialization of pin routing */
  /* PORTB_PCR2: ISF=0,MUX=1 */
  PORTB_PCR2 = (uint32_t)((PORTB_PCR2 & (uint32_t)~(uint32_t)(
    61ea:	4a0d      	ldr	r2, [pc, #52]	; (6220 <BitIoLdd16_Init+0x6c>)
    61ec:	4b0c      	ldr	r3, [pc, #48]	; (6220 <BitIoLdd16_Init+0x6c>)
    61ee:	689b      	ldr	r3, [r3, #8]
    61f0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    61f4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    61f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    61fc:	6093      	str	r3, [r2, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd16_ID,DeviceDataPrv);
    61fe:	4b09      	ldr	r3, [pc, #36]	; (6224 <BitIoLdd16_Init+0x70>)
    6200:	68fa      	ldr	r2, [r7, #12]
    6202:	61da      	str	r2, [r3, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6204:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:142
}
    6206:	4618      	mov	r0, r3
    6208:	3714      	adds	r7, #20
    620a:	46bd      	mov	sp, r7
    620c:	f85d 7b04 	ldr.w	r7, [sp], #4
    6210:	4770      	bx	lr
    6212:	bf00      	nop
    6214:	200003bc 	.word	0x200003bc
    6218:	40047000 	.word	0x40047000
    621c:	400ff040 	.word	0x400ff040
    6220:	4004a000 	.word	0x4004a000
    6224:	20000480 	.word	0x20000480

00006228 <BitIoLdd16_GetVal>:
BitIoLdd16_GetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:164
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd16_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6228:	b480      	push	{r7}
    622a:	b085      	sub	sp, #20
    622c:	af00      	add	r7, sp, #0
    622e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:168
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd16_MODULE_BASE_ADDRESS) & BitIoLdd16_PORT_MASK;
    6230:	4b08      	ldr	r3, [pc, #32]	; (6254 <BitIoLdd16_GetVal+0x2c>)
    6232:	691b      	ldr	r3, [r3, #16]
    6234:	f003 0304 	and.w	r3, r3, #4
    6238:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:169
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    623a:	68fb      	ldr	r3, [r7, #12]
    623c:	2b00      	cmp	r3, #0
    623e:	bf0c      	ite	eq
    6240:	2300      	moveq	r3, #0
    6242:	2301      	movne	r3, #1
    6244:	b2db      	uxtb	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd16.c:170
}
    6246:	4618      	mov	r0, r3
    6248:	3714      	adds	r7, #20
    624a:	46bd      	mov	sp, r7
    624c:	f85d 7b04 	ldr.w	r7, [sp], #4
    6250:	4770      	bx	lr
    6252:	bf00      	nop
    6254:	400ff040 	.word	0x400ff040

00006258 <BitIoLdd17_Init>:
BitIoLdd17_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd17_Init(LDD_TUserData *UserDataPtr)
{
    6258:	b480      	push	{r7}
    625a:	b085      	sub	sp, #20
    625c:	af00      	add	r7, sp, #0
    625e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:123
  /* Allocate device structure */
  BitIoLdd17_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6260:	4b15      	ldr	r3, [pc, #84]	; (62b8 <BitIoLdd17_Init+0x60>)
    6262:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6264:	68fb      	ldr	r3, [r7, #12]
    6266:	687a      	ldr	r2, [r7, #4]
    6268:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    626a:	4914      	ldr	r1, [pc, #80]	; (62bc <BitIoLdd17_Init+0x64>)
    626c:	4b13      	ldr	r3, [pc, #76]	; (62bc <BitIoLdd17_Init+0x64>)
    626e:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6272:	3318      	adds	r3, #24
    6274:	681b      	ldr	r3, [r3, #0]
    6276:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    627a:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    627e:	3318      	adds	r3, #24
    6280:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:130
  /* Configure pin as input */
  /* GPIOB_PDDR: PDD&=~2 */
  GPIOB_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x02));
    6282:	4b0f      	ldr	r3, [pc, #60]	; (62c0 <BitIoLdd17_Init+0x68>)
    6284:	4a0e      	ldr	r2, [pc, #56]	; (62c0 <BitIoLdd17_Init+0x68>)
    6286:	6952      	ldr	r2, [r2, #20]
    6288:	f022 0202 	bic.w	r2, r2, #2
    628c:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:133
  /* Initialization of pin routing */
  /* PORTB_PCR1: ISF=0,MUX=1 */
  PORTB_PCR1 = (uint32_t)((PORTB_PCR1 & (uint32_t)~(uint32_t)(
    628e:	4a0d      	ldr	r2, [pc, #52]	; (62c4 <BitIoLdd17_Init+0x6c>)
    6290:	4b0c      	ldr	r3, [pc, #48]	; (62c4 <BitIoLdd17_Init+0x6c>)
    6292:	685b      	ldr	r3, [r3, #4]
    6294:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6298:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    629c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    62a0:	6053      	str	r3, [r2, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd17_ID,DeviceDataPrv);
    62a2:	4b09      	ldr	r3, [pc, #36]	; (62c8 <BitIoLdd17_Init+0x70>)
    62a4:	68fa      	ldr	r2, [r7, #12]
    62a6:	621a      	str	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    62a8:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:142
}
    62aa:	4618      	mov	r0, r3
    62ac:	3714      	adds	r7, #20
    62ae:	46bd      	mov	sp, r7
    62b0:	f85d 7b04 	ldr.w	r7, [sp], #4
    62b4:	4770      	bx	lr
    62b6:	bf00      	nop
    62b8:	200003c0 	.word	0x200003c0
    62bc:	40047000 	.word	0x40047000
    62c0:	400ff040 	.word	0x400ff040
    62c4:	4004a000 	.word	0x4004a000
    62c8:	20000480 	.word	0x20000480

000062cc <BitIoLdd17_GetVal>:
BitIoLdd17_GetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:164
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd17_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    62cc:	b480      	push	{r7}
    62ce:	b085      	sub	sp, #20
    62d0:	af00      	add	r7, sp, #0
    62d2:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:168
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd17_MODULE_BASE_ADDRESS) & BitIoLdd17_PORT_MASK;
    62d4:	4b08      	ldr	r3, [pc, #32]	; (62f8 <BitIoLdd17_GetVal+0x2c>)
    62d6:	691b      	ldr	r3, [r3, #16]
    62d8:	f003 0302 	and.w	r3, r3, #2
    62dc:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:169
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    62de:	68fb      	ldr	r3, [r7, #12]
    62e0:	2b00      	cmp	r3, #0
    62e2:	bf0c      	ite	eq
    62e4:	2300      	moveq	r3, #0
    62e6:	2301      	movne	r3, #1
    62e8:	b2db      	uxtb	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd17.c:170
}
    62ea:	4618      	mov	r0, r3
    62ec:	3714      	adds	r7, #20
    62ee:	46bd      	mov	sp, r7
    62f0:	f85d 7b04 	ldr.w	r7, [sp], #4
    62f4:	4770      	bx	lr
    62f6:	bf00      	nop
    62f8:	400ff040 	.word	0x400ff040

000062fc <BitIoLdd18_Init>:
BitIoLdd18_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd18_Init(LDD_TUserData *UserDataPtr)
{
    62fc:	b480      	push	{r7}
    62fe:	b085      	sub	sp, #20
    6300:	af00      	add	r7, sp, #0
    6302:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:123
  /* Allocate device structure */
  BitIoLdd18_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6304:	4b15      	ldr	r3, [pc, #84]	; (635c <BitIoLdd18_Init+0x60>)
    6306:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6308:	68fb      	ldr	r3, [r7, #12]
    630a:	687a      	ldr	r2, [r7, #4]
    630c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    630e:	4914      	ldr	r1, [pc, #80]	; (6360 <BitIoLdd18_Init+0x64>)
    6310:	4b13      	ldr	r3, [pc, #76]	; (6360 <BitIoLdd18_Init+0x64>)
    6312:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6316:	3318      	adds	r3, #24
    6318:	681b      	ldr	r3, [r3, #0]
    631a:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    631e:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6322:	3318      	adds	r3, #24
    6324:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:130
  /* Configure pin as input */
  /* GPIOB_PDDR: PDD&=~0x0200 */
  GPIOB_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x0200));
    6326:	4b0f      	ldr	r3, [pc, #60]	; (6364 <BitIoLdd18_Init+0x68>)
    6328:	4a0e      	ldr	r2, [pc, #56]	; (6364 <BitIoLdd18_Init+0x68>)
    632a:	6952      	ldr	r2, [r2, #20]
    632c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
    6330:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:133
  /* Initialization of pin routing */
  /* PORTB_PCR9: ISF=0,MUX=1 */
  PORTB_PCR9 = (uint32_t)((PORTB_PCR9 & (uint32_t)~(uint32_t)(
    6332:	4a0d      	ldr	r2, [pc, #52]	; (6368 <BitIoLdd18_Init+0x6c>)
    6334:	4b0c      	ldr	r3, [pc, #48]	; (6368 <BitIoLdd18_Init+0x6c>)
    6336:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    6338:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    633c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6340:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6344:	6253      	str	r3, [r2, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd18_ID,DeviceDataPrv);
    6346:	4b09      	ldr	r3, [pc, #36]	; (636c <BitIoLdd18_Init+0x70>)
    6348:	68fa      	ldr	r2, [r7, #12]
    634a:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    634c:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:142
}
    634e:	4618      	mov	r0, r3
    6350:	3714      	adds	r7, #20
    6352:	46bd      	mov	sp, r7
    6354:	f85d 7b04 	ldr.w	r7, [sp], #4
    6358:	4770      	bx	lr
    635a:	bf00      	nop
    635c:	200003c4 	.word	0x200003c4
    6360:	40047000 	.word	0x40047000
    6364:	400ff040 	.word	0x400ff040
    6368:	4004a000 	.word	0x4004a000
    636c:	20000480 	.word	0x20000480

00006370 <BitIoLdd18_GetVal>:
BitIoLdd18_GetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:164
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd18_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6370:	b480      	push	{r7}
    6372:	b085      	sub	sp, #20
    6374:	af00      	add	r7, sp, #0
    6376:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:168
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd18_MODULE_BASE_ADDRESS) & BitIoLdd18_PORT_MASK;
    6378:	4b08      	ldr	r3, [pc, #32]	; (639c <BitIoLdd18_GetVal+0x2c>)
    637a:	691b      	ldr	r3, [r3, #16]
    637c:	f403 7300 	and.w	r3, r3, #512	; 0x200
    6380:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:169
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    6382:	68fb      	ldr	r3, [r7, #12]
    6384:	2b00      	cmp	r3, #0
    6386:	bf0c      	ite	eq
    6388:	2300      	moveq	r3, #0
    638a:	2301      	movne	r3, #1
    638c:	b2db      	uxtb	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd18.c:170
}
    638e:	4618      	mov	r0, r3
    6390:	3714      	adds	r7, #20
    6392:	46bd      	mov	sp, r7
    6394:	f85d 7b04 	ldr.w	r7, [sp], #4
    6398:	4770      	bx	lr
    639a:	bf00      	nop
    639c:	400ff040 	.word	0x400ff040

000063a0 <BitIoLdd19_Init>:
BitIoLdd19_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd19_Init(LDD_TUserData *UserDataPtr)
{
    63a0:	b480      	push	{r7}
    63a2:	b085      	sub	sp, #20
    63a4:	af00      	add	r7, sp, #0
    63a6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:123
  /* Allocate device structure */
  BitIoLdd19_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    63a8:	4b15      	ldr	r3, [pc, #84]	; (6400 <BitIoLdd19_Init+0x60>)
    63aa:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    63ac:	68fb      	ldr	r3, [r7, #12]
    63ae:	687a      	ldr	r2, [r7, #4]
    63b0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    63b2:	4914      	ldr	r1, [pc, #80]	; (6404 <BitIoLdd19_Init+0x64>)
    63b4:	4b13      	ldr	r3, [pc, #76]	; (6404 <BitIoLdd19_Init+0x64>)
    63b6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    63ba:	3318      	adds	r3, #24
    63bc:	681b      	ldr	r3, [r3, #0]
    63be:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    63c2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    63c6:	3318      	adds	r3, #24
    63c8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:130
  /* Configure pin as input */
  /* GPIOB_PDDR: PDD&=~1 */
  GPIOB_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x01));
    63ca:	4b0f      	ldr	r3, [pc, #60]	; (6408 <BitIoLdd19_Init+0x68>)
    63cc:	4a0e      	ldr	r2, [pc, #56]	; (6408 <BitIoLdd19_Init+0x68>)
    63ce:	6952      	ldr	r2, [r2, #20]
    63d0:	f022 0201 	bic.w	r2, r2, #1
    63d4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:133
  /* Initialization of pin routing */
  /* PORTB_PCR0: ISF=0,MUX=1 */
  PORTB_PCR0 = (uint32_t)((PORTB_PCR0 & (uint32_t)~(uint32_t)(
    63d6:	4a0d      	ldr	r2, [pc, #52]	; (640c <BitIoLdd19_Init+0x6c>)
    63d8:	4b0c      	ldr	r3, [pc, #48]	; (640c <BitIoLdd19_Init+0x6c>)
    63da:	681b      	ldr	r3, [r3, #0]
    63dc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    63e0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    63e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    63e8:	6013      	str	r3, [r2, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd19_ID,DeviceDataPrv);
    63ea:	4b09      	ldr	r3, [pc, #36]	; (6410 <BitIoLdd19_Init+0x70>)
    63ec:	68fa      	ldr	r2, [r7, #12]
    63ee:	629a      	str	r2, [r3, #40]	; 0x28
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    63f0:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:142
}
    63f2:	4618      	mov	r0, r3
    63f4:	3714      	adds	r7, #20
    63f6:	46bd      	mov	sp, r7
    63f8:	f85d 7b04 	ldr.w	r7, [sp], #4
    63fc:	4770      	bx	lr
    63fe:	bf00      	nop
    6400:	200003c8 	.word	0x200003c8
    6404:	40047000 	.word	0x40047000
    6408:	400ff040 	.word	0x400ff040
    640c:	4004a000 	.word	0x4004a000
    6410:	20000480 	.word	0x20000480

00006414 <BitIoLdd19_GetVal>:
BitIoLdd19_GetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:164
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd19_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6414:	b480      	push	{r7}
    6416:	b085      	sub	sp, #20
    6418:	af00      	add	r7, sp, #0
    641a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:168
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd19_MODULE_BASE_ADDRESS) & BitIoLdd19_PORT_MASK;
    641c:	4b08      	ldr	r3, [pc, #32]	; (6440 <BitIoLdd19_GetVal+0x2c>)
    641e:	691b      	ldr	r3, [r3, #16]
    6420:	f003 0301 	and.w	r3, r3, #1
    6424:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:169
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    6426:	68fb      	ldr	r3, [r7, #12]
    6428:	2b00      	cmp	r3, #0
    642a:	bf0c      	ite	eq
    642c:	2300      	moveq	r3, #0
    642e:	2301      	movne	r3, #1
    6430:	b2db      	uxtb	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd19.c:170
}
    6432:	4618      	mov	r0, r3
    6434:	3714      	adds	r7, #20
    6436:	46bd      	mov	sp, r7
    6438:	f85d 7b04 	ldr.w	r7, [sp], #4
    643c:	4770      	bx	lr
    643e:	bf00      	nop
    6440:	400ff040 	.word	0x400ff040

00006444 <BitIoLdd2_Init>:
BitIoLdd2_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd2_Init(LDD_TUserData *UserDataPtr)
{
    6444:	b480      	push	{r7}
    6446:	b085      	sub	sp, #20
    6448:	af00      	add	r7, sp, #0
    644a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:126
  /* Allocate device structure */
  BitIoLdd2_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    644c:	4b18      	ldr	r3, [pc, #96]	; (64b0 <BitIoLdd2_Init+0x6c>)
    644e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6450:	68fb      	ldr	r3, [r7, #12]
    6452:	687a      	ldr	r2, [r7, #4]
    6454:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTC=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    6456:	4917      	ldr	r1, [pc, #92]	; (64b4 <BitIoLdd2_Init+0x70>)
    6458:	4b16      	ldr	r3, [pc, #88]	; (64b4 <BitIoLdd2_Init+0x70>)
    645a:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    645e:	3318      	adds	r3, #24
    6460:	681b      	ldr	r3, [r3, #0]
    6462:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
    6466:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    646a:	3318      	adds	r3, #24
    646c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:133
  /* Configure pin as output */
  /* GPIOC_PDDR: PDD|=0x0200 */
  GPIOC_PDDR |= GPIO_PDDR_PDD(0x0200);
    646e:	4b12      	ldr	r3, [pc, #72]	; (64b8 <BitIoLdd2_Init+0x74>)
    6470:	4a11      	ldr	r2, [pc, #68]	; (64b8 <BitIoLdd2_Init+0x74>)
    6472:	6952      	ldr	r2, [r2, #20]
    6474:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    6478:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:136
  /* Set initialization value */
  /* GPIOC_PDOR: PDO&=~0x0200 */
  GPIOC_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0200));
    647a:	4b0f      	ldr	r3, [pc, #60]	; (64b8 <BitIoLdd2_Init+0x74>)
    647c:	4a0e      	ldr	r2, [pc, #56]	; (64b8 <BitIoLdd2_Init+0x74>)
    647e:	6812      	ldr	r2, [r2, #0]
    6480:	f422 7200 	bic.w	r2, r2, #512	; 0x200
    6484:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:139
  /* Initialization of pin routing */
  /* PORTC_PCR9: ISF=0,MUX=1 */
  PORTC_PCR9 = (uint32_t)((PORTC_PCR9 & (uint32_t)~(uint32_t)(
    6486:	4a0d      	ldr	r2, [pc, #52]	; (64bc <BitIoLdd2_Init+0x78>)
    6488:	4b0c      	ldr	r3, [pc, #48]	; (64bc <BitIoLdd2_Init+0x78>)
    648a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    648c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6490:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6494:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6498:	6253      	str	r3, [r2, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:146
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd2_ID,DeviceDataPrv);
    649a:	4b09      	ldr	r3, [pc, #36]	; (64c0 <BitIoLdd2_Init+0x7c>)
    649c:	68fa      	ldr	r2, [r7, #12]
    649e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    64a0:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:148
}
    64a2:	4618      	mov	r0, r3
    64a4:	3714      	adds	r7, #20
    64a6:	46bd      	mov	sp, r7
    64a8:	f85d 7b04 	ldr.w	r7, [sp], #4
    64ac:	4770      	bx	lr
    64ae:	bf00      	nop
    64b0:	200003cc 	.word	0x200003cc
    64b4:	40047000 	.word	0x40047000
    64b8:	400ff080 	.word	0x400ff080
    64bc:	4004b000 	.word	0x4004b000
    64c0:	20000480 	.word	0x20000480

000064c4 <BitIoLdd2_ClrVal>:
BitIoLdd2_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:193
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    64c4:	b480      	push	{r7}
    64c6:	b083      	sub	sp, #12
    64c8:	af00      	add	r7, sp, #0
    64ca:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:195
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
    64cc:	4b04      	ldr	r3, [pc, #16]	; (64e0 <BitIoLdd2_ClrVal+0x1c>)
    64ce:	f44f 7200 	mov.w	r2, #512	; 0x200
    64d2:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:196
}
    64d4:	370c      	adds	r7, #12
    64d6:	46bd      	mov	sp, r7
    64d8:	f85d 7b04 	ldr.w	r7, [sp], #4
    64dc:	4770      	bx	lr
    64de:	bf00      	nop
    64e0:	400ff080 	.word	0x400ff080

000064e4 <BitIoLdd2_SetVal>:
BitIoLdd2_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:213
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd2_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    64e4:	b480      	push	{r7}
    64e6:	b083      	sub	sp, #12
    64e8:	af00      	add	r7, sp, #0
    64ea:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:215
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd2_MODULE_BASE_ADDRESS, BitIoLdd2_PORT_MASK);
    64ec:	4b04      	ldr	r3, [pc, #16]	; (6500 <BitIoLdd2_SetVal+0x1c>)
    64ee:	f44f 7200 	mov.w	r2, #512	; 0x200
    64f2:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd2.c:216
}
    64f4:	370c      	adds	r7, #12
    64f6:	46bd      	mov	sp, r7
    64f8:	f85d 7b04 	ldr.w	r7, [sp], #4
    64fc:	4770      	bx	lr
    64fe:	bf00      	nop
    6500:	400ff080 	.word	0x400ff080

00006504 <BitIoLdd20_Init>:
BitIoLdd20_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd20_Init(LDD_TUserData *UserDataPtr)
{
    6504:	b480      	push	{r7}
    6506:	b085      	sub	sp, #20
    6508:	af00      	add	r7, sp, #0
    650a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:123
  /* Allocate device structure */
  BitIoLdd20_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    650c:	4b15      	ldr	r3, [pc, #84]	; (6564 <BitIoLdd20_Init+0x60>)
    650e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6510:	68fb      	ldr	r3, [r7, #12]
    6512:	687a      	ldr	r2, [r7, #4]
    6514:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    6516:	4914      	ldr	r1, [pc, #80]	; (6568 <BitIoLdd20_Init+0x64>)
    6518:	4b13      	ldr	r3, [pc, #76]	; (6568 <BitIoLdd20_Init+0x64>)
    651a:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    651e:	3318      	adds	r3, #24
    6520:	681b      	ldr	r3, [r3, #0]
    6522:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    6526:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    652a:	3318      	adds	r3, #24
    652c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:130
  /* Configure pin as input */
  /* GPIOB_PDDR: PDD&=~8 */
  GPIOB_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x08));
    652e:	4b0f      	ldr	r3, [pc, #60]	; (656c <BitIoLdd20_Init+0x68>)
    6530:	4a0e      	ldr	r2, [pc, #56]	; (656c <BitIoLdd20_Init+0x68>)
    6532:	6952      	ldr	r2, [r2, #20]
    6534:	f022 0208 	bic.w	r2, r2, #8
    6538:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:133
  /* Initialization of pin routing */
  /* PORTB_PCR3: ISF=0,MUX=1 */
  PORTB_PCR3 = (uint32_t)((PORTB_PCR3 & (uint32_t)~(uint32_t)(
    653a:	4a0d      	ldr	r2, [pc, #52]	; (6570 <BitIoLdd20_Init+0x6c>)
    653c:	4b0c      	ldr	r3, [pc, #48]	; (6570 <BitIoLdd20_Init+0x6c>)
    653e:	68db      	ldr	r3, [r3, #12]
    6540:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6544:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6548:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    654c:	60d3      	str	r3, [r2, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd20_ID,DeviceDataPrv);
    654e:	4b09      	ldr	r3, [pc, #36]	; (6574 <BitIoLdd20_Init+0x70>)
    6550:	68fa      	ldr	r2, [r7, #12]
    6552:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6554:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:142
}
    6556:	4618      	mov	r0, r3
    6558:	3714      	adds	r7, #20
    655a:	46bd      	mov	sp, r7
    655c:	f85d 7b04 	ldr.w	r7, [sp], #4
    6560:	4770      	bx	lr
    6562:	bf00      	nop
    6564:	200003d0 	.word	0x200003d0
    6568:	40047000 	.word	0x40047000
    656c:	400ff040 	.word	0x400ff040
    6570:	4004a000 	.word	0x4004a000
    6574:	20000480 	.word	0x20000480

00006578 <BitIoLdd20_GetVal>:
BitIoLdd20_GetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:164
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd20_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6578:	b480      	push	{r7}
    657a:	b085      	sub	sp, #20
    657c:	af00      	add	r7, sp, #0
    657e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:168
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd20_MODULE_BASE_ADDRESS) & BitIoLdd20_PORT_MASK;
    6580:	4b08      	ldr	r3, [pc, #32]	; (65a4 <BitIoLdd20_GetVal+0x2c>)
    6582:	691b      	ldr	r3, [r3, #16]
    6584:	f003 0308 	and.w	r3, r3, #8
    6588:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:169
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    658a:	68fb      	ldr	r3, [r7, #12]
    658c:	2b00      	cmp	r3, #0
    658e:	bf0c      	ite	eq
    6590:	2300      	moveq	r3, #0
    6592:	2301      	movne	r3, #1
    6594:	b2db      	uxtb	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd20.c:170
}
    6596:	4618      	mov	r0, r3
    6598:	3714      	adds	r7, #20
    659a:	46bd      	mov	sp, r7
    659c:	f85d 7b04 	ldr.w	r7, [sp], #4
    65a0:	4770      	bx	lr
    65a2:	bf00      	nop
    65a4:	400ff040 	.word	0x400ff040

000065a8 <BitIoLdd21_Init>:
BitIoLdd21_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd21_Init(LDD_TUserData *UserDataPtr)
{
    65a8:	b480      	push	{r7}
    65aa:	b085      	sub	sp, #20
    65ac:	af00      	add	r7, sp, #0
    65ae:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:127
  /* Allocate device structure */
  BitIoLdd21_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    65b0:	4b18      	ldr	r3, [pc, #96]	; (6614 <BitIoLdd21_Init+0x6c>)
    65b2:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    65b4:	68fb      	ldr	r3, [r7, #12]
    65b6:	687a      	ldr	r2, [r7, #4]
    65b8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    65ba:	4917      	ldr	r1, [pc, #92]	; (6618 <BitIoLdd21_Init+0x70>)
    65bc:	4b16      	ldr	r3, [pc, #88]	; (6618 <BitIoLdd21_Init+0x70>)
    65be:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    65c2:	3318      	adds	r3, #24
    65c4:	681b      	ldr	r3, [r3, #0]
    65c6:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    65ca:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    65ce:	3318      	adds	r3, #24
    65d0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:134
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=0x40 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x40);
    65d2:	4b12      	ldr	r3, [pc, #72]	; (661c <BitIoLdd21_Init+0x74>)
    65d4:	4a11      	ldr	r2, [pc, #68]	; (661c <BitIoLdd21_Init+0x74>)
    65d6:	6952      	ldr	r2, [r2, #20]
    65d8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    65dc:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:137
  /* Set initialization value */
  /* GPIOE_PDOR: PDO&=~0x40 */
  GPIOE_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x40));
    65de:	4b0f      	ldr	r3, [pc, #60]	; (661c <BitIoLdd21_Init+0x74>)
    65e0:	4a0e      	ldr	r2, [pc, #56]	; (661c <BitIoLdd21_Init+0x74>)
    65e2:	6812      	ldr	r2, [r2, #0]
    65e4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    65e8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:140
  /* Initialization of pin routing */
  /* PORTE_PCR6: ISF=0,MUX=1 */
  PORTE_PCR6 = (uint32_t)((PORTE_PCR6 & (uint32_t)~(uint32_t)(
    65ea:	4a0d      	ldr	r2, [pc, #52]	; (6620 <BitIoLdd21_Init+0x78>)
    65ec:	4b0c      	ldr	r3, [pc, #48]	; (6620 <BitIoLdd21_Init+0x78>)
    65ee:	699b      	ldr	r3, [r3, #24]
    65f0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    65f4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    65f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    65fc:	6193      	str	r3, [r2, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd21_ID,DeviceDataPrv);
    65fe:	4b09      	ldr	r3, [pc, #36]	; (6624 <BitIoLdd21_Init+0x7c>)
    6600:	68fa      	ldr	r2, [r7, #12]
    6602:	679a      	str	r2, [r3, #120]	; 0x78
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6604:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:149
}
    6606:	4618      	mov	r0, r3
    6608:	3714      	adds	r7, #20
    660a:	46bd      	mov	sp, r7
    660c:	f85d 7b04 	ldr.w	r7, [sp], #4
    6610:	4770      	bx	lr
    6612:	bf00      	nop
    6614:	200003d4 	.word	0x200003d4
    6618:	40047000 	.word	0x40047000
    661c:	400ff100 	.word	0x400ff100
    6620:	4004d000 	.word	0x4004d000
    6624:	20000480 	.word	0x20000480

00006628 <BitIoLdd21_PutVal>:
BitIoLdd21_PutVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:239
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
void BitIoLdd21_PutVal(LDD_TDeviceData *DeviceDataPtr, bool Val)
{
    6628:	b480      	push	{r7}
    662a:	b083      	sub	sp, #12
    662c:	af00      	add	r7, sp, #0
    662e:	6078      	str	r0, [r7, #4]
    6630:	460b      	mov	r3, r1
    6632:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:241
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  if (Val) {
    6634:	78fb      	ldrb	r3, [r7, #3]
    6636:	2b00      	cmp	r3, #0
    6638:	d003      	beq.n	6642 <BitIoLdd21_PutVal+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:242
    GPIO_PDD_SetPortDataOutputMask(BitIoLdd21_MODULE_BASE_ADDRESS, BitIoLdd21_PORT_MASK);
    663a:	4b06      	ldr	r3, [pc, #24]	; (6654 <BitIoLdd21_PutVal+0x2c>)
    663c:	2240      	movs	r2, #64	; 0x40
    663e:	605a      	str	r2, [r3, #4]
    6640:	e002      	b.n	6648 <BitIoLdd21_PutVal+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:244
  } else { /* !Val */
    GPIO_PDD_ClearPortDataOutputMask(BitIoLdd21_MODULE_BASE_ADDRESS, BitIoLdd21_PORT_MASK);
    6642:	4b04      	ldr	r3, [pc, #16]	; (6654 <BitIoLdd21_PutVal+0x2c>)
    6644:	2240      	movs	r2, #64	; 0x40
    6646:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:246
  } /* !Val */
}
    6648:	370c      	adds	r7, #12
    664a:	46bd      	mov	sp, r7
    664c:	f85d 7b04 	ldr.w	r7, [sp], #4
    6650:	4770      	bx	lr
    6652:	bf00      	nop
    6654:	400ff100 	.word	0x400ff100

00006658 <BitIoLdd21_ClrVal>:
BitIoLdd21_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:263
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd21_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6658:	b480      	push	{r7}
    665a:	b083      	sub	sp, #12
    665c:	af00      	add	r7, sp, #0
    665e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:265
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd21_MODULE_BASE_ADDRESS, BitIoLdd21_PORT_MASK);
    6660:	4b03      	ldr	r3, [pc, #12]	; (6670 <BitIoLdd21_ClrVal+0x18>)
    6662:	2240      	movs	r2, #64	; 0x40
    6664:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:266
}
    6666:	370c      	adds	r7, #12
    6668:	46bd      	mov	sp, r7
    666a:	f85d 7b04 	ldr.w	r7, [sp], #4
    666e:	4770      	bx	lr
    6670:	400ff100 	.word	0x400ff100

00006674 <BitIoLdd21_SetVal>:
BitIoLdd21_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:283
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd21_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6674:	b480      	push	{r7}
    6676:	b083      	sub	sp, #12
    6678:	af00      	add	r7, sp, #0
    667a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:285
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd21_MODULE_BASE_ADDRESS, BitIoLdd21_PORT_MASK);
    667c:	4b03      	ldr	r3, [pc, #12]	; (668c <BitIoLdd21_SetVal+0x18>)
    667e:	2240      	movs	r2, #64	; 0x40
    6680:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd21.c:286
}
    6682:	370c      	adds	r7, #12
    6684:	46bd      	mov	sp, r7
    6686:	f85d 7b04 	ldr.w	r7, [sp], #4
    668a:	4770      	bx	lr
    668c:	400ff100 	.word	0x400ff100

00006690 <BitIoLdd22_Init>:
BitIoLdd22_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd22_Init(LDD_TUserData *UserDataPtr)
{
    6690:	b480      	push	{r7}
    6692:	b085      	sub	sp, #20
    6694:	af00      	add	r7, sp, #0
    6696:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:127
  /* Allocate device structure */
  BitIoLdd22_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6698:	4b18      	ldr	r3, [pc, #96]	; (66fc <BitIoLdd22_Init+0x6c>)
    669a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    669c:	68fb      	ldr	r3, [r7, #12]
    669e:	687a      	ldr	r2, [r7, #4]
    66a0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    66a2:	4917      	ldr	r1, [pc, #92]	; (6700 <BitIoLdd22_Init+0x70>)
    66a4:	4b16      	ldr	r3, [pc, #88]	; (6700 <BitIoLdd22_Init+0x70>)
    66a6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    66aa:	3318      	adds	r3, #24
    66ac:	681b      	ldr	r3, [r3, #0]
    66ae:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    66b2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    66b6:	3318      	adds	r3, #24
    66b8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:134
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=2 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x02);
    66ba:	4b12      	ldr	r3, [pc, #72]	; (6704 <BitIoLdd22_Init+0x74>)
    66bc:	4a11      	ldr	r2, [pc, #68]	; (6704 <BitIoLdd22_Init+0x74>)
    66be:	6952      	ldr	r2, [r2, #20]
    66c0:	f042 0202 	orr.w	r2, r2, #2
    66c4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:137
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~2 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x02));
    66c6:	4b0f      	ldr	r3, [pc, #60]	; (6704 <BitIoLdd22_Init+0x74>)
    66c8:	4a0e      	ldr	r2, [pc, #56]	; (6704 <BitIoLdd22_Init+0x74>)
    66ca:	6812      	ldr	r2, [r2, #0]
    66cc:	f022 0202 	bic.w	r2, r2, #2
    66d0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:140
  /* Initialization of pin routing */
  /* PORTD_PCR1: ISF=0,MUX=1 */
  PORTD_PCR1 = (uint32_t)((PORTD_PCR1 & (uint32_t)~(uint32_t)(
    66d2:	4a0d      	ldr	r2, [pc, #52]	; (6708 <BitIoLdd22_Init+0x78>)
    66d4:	4b0c      	ldr	r3, [pc, #48]	; (6708 <BitIoLdd22_Init+0x78>)
    66d6:	685b      	ldr	r3, [r3, #4]
    66d8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    66dc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    66e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    66e4:	6053      	str	r3, [r2, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd22_ID,DeviceDataPrv);
    66e6:	4b09      	ldr	r3, [pc, #36]	; (670c <BitIoLdd22_Init+0x7c>)
    66e8:	68fa      	ldr	r2, [r7, #12]
    66ea:	67da      	str	r2, [r3, #124]	; 0x7c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    66ec:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:149
}
    66ee:	4618      	mov	r0, r3
    66f0:	3714      	adds	r7, #20
    66f2:	46bd      	mov	sp, r7
    66f4:	f85d 7b04 	ldr.w	r7, [sp], #4
    66f8:	4770      	bx	lr
    66fa:	bf00      	nop
    66fc:	200003d8 	.word	0x200003d8
    6700:	40047000 	.word	0x40047000
    6704:	400ff0c0 	.word	0x400ff0c0
    6708:	4004c000 	.word	0x4004c000
    670c:	20000480 	.word	0x20000480

00006710 <BitIoLdd22_ClrVal>:
BitIoLdd22_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:263
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd22_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6710:	b480      	push	{r7}
    6712:	b083      	sub	sp, #12
    6714:	af00      	add	r7, sp, #0
    6716:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:265
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd22_MODULE_BASE_ADDRESS, BitIoLdd22_PORT_MASK);
    6718:	4b03      	ldr	r3, [pc, #12]	; (6728 <BitIoLdd22_ClrVal+0x18>)
    671a:	2202      	movs	r2, #2
    671c:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:266
}
    671e:	370c      	adds	r7, #12
    6720:	46bd      	mov	sp, r7
    6722:	f85d 7b04 	ldr.w	r7, [sp], #4
    6726:	4770      	bx	lr
    6728:	400ff0c0 	.word	0x400ff0c0

0000672c <BitIoLdd22_SetVal>:
BitIoLdd22_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:283
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd22_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    672c:	b480      	push	{r7}
    672e:	b083      	sub	sp, #12
    6730:	af00      	add	r7, sp, #0
    6732:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:285
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd22_MODULE_BASE_ADDRESS, BitIoLdd22_PORT_MASK);
    6734:	4b03      	ldr	r3, [pc, #12]	; (6744 <BitIoLdd22_SetVal+0x18>)
    6736:	2202      	movs	r2, #2
    6738:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd22.c:286
}
    673a:	370c      	adds	r7, #12
    673c:	46bd      	mov	sp, r7
    673e:	f85d 7b04 	ldr.w	r7, [sp], #4
    6742:	4770      	bx	lr
    6744:	400ff0c0 	.word	0x400ff0c0

00006748 <BitIoLdd23_Init>:
BitIoLdd23_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd23_Init(LDD_TUserData *UserDataPtr)
{
    6748:	b480      	push	{r7}
    674a:	b085      	sub	sp, #20
    674c:	af00      	add	r7, sp, #0
    674e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:127
  /* Allocate device structure */
  BitIoLdd23_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6750:	4b18      	ldr	r3, [pc, #96]	; (67b4 <BitIoLdd23_Init+0x6c>)
    6752:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6754:	68fb      	ldr	r3, [r7, #12]
    6756:	687a      	ldr	r2, [r7, #4]
    6758:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    675a:	4917      	ldr	r1, [pc, #92]	; (67b8 <BitIoLdd23_Init+0x70>)
    675c:	4b16      	ldr	r3, [pc, #88]	; (67b8 <BitIoLdd23_Init+0x70>)
    675e:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6762:	3318      	adds	r3, #24
    6764:	681b      	ldr	r3, [r3, #0]
    6766:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    676a:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    676e:	3318      	adds	r3, #24
    6770:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:134
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x80 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x80);
    6772:	4b12      	ldr	r3, [pc, #72]	; (67bc <BitIoLdd23_Init+0x74>)
    6774:	4a11      	ldr	r2, [pc, #68]	; (67bc <BitIoLdd23_Init+0x74>)
    6776:	6952      	ldr	r2, [r2, #20]
    6778:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    677c:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:137
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x80 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x80));
    677e:	4b0f      	ldr	r3, [pc, #60]	; (67bc <BitIoLdd23_Init+0x74>)
    6780:	4a0e      	ldr	r2, [pc, #56]	; (67bc <BitIoLdd23_Init+0x74>)
    6782:	6812      	ldr	r2, [r2, #0]
    6784:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    6788:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:140
  /* Initialization of pin routing */
  /* PORTD_PCR7: ISF=0,MUX=1 */
  PORTD_PCR7 = (uint32_t)((PORTD_PCR7 & (uint32_t)~(uint32_t)(
    678a:	4a0d      	ldr	r2, [pc, #52]	; (67c0 <BitIoLdd23_Init+0x78>)
    678c:	4b0c      	ldr	r3, [pc, #48]	; (67c0 <BitIoLdd23_Init+0x78>)
    678e:	69db      	ldr	r3, [r3, #28]
    6790:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6794:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6798:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    679c:	61d3      	str	r3, [r2, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd23_ID,DeviceDataPrv);
    679e:	4b09      	ldr	r3, [pc, #36]	; (67c4 <BitIoLdd23_Init+0x7c>)
    67a0:	68fa      	ldr	r2, [r7, #12]
    67a2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    67a6:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:149
}
    67a8:	4618      	mov	r0, r3
    67aa:	3714      	adds	r7, #20
    67ac:	46bd      	mov	sp, r7
    67ae:	f85d 7b04 	ldr.w	r7, [sp], #4
    67b2:	4770      	bx	lr
    67b4:	200003dc 	.word	0x200003dc
    67b8:	40047000 	.word	0x40047000
    67bc:	400ff0c0 	.word	0x400ff0c0
    67c0:	4004c000 	.word	0x4004c000
    67c4:	20000480 	.word	0x20000480

000067c8 <BitIoLdd23_ClrVal>:
BitIoLdd23_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:263
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd23_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    67c8:	b480      	push	{r7}
    67ca:	b083      	sub	sp, #12
    67cc:	af00      	add	r7, sp, #0
    67ce:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:265
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd23_MODULE_BASE_ADDRESS, BitIoLdd23_PORT_MASK);
    67d0:	4b03      	ldr	r3, [pc, #12]	; (67e0 <BitIoLdd23_ClrVal+0x18>)
    67d2:	2280      	movs	r2, #128	; 0x80
    67d4:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd23.c:266
}
    67d6:	370c      	adds	r7, #12
    67d8:	46bd      	mov	sp, r7
    67da:	f85d 7b04 	ldr.w	r7, [sp], #4
    67de:	4770      	bx	lr
    67e0:	400ff0c0 	.word	0x400ff0c0

000067e4 <BitIoLdd24_Init>:
BitIoLdd24_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd24_Init(LDD_TUserData *UserDataPtr)
{
    67e4:	b480      	push	{r7}
    67e6:	b085      	sub	sp, #20
    67e8:	af00      	add	r7, sp, #0
    67ea:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:127
  /* Allocate device structure */
  BitIoLdd24_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    67ec:	4b18      	ldr	r3, [pc, #96]	; (6850 <BitIoLdd24_Init+0x6c>)
    67ee:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    67f0:	68fb      	ldr	r3, [r7, #12]
    67f2:	687a      	ldr	r2, [r7, #4]
    67f4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTA=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
    67f6:	4917      	ldr	r1, [pc, #92]	; (6854 <BitIoLdd24_Init+0x70>)
    67f8:	4b16      	ldr	r3, [pc, #88]	; (6854 <BitIoLdd24_Init+0x70>)
    67fa:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    67fe:	3318      	adds	r3, #24
    6800:	681b      	ldr	r3, [r3, #0]
    6802:	f443 7200 	orr.w	r2, r3, #512	; 0x200
    6806:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    680a:	3318      	adds	r3, #24
    680c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:134
  /* Configure pin as output */
  /* GPIOA_PDDR: PDD|=0x0800 */
  GPIOA_PDDR |= GPIO_PDDR_PDD(0x0800);
    680e:	4b12      	ldr	r3, [pc, #72]	; (6858 <BitIoLdd24_Init+0x74>)
    6810:	4a11      	ldr	r2, [pc, #68]	; (6858 <BitIoLdd24_Init+0x74>)
    6812:	6952      	ldr	r2, [r2, #20]
    6814:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
    6818:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:137
  /* Set initialization value */
  /* GPIOA_PDOR: PDO&=~0x0800 */
  GPIOA_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0800));
    681a:	4b0f      	ldr	r3, [pc, #60]	; (6858 <BitIoLdd24_Init+0x74>)
    681c:	4a0e      	ldr	r2, [pc, #56]	; (6858 <BitIoLdd24_Init+0x74>)
    681e:	6812      	ldr	r2, [r2, #0]
    6820:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    6824:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:140
  /* Initialization of pin routing */
  /* PORTA_PCR11: ISF=0,MUX=1 */
  PORTA_PCR11 = (uint32_t)((PORTA_PCR11 & (uint32_t)~(uint32_t)(
    6826:	4a0d      	ldr	r2, [pc, #52]	; (685c <BitIoLdd24_Init+0x78>)
    6828:	4b0c      	ldr	r3, [pc, #48]	; (685c <BitIoLdd24_Init+0x78>)
    682a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    682c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6830:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6834:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6838:	62d3      	str	r3, [r2, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:147
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd24_ID,DeviceDataPrv);
    683a:	4b09      	ldr	r3, [pc, #36]	; (6860 <BitIoLdd24_Init+0x7c>)
    683c:	68fa      	ldr	r2, [r7, #12]
    683e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6842:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd24.c:149
}
    6844:	4618      	mov	r0, r3
    6846:	3714      	adds	r7, #20
    6848:	46bd      	mov	sp, r7
    684a:	f85d 7b04 	ldr.w	r7, [sp], #4
    684e:	4770      	bx	lr
    6850:	200003e0 	.word	0x200003e0
    6854:	40047000 	.word	0x40047000
    6858:	400ff000 	.word	0x400ff000
    685c:	40049000 	.word	0x40049000
    6860:	20000480 	.word	0x20000480

00006864 <BitIoLdd25_Init>:
BitIoLdd25_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd25_Init(LDD_TUserData *UserDataPtr)
{
    6864:	b480      	push	{r7}
    6866:	b085      	sub	sp, #20
    6868:	af00      	add	r7, sp, #0
    686a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:123
  /* Allocate device structure */
  BitIoLdd25_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    686c:	4b15      	ldr	r3, [pc, #84]	; (68c4 <BitIoLdd25_Init+0x60>)
    686e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6870:	68fb      	ldr	r3, [r7, #12]
    6872:	687a      	ldr	r2, [r7, #4]
    6874:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    6876:	4914      	ldr	r1, [pc, #80]	; (68c8 <BitIoLdd25_Init+0x64>)
    6878:	4b13      	ldr	r3, [pc, #76]	; (68c8 <BitIoLdd25_Init+0x64>)
    687a:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    687e:	3318      	adds	r3, #24
    6880:	681b      	ldr	r3, [r3, #0]
    6882:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    6886:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    688a:	3318      	adds	r3, #24
    688c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:130
  /* Configure pin as input */
  /* GPIOB_PDDR: PDD&=~0x00020000 */
  GPIOB_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x00020000));
    688e:	4b0f      	ldr	r3, [pc, #60]	; (68cc <BitIoLdd25_Init+0x68>)
    6890:	4a0e      	ldr	r2, [pc, #56]	; (68cc <BitIoLdd25_Init+0x68>)
    6892:	6952      	ldr	r2, [r2, #20]
    6894:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
    6898:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:133
  /* Initialization of pin routing */
  /* PORTB_PCR17: ISF=0,MUX=1 */
  PORTB_PCR17 = (uint32_t)((PORTB_PCR17 & (uint32_t)~(uint32_t)(
    689a:	4a0d      	ldr	r2, [pc, #52]	; (68d0 <BitIoLdd25_Init+0x6c>)
    689c:	4b0c      	ldr	r3, [pc, #48]	; (68d0 <BitIoLdd25_Init+0x6c>)
    689e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    68a0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    68a4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    68a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    68ac:	6453      	str	r3, [r2, #68]	; 0x44
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:140
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd25_ID,DeviceDataPrv);
    68ae:	4b09      	ldr	r3, [pc, #36]	; (68d4 <BitIoLdd25_Init+0x70>)
    68b0:	68fa      	ldr	r2, [r7, #12]
    68b2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    68b6:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd25.c:142
}
    68b8:	4618      	mov	r0, r3
    68ba:	3714      	adds	r7, #20
    68bc:	46bd      	mov	sp, r7
    68be:	f85d 7b04 	ldr.w	r7, [sp], #4
    68c2:	4770      	bx	lr
    68c4:	200003e4 	.word	0x200003e4
    68c8:	40047000 	.word	0x40047000
    68cc:	400ff040 	.word	0x400ff040
    68d0:	4004a000 	.word	0x4004a000
    68d4:	20000480 	.word	0x20000480

000068d8 <BitIoLdd26_Init>:
BitIoLdd26_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd26_Init(LDD_TUserData *UserDataPtr)
{
    68d8:	b480      	push	{r7}
    68da:	b085      	sub	sp, #20
    68dc:	af00      	add	r7, sp, #0
    68de:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:123
  /* Allocate device structure */
  BitIoLdd26_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    68e0:	4b15      	ldr	r3, [pc, #84]	; (6938 <BitIoLdd26_Init+0x60>)
    68e2:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    68e4:	68fb      	ldr	r3, [r7, #12]
    68e6:	687a      	ldr	r2, [r7, #4]
    68e8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    68ea:	4914      	ldr	r1, [pc, #80]	; (693c <BitIoLdd26_Init+0x64>)
    68ec:	4b13      	ldr	r3, [pc, #76]	; (693c <BitIoLdd26_Init+0x64>)
    68ee:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    68f2:	3318      	adds	r3, #24
    68f4:	681b      	ldr	r3, [r3, #0]
    68f6:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    68fa:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    68fe:	3318      	adds	r3, #24
    6900:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:130
  /* Configure pin as input */
  /* GPIOE_PDDR: PDD&=~1 */
  GPIOE_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x01));
    6902:	4b0f      	ldr	r3, [pc, #60]	; (6940 <BitIoLdd26_Init+0x68>)
    6904:	4a0e      	ldr	r2, [pc, #56]	; (6940 <BitIoLdd26_Init+0x68>)
    6906:	6952      	ldr	r2, [r2, #20]
    6908:	f022 0201 	bic.w	r2, r2, #1
    690c:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:133
  /* Initialization of pin routing */
  /* PORTE_PCR0: ISF=0,MUX=1 */
  PORTE_PCR0 = (uint32_t)((PORTE_PCR0 & (uint32_t)~(uint32_t)(
    690e:	4a0d      	ldr	r2, [pc, #52]	; (6944 <BitIoLdd26_Init+0x6c>)
    6910:	4b0c      	ldr	r3, [pc, #48]	; (6944 <BitIoLdd26_Init+0x6c>)
    6912:	681b      	ldr	r3, [r3, #0]
    6914:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6918:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    691c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6920:	6013      	str	r3, [r2, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd26_ID,DeviceDataPrv);
    6922:	4b09      	ldr	r3, [pc, #36]	; (6948 <BitIoLdd26_Init+0x70>)
    6924:	68fa      	ldr	r2, [r7, #12]
    6926:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    692a:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:142
}
    692c:	4618      	mov	r0, r3
    692e:	3714      	adds	r7, #20
    6930:	46bd      	mov	sp, r7
    6932:	f85d 7b04 	ldr.w	r7, [sp], #4
    6936:	4770      	bx	lr
    6938:	200003e8 	.word	0x200003e8
    693c:	40047000 	.word	0x40047000
    6940:	400ff100 	.word	0x400ff100
    6944:	4004d000 	.word	0x4004d000
    6948:	20000480 	.word	0x20000480

0000694c <BitIoLdd26_GetVal>:
BitIoLdd26_GetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:164
**                           <false> - logical "0" (Low level)
**                           <true> - logical "1" (High level)
*/
/* ===================================================================*/
bool BitIoLdd26_GetVal(LDD_TDeviceData *DeviceDataPtr)
{
    694c:	b480      	push	{r7}
    694e:	b085      	sub	sp, #20
    6950:	af00      	add	r7, sp, #0
    6952:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:168
  uint32_t PortData;                   /* Port data masked according to the bit used */

  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  PortData = GPIO_PDD_GetPortDataInput(BitIoLdd26_MODULE_BASE_ADDRESS) & BitIoLdd26_PORT_MASK;
    6954:	4b08      	ldr	r3, [pc, #32]	; (6978 <BitIoLdd26_GetVal+0x2c>)
    6956:	691b      	ldr	r3, [r3, #16]
    6958:	f003 0301 	and.w	r3, r3, #1
    695c:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:169
  return (PortData != 0U) ? (bool)TRUE : (bool)FALSE;
    695e:	68fb      	ldr	r3, [r7, #12]
    6960:	2b00      	cmp	r3, #0
    6962:	bf0c      	ite	eq
    6964:	2300      	moveq	r3, #0
    6966:	2301      	movne	r3, #1
    6968:	b2db      	uxtb	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd26.c:170
}
    696a:	4618      	mov	r0, r3
    696c:	3714      	adds	r7, #20
    696e:	46bd      	mov	sp, r7
    6970:	f85d 7b04 	ldr.w	r7, [sp], #4
    6974:	4770      	bx	lr
    6976:	bf00      	nop
    6978:	400ff100 	.word	0x400ff100

0000697c <BitIoLdd27_Init>:
BitIoLdd27_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd27_Init(LDD_TUserData *UserDataPtr)
{
    697c:	b480      	push	{r7}
    697e:	b085      	sub	sp, #20
    6980:	af00      	add	r7, sp, #0
    6982:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:126
  /* Allocate device structure */
  BitIoLdd27_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6984:	4b18      	ldr	r3, [pc, #96]	; (69e8 <BitIoLdd27_Init+0x6c>)
    6986:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6988:	68fb      	ldr	r3, [r7, #12]
    698a:	687a      	ldr	r2, [r7, #4]
    698c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    698e:	4917      	ldr	r1, [pc, #92]	; (69ec <BitIoLdd27_Init+0x70>)
    6990:	4b16      	ldr	r3, [pc, #88]	; (69ec <BitIoLdd27_Init+0x70>)
    6992:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6996:	3318      	adds	r3, #24
    6998:	681b      	ldr	r3, [r3, #0]
    699a:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    699e:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    69a2:	3318      	adds	r3, #24
    69a4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:133
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=8 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x08);
    69a6:	4b12      	ldr	r3, [pc, #72]	; (69f0 <BitIoLdd27_Init+0x74>)
    69a8:	4a11      	ldr	r2, [pc, #68]	; (69f0 <BitIoLdd27_Init+0x74>)
    69aa:	6952      	ldr	r2, [r2, #20]
    69ac:	f042 0208 	orr.w	r2, r2, #8
    69b0:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:136
  /* Set initialization value */
  /* GPIOE_PDOR: PDO|=8 */
  GPIOE_PDOR |= GPIO_PDOR_PDO(0x08);
    69b2:	4b0f      	ldr	r3, [pc, #60]	; (69f0 <BitIoLdd27_Init+0x74>)
    69b4:	4a0e      	ldr	r2, [pc, #56]	; (69f0 <BitIoLdd27_Init+0x74>)
    69b6:	6812      	ldr	r2, [r2, #0]
    69b8:	f042 0208 	orr.w	r2, r2, #8
    69bc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:139
  /* Initialization of pin routing */
  /* PORTE_PCR3: ISF=0,MUX=1 */
  PORTE_PCR3 = (uint32_t)((PORTE_PCR3 & (uint32_t)~(uint32_t)(
    69be:	4a0d      	ldr	r2, [pc, #52]	; (69f4 <BitIoLdd27_Init+0x78>)
    69c0:	4b0c      	ldr	r3, [pc, #48]	; (69f4 <BitIoLdd27_Init+0x78>)
    69c2:	68db      	ldr	r3, [r3, #12]
    69c4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    69c8:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    69cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    69d0:	60d3      	str	r3, [r2, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:146
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd27_ID,DeviceDataPrv);
    69d2:	4b09      	ldr	r3, [pc, #36]	; (69f8 <BitIoLdd27_Init+0x7c>)
    69d4:	68fa      	ldr	r2, [r7, #12]
    69d6:	63da      	str	r2, [r3, #60]	; 0x3c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    69d8:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd27.c:148
}
    69da:	4618      	mov	r0, r3
    69dc:	3714      	adds	r7, #20
    69de:	46bd      	mov	sp, r7
    69e0:	f85d 7b04 	ldr.w	r7, [sp], #4
    69e4:	4770      	bx	lr
    69e6:	bf00      	nop
    69e8:	200003ec 	.word	0x200003ec
    69ec:	40047000 	.word	0x40047000
    69f0:	400ff100 	.word	0x400ff100
    69f4:	4004d000 	.word	0x4004d000
    69f8:	20000480 	.word	0x20000480

000069fc <BitIoLdd28_Init>:
BitIoLdd28_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd28_Init(LDD_TUserData *UserDataPtr)
{
    69fc:	b480      	push	{r7}
    69fe:	b085      	sub	sp, #20
    6a00:	af00      	add	r7, sp, #0
    6a02:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:123
  /* Allocate device structure */
  BitIoLdd28_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6a04:	4b15      	ldr	r3, [pc, #84]	; (6a5c <BitIoLdd28_Init+0x60>)
    6a06:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6a08:	68fb      	ldr	r3, [r7, #12]
    6a0a:	687a      	ldr	r2, [r7, #4]
    6a0c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    6a0e:	4914      	ldr	r1, [pc, #80]	; (6a60 <BitIoLdd28_Init+0x64>)
    6a10:	4b13      	ldr	r3, [pc, #76]	; (6a60 <BitIoLdd28_Init+0x64>)
    6a12:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6a16:	3318      	adds	r3, #24
    6a18:	681b      	ldr	r3, [r3, #0]
    6a1a:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    6a1e:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6a22:	3318      	adds	r3, #24
    6a24:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:130
  /* Configure pin as input */
  /* GPIOE_PDDR: PDD&=~4 */
  GPIOE_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x04));
    6a26:	4b0f      	ldr	r3, [pc, #60]	; (6a64 <BitIoLdd28_Init+0x68>)
    6a28:	4a0e      	ldr	r2, [pc, #56]	; (6a64 <BitIoLdd28_Init+0x68>)
    6a2a:	6952      	ldr	r2, [r2, #20]
    6a2c:	f022 0204 	bic.w	r2, r2, #4
    6a30:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:133
  /* Initialization of pin routing */
  /* PORTE_PCR2: ISF=0,MUX=1 */
  PORTE_PCR2 = (uint32_t)((PORTE_PCR2 & (uint32_t)~(uint32_t)(
    6a32:	4a0d      	ldr	r2, [pc, #52]	; (6a68 <BitIoLdd28_Init+0x6c>)
    6a34:	4b0c      	ldr	r3, [pc, #48]	; (6a68 <BitIoLdd28_Init+0x6c>)
    6a36:	689b      	ldr	r3, [r3, #8]
    6a38:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6a3c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6a40:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6a44:	6093      	str	r3, [r2, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd28_ID,DeviceDataPrv);
    6a46:	4b09      	ldr	r3, [pc, #36]	; (6a6c <BitIoLdd28_Init+0x70>)
    6a48:	68fa      	ldr	r2, [r7, #12]
    6a4a:	641a      	str	r2, [r3, #64]	; 0x40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6a4c:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd28.c:142
}
    6a4e:	4618      	mov	r0, r3
    6a50:	3714      	adds	r7, #20
    6a52:	46bd      	mov	sp, r7
    6a54:	f85d 7b04 	ldr.w	r7, [sp], #4
    6a58:	4770      	bx	lr
    6a5a:	bf00      	nop
    6a5c:	200003f0 	.word	0x200003f0
    6a60:	40047000 	.word	0x40047000
    6a64:	400ff100 	.word	0x400ff100
    6a68:	4004d000 	.word	0x4004d000
    6a6c:	20000480 	.word	0x20000480

00006a70 <BitIoLdd29_Init>:
BitIoLdd29_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd29_Init(LDD_TUserData *UserDataPtr)
{
    6a70:	b480      	push	{r7}
    6a72:	b085      	sub	sp, #20
    6a74:	af00      	add	r7, sp, #0
    6a76:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:126
  /* Allocate device structure */
  BitIoLdd29_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6a78:	4b18      	ldr	r3, [pc, #96]	; (6adc <BitIoLdd29_Init+0x6c>)
    6a7a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6a7c:	68fb      	ldr	r3, [r7, #12]
    6a7e:	687a      	ldr	r2, [r7, #4]
    6a80:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    6a82:	4917      	ldr	r1, [pc, #92]	; (6ae0 <BitIoLdd29_Init+0x70>)
    6a84:	4b16      	ldr	r3, [pc, #88]	; (6ae0 <BitIoLdd29_Init+0x70>)
    6a86:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6a8a:	3318      	adds	r3, #24
    6a8c:	681b      	ldr	r3, [r3, #0]
    6a8e:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    6a92:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6a96:	3318      	adds	r3, #24
    6a98:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:133
  /* Configure pin as output */
  /* GPIOE_PDDR: PDD|=2 */
  GPIOE_PDDR |= GPIO_PDDR_PDD(0x02);
    6a9a:	4b12      	ldr	r3, [pc, #72]	; (6ae4 <BitIoLdd29_Init+0x74>)
    6a9c:	4a11      	ldr	r2, [pc, #68]	; (6ae4 <BitIoLdd29_Init+0x74>)
    6a9e:	6952      	ldr	r2, [r2, #20]
    6aa0:	f042 0202 	orr.w	r2, r2, #2
    6aa4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:136
  /* Set initialization value */
  /* GPIOE_PDOR: PDO|=2 */
  GPIOE_PDOR |= GPIO_PDOR_PDO(0x02);
    6aa6:	4b0f      	ldr	r3, [pc, #60]	; (6ae4 <BitIoLdd29_Init+0x74>)
    6aa8:	4a0e      	ldr	r2, [pc, #56]	; (6ae4 <BitIoLdd29_Init+0x74>)
    6aaa:	6812      	ldr	r2, [r2, #0]
    6aac:	f042 0202 	orr.w	r2, r2, #2
    6ab0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:139
  /* Initialization of pin routing */
  /* PORTE_PCR1: ISF=0,MUX=1 */
  PORTE_PCR1 = (uint32_t)((PORTE_PCR1 & (uint32_t)~(uint32_t)(
    6ab2:	4a0d      	ldr	r2, [pc, #52]	; (6ae8 <BitIoLdd29_Init+0x78>)
    6ab4:	4b0c      	ldr	r3, [pc, #48]	; (6ae8 <BitIoLdd29_Init+0x78>)
    6ab6:	685b      	ldr	r3, [r3, #4]
    6ab8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6abc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6ac0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6ac4:	6053      	str	r3, [r2, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:146
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd29_ID,DeviceDataPrv);
    6ac6:	4b09      	ldr	r3, [pc, #36]	; (6aec <BitIoLdd29_Init+0x7c>)
    6ac8:	68fa      	ldr	r2, [r7, #12]
    6aca:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6ace:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:148
}
    6ad0:	4618      	mov	r0, r3
    6ad2:	3714      	adds	r7, #20
    6ad4:	46bd      	mov	sp, r7
    6ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
    6ada:	4770      	bx	lr
    6adc:	200003f4 	.word	0x200003f4
    6ae0:	40047000 	.word	0x40047000
    6ae4:	400ff100 	.word	0x400ff100
    6ae8:	4004d000 	.word	0x4004d000
    6aec:	20000480 	.word	0x20000480

00006af0 <BitIoLdd29_ClrVal>:
BitIoLdd29_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:227
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd29_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6af0:	b480      	push	{r7}
    6af2:	b083      	sub	sp, #12
    6af4:	af00      	add	r7, sp, #0
    6af6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:229
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd29_MODULE_BASE_ADDRESS, BitIoLdd29_PORT_MASK);
    6af8:	4b03      	ldr	r3, [pc, #12]	; (6b08 <BitIoLdd29_ClrVal+0x18>)
    6afa:	2202      	movs	r2, #2
    6afc:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd29.c:230
}
    6afe:	370c      	adds	r7, #12
    6b00:	46bd      	mov	sp, r7
    6b02:	f85d 7b04 	ldr.w	r7, [sp], #4
    6b06:	4770      	bx	lr
    6b08:	400ff100 	.word	0x400ff100

00006b0c <BitIoLdd3_Init>:
BitIoLdd3_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd3_Init(LDD_TUserData *UserDataPtr)
{
    6b0c:	b480      	push	{r7}
    6b0e:	b085      	sub	sp, #20
    6b10:	af00      	add	r7, sp, #0
    6b12:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:126
  /* Allocate device structure */
  BitIoLdd3_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6b14:	4b18      	ldr	r3, [pc, #96]	; (6b78 <BitIoLdd3_Init+0x6c>)
    6b16:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6b18:	68fb      	ldr	r3, [r7, #12]
    6b1a:	687a      	ldr	r2, [r7, #4]
    6b1c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTC=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    6b1e:	4917      	ldr	r1, [pc, #92]	; (6b7c <BitIoLdd3_Init+0x70>)
    6b20:	4b16      	ldr	r3, [pc, #88]	; (6b7c <BitIoLdd3_Init+0x70>)
    6b22:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6b26:	3318      	adds	r3, #24
    6b28:	681b      	ldr	r3, [r3, #0]
    6b2a:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
    6b2e:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6b32:	3318      	adds	r3, #24
    6b34:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:133
  /* Configure pin as output */
  /* GPIOC_PDDR: PDD|=0x0400 */
  GPIOC_PDDR |= GPIO_PDDR_PDD(0x0400);
    6b36:	4b12      	ldr	r3, [pc, #72]	; (6b80 <BitIoLdd3_Init+0x74>)
    6b38:	4a11      	ldr	r2, [pc, #68]	; (6b80 <BitIoLdd3_Init+0x74>)
    6b3a:	6952      	ldr	r2, [r2, #20]
    6b3c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    6b40:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:136
  /* Set initialization value */
  /* GPIOC_PDOR: PDO&=~0x0400 */
  GPIOC_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0400));
    6b42:	4b0f      	ldr	r3, [pc, #60]	; (6b80 <BitIoLdd3_Init+0x74>)
    6b44:	4a0e      	ldr	r2, [pc, #56]	; (6b80 <BitIoLdd3_Init+0x74>)
    6b46:	6812      	ldr	r2, [r2, #0]
    6b48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    6b4c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:139
  /* Initialization of pin routing */
  /* PORTC_PCR10: ISF=0,MUX=1 */
  PORTC_PCR10 = (uint32_t)((PORTC_PCR10 & (uint32_t)~(uint32_t)(
    6b4e:	4a0d      	ldr	r2, [pc, #52]	; (6b84 <BitIoLdd3_Init+0x78>)
    6b50:	4b0c      	ldr	r3, [pc, #48]	; (6b84 <BitIoLdd3_Init+0x78>)
    6b52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    6b54:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6b58:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6b5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6b60:	6293      	str	r3, [r2, #40]	; 0x28
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd3_ID,DeviceDataPrv);
    6b62:	4b09      	ldr	r3, [pc, #36]	; (6b88 <BitIoLdd3_Init+0x7c>)
    6b64:	68fa      	ldr	r2, [r7, #12]
    6b66:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6b68:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:148
}
    6b6a:	4618      	mov	r0, r3
    6b6c:	3714      	adds	r7, #20
    6b6e:	46bd      	mov	sp, r7
    6b70:	f85d 7b04 	ldr.w	r7, [sp], #4
    6b74:	4770      	bx	lr
    6b76:	bf00      	nop
    6b78:	200003f8 	.word	0x200003f8
    6b7c:	40047000 	.word	0x40047000
    6b80:	400ff080 	.word	0x400ff080
    6b84:	4004b000 	.word	0x4004b000
    6b88:	20000480 	.word	0x20000480

00006b8c <BitIoLdd3_ClrVal>:
BitIoLdd3_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:193
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd3_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6b8c:	b480      	push	{r7}
    6b8e:	b083      	sub	sp, #12
    6b90:	af00      	add	r7, sp, #0
    6b92:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:195
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd3_MODULE_BASE_ADDRESS, BitIoLdd3_PORT_MASK);
    6b94:	4b04      	ldr	r3, [pc, #16]	; (6ba8 <BitIoLdd3_ClrVal+0x1c>)
    6b96:	f44f 6280 	mov.w	r2, #1024	; 0x400
    6b9a:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:196
}
    6b9c:	370c      	adds	r7, #12
    6b9e:	46bd      	mov	sp, r7
    6ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
    6ba4:	4770      	bx	lr
    6ba6:	bf00      	nop
    6ba8:	400ff080 	.word	0x400ff080

00006bac <BitIoLdd3_SetVal>:
BitIoLdd3_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:213
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd3_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6bac:	b480      	push	{r7}
    6bae:	b083      	sub	sp, #12
    6bb0:	af00      	add	r7, sp, #0
    6bb2:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:215
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd3_MODULE_BASE_ADDRESS, BitIoLdd3_PORT_MASK);
    6bb4:	4b04      	ldr	r3, [pc, #16]	; (6bc8 <BitIoLdd3_SetVal+0x1c>)
    6bb6:	f44f 6280 	mov.w	r2, #1024	; 0x400
    6bba:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd3.c:216
}
    6bbc:	370c      	adds	r7, #12
    6bbe:	46bd      	mov	sp, r7
    6bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
    6bc4:	4770      	bx	lr
    6bc6:	bf00      	nop
    6bc8:	400ff080 	.word	0x400ff080

00006bcc <BitIoLdd30_Init>:
BitIoLdd30_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:118
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd30_Init(LDD_TUserData *UserDataPtr)
{
    6bcc:	b480      	push	{r7}
    6bce:	b085      	sub	sp, #20
    6bd0:	af00      	add	r7, sp, #0
    6bd2:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:123
  /* Allocate device structure */
  BitIoLdd30_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6bd4:	4b15      	ldr	r3, [pc, #84]	; (6c2c <BitIoLdd30_Init+0x60>)
    6bd6:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:124
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6bd8:	68fb      	ldr	r3, [r7, #12]
    6bda:	687a      	ldr	r2, [r7, #4]
    6bdc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:127
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTE=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
    6bde:	4914      	ldr	r1, [pc, #80]	; (6c30 <BitIoLdd30_Init+0x64>)
    6be0:	4b13      	ldr	r3, [pc, #76]	; (6c30 <BitIoLdd30_Init+0x64>)
    6be2:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6be6:	3318      	adds	r3, #24
    6be8:	681b      	ldr	r3, [r3, #0]
    6bea:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    6bee:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6bf2:	3318      	adds	r3, #24
    6bf4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:130
  /* Configure pin as input */
  /* GPIOE_PDDR: PDD&=~0x10 */
  GPIOE_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x10));
    6bf6:	4b0f      	ldr	r3, [pc, #60]	; (6c34 <BitIoLdd30_Init+0x68>)
    6bf8:	4a0e      	ldr	r2, [pc, #56]	; (6c34 <BitIoLdd30_Init+0x68>)
    6bfa:	6952      	ldr	r2, [r2, #20]
    6bfc:	f022 0210 	bic.w	r2, r2, #16
    6c00:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:133
  /* Initialization of pin routing */
  /* PORTE_PCR4: ISF=0,MUX=1 */
  PORTE_PCR4 = (uint32_t)((PORTE_PCR4 & (uint32_t)~(uint32_t)(
    6c02:	4a0d      	ldr	r2, [pc, #52]	; (6c38 <BitIoLdd30_Init+0x6c>)
    6c04:	4b0c      	ldr	r3, [pc, #48]	; (6c38 <BitIoLdd30_Init+0x6c>)
    6c06:	691b      	ldr	r3, [r3, #16]
    6c08:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6c0c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6c10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6c14:	6113      	str	r3, [r2, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:140
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd30_ID,DeviceDataPrv);
    6c16:	4b09      	ldr	r3, [pc, #36]	; (6c3c <BitIoLdd30_Init+0x70>)
    6c18:	68fa      	ldr	r2, [r7, #12]
    6c1a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:141
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6c1e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd30.c:142
}
    6c20:	4618      	mov	r0, r3
    6c22:	3714      	adds	r7, #20
    6c24:	46bd      	mov	sp, r7
    6c26:	f85d 7b04 	ldr.w	r7, [sp], #4
    6c2a:	4770      	bx	lr
    6c2c:	200003fc 	.word	0x200003fc
    6c30:	40047000 	.word	0x40047000
    6c34:	400ff100 	.word	0x400ff100
    6c38:	4004d000 	.word	0x4004d000
    6c3c:	20000480 	.word	0x20000480

00006c40 <BitIoLdd31_Init>:
BitIoLdd31_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd31_Init(LDD_TUserData *UserDataPtr)
{
    6c40:	b480      	push	{r7}
    6c42:	b085      	sub	sp, #20
    6c44:	af00      	add	r7, sp, #0
    6c46:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:126
  /* Allocate device structure */
  BitIoLdd31_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6c48:	4b18      	ldr	r3, [pc, #96]	; (6cac <BitIoLdd31_Init+0x6c>)
    6c4a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6c4c:	68fb      	ldr	r3, [r7, #12]
    6c4e:	687a      	ldr	r2, [r7, #4]
    6c50:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    6c52:	4917      	ldr	r1, [pc, #92]	; (6cb0 <BitIoLdd31_Init+0x70>)
    6c54:	4b16      	ldr	r3, [pc, #88]	; (6cb0 <BitIoLdd31_Init+0x70>)
    6c56:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6c5a:	3318      	adds	r3, #24
    6c5c:	681b      	ldr	r3, [r3, #0]
    6c5e:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    6c62:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6c66:	3318      	adds	r3, #24
    6c68:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:133
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x00010000 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x00010000);
    6c6a:	4b12      	ldr	r3, [pc, #72]	; (6cb4 <BitIoLdd31_Init+0x74>)
    6c6c:	4a11      	ldr	r2, [pc, #68]	; (6cb4 <BitIoLdd31_Init+0x74>)
    6c6e:	6952      	ldr	r2, [r2, #20]
    6c70:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
    6c74:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:136
  /* Set initialization value */
  /* GPIOB_PDOR: PDO|=0x00010000 */
  GPIOB_PDOR |= GPIO_PDOR_PDO(0x00010000);
    6c76:	4b0f      	ldr	r3, [pc, #60]	; (6cb4 <BitIoLdd31_Init+0x74>)
    6c78:	4a0e      	ldr	r2, [pc, #56]	; (6cb4 <BitIoLdd31_Init+0x74>)
    6c7a:	6812      	ldr	r2, [r2, #0]
    6c7c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
    6c80:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:139
  /* Initialization of pin routing */
  /* PORTB_PCR16: ISF=0,MUX=1 */
  PORTB_PCR16 = (uint32_t)((PORTB_PCR16 & (uint32_t)~(uint32_t)(
    6c82:	4a0d      	ldr	r2, [pc, #52]	; (6cb8 <BitIoLdd31_Init+0x78>)
    6c84:	4b0c      	ldr	r3, [pc, #48]	; (6cb8 <BitIoLdd31_Init+0x78>)
    6c86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    6c88:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6c8c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6c90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6c94:	6413      	str	r3, [r2, #64]	; 0x40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd31_ID,DeviceDataPrv);
    6c96:	4b09      	ldr	r3, [pc, #36]	; (6cbc <BitIoLdd31_Init+0x7c>)
    6c98:	68fa      	ldr	r2, [r7, #12]
    6c9a:	645a      	str	r2, [r3, #68]	; 0x44
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6c9c:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd31.c:148
}
    6c9e:	4618      	mov	r0, r3
    6ca0:	3714      	adds	r7, #20
    6ca2:	46bd      	mov	sp, r7
    6ca4:	f85d 7b04 	ldr.w	r7, [sp], #4
    6ca8:	4770      	bx	lr
    6caa:	bf00      	nop
    6cac:	20000400 	.word	0x20000400
    6cb0:	40047000 	.word	0x40047000
    6cb4:	400ff040 	.word	0x400ff040
    6cb8:	4004a000 	.word	0x4004a000
    6cbc:	20000480 	.word	0x20000480

00006cc0 <BitIoLdd32_Init>:
BitIoLdd32_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd32_Init(LDD_TUserData *UserDataPtr)
{
    6cc0:	b480      	push	{r7}
    6cc2:	b085      	sub	sp, #20
    6cc4:	af00      	add	r7, sp, #0
    6cc6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:126
  /* Allocate device structure */
  BitIoLdd32_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6cc8:	4b18      	ldr	r3, [pc, #96]	; (6d2c <BitIoLdd32_Init+0x6c>)
    6cca:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6ccc:	68fb      	ldr	r3, [r7, #12]
    6cce:	687a      	ldr	r2, [r7, #4]
    6cd0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTC=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    6cd2:	4917      	ldr	r1, [pc, #92]	; (6d30 <BitIoLdd32_Init+0x70>)
    6cd4:	4b16      	ldr	r3, [pc, #88]	; (6d30 <BitIoLdd32_Init+0x70>)
    6cd6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6cda:	3318      	adds	r3, #24
    6cdc:	681b      	ldr	r3, [r3, #0]
    6cde:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
    6ce2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6ce6:	3318      	adds	r3, #24
    6ce8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:133
  /* Configure pin as output */
  /* GPIOC_PDDR: PDD|=0x4000 */
  GPIOC_PDDR |= GPIO_PDDR_PDD(0x4000);
    6cea:	4b12      	ldr	r3, [pc, #72]	; (6d34 <BitIoLdd32_Init+0x74>)
    6cec:	4a11      	ldr	r2, [pc, #68]	; (6d34 <BitIoLdd32_Init+0x74>)
    6cee:	6952      	ldr	r2, [r2, #20]
    6cf0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
    6cf4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:136
  /* Set initialization value */
  /* GPIOC_PDOR: PDO&=~0x4000 */
  GPIOC_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x4000));
    6cf6:	4b0f      	ldr	r3, [pc, #60]	; (6d34 <BitIoLdd32_Init+0x74>)
    6cf8:	4a0e      	ldr	r2, [pc, #56]	; (6d34 <BitIoLdd32_Init+0x74>)
    6cfa:	6812      	ldr	r2, [r2, #0]
    6cfc:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
    6d00:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:139
  /* Initialization of pin routing */
  /* PORTC_PCR14: ISF=0,MUX=1 */
  PORTC_PCR14 = (uint32_t)((PORTC_PCR14 & (uint32_t)~(uint32_t)(
    6d02:	4a0d      	ldr	r2, [pc, #52]	; (6d38 <BitIoLdd32_Init+0x78>)
    6d04:	4b0c      	ldr	r3, [pc, #48]	; (6d38 <BitIoLdd32_Init+0x78>)
    6d06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    6d08:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6d0c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6d10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6d14:	6393      	str	r3, [r2, #56]	; 0x38
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd32_ID,DeviceDataPrv);
    6d16:	4b09      	ldr	r3, [pc, #36]	; (6d3c <BitIoLdd32_Init+0x7c>)
    6d18:	68fa      	ldr	r2, [r7, #12]
    6d1a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6d1e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd32.c:148
}
    6d20:	4618      	mov	r0, r3
    6d22:	3714      	adds	r7, #20
    6d24:	46bd      	mov	sp, r7
    6d26:	f85d 7b04 	ldr.w	r7, [sp], #4
    6d2a:	4770      	bx	lr
    6d2c:	20000404 	.word	0x20000404
    6d30:	40047000 	.word	0x40047000
    6d34:	400ff080 	.word	0x400ff080
    6d38:	4004b000 	.word	0x4004b000
    6d3c:	20000480 	.word	0x20000480

00006d40 <BitIoLdd33_Init>:
BitIoLdd33_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd33_Init(LDD_TUserData *UserDataPtr)
{
    6d40:	b480      	push	{r7}
    6d42:	b085      	sub	sp, #20
    6d44:	af00      	add	r7, sp, #0
    6d46:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:126
  /* Allocate device structure */
  BitIoLdd33_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6d48:	4b18      	ldr	r3, [pc, #96]	; (6dac <BitIoLdd33_Init+0x6c>)
    6d4a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6d4c:	68fb      	ldr	r3, [r7, #12]
    6d4e:	687a      	ldr	r2, [r7, #4]
    6d50:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    6d52:	4917      	ldr	r1, [pc, #92]	; (6db0 <BitIoLdd33_Init+0x70>)
    6d54:	4b16      	ldr	r3, [pc, #88]	; (6db0 <BitIoLdd33_Init+0x70>)
    6d56:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6d5a:	3318      	adds	r3, #24
    6d5c:	681b      	ldr	r3, [r3, #0]
    6d5e:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    6d62:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6d66:	3318      	adds	r3, #24
    6d68:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:133
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x1000 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x1000);
    6d6a:	4b12      	ldr	r3, [pc, #72]	; (6db4 <BitIoLdd33_Init+0x74>)
    6d6c:	4a11      	ldr	r2, [pc, #68]	; (6db4 <BitIoLdd33_Init+0x74>)
    6d6e:	6952      	ldr	r2, [r2, #20]
    6d70:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
    6d74:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:136
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x1000 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x1000));
    6d76:	4b0f      	ldr	r3, [pc, #60]	; (6db4 <BitIoLdd33_Init+0x74>)
    6d78:	4a0e      	ldr	r2, [pc, #56]	; (6db4 <BitIoLdd33_Init+0x74>)
    6d7a:	6812      	ldr	r2, [r2, #0]
    6d7c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
    6d80:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:139
  /* Initialization of pin routing */
  /* PORTB_PCR12: ISF=0,MUX=1 */
  PORTB_PCR12 = (uint32_t)((PORTB_PCR12 & (uint32_t)~(uint32_t)(
    6d82:	4a0d      	ldr	r2, [pc, #52]	; (6db8 <BitIoLdd33_Init+0x78>)
    6d84:	4b0c      	ldr	r3, [pc, #48]	; (6db8 <BitIoLdd33_Init+0x78>)
    6d86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    6d88:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6d8c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6d90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6d94:	6313      	str	r3, [r2, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd33_ID,DeviceDataPrv);
    6d96:	4b09      	ldr	r3, [pc, #36]	; (6dbc <BitIoLdd33_Init+0x7c>)
    6d98:	68fa      	ldr	r2, [r7, #12]
    6d9a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6d9e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:148
}
    6da0:	4618      	mov	r0, r3
    6da2:	3714      	adds	r7, #20
    6da4:	46bd      	mov	sp, r7
    6da6:	f85d 7b04 	ldr.w	r7, [sp], #4
    6daa:	4770      	bx	lr
    6dac:	20000408 	.word	0x20000408
    6db0:	40047000 	.word	0x40047000
    6db4:	400ff040 	.word	0x400ff040
    6db8:	4004a000 	.word	0x4004a000
    6dbc:	20000480 	.word	0x20000480

00006dc0 <BitIoLdd33_ClrVal>:
BitIoLdd33_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:227
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd33_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6dc0:	b480      	push	{r7}
    6dc2:	b083      	sub	sp, #12
    6dc4:	af00      	add	r7, sp, #0
    6dc6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:229
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd33_MODULE_BASE_ADDRESS, BitIoLdd33_PORT_MASK);
    6dc8:	4b04      	ldr	r3, [pc, #16]	; (6ddc <BitIoLdd33_ClrVal+0x1c>)
    6dca:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    6dce:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:230
}
    6dd0:	370c      	adds	r7, #12
    6dd2:	46bd      	mov	sp, r7
    6dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
    6dd8:	4770      	bx	lr
    6dda:	bf00      	nop
    6ddc:	400ff040 	.word	0x400ff040

00006de0 <BitIoLdd33_SetVal>:
BitIoLdd33_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:247
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd33_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6de0:	b480      	push	{r7}
    6de2:	b083      	sub	sp, #12
    6de4:	af00      	add	r7, sp, #0
    6de6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:249
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd33_MODULE_BASE_ADDRESS, BitIoLdd33_PORT_MASK);
    6de8:	4b04      	ldr	r3, [pc, #16]	; (6dfc <BitIoLdd33_SetVal+0x1c>)
    6dea:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    6dee:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd33.c:250
}
    6df0:	370c      	adds	r7, #12
    6df2:	46bd      	mov	sp, r7
    6df4:	f85d 7b04 	ldr.w	r7, [sp], #4
    6df8:	4770      	bx	lr
    6dfa:	bf00      	nop
    6dfc:	400ff040 	.word	0x400ff040

00006e00 <BitIoLdd34_Init>:
BitIoLdd34_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd34_Init(LDD_TUserData *UserDataPtr)
{
    6e00:	b480      	push	{r7}
    6e02:	b085      	sub	sp, #20
    6e04:	af00      	add	r7, sp, #0
    6e06:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:126
  /* Allocate device structure */
  BitIoLdd34_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6e08:	4b18      	ldr	r3, [pc, #96]	; (6e6c <BitIoLdd34_Init+0x6c>)
    6e0a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6e0c:	68fb      	ldr	r3, [r7, #12]
    6e0e:	687a      	ldr	r2, [r7, #4]
    6e10:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    6e12:	4917      	ldr	r1, [pc, #92]	; (6e70 <BitIoLdd34_Init+0x70>)
    6e14:	4b16      	ldr	r3, [pc, #88]	; (6e70 <BitIoLdd34_Init+0x70>)
    6e16:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6e1a:	3318      	adds	r3, #24
    6e1c:	681b      	ldr	r3, [r3, #0]
    6e1e:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    6e22:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6e26:	3318      	adds	r3, #24
    6e28:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:133
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x2000 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x2000);
    6e2a:	4b12      	ldr	r3, [pc, #72]	; (6e74 <BitIoLdd34_Init+0x74>)
    6e2c:	4a11      	ldr	r2, [pc, #68]	; (6e74 <BitIoLdd34_Init+0x74>)
    6e2e:	6952      	ldr	r2, [r2, #20]
    6e30:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
    6e34:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:136
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x2000 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x2000));
    6e36:	4b0f      	ldr	r3, [pc, #60]	; (6e74 <BitIoLdd34_Init+0x74>)
    6e38:	4a0e      	ldr	r2, [pc, #56]	; (6e74 <BitIoLdd34_Init+0x74>)
    6e3a:	6812      	ldr	r2, [r2, #0]
    6e3c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    6e40:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:139
  /* Initialization of pin routing */
  /* PORTB_PCR13: ISF=0,MUX=1 */
  PORTB_PCR13 = (uint32_t)((PORTB_PCR13 & (uint32_t)~(uint32_t)(
    6e42:	4a0d      	ldr	r2, [pc, #52]	; (6e78 <BitIoLdd34_Init+0x78>)
    6e44:	4b0c      	ldr	r3, [pc, #48]	; (6e78 <BitIoLdd34_Init+0x78>)
    6e46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    6e48:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6e4c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6e50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6e54:	6353      	str	r3, [r2, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd34_ID,DeviceDataPrv);
    6e56:	4b09      	ldr	r3, [pc, #36]	; (6e7c <BitIoLdd34_Init+0x7c>)
    6e58:	68fa      	ldr	r2, [r7, #12]
    6e5a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6e5e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:148
}
    6e60:	4618      	mov	r0, r3
    6e62:	3714      	adds	r7, #20
    6e64:	46bd      	mov	sp, r7
    6e66:	f85d 7b04 	ldr.w	r7, [sp], #4
    6e6a:	4770      	bx	lr
    6e6c:	2000040c 	.word	0x2000040c
    6e70:	40047000 	.word	0x40047000
    6e74:	400ff040 	.word	0x400ff040
    6e78:	4004a000 	.word	0x4004a000
    6e7c:	20000480 	.word	0x20000480

00006e80 <BitIoLdd34_ClrVal>:
BitIoLdd34_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:227
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd34_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6e80:	b480      	push	{r7}
    6e82:	b083      	sub	sp, #12
    6e84:	af00      	add	r7, sp, #0
    6e86:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:229
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd34_MODULE_BASE_ADDRESS, BitIoLdd34_PORT_MASK);
    6e88:	4b04      	ldr	r3, [pc, #16]	; (6e9c <BitIoLdd34_ClrVal+0x1c>)
    6e8a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    6e8e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:230
}
    6e90:	370c      	adds	r7, #12
    6e92:	46bd      	mov	sp, r7
    6e94:	f85d 7b04 	ldr.w	r7, [sp], #4
    6e98:	4770      	bx	lr
    6e9a:	bf00      	nop
    6e9c:	400ff040 	.word	0x400ff040

00006ea0 <BitIoLdd34_SetVal>:
BitIoLdd34_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:247
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd34_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6ea0:	b480      	push	{r7}
    6ea2:	b083      	sub	sp, #12
    6ea4:	af00      	add	r7, sp, #0
    6ea6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:249
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd34_MODULE_BASE_ADDRESS, BitIoLdd34_PORT_MASK);
    6ea8:	4b04      	ldr	r3, [pc, #16]	; (6ebc <BitIoLdd34_SetVal+0x1c>)
    6eaa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    6eae:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd34.c:250
}
    6eb0:	370c      	adds	r7, #12
    6eb2:	46bd      	mov	sp, r7
    6eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
    6eb8:	4770      	bx	lr
    6eba:	bf00      	nop
    6ebc:	400ff040 	.word	0x400ff040

00006ec0 <BitIoLdd35_Init>:
BitIoLdd35_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd35_Init(LDD_TUserData *UserDataPtr)
{
    6ec0:	b480      	push	{r7}
    6ec2:	b085      	sub	sp, #20
    6ec4:	af00      	add	r7, sp, #0
    6ec6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:126
  /* Allocate device structure */
  BitIoLdd35_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6ec8:	4b18      	ldr	r3, [pc, #96]	; (6f2c <BitIoLdd35_Init+0x6c>)
    6eca:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6ecc:	68fb      	ldr	r3, [r7, #12]
    6ece:	687a      	ldr	r2, [r7, #4]
    6ed0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTC=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    6ed2:	4917      	ldr	r1, [pc, #92]	; (6f30 <BitIoLdd35_Init+0x70>)
    6ed4:	4b16      	ldr	r3, [pc, #88]	; (6f30 <BitIoLdd35_Init+0x70>)
    6ed6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6eda:	3318      	adds	r3, #24
    6edc:	681b      	ldr	r3, [r3, #0]
    6ede:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
    6ee2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6ee6:	3318      	adds	r3, #24
    6ee8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:133
  /* Configure pin as output */
  /* GPIOC_PDDR: PDD|=0x2000 */
  GPIOC_PDDR |= GPIO_PDDR_PDD(0x2000);
    6eea:	4b12      	ldr	r3, [pc, #72]	; (6f34 <BitIoLdd35_Init+0x74>)
    6eec:	4a11      	ldr	r2, [pc, #68]	; (6f34 <BitIoLdd35_Init+0x74>)
    6eee:	6952      	ldr	r2, [r2, #20]
    6ef0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
    6ef4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:136
  /* Set initialization value */
  /* GPIOC_PDOR: PDO&=~0x2000 */
  GPIOC_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x2000));
    6ef6:	4b0f      	ldr	r3, [pc, #60]	; (6f34 <BitIoLdd35_Init+0x74>)
    6ef8:	4a0e      	ldr	r2, [pc, #56]	; (6f34 <BitIoLdd35_Init+0x74>)
    6efa:	6812      	ldr	r2, [r2, #0]
    6efc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    6f00:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:139
  /* Initialization of pin routing */
  /* PORTC_PCR13: ISF=0,MUX=1 */
  PORTC_PCR13 = (uint32_t)((PORTC_PCR13 & (uint32_t)~(uint32_t)(
    6f02:	4a0d      	ldr	r2, [pc, #52]	; (6f38 <BitIoLdd35_Init+0x78>)
    6f04:	4b0c      	ldr	r3, [pc, #48]	; (6f38 <BitIoLdd35_Init+0x78>)
    6f06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    6f08:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6f0c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6f10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6f14:	6353      	str	r3, [r2, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd35_ID,DeviceDataPrv);
    6f16:	4b09      	ldr	r3, [pc, #36]	; (6f3c <BitIoLdd35_Init+0x7c>)
    6f18:	68fa      	ldr	r2, [r7, #12]
    6f1a:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6f1e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:148
}
    6f20:	4618      	mov	r0, r3
    6f22:	3714      	adds	r7, #20
    6f24:	46bd      	mov	sp, r7
    6f26:	f85d 7b04 	ldr.w	r7, [sp], #4
    6f2a:	4770      	bx	lr
    6f2c:	20000410 	.word	0x20000410
    6f30:	40047000 	.word	0x40047000
    6f34:	400ff080 	.word	0x400ff080
    6f38:	4004b000 	.word	0x4004b000
    6f3c:	20000480 	.word	0x20000480

00006f40 <BitIoLdd35_ClrVal>:
BitIoLdd35_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:227
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd35_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    6f40:	b480      	push	{r7}
    6f42:	b083      	sub	sp, #12
    6f44:	af00      	add	r7, sp, #0
    6f46:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:229
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd35_MODULE_BASE_ADDRESS, BitIoLdd35_PORT_MASK);
    6f48:	4b04      	ldr	r3, [pc, #16]	; (6f5c <BitIoLdd35_ClrVal+0x1c>)
    6f4a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    6f4e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:230
}
    6f50:	370c      	adds	r7, #12
    6f52:	46bd      	mov	sp, r7
    6f54:	f85d 7b04 	ldr.w	r7, [sp], #4
    6f58:	4770      	bx	lr
    6f5a:	bf00      	nop
    6f5c:	400ff080 	.word	0x400ff080

00006f60 <BitIoLdd35_SetVal>:
BitIoLdd35_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:247
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd35_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    6f60:	b480      	push	{r7}
    6f62:	b083      	sub	sp, #12
    6f64:	af00      	add	r7, sp, #0
    6f66:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:249
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd35_MODULE_BASE_ADDRESS, BitIoLdd35_PORT_MASK);
    6f68:	4b04      	ldr	r3, [pc, #16]	; (6f7c <BitIoLdd35_SetVal+0x1c>)
    6f6a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    6f6e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd35.c:250
}
    6f70:	370c      	adds	r7, #12
    6f72:	46bd      	mov	sp, r7
    6f74:	f85d 7b04 	ldr.w	r7, [sp], #4
    6f78:	4770      	bx	lr
    6f7a:	bf00      	nop
    6f7c:	400ff080 	.word	0x400ff080

00006f80 <BitIoLdd36_Init>:
BitIoLdd36_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd36_Init(LDD_TUserData *UserDataPtr)
{
    6f80:	b480      	push	{r7}
    6f82:	b085      	sub	sp, #20
    6f84:	af00      	add	r7, sp, #0
    6f86:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:127
  /* Allocate device structure */
  BitIoLdd36_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    6f88:	4b18      	ldr	r3, [pc, #96]	; (6fec <BitIoLdd36_Init+0x6c>)
    6f8a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    6f8c:	68fb      	ldr	r3, [r7, #12]
    6f8e:	687a      	ldr	r2, [r7, #4]
    6f90:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTC=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    6f92:	4917      	ldr	r1, [pc, #92]	; (6ff0 <BitIoLdd36_Init+0x70>)
    6f94:	4b16      	ldr	r3, [pc, #88]	; (6ff0 <BitIoLdd36_Init+0x70>)
    6f96:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    6f9a:	3318      	adds	r3, #24
    6f9c:	681b      	ldr	r3, [r3, #0]
    6f9e:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
    6fa2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    6fa6:	3318      	adds	r3, #24
    6fa8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:134
  /* Configure pin as output */
  /* GPIOC_PDDR: PDD|=0x00080000 */
  GPIOC_PDDR |= GPIO_PDDR_PDD(0x00080000);
    6faa:	4b12      	ldr	r3, [pc, #72]	; (6ff4 <BitIoLdd36_Init+0x74>)
    6fac:	4a11      	ldr	r2, [pc, #68]	; (6ff4 <BitIoLdd36_Init+0x74>)
    6fae:	6952      	ldr	r2, [r2, #20]
    6fb0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    6fb4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:137
  /* Set initialization value */
  /* GPIOC_PDOR: PDO&=~0x00080000 */
  GPIOC_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x00080000));
    6fb6:	4b0f      	ldr	r3, [pc, #60]	; (6ff4 <BitIoLdd36_Init+0x74>)
    6fb8:	4a0e      	ldr	r2, [pc, #56]	; (6ff4 <BitIoLdd36_Init+0x74>)
    6fba:	6812      	ldr	r2, [r2, #0]
    6fbc:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
    6fc0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:140
  /* Initialization of pin routing */
  /* PORTC_PCR19: ISF=0,MUX=1 */
  PORTC_PCR19 = (uint32_t)((PORTC_PCR19 & (uint32_t)~(uint32_t)(
    6fc2:	4a0d      	ldr	r2, [pc, #52]	; (6ff8 <BitIoLdd36_Init+0x78>)
    6fc4:	4b0c      	ldr	r3, [pc, #48]	; (6ff8 <BitIoLdd36_Init+0x78>)
    6fc6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    6fc8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    6fcc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    6fd0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    6fd4:	64d3      	str	r3, [r2, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:147
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd36_ID,DeviceDataPrv);
    6fd6:	4b09      	ldr	r3, [pc, #36]	; (6ffc <BitIoLdd36_Init+0x7c>)
    6fd8:	68fa      	ldr	r2, [r7, #12]
    6fda:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    6fde:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:149
}
    6fe0:	4618      	mov	r0, r3
    6fe2:	3714      	adds	r7, #20
    6fe4:	46bd      	mov	sp, r7
    6fe6:	f85d 7b04 	ldr.w	r7, [sp], #4
    6fea:	4770      	bx	lr
    6fec:	20000414 	.word	0x20000414
    6ff0:	40047000 	.word	0x40047000
    6ff4:	400ff080 	.word	0x400ff080
    6ff8:	4004b000 	.word	0x4004b000
    6ffc:	20000480 	.word	0x20000480

00007000 <BitIoLdd36_ClrVal>:
BitIoLdd36_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:263
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd36_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    7000:	b480      	push	{r7}
    7002:	b083      	sub	sp, #12
    7004:	af00      	add	r7, sp, #0
    7006:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:265
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd36_MODULE_BASE_ADDRESS, BitIoLdd36_PORT_MASK);
    7008:	4b04      	ldr	r3, [pc, #16]	; (701c <BitIoLdd36_ClrVal+0x1c>)
    700a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    700e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:266
}
    7010:	370c      	adds	r7, #12
    7012:	46bd      	mov	sp, r7
    7014:	f85d 7b04 	ldr.w	r7, [sp], #4
    7018:	4770      	bx	lr
    701a:	bf00      	nop
    701c:	400ff080 	.word	0x400ff080

00007020 <BitIoLdd36_SetVal>:
BitIoLdd36_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:283
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd36_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    7020:	b480      	push	{r7}
    7022:	b083      	sub	sp, #12
    7024:	af00      	add	r7, sp, #0
    7026:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:285
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd36_MODULE_BASE_ADDRESS, BitIoLdd36_PORT_MASK);
    7028:	4b04      	ldr	r3, [pc, #16]	; (703c <BitIoLdd36_SetVal+0x1c>)
    702a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    702e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd36.c:286
}
    7030:	370c      	adds	r7, #12
    7032:	46bd      	mov	sp, r7
    7034:	f85d 7b04 	ldr.w	r7, [sp], #4
    7038:	4770      	bx	lr
    703a:	bf00      	nop
    703c:	400ff080 	.word	0x400ff080

00007040 <BitIoLdd37_Init>:
BitIoLdd37_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd37_Init(LDD_TUserData *UserDataPtr)
{
    7040:	b480      	push	{r7}
    7042:	b085      	sub	sp, #20
    7044:	af00      	add	r7, sp, #0
    7046:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:126
  /* Allocate device structure */
  BitIoLdd37_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    7048:	4b18      	ldr	r3, [pc, #96]	; (70ac <BitIoLdd37_Init+0x6c>)
    704a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    704c:	68fb      	ldr	r3, [r7, #12]
    704e:	687a      	ldr	r2, [r7, #4]
    7050:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    7052:	4917      	ldr	r1, [pc, #92]	; (70b0 <BitIoLdd37_Init+0x70>)
    7054:	4b16      	ldr	r3, [pc, #88]	; (70b0 <BitIoLdd37_Init+0x70>)
    7056:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    705a:	3318      	adds	r3, #24
    705c:	681b      	ldr	r3, [r3, #0]
    705e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    7062:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    7066:	3318      	adds	r3, #24
    7068:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:133
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x1000 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x1000);
    706a:	4b12      	ldr	r3, [pc, #72]	; (70b4 <BitIoLdd37_Init+0x74>)
    706c:	4a11      	ldr	r2, [pc, #68]	; (70b4 <BitIoLdd37_Init+0x74>)
    706e:	6952      	ldr	r2, [r2, #20]
    7070:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
    7074:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:136
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x1000 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x1000));
    7076:	4b0f      	ldr	r3, [pc, #60]	; (70b4 <BitIoLdd37_Init+0x74>)
    7078:	4a0e      	ldr	r2, [pc, #56]	; (70b4 <BitIoLdd37_Init+0x74>)
    707a:	6812      	ldr	r2, [r2, #0]
    707c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
    7080:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:139
  /* Initialization of pin routing */
  /* PORTD_PCR12: ISF=0,MUX=1 */
  PORTD_PCR12 = (uint32_t)((PORTD_PCR12 & (uint32_t)~(uint32_t)(
    7082:	4a0d      	ldr	r2, [pc, #52]	; (70b8 <BitIoLdd37_Init+0x78>)
    7084:	4b0c      	ldr	r3, [pc, #48]	; (70b8 <BitIoLdd37_Init+0x78>)
    7086:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    7088:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    708c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7090:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    7094:	6313      	str	r3, [r2, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd37_ID,DeviceDataPrv);
    7096:	4b09      	ldr	r3, [pc, #36]	; (70bc <BitIoLdd37_Init+0x7c>)
    7098:	68fa      	ldr	r2, [r7, #12]
    709a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    709e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:148
}
    70a0:	4618      	mov	r0, r3
    70a2:	3714      	adds	r7, #20
    70a4:	46bd      	mov	sp, r7
    70a6:	f85d 7b04 	ldr.w	r7, [sp], #4
    70aa:	4770      	bx	lr
    70ac:	20000418 	.word	0x20000418
    70b0:	40047000 	.word	0x40047000
    70b4:	400ff0c0 	.word	0x400ff0c0
    70b8:	4004c000 	.word	0x4004c000
    70bc:	20000480 	.word	0x20000480

000070c0 <BitIoLdd37_ClrVal>:
BitIoLdd37_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:227
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd37_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    70c0:	b480      	push	{r7}
    70c2:	b083      	sub	sp, #12
    70c4:	af00      	add	r7, sp, #0
    70c6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:229
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd37_MODULE_BASE_ADDRESS, BitIoLdd37_PORT_MASK);
    70c8:	4b04      	ldr	r3, [pc, #16]	; (70dc <BitIoLdd37_ClrVal+0x1c>)
    70ca:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    70ce:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:230
}
    70d0:	370c      	adds	r7, #12
    70d2:	46bd      	mov	sp, r7
    70d4:	f85d 7b04 	ldr.w	r7, [sp], #4
    70d8:	4770      	bx	lr
    70da:	bf00      	nop
    70dc:	400ff0c0 	.word	0x400ff0c0

000070e0 <BitIoLdd37_SetVal>:
BitIoLdd37_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:247
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd37_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    70e0:	b480      	push	{r7}
    70e2:	b083      	sub	sp, #12
    70e4:	af00      	add	r7, sp, #0
    70e6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:249
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd37_MODULE_BASE_ADDRESS, BitIoLdd37_PORT_MASK);
    70e8:	4b04      	ldr	r3, [pc, #16]	; (70fc <BitIoLdd37_SetVal+0x1c>)
    70ea:	f44f 5280 	mov.w	r2, #4096	; 0x1000
    70ee:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd37.c:250
}
    70f0:	370c      	adds	r7, #12
    70f2:	46bd      	mov	sp, r7
    70f4:	f85d 7b04 	ldr.w	r7, [sp], #4
    70f8:	4770      	bx	lr
    70fa:	bf00      	nop
    70fc:	400ff0c0 	.word	0x400ff0c0

00007100 <BitIoLdd38_Init>:
BitIoLdd38_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd38_Init(LDD_TUserData *UserDataPtr)
{
    7100:	b480      	push	{r7}
    7102:	b085      	sub	sp, #20
    7104:	af00      	add	r7, sp, #0
    7106:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:126
  /* Allocate device structure */
  BitIoLdd38_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    7108:	4b18      	ldr	r3, [pc, #96]	; (716c <BitIoLdd38_Init+0x6c>)
    710a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    710c:	68fb      	ldr	r3, [r7, #12]
    710e:	687a      	ldr	r2, [r7, #4]
    7110:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    7112:	4917      	ldr	r1, [pc, #92]	; (7170 <BitIoLdd38_Init+0x70>)
    7114:	4b16      	ldr	r3, [pc, #88]	; (7170 <BitIoLdd38_Init+0x70>)
    7116:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    711a:	3318      	adds	r3, #24
    711c:	681b      	ldr	r3, [r3, #0]
    711e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    7122:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    7126:	3318      	adds	r3, #24
    7128:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:133
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x8000 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x8000);
    712a:	4b12      	ldr	r3, [pc, #72]	; (7174 <BitIoLdd38_Init+0x74>)
    712c:	4a11      	ldr	r2, [pc, #68]	; (7174 <BitIoLdd38_Init+0x74>)
    712e:	6952      	ldr	r2, [r2, #20]
    7130:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
    7134:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:136
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x8000 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x8000));
    7136:	4b0f      	ldr	r3, [pc, #60]	; (7174 <BitIoLdd38_Init+0x74>)
    7138:	4a0e      	ldr	r2, [pc, #56]	; (7174 <BitIoLdd38_Init+0x74>)
    713a:	6812      	ldr	r2, [r2, #0]
    713c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
    7140:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:139
  /* Initialization of pin routing */
  /* PORTD_PCR15: ISF=0,MUX=1 */
  PORTD_PCR15 = (uint32_t)((PORTD_PCR15 & (uint32_t)~(uint32_t)(
    7142:	4a0d      	ldr	r2, [pc, #52]	; (7178 <BitIoLdd38_Init+0x78>)
    7144:	4b0c      	ldr	r3, [pc, #48]	; (7178 <BitIoLdd38_Init+0x78>)
    7146:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    7148:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    714c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7150:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    7154:	63d3      	str	r3, [r2, #60]	; 0x3c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd38_ID,DeviceDataPrv);
    7156:	4b09      	ldr	r3, [pc, #36]	; (717c <BitIoLdd38_Init+0x7c>)
    7158:	68fa      	ldr	r2, [r7, #12]
    715a:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    715e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:148
}
    7160:	4618      	mov	r0, r3
    7162:	3714      	adds	r7, #20
    7164:	46bd      	mov	sp, r7
    7166:	f85d 7b04 	ldr.w	r7, [sp], #4
    716a:	4770      	bx	lr
    716c:	2000041c 	.word	0x2000041c
    7170:	40047000 	.word	0x40047000
    7174:	400ff0c0 	.word	0x400ff0c0
    7178:	4004c000 	.word	0x4004c000
    717c:	20000480 	.word	0x20000480

00007180 <BitIoLdd38_ClrVal>:
BitIoLdd38_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:227
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd38_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    7180:	b480      	push	{r7}
    7182:	b083      	sub	sp, #12
    7184:	af00      	add	r7, sp, #0
    7186:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:229
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd38_MODULE_BASE_ADDRESS, BitIoLdd38_PORT_MASK);
    7188:	4b04      	ldr	r3, [pc, #16]	; (719c <BitIoLdd38_ClrVal+0x1c>)
    718a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    718e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:230
}
    7190:	370c      	adds	r7, #12
    7192:	46bd      	mov	sp, r7
    7194:	f85d 7b04 	ldr.w	r7, [sp], #4
    7198:	4770      	bx	lr
    719a:	bf00      	nop
    719c:	400ff0c0 	.word	0x400ff0c0

000071a0 <BitIoLdd38_SetVal>:
BitIoLdd38_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:247
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd38_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    71a0:	b480      	push	{r7}
    71a2:	b083      	sub	sp, #12
    71a4:	af00      	add	r7, sp, #0
    71a6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:249
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd38_MODULE_BASE_ADDRESS, BitIoLdd38_PORT_MASK);
    71a8:	4b04      	ldr	r3, [pc, #16]	; (71bc <BitIoLdd38_SetVal+0x1c>)
    71aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
    71ae:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd38.c:250
}
    71b0:	370c      	adds	r7, #12
    71b2:	46bd      	mov	sp, r7
    71b4:	f85d 7b04 	ldr.w	r7, [sp], #4
    71b8:	4770      	bx	lr
    71ba:	bf00      	nop
    71bc:	400ff0c0 	.word	0x400ff0c0

000071c0 <BitIoLdd39_Init>:
BitIoLdd39_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd39_Init(LDD_TUserData *UserDataPtr)
{
    71c0:	b480      	push	{r7}
    71c2:	b085      	sub	sp, #20
    71c4:	af00      	add	r7, sp, #0
    71c6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:126
  /* Allocate device structure */
  BitIoLdd39_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    71c8:	4b18      	ldr	r3, [pc, #96]	; (722c <BitIoLdd39_Init+0x6c>)
    71ca:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    71cc:	68fb      	ldr	r3, [r7, #12]
    71ce:	687a      	ldr	r2, [r7, #4]
    71d0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    71d2:	4917      	ldr	r1, [pc, #92]	; (7230 <BitIoLdd39_Init+0x70>)
    71d4:	4b16      	ldr	r3, [pc, #88]	; (7230 <BitIoLdd39_Init+0x70>)
    71d6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    71da:	3318      	adds	r3, #24
    71dc:	681b      	ldr	r3, [r3, #0]
    71de:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    71e2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    71e6:	3318      	adds	r3, #24
    71e8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:133
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x4000 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x4000);
    71ea:	4b12      	ldr	r3, [pc, #72]	; (7234 <BitIoLdd39_Init+0x74>)
    71ec:	4a11      	ldr	r2, [pc, #68]	; (7234 <BitIoLdd39_Init+0x74>)
    71ee:	6952      	ldr	r2, [r2, #20]
    71f0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
    71f4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:136
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x4000 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x4000));
    71f6:	4b0f      	ldr	r3, [pc, #60]	; (7234 <BitIoLdd39_Init+0x74>)
    71f8:	4a0e      	ldr	r2, [pc, #56]	; (7234 <BitIoLdd39_Init+0x74>)
    71fa:	6812      	ldr	r2, [r2, #0]
    71fc:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
    7200:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:139
  /* Initialization of pin routing */
  /* PORTD_PCR14: ISF=0,MUX=1 */
  PORTD_PCR14 = (uint32_t)((PORTD_PCR14 & (uint32_t)~(uint32_t)(
    7202:	4a0d      	ldr	r2, [pc, #52]	; (7238 <BitIoLdd39_Init+0x78>)
    7204:	4b0c      	ldr	r3, [pc, #48]	; (7238 <BitIoLdd39_Init+0x78>)
    7206:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    7208:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    720c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7210:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    7214:	6393      	str	r3, [r2, #56]	; 0x38
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd39_ID,DeviceDataPrv);
    7216:	4b09      	ldr	r3, [pc, #36]	; (723c <BitIoLdd39_Init+0x7c>)
    7218:	68fa      	ldr	r2, [r7, #12]
    721a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    721e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd39.c:148
}
    7220:	4618      	mov	r0, r3
    7222:	3714      	adds	r7, #20
    7224:	46bd      	mov	sp, r7
    7226:	f85d 7b04 	ldr.w	r7, [sp], #4
    722a:	4770      	bx	lr
    722c:	20000420 	.word	0x20000420
    7230:	40047000 	.word	0x40047000
    7234:	400ff0c0 	.word	0x400ff0c0
    7238:	4004c000 	.word	0x4004c000
    723c:	20000480 	.word	0x20000480

00007240 <BitIoLdd4_Init>:
BitIoLdd4_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd4_Init(LDD_TUserData *UserDataPtr)
{
    7240:	b480      	push	{r7}
    7242:	b085      	sub	sp, #20
    7244:	af00      	add	r7, sp, #0
    7246:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:126
  /* Allocate device structure */
  BitIoLdd4_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    7248:	4b18      	ldr	r3, [pc, #96]	; (72ac <BitIoLdd4_Init+0x6c>)
    724a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    724c:	68fb      	ldr	r3, [r7, #12]
    724e:	687a      	ldr	r2, [r7, #4]
    7250:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTC=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    7252:	4917      	ldr	r1, [pc, #92]	; (72b0 <BitIoLdd4_Init+0x70>)
    7254:	4b16      	ldr	r3, [pc, #88]	; (72b0 <BitIoLdd4_Init+0x70>)
    7256:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    725a:	3318      	adds	r3, #24
    725c:	681b      	ldr	r3, [r3, #0]
    725e:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
    7262:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    7266:	3318      	adds	r3, #24
    7268:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:133
  /* Configure pin as output */
  /* GPIOC_PDDR: PDD|=0x0800 */
  GPIOC_PDDR |= GPIO_PDDR_PDD(0x0800);
    726a:	4b12      	ldr	r3, [pc, #72]	; (72b4 <BitIoLdd4_Init+0x74>)
    726c:	4a11      	ldr	r2, [pc, #68]	; (72b4 <BitIoLdd4_Init+0x74>)
    726e:	6952      	ldr	r2, [r2, #20]
    7270:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
    7274:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:136
  /* Set initialization value */
  /* GPIOC_PDOR: PDO&=~0x0800 */
  GPIOC_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0800));
    7276:	4b0f      	ldr	r3, [pc, #60]	; (72b4 <BitIoLdd4_Init+0x74>)
    7278:	4a0e      	ldr	r2, [pc, #56]	; (72b4 <BitIoLdd4_Init+0x74>)
    727a:	6812      	ldr	r2, [r2, #0]
    727c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    7280:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:139
  /* Initialization of pin routing */
  /* PORTC_PCR11: ISF=0,MUX=1 */
  PORTC_PCR11 = (uint32_t)((PORTC_PCR11 & (uint32_t)~(uint32_t)(
    7282:	4a0d      	ldr	r2, [pc, #52]	; (72b8 <BitIoLdd4_Init+0x78>)
    7284:	4b0c      	ldr	r3, [pc, #48]	; (72b8 <BitIoLdd4_Init+0x78>)
    7286:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    7288:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    728c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7290:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    7294:	62d3      	str	r3, [r2, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd4_ID,DeviceDataPrv);
    7296:	4b09      	ldr	r3, [pc, #36]	; (72bc <BitIoLdd4_Init+0x7c>)
    7298:	68fa      	ldr	r2, [r7, #12]
    729a:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    729c:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:148
}
    729e:	4618      	mov	r0, r3
    72a0:	3714      	adds	r7, #20
    72a2:	46bd      	mov	sp, r7
    72a4:	f85d 7b04 	ldr.w	r7, [sp], #4
    72a8:	4770      	bx	lr
    72aa:	bf00      	nop
    72ac:	20000424 	.word	0x20000424
    72b0:	40047000 	.word	0x40047000
    72b4:	400ff080 	.word	0x400ff080
    72b8:	4004b000 	.word	0x4004b000
    72bc:	20000480 	.word	0x20000480

000072c0 <BitIoLdd4_ClrVal>:
BitIoLdd4_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:193
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd4_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    72c0:	b480      	push	{r7}
    72c2:	b083      	sub	sp, #12
    72c4:	af00      	add	r7, sp, #0
    72c6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:195
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd4_MODULE_BASE_ADDRESS, BitIoLdd4_PORT_MASK);
    72c8:	4b04      	ldr	r3, [pc, #16]	; (72dc <BitIoLdd4_ClrVal+0x1c>)
    72ca:	f44f 6200 	mov.w	r2, #2048	; 0x800
    72ce:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:196
}
    72d0:	370c      	adds	r7, #12
    72d2:	46bd      	mov	sp, r7
    72d4:	f85d 7b04 	ldr.w	r7, [sp], #4
    72d8:	4770      	bx	lr
    72da:	bf00      	nop
    72dc:	400ff080 	.word	0x400ff080

000072e0 <BitIoLdd4_SetVal>:
BitIoLdd4_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:213
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd4_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    72e0:	b480      	push	{r7}
    72e2:	b083      	sub	sp, #12
    72e4:	af00      	add	r7, sp, #0
    72e6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:215
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd4_MODULE_BASE_ADDRESS, BitIoLdd4_PORT_MASK);
    72e8:	4b04      	ldr	r3, [pc, #16]	; (72fc <BitIoLdd4_SetVal+0x1c>)
    72ea:	f44f 6200 	mov.w	r2, #2048	; 0x800
    72ee:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd4.c:216
}
    72f0:	370c      	adds	r7, #12
    72f2:	46bd      	mov	sp, r7
    72f4:	f85d 7b04 	ldr.w	r7, [sp], #4
    72f8:	4770      	bx	lr
    72fa:	bf00      	nop
    72fc:	400ff080 	.word	0x400ff080

00007300 <BitIoLdd40_Init>:
BitIoLdd40_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd40_Init(LDD_TUserData *UserDataPtr)
{
    7300:	b480      	push	{r7}
    7302:	b085      	sub	sp, #20
    7304:	af00      	add	r7, sp, #0
    7306:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:126
  /* Allocate device structure */
  BitIoLdd40_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    7308:	4b18      	ldr	r3, [pc, #96]	; (736c <BitIoLdd40_Init+0x6c>)
    730a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    730c:	68fb      	ldr	r3, [r7, #12]
    730e:	687a      	ldr	r2, [r7, #4]
    7310:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTB=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    7312:	4917      	ldr	r1, [pc, #92]	; (7370 <BitIoLdd40_Init+0x70>)
    7314:	4b16      	ldr	r3, [pc, #88]	; (7370 <BitIoLdd40_Init+0x70>)
    7316:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    731a:	3318      	adds	r3, #24
    731c:	681b      	ldr	r3, [r3, #0]
    731e:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
    7322:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    7326:	3318      	adds	r3, #24
    7328:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:133
  /* Configure pin as output */
  /* GPIOB_PDDR: PDD|=0x00100000 */
  GPIOB_PDDR |= GPIO_PDDR_PDD(0x00100000);
    732a:	4b12      	ldr	r3, [pc, #72]	; (7374 <BitIoLdd40_Init+0x74>)
    732c:	4a11      	ldr	r2, [pc, #68]	; (7374 <BitIoLdd40_Init+0x74>)
    732e:	6952      	ldr	r2, [r2, #20]
    7330:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
    7334:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:136
  /* Set initialization value */
  /* GPIOB_PDOR: PDO&=~0x00100000 */
  GPIOB_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x00100000));
    7336:	4b0f      	ldr	r3, [pc, #60]	; (7374 <BitIoLdd40_Init+0x74>)
    7338:	4a0e      	ldr	r2, [pc, #56]	; (7374 <BitIoLdd40_Init+0x74>)
    733a:	6812      	ldr	r2, [r2, #0]
    733c:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
    7340:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:139
  /* Initialization of pin routing */
  /* PORTB_PCR20: ISF=0,MUX=1 */
  PORTB_PCR20 = (uint32_t)((PORTB_PCR20 & (uint32_t)~(uint32_t)(
    7342:	4a0d      	ldr	r2, [pc, #52]	; (7378 <BitIoLdd40_Init+0x78>)
    7344:	4b0c      	ldr	r3, [pc, #48]	; (7378 <BitIoLdd40_Init+0x78>)
    7346:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    7348:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    734c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7350:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    7354:	6513      	str	r3, [r2, #80]	; 0x50
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd40_ID,DeviceDataPrv);
    7356:	4b09      	ldr	r3, [pc, #36]	; (737c <BitIoLdd40_Init+0x7c>)
    7358:	68fa      	ldr	r2, [r7, #12]
    735a:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    735e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:148
}
    7360:	4618      	mov	r0, r3
    7362:	3714      	adds	r7, #20
    7364:	46bd      	mov	sp, r7
    7366:	f85d 7b04 	ldr.w	r7, [sp], #4
    736a:	4770      	bx	lr
    736c:	20000428 	.word	0x20000428
    7370:	40047000 	.word	0x40047000
    7374:	400ff040 	.word	0x400ff040
    7378:	4004a000 	.word	0x4004a000
    737c:	20000480 	.word	0x20000480

00007380 <BitIoLdd40_SetVal>:
BitIoLdd40_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:247
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd40_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    7380:	b480      	push	{r7}
    7382:	b083      	sub	sp, #12
    7384:	af00      	add	r7, sp, #0
    7386:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:249
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd40_MODULE_BASE_ADDRESS, BitIoLdd40_PORT_MASK);
    7388:	4b04      	ldr	r3, [pc, #16]	; (739c <BitIoLdd40_SetVal+0x1c>)
    738a:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
    738e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd40.c:250
}
    7390:	370c      	adds	r7, #12
    7392:	46bd      	mov	sp, r7
    7394:	f85d 7b04 	ldr.w	r7, [sp], #4
    7398:	4770      	bx	lr
    739a:	bf00      	nop
    739c:	400ff040 	.word	0x400ff040

000073a0 <BitIoLdd41_Init>:
BitIoLdd41_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd41_Init(LDD_TUserData *UserDataPtr)
{
    73a0:	b480      	push	{r7}
    73a2:	b085      	sub	sp, #20
    73a4:	af00      	add	r7, sp, #0
    73a6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:126
  /* Allocate device structure */
  BitIoLdd41_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    73a8:	4b18      	ldr	r3, [pc, #96]	; (740c <BitIoLdd41_Init+0x6c>)
    73aa:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    73ac:	68fb      	ldr	r3, [r7, #12]
    73ae:	687a      	ldr	r2, [r7, #4]
    73b0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    73b2:	4917      	ldr	r1, [pc, #92]	; (7410 <BitIoLdd41_Init+0x70>)
    73b4:	4b16      	ldr	r3, [pc, #88]	; (7410 <BitIoLdd41_Init+0x70>)
    73b6:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    73ba:	3318      	adds	r3, #24
    73bc:	681b      	ldr	r3, [r3, #0]
    73be:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    73c2:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    73c6:	3318      	adds	r3, #24
    73c8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:133
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=0x0400 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x0400);
    73ca:	4b12      	ldr	r3, [pc, #72]	; (7414 <BitIoLdd41_Init+0x74>)
    73cc:	4a11      	ldr	r2, [pc, #68]	; (7414 <BitIoLdd41_Init+0x74>)
    73ce:	6952      	ldr	r2, [r2, #20]
    73d0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    73d4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:136
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x0400 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x0400));
    73d6:	4b0f      	ldr	r3, [pc, #60]	; (7414 <BitIoLdd41_Init+0x74>)
    73d8:	4a0e      	ldr	r2, [pc, #56]	; (7414 <BitIoLdd41_Init+0x74>)
    73da:	6812      	ldr	r2, [r2, #0]
    73dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    73e0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:139
  /* Initialization of pin routing */
  /* PORTD_PCR10: ISF=0,MUX=1 */
  PORTD_PCR10 = (uint32_t)((PORTD_PCR10 & (uint32_t)~(uint32_t)(
    73e2:	4a0d      	ldr	r2, [pc, #52]	; (7418 <BitIoLdd41_Init+0x78>)
    73e4:	4b0c      	ldr	r3, [pc, #48]	; (7418 <BitIoLdd41_Init+0x78>)
    73e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    73e8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    73ec:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    73f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    73f4:	6293      	str	r3, [r2, #40]	; 0x28
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:146
                 PORT_PCR_MUX(0x06)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x01)
                ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd41_ID,DeviceDataPrv);
    73f6:	4b09      	ldr	r3, [pc, #36]	; (741c <BitIoLdd41_Init+0x7c>)
    73f8:	68fa      	ldr	r2, [r7, #12]
    73fa:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    73fe:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:148
}
    7400:	4618      	mov	r0, r3
    7402:	3714      	adds	r7, #20
    7404:	46bd      	mov	sp, r7
    7406:	f85d 7b04 	ldr.w	r7, [sp], #4
    740a:	4770      	bx	lr
    740c:	2000042c 	.word	0x2000042c
    7410:	40047000 	.word	0x40047000
    7414:	400ff0c0 	.word	0x400ff0c0
    7418:	4004c000 	.word	0x4004c000
    741c:	20000480 	.word	0x20000480

00007420 <BitIoLdd41_ClrVal>:
BitIoLdd41_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:227
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd41_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    7420:	b480      	push	{r7}
    7422:	b083      	sub	sp, #12
    7424:	af00      	add	r7, sp, #0
    7426:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:229
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd41_MODULE_BASE_ADDRESS, BitIoLdd41_PORT_MASK);
    7428:	4b04      	ldr	r3, [pc, #16]	; (743c <BitIoLdd41_ClrVal+0x1c>)
    742a:	f44f 6280 	mov.w	r2, #1024	; 0x400
    742e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:230
}
    7430:	370c      	adds	r7, #12
    7432:	46bd      	mov	sp, r7
    7434:	f85d 7b04 	ldr.w	r7, [sp], #4
    7438:	4770      	bx	lr
    743a:	bf00      	nop
    743c:	400ff0c0 	.word	0x400ff0c0

00007440 <BitIoLdd41_SetVal>:
BitIoLdd41_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:247
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd41_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    7440:	b480      	push	{r7}
    7442:	b083      	sub	sp, #12
    7444:	af00      	add	r7, sp, #0
    7446:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:249
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd41_MODULE_BASE_ADDRESS, BitIoLdd41_PORT_MASK);
    7448:	4b04      	ldr	r3, [pc, #16]	; (745c <BitIoLdd41_SetVal+0x1c>)
    744a:	f44f 6280 	mov.w	r2, #1024	; 0x400
    744e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd41.c:250
}
    7450:	370c      	adds	r7, #12
    7452:	46bd      	mov	sp, r7
    7454:	f85d 7b04 	ldr.w	r7, [sp], #4
    7458:	4770      	bx	lr
    745a:	bf00      	nop
    745c:	400ff0c0 	.word	0x400ff0c0

00007460 <BitIoLdd5_Init>:
BitIoLdd5_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd5_Init(LDD_TUserData *UserDataPtr)
{
    7460:	b480      	push	{r7}
    7462:	b085      	sub	sp, #20
    7464:	af00      	add	r7, sp, #0
    7466:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:126
  /* Allocate device structure */
  BitIoLdd5_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    7468:	4b18      	ldr	r3, [pc, #96]	; (74cc <BitIoLdd5_Init+0x6c>)
    746a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    746c:	68fb      	ldr	r3, [r7, #12]
    746e:	687a      	ldr	r2, [r7, #4]
    7470:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    7472:	4917      	ldr	r1, [pc, #92]	; (74d0 <BitIoLdd5_Init+0x70>)
    7474:	4b16      	ldr	r3, [pc, #88]	; (74d0 <BitIoLdd5_Init+0x70>)
    7476:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    747a:	3318      	adds	r3, #24
    747c:	681b      	ldr	r3, [r3, #0]
    747e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    7482:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    7486:	3318      	adds	r3, #24
    7488:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:133
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=4 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x04);
    748a:	4b12      	ldr	r3, [pc, #72]	; (74d4 <BitIoLdd5_Init+0x74>)
    748c:	4a11      	ldr	r2, [pc, #68]	; (74d4 <BitIoLdd5_Init+0x74>)
    748e:	6952      	ldr	r2, [r2, #20]
    7490:	f042 0204 	orr.w	r2, r2, #4
    7494:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:136
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~4 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x04));
    7496:	4b0f      	ldr	r3, [pc, #60]	; (74d4 <BitIoLdd5_Init+0x74>)
    7498:	4a0e      	ldr	r2, [pc, #56]	; (74d4 <BitIoLdd5_Init+0x74>)
    749a:	6812      	ldr	r2, [r2, #0]
    749c:	f022 0204 	bic.w	r2, r2, #4
    74a0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:139
  /* Initialization of pin routing */
  /* PORTD_PCR2: ISF=0,MUX=1 */
  PORTD_PCR2 = (uint32_t)((PORTD_PCR2 & (uint32_t)~(uint32_t)(
    74a2:	4a0d      	ldr	r2, [pc, #52]	; (74d8 <BitIoLdd5_Init+0x78>)
    74a4:	4b0c      	ldr	r3, [pc, #48]	; (74d8 <BitIoLdd5_Init+0x78>)
    74a6:	689b      	ldr	r3, [r3, #8]
    74a8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    74ac:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    74b0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    74b4:	6093      	str	r3, [r2, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:146
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd5_ID,DeviceDataPrv);
    74b6:	4b09      	ldr	r3, [pc, #36]	; (74dc <BitIoLdd5_Init+0x7c>)
    74b8:	68fa      	ldr	r2, [r7, #12]
    74ba:	611a      	str	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    74bc:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:148
}
    74be:	4618      	mov	r0, r3
    74c0:	3714      	adds	r7, #20
    74c2:	46bd      	mov	sp, r7
    74c4:	f85d 7b04 	ldr.w	r7, [sp], #4
    74c8:	4770      	bx	lr
    74ca:	bf00      	nop
    74cc:	20000430 	.word	0x20000430
    74d0:	40047000 	.word	0x40047000
    74d4:	400ff0c0 	.word	0x400ff0c0
    74d8:	4004c000 	.word	0x4004c000
    74dc:	20000480 	.word	0x20000480

000074e0 <BitIoLdd5_ClrVal>:
BitIoLdd5_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:193
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd5_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    74e0:	b480      	push	{r7}
    74e2:	b083      	sub	sp, #12
    74e4:	af00      	add	r7, sp, #0
    74e6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:195
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd5_MODULE_BASE_ADDRESS, BitIoLdd5_PORT_MASK);
    74e8:	4b03      	ldr	r3, [pc, #12]	; (74f8 <BitIoLdd5_ClrVal+0x18>)
    74ea:	2204      	movs	r2, #4
    74ec:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:196
}
    74ee:	370c      	adds	r7, #12
    74f0:	46bd      	mov	sp, r7
    74f2:	f85d 7b04 	ldr.w	r7, [sp], #4
    74f6:	4770      	bx	lr
    74f8:	400ff0c0 	.word	0x400ff0c0

000074fc <BitIoLdd5_SetVal>:
BitIoLdd5_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:213
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd5_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    74fc:	b480      	push	{r7}
    74fe:	b083      	sub	sp, #12
    7500:	af00      	add	r7, sp, #0
    7502:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:215
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd5_MODULE_BASE_ADDRESS, BitIoLdd5_PORT_MASK);
    7504:	4b03      	ldr	r3, [pc, #12]	; (7514 <BitIoLdd5_SetVal+0x18>)
    7506:	2204      	movs	r2, #4
    7508:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:216
}
    750a:	370c      	adds	r7, #12
    750c:	46bd      	mov	sp, r7
    750e:	f85d 7b04 	ldr.w	r7, [sp], #4
    7512:	4770      	bx	lr
    7514:	400ff0c0 	.word	0x400ff0c0

00007518 <BitIoLdd5_NegVal>:
BitIoLdd5_NegVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:233
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd5_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    7518:	b480      	push	{r7}
    751a:	b083      	sub	sp, #12
    751c:	af00      	add	r7, sp, #0
    751e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:235
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd5_MODULE_BASE_ADDRESS, BitIoLdd5_PORT_MASK);
    7520:	4b03      	ldr	r3, [pc, #12]	; (7530 <BitIoLdd5_NegVal+0x18>)
    7522:	2204      	movs	r2, #4
    7524:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd5.c:236
}
    7526:	370c      	adds	r7, #12
    7528:	46bd      	mov	sp, r7
    752a:	f85d 7b04 	ldr.w	r7, [sp], #4
    752e:	4770      	bx	lr
    7530:	400ff0c0 	.word	0x400ff0c0

00007534 <BitIoLdd6_Init>:
BitIoLdd6_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:121
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd6_Init(LDD_TUserData *UserDataPtr)
{
    7534:	b480      	push	{r7}
    7536:	b085      	sub	sp, #20
    7538:	af00      	add	r7, sp, #0
    753a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:126
  /* Allocate device structure */
  BitIoLdd6_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    753c:	4b18      	ldr	r3, [pc, #96]	; (75a0 <BitIoLdd6_Init+0x6c>)
    753e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:127
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    7540:	68fb      	ldr	r3, [r7, #12]
    7542:	687a      	ldr	r2, [r7, #4]
    7544:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:130
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    7546:	4917      	ldr	r1, [pc, #92]	; (75a4 <BitIoLdd6_Init+0x70>)
    7548:	4b16      	ldr	r3, [pc, #88]	; (75a4 <BitIoLdd6_Init+0x70>)
    754a:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    754e:	3318      	adds	r3, #24
    7550:	681b      	ldr	r3, [r3, #0]
    7552:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    7556:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    755a:	3318      	adds	r3, #24
    755c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:133
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=8 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x08);
    755e:	4b12      	ldr	r3, [pc, #72]	; (75a8 <BitIoLdd6_Init+0x74>)
    7560:	4a11      	ldr	r2, [pc, #68]	; (75a8 <BitIoLdd6_Init+0x74>)
    7562:	6952      	ldr	r2, [r2, #20]
    7564:	f042 0208 	orr.w	r2, r2, #8
    7568:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:136
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~8 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x08));
    756a:	4b0f      	ldr	r3, [pc, #60]	; (75a8 <BitIoLdd6_Init+0x74>)
    756c:	4a0e      	ldr	r2, [pc, #56]	; (75a8 <BitIoLdd6_Init+0x74>)
    756e:	6812      	ldr	r2, [r2, #0]
    7570:	f022 0208 	bic.w	r2, r2, #8
    7574:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:139
  /* Initialization of pin routing */
  /* PORTD_PCR3: ISF=0,MUX=1 */
  PORTD_PCR3 = (uint32_t)((PORTD_PCR3 & (uint32_t)~(uint32_t)(
    7576:	4a0d      	ldr	r2, [pc, #52]	; (75ac <BitIoLdd6_Init+0x78>)
    7578:	4b0c      	ldr	r3, [pc, #48]	; (75ac <BitIoLdd6_Init+0x78>)
    757a:	68db      	ldr	r3, [r3, #12]
    757c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    7580:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7584:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    7588:	60d3      	str	r3, [r2, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:146
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd6_ID,DeviceDataPrv);
    758a:	4b09      	ldr	r3, [pc, #36]	; (75b0 <BitIoLdd6_Init+0x7c>)
    758c:	68fa      	ldr	r2, [r7, #12]
    758e:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:147
  return ((LDD_TDeviceData *)DeviceDataPrv);
    7590:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:148
}
    7592:	4618      	mov	r0, r3
    7594:	3714      	adds	r7, #20
    7596:	46bd      	mov	sp, r7
    7598:	f85d 7b04 	ldr.w	r7, [sp], #4
    759c:	4770      	bx	lr
    759e:	bf00      	nop
    75a0:	20000434 	.word	0x20000434
    75a4:	40047000 	.word	0x40047000
    75a8:	400ff0c0 	.word	0x400ff0c0
    75ac:	4004c000 	.word	0x4004c000
    75b0:	20000480 	.word	0x20000480

000075b4 <BitIoLdd6_ClrVal>:
BitIoLdd6_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:193
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    75b4:	b480      	push	{r7}
    75b6:	b083      	sub	sp, #12
    75b8:	af00      	add	r7, sp, #0
    75ba:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:195
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    75bc:	4b03      	ldr	r3, [pc, #12]	; (75cc <BitIoLdd6_ClrVal+0x18>)
    75be:	2208      	movs	r2, #8
    75c0:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:196
}
    75c2:	370c      	adds	r7, #12
    75c4:	46bd      	mov	sp, r7
    75c6:	f85d 7b04 	ldr.w	r7, [sp], #4
    75ca:	4770      	bx	lr
    75cc:	400ff0c0 	.word	0x400ff0c0

000075d0 <BitIoLdd6_SetVal>:
BitIoLdd6_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:213
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    75d0:	b480      	push	{r7}
    75d2:	b083      	sub	sp, #12
    75d4:	af00      	add	r7, sp, #0
    75d6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:215
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    75d8:	4b03      	ldr	r3, [pc, #12]	; (75e8 <BitIoLdd6_SetVal+0x18>)
    75da:	2208      	movs	r2, #8
    75dc:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:216
}
    75de:	370c      	adds	r7, #12
    75e0:	46bd      	mov	sp, r7
    75e2:	f85d 7b04 	ldr.w	r7, [sp], #4
    75e6:	4770      	bx	lr
    75e8:	400ff0c0 	.word	0x400ff0c0

000075ec <BitIoLdd6_NegVal>:
BitIoLdd6_NegVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:233
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd6_NegVal(LDD_TDeviceData *DeviceDataPtr)
{
    75ec:	b480      	push	{r7}
    75ee:	b083      	sub	sp, #12
    75f0:	af00      	add	r7, sp, #0
    75f2:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:235
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_TogglePortDataOutputMask(BitIoLdd6_MODULE_BASE_ADDRESS, BitIoLdd6_PORT_MASK);
    75f4:	4b03      	ldr	r3, [pc, #12]	; (7604 <BitIoLdd6_NegVal+0x18>)
    75f6:	2208      	movs	r2, #8
    75f8:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd6.c:236
}
    75fa:	370c      	adds	r7, #12
    75fc:	46bd      	mov	sp, r7
    75fe:	f85d 7b04 	ldr.w	r7, [sp], #4
    7602:	4770      	bx	lr
    7604:	400ff0c0 	.word	0x400ff0c0

00007608 <BitIoLdd7_Init>:
BitIoLdd7_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd7_Init(LDD_TUserData *UserDataPtr)
{
    7608:	b480      	push	{r7}
    760a:	b085      	sub	sp, #20
    760c:	af00      	add	r7, sp, #0
    760e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:127
  /* Allocate device structure */
  BitIoLdd7_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    7610:	4b18      	ldr	r3, [pc, #96]	; (7674 <BitIoLdd7_Init+0x6c>)
    7612:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    7614:	68fb      	ldr	r3, [r7, #12]
    7616:	687a      	ldr	r2, [r7, #4]
    7618:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    761a:	4917      	ldr	r1, [pc, #92]	; (7678 <BitIoLdd7_Init+0x70>)
    761c:	4b16      	ldr	r3, [pc, #88]	; (7678 <BitIoLdd7_Init+0x70>)
    761e:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    7622:	3318      	adds	r3, #24
    7624:	681b      	ldr	r3, [r3, #0]
    7626:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    762a:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    762e:	3318      	adds	r3, #24
    7630:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:134
  /* Configure pin as input */
  /* GPIOD_PDDR: PDD&=~0x10 */
  GPIOD_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x10));
    7632:	4b12      	ldr	r3, [pc, #72]	; (767c <BitIoLdd7_Init+0x74>)
    7634:	4a11      	ldr	r2, [pc, #68]	; (767c <BitIoLdd7_Init+0x74>)
    7636:	6952      	ldr	r2, [r2, #20]
    7638:	f022 0210 	bic.w	r2, r2, #16
    763c:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:137
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~0x10 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x10));
    763e:	4b0f      	ldr	r3, [pc, #60]	; (767c <BitIoLdd7_Init+0x74>)
    7640:	4a0e      	ldr	r2, [pc, #56]	; (767c <BitIoLdd7_Init+0x74>)
    7642:	6812      	ldr	r2, [r2, #0]
    7644:	f022 0210 	bic.w	r2, r2, #16
    7648:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:140
  /* Initialization of pin routing */
  /* PORTD_PCR4: ISF=0,MUX=1 */
  PORTD_PCR4 = (uint32_t)((PORTD_PCR4 & (uint32_t)~(uint32_t)(
    764a:	4a0d      	ldr	r2, [pc, #52]	; (7680 <BitIoLdd7_Init+0x78>)
    764c:	4b0c      	ldr	r3, [pc, #48]	; (7680 <BitIoLdd7_Init+0x78>)
    764e:	691b      	ldr	r3, [r3, #16]
    7650:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    7654:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7658:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    765c:	6113      	str	r3, [r2, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd7_ID,DeviceDataPrv);
    765e:	4b09      	ldr	r3, [pc, #36]	; (7684 <BitIoLdd7_Init+0x7c>)
    7660:	68fa      	ldr	r2, [r7, #12]
    7662:	661a      	str	r2, [r3, #96]	; 0x60
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    7664:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd7.c:149
}
    7666:	4618      	mov	r0, r3
    7668:	3714      	adds	r7, #20
    766a:	46bd      	mov	sp, r7
    766c:	f85d 7b04 	ldr.w	r7, [sp], #4
    7670:	4770      	bx	lr
    7672:	bf00      	nop
    7674:	20000438 	.word	0x20000438
    7678:	40047000 	.word	0x40047000
    767c:	400ff0c0 	.word	0x400ff0c0
    7680:	4004c000 	.word	0x4004c000
    7684:	20000480 	.word	0x20000480

00007688 <BitIoLdd8_Init>:
BitIoLdd8_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:122
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* BitIoLdd8_Init(LDD_TUserData *UserDataPtr)
{
    7688:	b480      	push	{r7}
    768a:	b085      	sub	sp, #20
    768c:	af00      	add	r7, sp, #0
    768e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:127
  /* Allocate device structure */
  BitIoLdd8_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    7690:	4b18      	ldr	r3, [pc, #96]	; (76f4 <BitIoLdd8_Init+0x6c>)
    7692:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:128
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    7694:	68fb      	ldr	r3, [r7, #12]
    7696:	687a      	ldr	r2, [r7, #4]
    7698:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:131
  /* Enable device clock gate */
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    769a:	4917      	ldr	r1, [pc, #92]	; (76f8 <BitIoLdd8_Init+0x70>)
    769c:	4b16      	ldr	r3, [pc, #88]	; (76f8 <BitIoLdd8_Init+0x70>)
    769e:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    76a2:	3318      	adds	r3, #24
    76a4:	681b      	ldr	r3, [r3, #0]
    76a6:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    76aa:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    76ae:	3318      	adds	r3, #24
    76b0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:134
  /* Configure pin as output */
  /* GPIOD_PDDR: PDD|=1 */
  GPIOD_PDDR |= GPIO_PDDR_PDD(0x01);
    76b2:	4b12      	ldr	r3, [pc, #72]	; (76fc <BitIoLdd8_Init+0x74>)
    76b4:	4a11      	ldr	r2, [pc, #68]	; (76fc <BitIoLdd8_Init+0x74>)
    76b6:	6952      	ldr	r2, [r2, #20]
    76b8:	f042 0201 	orr.w	r2, r2, #1
    76bc:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:137
  /* Set initialization value */
  /* GPIOD_PDOR: PDO&=~1 */
  GPIOD_PDOR &= (uint32_t)~(uint32_t)(GPIO_PDOR_PDO(0x01));
    76be:	4b0f      	ldr	r3, [pc, #60]	; (76fc <BitIoLdd8_Init+0x74>)
    76c0:	4a0e      	ldr	r2, [pc, #56]	; (76fc <BitIoLdd8_Init+0x74>)
    76c2:	6812      	ldr	r2, [r2, #0]
    76c4:	f022 0201 	bic.w	r2, r2, #1
    76c8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:140
  /* Initialization of pin routing */
  /* PORTD_PCR0: ISF=0,MUX=1 */
  PORTD_PCR0 = (uint32_t)((PORTD_PCR0 & (uint32_t)~(uint32_t)(
    76ca:	4a0d      	ldr	r2, [pc, #52]	; (7700 <BitIoLdd8_Init+0x78>)
    76cc:	4b0c      	ldr	r3, [pc, #48]	; (7700 <BitIoLdd8_Init+0x78>)
    76ce:	681b      	ldr	r3, [r3, #0]
    76d0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    76d4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    76d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
    76dc:	6013      	str	r3, [r2, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:147
                PORT_PCR_MUX(0x06)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x01)
               ));
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_BitIoLdd8_ID,DeviceDataPrv);
    76de:	4b09      	ldr	r3, [pc, #36]	; (7704 <BitIoLdd8_Init+0x7c>)
    76e0:	68fa      	ldr	r2, [r7, #12]
    76e2:	669a      	str	r2, [r3, #104]	; 0x68
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:148
  return ((LDD_TDeviceData *)DeviceDataPrv);
    76e4:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:149
}
    76e6:	4618      	mov	r0, r3
    76e8:	3714      	adds	r7, #20
    76ea:	46bd      	mov	sp, r7
    76ec:	f85d 7b04 	ldr.w	r7, [sp], #4
    76f0:	4770      	bx	lr
    76f2:	bf00      	nop
    76f4:	2000043c 	.word	0x2000043c
    76f8:	40047000 	.word	0x40047000
    76fc:	400ff0c0 	.word	0x400ff0c0
    7700:	4004c000 	.word	0x4004c000
    7704:	20000480 	.word	0x20000480

00007708 <BitIoLdd8_ClrVal>:
BitIoLdd8_ClrVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:263
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_ClrVal(LDD_TDeviceData *DeviceDataPtr)
{
    7708:	b480      	push	{r7}
    770a:	b083      	sub	sp, #12
    770c:	af00      	add	r7, sp, #0
    770e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:265
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_ClearPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    7710:	4b03      	ldr	r3, [pc, #12]	; (7720 <BitIoLdd8_ClrVal+0x18>)
    7712:	2201      	movs	r2, #1
    7714:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:266
}
    7716:	370c      	adds	r7, #12
    7718:	46bd      	mov	sp, r7
    771a:	f85d 7b04 	ldr.w	r7, [sp], #4
    771e:	4770      	bx	lr
    7720:	400ff0c0 	.word	0x400ff0c0

00007724 <BitIoLdd8_SetVal>:
BitIoLdd8_SetVal():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:283
**         DeviceDataPtr   - Pointer to device data
**                           structure returned by <Init> method.
*/
/* ===================================================================*/
void BitIoLdd8_SetVal(LDD_TDeviceData *DeviceDataPtr)
{
    7724:	b480      	push	{r7}
    7726:	b083      	sub	sp, #12
    7728:	af00      	add	r7, sp, #0
    772a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:285
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  GPIO_PDD_SetPortDataOutputMask(BitIoLdd8_MODULE_BASE_ADDRESS, BitIoLdd8_PORT_MASK);
    772c:	4b03      	ldr	r3, [pc, #12]	; (773c <BitIoLdd8_SetVal+0x18>)
    772e:	2201      	movs	r2, #1
    7730:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/BitIoLdd8.c:286
}
    7732:	370c      	adds	r7, #12
    7734:	46bd      	mov	sp, r7
    7736:	f85d 7b04 	ldr.w	r7, [sp], #4
    773a:	4770      	bx	lr
    773c:	400ff0c0 	.word	0x400ff0c0

00007740 <CI2C1_Interrupt>:
CI2C1_Interrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:211
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

PE_ISR(CI2C1_Interrupt)
{
    7740:	4668      	mov	r0, sp
    7742:	f020 0107 	bic.w	r1, r0, #7
    7746:	468d      	mov	sp, r1
    7748:	b591      	push	{r0, r4, r7, lr}
    774a:	b082      	sub	sp, #8
    774c:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:213
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  CI2C1_TDeviceDataPtr DeviceDataPrv = INT_I2C0__DEFAULT_RTOS_ISRPARAM;
    774e:	4b8d      	ldr	r3, [pc, #564]	; (7984 <CI2C1_Interrupt+0x244>)
    7750:	681b      	ldr	r3, [r3, #0]
    7752:	603b      	str	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:214
  LDD_I2C_TErrorMask ErrorMask = 0x00U; /* Temporary variable for error mask */
    7754:	2300      	movs	r3, #0
    7756:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:217
  register uint8_t Status;             /* Temporary variable for status register */

  Status = I2C_PDD_ReadStatusReg(I2C0_BASE_PTR); /* Safe status register */
    7758:	4b8b      	ldr	r3, [pc, #556]	; (7988 <CI2C1_Interrupt+0x248>)
    775a:	78db      	ldrb	r3, [r3, #3]
    775c:	b2dc      	uxtb	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:218
  I2C_PDD_ClearInterruptFlags(I2C0_BASE_PTR, (Status)); /* Clear interrupt flag */
    775e:	4b8a      	ldr	r3, [pc, #552]	; (7988 <CI2C1_Interrupt+0x248>)
    7760:	4a89      	ldr	r2, [pc, #548]	; (7988 <CI2C1_Interrupt+0x248>)
    7762:	78d2      	ldrb	r2, [r2, #3]
    7764:	b2d2      	uxtb	r2, r2
    7766:	b2d2      	uxtb	r2, r2
    7768:	f022 0212 	bic.w	r2, r2, #18
    776c:	b2d1      	uxtb	r1, r2
    776e:	b2e2      	uxtb	r2, r4
    7770:	430a      	orrs	r2, r1
    7772:	b2d2      	uxtb	r2, r2
    7774:	b2d2      	uxtb	r2, r2
    7776:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:219
  if (I2C_PDD_GetMasterMode(I2C0_BASE_PTR) == I2C_PDD_MASTER_MODE) { /* Is device in master mode? */
    7778:	4b83      	ldr	r3, [pc, #524]	; (7988 <CI2C1_Interrupt+0x248>)
    777a:	789b      	ldrb	r3, [r3, #2]
    777c:	b2db      	uxtb	r3, r3
    777e:	f003 0320 	and.w	r3, r3, #32
    7782:	2b00      	cmp	r3, #0
    7784:	f000 8102 	beq.w	798c <CI2C1_Interrupt+0x24c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:220
    if (I2C_PDD_GetTransmitMode(I2C0_BASE_PTR) == I2C_PDD_TX_DIRECTION) { /* Is device in Tx mode? */
    7788:	4b7f      	ldr	r3, [pc, #508]	; (7988 <CI2C1_Interrupt+0x248>)
    778a:	789b      	ldrb	r3, [r3, #2]
    778c:	b2db      	uxtb	r3, r3
    778e:	f003 0310 	and.w	r3, r3, #16
    7792:	2b00      	cmp	r3, #0
    7794:	f000 80b5 	beq.w	7902 <CI2C1_Interrupt+0x1c2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:221
      if ((Status & I2C_PDD_RX_ACKNOWLEDGE) != 0x00U){ /* NACK received? */
    7798:	4623      	mov	r3, r4
    779a:	f003 0301 	and.w	r3, r3, #1
    779e:	2b00      	cmp	r3, #0
    77a0:	d028      	beq.n	77f4 <CI2C1_Interrupt+0xb4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:222
        I2C_PDD_SetMasterMode(I2C0_BASE_PTR, I2C_PDD_SLAVE_MODE); /* Switch device to slave mode (stop signal sent) */
    77a2:	4b79      	ldr	r3, [pc, #484]	; (7988 <CI2C1_Interrupt+0x248>)
    77a4:	4a78      	ldr	r2, [pc, #480]	; (7988 <CI2C1_Interrupt+0x248>)
    77a6:	7892      	ldrb	r2, [r2, #2]
    77a8:	b2d2      	uxtb	r2, r2
    77aa:	f022 0220 	bic.w	r2, r2, #32
    77ae:	b2d2      	uxtb	r2, r2
    77b0:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:223
        I2C_PDD_SetTransmitMode(I2C0_BASE_PTR, I2C_PDD_RX_DIRECTION); /* Switch to Rx mode */
    77b2:	4b75      	ldr	r3, [pc, #468]	; (7988 <CI2C1_Interrupt+0x248>)
    77b4:	4a74      	ldr	r2, [pc, #464]	; (7988 <CI2C1_Interrupt+0x248>)
    77b6:	7892      	ldrb	r2, [r2, #2]
    77b8:	b2d2      	uxtb	r2, r2
    77ba:	f022 0210 	bic.w	r2, r2, #16
    77be:	b2d2      	uxtb	r2, r2
    77c0:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:224
        DeviceDataPrv->OutLenM = 0x00U; /* No character for sending */
    77c2:	683b      	ldr	r3, [r7, #0]
    77c4:	2200      	movs	r2, #0
    77c6:	819a      	strh	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:225
        DeviceDataPrv->InpLenM = 0x00U; /* No character for reception */
    77c8:	683b      	ldr	r3, [r7, #0]
    77ca:	2200      	movs	r2, #0
    77cc:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:226
        DeviceDataPrv->SerFlag &= (uint8_t)~(MASTER_IN_PROGRES); /* No character for sending or reception */
    77ce:	683b      	ldr	r3, [r7, #0]
    77d0:	781b      	ldrb	r3, [r3, #0]
    77d2:	f023 0301 	bic.w	r3, r3, #1
    77d6:	b2da      	uxtb	r2, r3
    77d8:	683b      	ldr	r3, [r7, #0]
    77da:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:227
        DeviceDataPrv->SerFlag |= (ADDR_COMPLETE | REP_ADDR_COMPLETE); /* Set the flag */
    77dc:	683b      	ldr	r3, [r7, #0]
    77de:	781b      	ldrb	r3, [r3, #0]
    77e0:	f043 0306 	orr.w	r3, r3, #6
    77e4:	b2da      	uxtb	r2, r3
    77e6:	683b      	ldr	r3, [r7, #0]
    77e8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:228
        ErrorMask |= LDD_I2C_MASTER_NACK; /* Set the Master Nack error mask */
    77ea:	88fb      	ldrh	r3, [r7, #6]
    77ec:	f043 0308 	orr.w	r3, r3, #8
    77f0:	80fb      	strh	r3, [r7, #6]
    77f2:	e0ec      	b.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:230
      } else {
        if ((DeviceDataPrv->SerFlag & ADDR_COMPLETE) != 0x00U) { /* If 10-bit addr has been completed */
    77f4:	683b      	ldr	r3, [r7, #0]
    77f6:	781b      	ldrb	r3, [r3, #0]
    77f8:	f003 0302 	and.w	r3, r3, #2
    77fc:	2b00      	cmp	r3, #0
    77fe:	d074      	beq.n	78ea <CI2C1_Interrupt+0x1aa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:231
          if (DeviceDataPrv->OutLenM != 0x00U) { /* Is any char. for transmitting? */
    7800:	683b      	ldr	r3, [r7, #0]
    7802:	899b      	ldrh	r3, [r3, #12]
    7804:	2b00      	cmp	r3, #0
    7806:	d00e      	beq.n	7826 <CI2C1_Interrupt+0xe6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:232
            DeviceDataPrv->OutLenM--;  /* Decrease number of chars for the transmit */
    7808:	683b      	ldr	r3, [r7, #0]
    780a:	899b      	ldrh	r3, [r3, #12]
    780c:	3b01      	subs	r3, #1
    780e:	b29a      	uxth	r2, r3
    7810:	683b      	ldr	r3, [r7, #0]
    7812:	819a      	strh	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:233
            I2C_PDD_WriteDataReg(I2C0_BASE_PTR, *(DeviceDataPrv->OutPtrM)++); /* Send character */
    7814:	4a5c      	ldr	r2, [pc, #368]	; (7988 <CI2C1_Interrupt+0x248>)
    7816:	683b      	ldr	r3, [r7, #0]
    7818:	691b      	ldr	r3, [r3, #16]
    781a:	1c58      	adds	r0, r3, #1
    781c:	6839      	ldr	r1, [r7, #0]
    781e:	6108      	str	r0, [r1, #16]
    7820:	781b      	ldrb	r3, [r3, #0]
    7822:	7113      	strb	r3, [r2, #4]
    7824:	e0d3      	b.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:235
          } else {
            if (DeviceDataPrv->InpLenM != 0x00U) { /* Is any char. for reception? */
    7826:	683b      	ldr	r3, [r7, #0]
    7828:	88db      	ldrh	r3, [r3, #6]
    782a:	2b00      	cmp	r3, #0
    782c:	d03c      	beq.n	78a8 <CI2C1_Interrupt+0x168>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:236
              if ((DeviceDataPrv->SerFlag & REP_ADDR_COMPLETE) != 0x00U) { /* If repeated start and addr tx has been completed for 10-bit mode ?*/
    782e:	683b      	ldr	r3, [r7, #0]
    7830:	781b      	ldrb	r3, [r3, #0]
    7832:	f003 0304 	and.w	r3, r3, #4
    7836:	2b00      	cmp	r3, #0
    7838:	d01f      	beq.n	787a <CI2C1_Interrupt+0x13a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:237
                if (DeviceDataPrv->InpLenM == 0x01U) { /* If only one char to receive */
    783a:	683b      	ldr	r3, [r7, #0]
    783c:	88db      	ldrh	r3, [r3, #6]
    783e:	2b01      	cmp	r3, #1
    7840:	d108      	bne.n	7854 <CI2C1_Interrupt+0x114>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:238
                  I2C_PDD_EnableTransmitAcknowledge(I2C0_BASE_PTR, PDD_DISABLE); /* then transmit ACK disable */
    7842:	4b51      	ldr	r3, [pc, #324]	; (7988 <CI2C1_Interrupt+0x248>)
    7844:	4a50      	ldr	r2, [pc, #320]	; (7988 <CI2C1_Interrupt+0x248>)
    7846:	7892      	ldrb	r2, [r2, #2]
    7848:	b2d2      	uxtb	r2, r2
    784a:	f042 0208 	orr.w	r2, r2, #8
    784e:	b2d2      	uxtb	r2, r2
    7850:	709a      	strb	r2, [r3, #2]
    7852:	e007      	b.n	7864 <CI2C1_Interrupt+0x124>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:240
                } else {
                  I2C_PDD_EnableTransmitAcknowledge(I2C0_BASE_PTR, PDD_ENABLE); /* else transmit ACK enable */
    7854:	4b4c      	ldr	r3, [pc, #304]	; (7988 <CI2C1_Interrupt+0x248>)
    7856:	4a4c      	ldr	r2, [pc, #304]	; (7988 <CI2C1_Interrupt+0x248>)
    7858:	7892      	ldrb	r2, [r2, #2]
    785a:	b2d2      	uxtb	r2, r2
    785c:	f022 0208 	bic.w	r2, r2, #8
    7860:	b2d2      	uxtb	r2, r2
    7862:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:242 (discriminator 3)
                }
                I2C_PDD_SetTransmitMode(I2C0_BASE_PTR, I2C_PDD_RX_DIRECTION); /* Switch to Rx mode */
    7864:	4b48      	ldr	r3, [pc, #288]	; (7988 <CI2C1_Interrupt+0x248>)
    7866:	4a48      	ldr	r2, [pc, #288]	; (7988 <CI2C1_Interrupt+0x248>)
    7868:	7892      	ldrb	r2, [r2, #2]
    786a:	b2d2      	uxtb	r2, r2
    786c:	f022 0210 	bic.w	r2, r2, #16
    7870:	b2d2      	uxtb	r2, r2
    7872:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:243 (discriminator 3)
                (void)I2C_PDD_ReadDataReg(I2C0_BASE_PTR); /* Dummy read character */
    7874:	4b44      	ldr	r3, [pc, #272]	; (7988 <CI2C1_Interrupt+0x248>)
    7876:	791b      	ldrb	r3, [r3, #4]
    7878:	e0a9      	b.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:245
              } else {                 /* Repeated address has not been completed for 10-bit addressing mode */
                I2C_PDD_RepeatStart(I2C0_BASE_PTR); /* Repeat start cycle generated */
    787a:	4b43      	ldr	r3, [pc, #268]	; (7988 <CI2C1_Interrupt+0x248>)
    787c:	4a42      	ldr	r2, [pc, #264]	; (7988 <CI2C1_Interrupt+0x248>)
    787e:	7892      	ldrb	r2, [r2, #2]
    7880:	b2d2      	uxtb	r2, r2
    7882:	f042 0204 	orr.w	r2, r2, #4
    7886:	b2d2      	uxtb	r2, r2
    7888:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:246
                I2C_PDD_WriteDataReg(I2C0_BASE_PTR, (uint8_t)(DeviceDataPrv->SlaveAddrHigh | 0x01U)); /* Send slave address high byte*/
    788a:	4b3f      	ldr	r3, [pc, #252]	; (7988 <CI2C1_Interrupt+0x248>)
    788c:	683a      	ldr	r2, [r7, #0]
    788e:	7952      	ldrb	r2, [r2, #5]
    7890:	f042 0201 	orr.w	r2, r2, #1
    7894:	b2d2      	uxtb	r2, r2
    7896:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:247
                DeviceDataPrv->SerFlag |= REP_ADDR_COMPLETE;
    7898:	683b      	ldr	r3, [r7, #0]
    789a:	781b      	ldrb	r3, [r3, #0]
    789c:	f043 0304 	orr.w	r3, r3, #4
    78a0:	b2da      	uxtb	r2, r3
    78a2:	683b      	ldr	r3, [r7, #0]
    78a4:	701a      	strb	r2, [r3, #0]
    78a6:	e092      	b.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:250
              }
            } else {
              DeviceDataPrv->SerFlag &= (uint8_t)~(MASTER_IN_PROGRES); /* Clear flag "busy" */
    78a8:	683b      	ldr	r3, [r7, #0]
    78aa:	781b      	ldrb	r3, [r3, #0]
    78ac:	f023 0301 	bic.w	r3, r3, #1
    78b0:	b2da      	uxtb	r2, r3
    78b2:	683b      	ldr	r3, [r7, #0]
    78b4:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:251
              if (DeviceDataPrv->SendStop == LDD_I2C_SEND_STOP) {
    78b6:	683b      	ldr	r3, [r7, #0]
    78b8:	785b      	ldrb	r3, [r3, #1]
    78ba:	2b01      	cmp	r3, #1
    78bc:	d10f      	bne.n	78de <CI2C1_Interrupt+0x19e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:252
                I2C_PDD_SetMasterMode(I2C0_BASE_PTR, I2C_PDD_SLAVE_MODE); /* Switch device to slave mode (stop signal sent) */
    78be:	4b32      	ldr	r3, [pc, #200]	; (7988 <CI2C1_Interrupt+0x248>)
    78c0:	4a31      	ldr	r2, [pc, #196]	; (7988 <CI2C1_Interrupt+0x248>)
    78c2:	7892      	ldrb	r2, [r2, #2]
    78c4:	b2d2      	uxtb	r2, r2
    78c6:	f022 0220 	bic.w	r2, r2, #32
    78ca:	b2d2      	uxtb	r2, r2
    78cc:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:253
                I2C_PDD_SetTransmitMode(I2C0_BASE_PTR, I2C_PDD_RX_DIRECTION); /* Switch to Rx mode */
    78ce:	4b2e      	ldr	r3, [pc, #184]	; (7988 <CI2C1_Interrupt+0x248>)
    78d0:	4a2d      	ldr	r2, [pc, #180]	; (7988 <CI2C1_Interrupt+0x248>)
    78d2:	7892      	ldrb	r2, [r2, #2]
    78d4:	b2d2      	uxtb	r2, r2
    78d6:	f022 0210 	bic.w	r2, r2, #16
    78da:	b2d2      	uxtb	r2, r2
    78dc:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:255
              }
              CI2C1_OnMasterBlockSent(DeviceDataPrv->UserData); /* Invoke OnMasterBlockSent event */
    78de:	683b      	ldr	r3, [r7, #0]
    78e0:	695b      	ldr	r3, [r3, #20]
    78e2:	4618      	mov	r0, r3
    78e4:	f000 fe2e 	bl	8544 <CI2C1_OnMasterBlockSent>
    78e8:	e071      	b.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:259
            }
          }
        } else {
          I2C_PDD_WriteDataReg(I2C0_BASE_PTR, DeviceDataPrv->SlaveAddr); /* Send second part of the 10-bit addres */
    78ea:	4b27      	ldr	r3, [pc, #156]	; (7988 <CI2C1_Interrupt+0x248>)
    78ec:	683a      	ldr	r2, [r7, #0]
    78ee:	7912      	ldrb	r2, [r2, #4]
    78f0:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:260
          DeviceDataPrv->SerFlag |= (ADDR_COMPLETE); /* Address complete */
    78f2:	683b      	ldr	r3, [r7, #0]
    78f4:	781b      	ldrb	r3, [r3, #0]
    78f6:	f043 0302 	orr.w	r3, r3, #2
    78fa:	b2da      	uxtb	r2, r3
    78fc:	683b      	ldr	r3, [r7, #0]
    78fe:	701a      	strb	r2, [r3, #0]
    7900:	e065      	b.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:264
        }
      }
    } else {
      DeviceDataPrv->InpLenM--;        /* Decrease number of chars for the receive */
    7902:	683b      	ldr	r3, [r7, #0]
    7904:	88db      	ldrh	r3, [r3, #6]
    7906:	3b01      	subs	r3, #1
    7908:	b29a      	uxth	r2, r3
    790a:	683b      	ldr	r3, [r7, #0]
    790c:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:265
      if (DeviceDataPrv->InpLenM != 0x00U) { /* Is any char. for reception? */
    790e:	683b      	ldr	r3, [r7, #0]
    7910:	88db      	ldrh	r3, [r3, #6]
    7912:	2b00      	cmp	r3, #0
    7914:	d00c      	beq.n	7930 <CI2C1_Interrupt+0x1f0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:266
        if (DeviceDataPrv->InpLenM == 0x01U) {
    7916:	683b      	ldr	r3, [r7, #0]
    7918:	88db      	ldrh	r3, [r3, #6]
    791a:	2b01      	cmp	r3, #1
    791c:	d11f      	bne.n	795e <CI2C1_Interrupt+0x21e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:267
          I2C_PDD_EnableTransmitAcknowledge(I2C0_BASE_PTR, PDD_DISABLE); /* Transmit NACK */
    791e:	4b1a      	ldr	r3, [pc, #104]	; (7988 <CI2C1_Interrupt+0x248>)
    7920:	4a19      	ldr	r2, [pc, #100]	; (7988 <CI2C1_Interrupt+0x248>)
    7922:	7892      	ldrb	r2, [r2, #2]
    7924:	b2d2      	uxtb	r2, r2
    7926:	f042 0208 	orr.w	r2, r2, #8
    792a:	b2d2      	uxtb	r2, r2
    792c:	709a      	strb	r2, [r3, #2]
    792e:	e016      	b.n	795e <CI2C1_Interrupt+0x21e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:270
        }
      } else {
        DeviceDataPrv->SerFlag &= (uint8_t)~(MASTER_IN_PROGRES); /* Clear flag "busy" */
    7930:	683b      	ldr	r3, [r7, #0]
    7932:	781b      	ldrb	r3, [r3, #0]
    7934:	f023 0301 	bic.w	r3, r3, #1
    7938:	b2da      	uxtb	r2, r3
    793a:	683b      	ldr	r3, [r7, #0]
    793c:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:271
        I2C_PDD_SetMasterMode(I2C0_BASE_PTR, I2C_PDD_SLAVE_MODE); /* If no, switch device to slave mode (stop signal sent) */
    793e:	4b12      	ldr	r3, [pc, #72]	; (7988 <CI2C1_Interrupt+0x248>)
    7940:	4a11      	ldr	r2, [pc, #68]	; (7988 <CI2C1_Interrupt+0x248>)
    7942:	7892      	ldrb	r2, [r2, #2]
    7944:	b2d2      	uxtb	r2, r2
    7946:	f022 0220 	bic.w	r2, r2, #32
    794a:	b2d2      	uxtb	r2, r2
    794c:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:272
        I2C_PDD_EnableTransmitAcknowledge(I2C0_BASE_PTR, PDD_ENABLE); /* Transmit ACK */
    794e:	4b0e      	ldr	r3, [pc, #56]	; (7988 <CI2C1_Interrupt+0x248>)
    7950:	4a0d      	ldr	r2, [pc, #52]	; (7988 <CI2C1_Interrupt+0x248>)
    7952:	7892      	ldrb	r2, [r2, #2]
    7954:	b2d2      	uxtb	r2, r2
    7956:	f022 0208 	bic.w	r2, r2, #8
    795a:	b2d2      	uxtb	r2, r2
    795c:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:274
      }
      *(DeviceDataPrv->InpPtrM)++ = I2C_PDD_ReadDataReg(I2C0_BASE_PTR); /* Receive character */
    795e:	683b      	ldr	r3, [r7, #0]
    7960:	689b      	ldr	r3, [r3, #8]
    7962:	1c59      	adds	r1, r3, #1
    7964:	683a      	ldr	r2, [r7, #0]
    7966:	6091      	str	r1, [r2, #8]
    7968:	4a07      	ldr	r2, [pc, #28]	; (7988 <CI2C1_Interrupt+0x248>)
    796a:	7912      	ldrb	r2, [r2, #4]
    796c:	b2d2      	uxtb	r2, r2
    796e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:275
      if (DeviceDataPrv->InpLenM == 0x00U) { /* Is any char. for reception? */
    7970:	683b      	ldr	r3, [r7, #0]
    7972:	88db      	ldrh	r3, [r3, #6]
    7974:	2b00      	cmp	r3, #0
    7976:	d12a      	bne.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:276
        CI2C1_OnMasterBlockReceived(DeviceDataPrv->UserData); /* Invoke OnMasterBlockReceived event */
    7978:	683b      	ldr	r3, [r7, #0]
    797a:	695b      	ldr	r3, [r3, #20]
    797c:	4618      	mov	r0, r3
    797e:	f000 fdf5 	bl	856c <CI2C1_OnMasterBlockReceived>
    7982:	e024      	b.n	79ce <CI2C1_Interrupt+0x28e>
    7984:	20000458 	.word	0x20000458
    7988:	40066000 	.word	0x40066000
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:280
      }
    }
  } else {
    if ((Status & I2C_PDD_ARBIT_LOST) != 0x00U) { /* Arbitration lost? */
    798c:	4623      	mov	r3, r4
    798e:	f003 0310 	and.w	r3, r3, #16
    7992:	2b00      	cmp	r3, #0
    7994:	d01b      	beq.n	79ce <CI2C1_Interrupt+0x28e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:281
      DeviceDataPrv->OutLenM = 0x00U;  /* Any character is not for sent */
    7996:	683b      	ldr	r3, [r7, #0]
    7998:	2200      	movs	r2, #0
    799a:	819a      	strh	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:282
      DeviceDataPrv->InpLenM = 0x00U;  /* Any character is not for reception */
    799c:	683b      	ldr	r3, [r7, #0]
    799e:	2200      	movs	r2, #0
    79a0:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:283
      DeviceDataPrv->SendStop = LDD_I2C_SEND_STOP; /* Set variable for sending stop condition (for master mode) */
    79a2:	683b      	ldr	r3, [r7, #0]
    79a4:	2201      	movs	r2, #1
    79a6:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:284
      DeviceDataPrv->SerFlag &= (uint8_t)~(MASTER_IN_PROGRES); /* Any character is not for sent or reception*/
    79a8:	683b      	ldr	r3, [r7, #0]
    79aa:	781b      	ldrb	r3, [r3, #0]
    79ac:	f023 0301 	bic.w	r3, r3, #1
    79b0:	b2da      	uxtb	r2, r3
    79b2:	683b      	ldr	r3, [r7, #0]
    79b4:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:285
      I2C_PDD_SetTransmitMode(I2C0_BASE_PTR, I2C_PDD_RX_DIRECTION); /* Switch to Rx mode */
    79b6:	4b0e      	ldr	r3, [pc, #56]	; (79f0 <CI2C1_Interrupt+0x2b0>)
    79b8:	4a0d      	ldr	r2, [pc, #52]	; (79f0 <CI2C1_Interrupt+0x2b0>)
    79ba:	7892      	ldrb	r2, [r2, #2]
    79bc:	b2d2      	uxtb	r2, r2
    79be:	f022 0210 	bic.w	r2, r2, #16
    79c2:	b2d2      	uxtb	r2, r2
    79c4:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:286
      ErrorMask |= LDD_I2C_ARBIT_LOST; /* Set the ArbitLost error mask */
    79c6:	88fb      	ldrh	r3, [r7, #6]
    79c8:	f043 0304 	orr.w	r3, r3, #4
    79cc:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:289
    }
  }
  if (ErrorMask != 0x00U) {            /* Is any error mask set? */
    79ce:	88fb      	ldrh	r3, [r7, #6]
    79d0:	2b00      	cmp	r3, #0
    79d2:	d006      	beq.n	79e2 <CI2C1_Interrupt+0x2a2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:290
    DeviceDataPrv->ErrorMask |= ErrorMask; /* Update list of error mask value */
    79d4:	683b      	ldr	r3, [r7, #0]
    79d6:	885a      	ldrh	r2, [r3, #2]
    79d8:	88fb      	ldrh	r3, [r7, #6]
    79da:	4313      	orrs	r3, r2
    79dc:	b29a      	uxth	r2, r3
    79de:	683b      	ldr	r3, [r7, #0]
    79e0:	805a      	strh	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:292
  }
}
    79e2:	3708      	adds	r7, #8
    79e4:	46bd      	mov	sp, r7
    79e6:	e8bd 4091 	ldmia.w	sp!, {r0, r4, r7, lr}
    79ea:	4685      	mov	sp, r0
    79ec:	4770      	bx	lr
    79ee:	bf00      	nop
    79f0:	40066000 	.word	0x40066000

000079f4 <CI2C1_Init>:
CI2C1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:318
**     @return
**                         - Pointer to the device data structure. 
*/
/* ===================================================================*/
LDD_TDeviceData* CI2C1_Init(LDD_TUserData *UserDataPtr)
{
    79f4:	b480      	push	{r7}
    79f6:	b085      	sub	sp, #20
    79f8:	af00      	add	r7, sp, #0
    79fa:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:322
  /* Allocate HAL device structure */
  CI2C1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    79fc:	4b4a      	ldr	r3, [pc, #296]	; (7b28 <CI2C1_Init+0x134>)
    79fe:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:324

  DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
    7a00:	68fb      	ldr	r3, [r7, #12]
    7a02:	687a      	ldr	r2, [r7, #4]
    7a04:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:328

  /* Allocate interrupt vector */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_I2C0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    7a06:	4b49      	ldr	r3, [pc, #292]	; (7b2c <CI2C1_Init+0x138>)
    7a08:	68fa      	ldr	r2, [r7, #12]
    7a0a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:329
  DeviceDataPrv->SerFlag = ADDR_7;     /* Reset all flags start with 7-bit address mode */
    7a0c:	68fb      	ldr	r3, [r7, #12]
    7a0e:	2220      	movs	r2, #32
    7a10:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:330
  DeviceDataPrv->SlaveAddr = 0x00U;    /* Set variable for slave address */
    7a12:	68fb      	ldr	r3, [r7, #12]
    7a14:	2200      	movs	r2, #0
    7a16:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:331
  DeviceDataPrv->SendStop = LDD_I2C_SEND_STOP; /* Set variable for sending stop condition (for master mode) */
    7a18:	68fb      	ldr	r3, [r7, #12]
    7a1a:	2201      	movs	r2, #1
    7a1c:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:332
  DeviceDataPrv->InpLenM = 0x00U;      /* Set zero counter of data of reception */
    7a1e:	68fb      	ldr	r3, [r7, #12]
    7a20:	2200      	movs	r2, #0
    7a22:	80da      	strh	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:333
  DeviceDataPrv->OutLenM = 0x00U;      /* Set zero counter of data of transmission */
    7a24:	68fb      	ldr	r3, [r7, #12]
    7a26:	2200      	movs	r2, #0
    7a28:	819a      	strh	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:334
  DeviceDataPrv->ErrorMask = 0x00U;    /* Clear variable for errors mask value */
    7a2a:	68fb      	ldr	r3, [r7, #12]
    7a2c:	2200      	movs	r2, #0
    7a2e:	805a      	strh	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:336
  /* SIM_SCGC4: I2C0=1 */
  SIM_SCGC4 |= SIM_SCGC4_I2C0_MASK;
    7a30:	493f      	ldr	r1, [pc, #252]	; (7b30 <CI2C1_Init+0x13c>)
    7a32:	4b3f      	ldr	r3, [pc, #252]	; (7b30 <CI2C1_Init+0x13c>)
    7a34:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    7a38:	3314      	adds	r3, #20
    7a3a:	681b      	ldr	r3, [r3, #0]
    7a3c:	f043 0240 	orr.w	r2, r3, #64	; 0x40
    7a40:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    7a44:	3314      	adds	r3, #20
    7a46:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:338
  /* I2C0_C1: IICEN=0,IICIE=0,MST=0,TX=0,TXAK=0,RSTA=0,WUEN=0,DMAEN=0 */
  I2C0_C1 = 0x00U;                     /* Clear control register */
    7a48:	4b3a      	ldr	r3, [pc, #232]	; (7b34 <CI2C1_Init+0x140>)
    7a4a:	2200      	movs	r2, #0
    7a4c:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:340
  /* I2C0_FLT: SHEN=0,STOPF=1,SSIE=0,STARTF=1,FLT=0 */
  I2C0_FLT = (I2C_FLT_STOPF_MASK | I2C_FLT_STARTF_MASK | I2C_FLT_FLT(0x00)); /* Clear bus status interrupt flags */
    7a4e:	4b39      	ldr	r3, [pc, #228]	; (7b34 <CI2C1_Init+0x140>)
    7a50:	2250      	movs	r2, #80	; 0x50
    7a52:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:342
  /* I2C0_S: TCF=0,IAAS=0,BUSY=0,ARBL=0,RAM=0,SRW=0,IICIF=1,RXAK=0 */
  I2C0_S = I2C_S_IICIF_MASK;           /* Clear interrupt flag */
    7a54:	4b37      	ldr	r3, [pc, #220]	; (7b34 <CI2C1_Init+0x140>)
    7a56:	2202      	movs	r2, #2
    7a58:	70da      	strb	r2, [r3, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:344
  /* SIM_SCGC5: PORTD=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    7a5a:	4935      	ldr	r1, [pc, #212]	; (7b30 <CI2C1_Init+0x13c>)
    7a5c:	4b34      	ldr	r3, [pc, #208]	; (7b30 <CI2C1_Init+0x13c>)
    7a5e:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    7a62:	3318      	adds	r3, #24
    7a64:	681b      	ldr	r3, [r3, #0]
    7a66:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    7a6a:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    7a6e:	3318      	adds	r3, #24
    7a70:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:346
  /* PORTD_PCR9: ISF=0,MUX=2 */
  PORTD_PCR9 = (uint32_t)((PORTD_PCR9 & (uint32_t)~(uint32_t)(
    7a72:	4a31      	ldr	r2, [pc, #196]	; (7b38 <CI2C1_Init+0x144>)
    7a74:	4b30      	ldr	r3, [pc, #192]	; (7b38 <CI2C1_Init+0x144>)
    7a76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    7a78:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    7a7c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7a80:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    7a84:	6253      	str	r3, [r2, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:353
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  /* PORTD_PCR8: ISF=0,MUX=2 */
  PORTD_PCR8 = (uint32_t)((PORTD_PCR8 & (uint32_t)~(uint32_t)(
    7a86:	4a2c      	ldr	r2, [pc, #176]	; (7b38 <CI2C1_Init+0x144>)
    7a88:	4b2b      	ldr	r3, [pc, #172]	; (7b38 <CI2C1_Init+0x144>)
    7a8a:	6a1b      	ldr	r3, [r3, #32]
    7a8c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    7a90:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    7a94:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    7a98:	6213      	str	r3, [r2, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:359
                PORT_PCR_ISF_MASK |
                PORT_PCR_MUX(0x05)
               )) | (uint32_t)(
                PORT_PCR_MUX(0x02)
               ));
  PORT_PDD_SetPinOpenDrain(PORTD_BASE_PTR, 0x09u, PORT_PDD_OPEN_DRAIN_ENABLE); /* Set SDA pin as open drain */
    7a9a:	4a27      	ldr	r2, [pc, #156]	; (7b38 <CI2C1_Init+0x144>)
    7a9c:	4b26      	ldr	r3, [pc, #152]	; (7b38 <CI2C1_Init+0x144>)
    7a9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    7aa0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    7aa4:	f023 0320 	bic.w	r3, r3, #32
    7aa8:	f043 0320 	orr.w	r3, r3, #32
    7aac:	6253      	str	r3, [r2, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:360
  PORT_PDD_SetPinOpenDrain(PORTD_BASE_PTR, 0x08u, PORT_PDD_OPEN_DRAIN_ENABLE); /* Set SCL pin as open drain */
    7aae:	4a22      	ldr	r2, [pc, #136]	; (7b38 <CI2C1_Init+0x144>)
    7ab0:	4b21      	ldr	r3, [pc, #132]	; (7b38 <CI2C1_Init+0x144>)
    7ab2:	6a1b      	ldr	r3, [r3, #32]
    7ab4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    7ab8:	f023 0320 	bic.w	r3, r3, #32
    7abc:	f043 0320 	orr.w	r3, r3, #32
    7ac0:	6213      	str	r3, [r2, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:362
  /* NVICIP24: PRI24=0x50 */
  NVICIP24 = NVIC_IP_PRI24(0x50);
    7ac2:	4b1e      	ldr	r3, [pc, #120]	; (7b3c <CI2C1_Init+0x148>)
    7ac4:	2250      	movs	r2, #80	; 0x50
    7ac6:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:364
  /* NVICISER0: SETENA|=0x01000000 */
  NVICISER0 |= NVIC_ISER_SETENA(0x01000000);
    7aca:	4b1c      	ldr	r3, [pc, #112]	; (7b3c <CI2C1_Init+0x148>)
    7acc:	4a1b      	ldr	r2, [pc, #108]	; (7b3c <CI2C1_Init+0x148>)
    7ace:	6812      	ldr	r2, [r2, #0]
    7ad0:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
    7ad4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:366
  /* I2C0_C2: GCAEN=0,ADEXT=0,HDRS=0,SBRC=0,RMEN=0,AD=0 */
  I2C0_C2 = I2C_C2_AD(0x00);
    7ad6:	4b17      	ldr	r3, [pc, #92]	; (7b34 <CI2C1_Init+0x140>)
    7ad8:	2200      	movs	r2, #0
    7ada:	715a      	strb	r2, [r3, #5]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:368
  /* I2C0_FLT: SHEN=0,STOPF=0,SSIE=0,STARTF=0,FLT=0 */
  I2C0_FLT = I2C_FLT_FLT(0x00);        /* Set glitch filter register */
    7adc:	4b15      	ldr	r3, [pc, #84]	; (7b34 <CI2C1_Init+0x140>)
    7ade:	2200      	movs	r2, #0
    7ae0:	719a      	strb	r2, [r3, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:370
  /* I2C0_SMB: FACK=0,ALERTEN=0,SIICAEN=0,TCKSEL=0,SLTF=1,SHTF1=0,SHTF2=0,SHTF2IE=0 */
  I2C0_SMB = I2C_SMB_SLTF_MASK;
    7ae2:	4b14      	ldr	r3, [pc, #80]	; (7b34 <CI2C1_Init+0x140>)
    7ae4:	2208      	movs	r2, #8
    7ae6:	721a      	strb	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:372
  /* I2C0_F: MULT=0,ICR=0x2D */
  I2C0_F = (I2C_F_MULT(0x00) | I2C_F_ICR(0x2D)); /* Set prescaler bits */
    7ae8:	4b12      	ldr	r3, [pc, #72]	; (7b34 <CI2C1_Init+0x140>)
    7aea:	222d      	movs	r2, #45	; 0x2d
    7aec:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:373
  I2C_PDD_EnableDevice(I2C0_BASE_PTR, PDD_ENABLE); /* Enable device */
    7aee:	4b11      	ldr	r3, [pc, #68]	; (7b34 <CI2C1_Init+0x140>)
    7af0:	4a10      	ldr	r2, [pc, #64]	; (7b34 <CI2C1_Init+0x140>)
    7af2:	7892      	ldrb	r2, [r2, #2]
    7af4:	b2d2      	uxtb	r2, r2
    7af6:	b2d2      	uxtb	r2, r2
    7af8:	f062 027f 	orn	r2, r2, #127	; 0x7f
    7afc:	b2d2      	uxtb	r2, r2
    7afe:	b2d2      	uxtb	r2, r2
    7b00:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:374
  I2C_PDD_EnableInterrupt(I2C0_BASE_PTR); /* Enable interrupt */
    7b02:	4b0c      	ldr	r3, [pc, #48]	; (7b34 <CI2C1_Init+0x140>)
    7b04:	4a0b      	ldr	r2, [pc, #44]	; (7b34 <CI2C1_Init+0x140>)
    7b06:	7892      	ldrb	r2, [r2, #2]
    7b08:	b2d2      	uxtb	r2, r2
    7b0a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    7b0e:	b2d2      	uxtb	r2, r2
    7b10:	709a      	strb	r2, [r3, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:376
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_CI2C1_ID,DeviceDataPrv);
    7b12:	4b0b      	ldr	r3, [pc, #44]	; (7b40 <CI2C1_Init+0x14c>)
    7b14:	68fa      	ldr	r2, [r7, #12]
    7b16:	619a      	str	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:377
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the data data structure */
    7b18:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CI2C1.c:378
}
    7b1a:	4618      	mov	r0, r3
    7b1c:	3714      	adds	r7, #20
    7b1e:	46bd      	mov	sp, r7
    7b20:	f85d 7b04 	ldr.w	r7, [sp], #4
    7b24:	4770      	bx	lr
    7b26:	bf00      	nop
    7b28:	20000440 	.word	0x20000440
    7b2c:	20000458 	.word	0x20000458
    7b30:	40047000 	.word	0x40047000
    7b34:	40066000 	.word	0x40066000
    7b38:	4004c000 	.word	0x4004c000
    7b3c:	e000e100 	.word	0xe000e100
    7b40:	20000480 	.word	0x20000480

00007b44 <CLS_BLE_SendStr>:
CLS_BLE_SendStr():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:191
 * \brief Prints a string using I/O callbacks
 * \param[in] str String (zero terminated) to be printed
 * \param[in] io I/O function to be used for printing
 */
void CLS_BLE_SendStr(const uint8_t *str, CLS_BLE_StdIO_OutErr_FctType io)
{
    7b44:	b580      	push	{r7, lr}
    7b46:	b082      	sub	sp, #8
    7b48:	af00      	add	r7, sp, #0
    7b4a:	6078      	str	r0, [r7, #4]
    7b4c:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:192
  if (io==NULL) {
    7b4e:	683b      	ldr	r3, [r7, #0]
    7b50:	2b00      	cmp	r3, #0
    7b52:	d100      	bne.n	7b56 <CLS_BLE_SendStr+0x12>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:193
    return;
    7b54:	e00b      	b.n	7b6e <CLS_BLE_SendStr+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:195
  }
  while(*str!='\0') {
    7b56:	e006      	b.n	7b66 <CLS_BLE_SendStr+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:196
    io(*str++);
    7b58:	687b      	ldr	r3, [r7, #4]
    7b5a:	1c5a      	adds	r2, r3, #1
    7b5c:	607a      	str	r2, [r7, #4]
    7b5e:	781a      	ldrb	r2, [r3, #0]
    7b60:	683b      	ldr	r3, [r7, #0]
    7b62:	4610      	mov	r0, r2
    7b64:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:195 (discriminator 1)
void CLS_BLE_SendStr(const uint8_t *str, CLS_BLE_StdIO_OutErr_FctType io)
{
  if (io==NULL) {
    return;
  }
  while(*str!='\0') {
    7b66:	687b      	ldr	r3, [r7, #4]
    7b68:	781b      	ldrb	r3, [r3, #0]
    7b6a:	2b00      	cmp	r3, #0
    7b6c:	d1f4      	bne.n	7b58 <CLS_BLE_SendStr+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:198
    io(*str++);
  }
}
    7b6e:	3708      	adds	r7, #8
    7b70:	46bd      	mov	sp, r7
    7b72:	bd80      	pop	{r7, pc}

00007b74 <CLS_BLE_PrintPrompt>:
CLS_BLE_PrintPrompt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:386
**       * io              - Pointer to IO to be used
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_PrintPrompt(CLS_BLE_ConstStdIOType *io)
{
    7b74:	b580      	push	{r7, lr}
    7b76:	b082      	sub	sp, #8
    7b78:	af00      	add	r7, sp, #0
    7b7a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:387
  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdOut); /* ensure that there is a new line */
    7b7c:	687b      	ldr	r3, [r7, #4]
    7b7e:	685b      	ldr	r3, [r3, #4]
    7b80:	4806      	ldr	r0, [pc, #24]	; (7b9c <CLS_BLE_PrintPrompt+0x28>)
    7b82:	4619      	mov	r1, r3
    7b84:	f7ff ffde 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:388
  CLS_BLE_SendStr((unsigned char*)CLS_BLE_CONFIG_PROMPT_STRING, io->stdOut);
    7b88:	687b      	ldr	r3, [r7, #4]
    7b8a:	685b      	ldr	r3, [r3, #4]
    7b8c:	4804      	ldr	r0, [pc, #16]	; (7ba0 <CLS_BLE_PrintPrompt+0x2c>)
    7b8e:	4619      	mov	r1, r3
    7b90:	f7ff ffd8 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:389
}
    7b94:	3708      	adds	r7, #8
    7b96:	46bd      	mov	sp, r7
    7b98:	bd80      	pop	{r7, pc}
    7b9a:	bf00      	nop
    7b9c:	0000dbe0 	.word	0x0000dbe0
    7ba0:	0000dca4 	.word	0x0000dca4

00007ba4 <CLS_BLE_IsHistoryCharacter>:
CLS_BLE_IsHistoryCharacter():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:409
**     Returns     :
**         ---             - TRUE if it is an accepted history character
** ===================================================================
*/
bool CLS_BLE_IsHistoryCharacter(uint8_t ch, uint8_t *cmdBuf, size_t cmdBufIdx, bool *isPrev)
{
    7ba4:	b480      	push	{r7}
    7ba6:	b085      	sub	sp, #20
    7ba8:	af00      	add	r7, sp, #0
    7baa:	60b9      	str	r1, [r7, #8]
    7bac:	607a      	str	r2, [r7, #4]
    7bae:	603b      	str	r3, [r7, #0]
    7bb0:	4603      	mov	r3, r0
    7bb2:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:410
  *isPrev = FALSE;
    7bb4:	683b      	ldr	r3, [r7, #0]
    7bb6:	2200      	movs	r2, #0
    7bb8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:448
#else
  (void)ch; /* not used */
  (void)cmdBuf; /* not used */
  (void)cmdBufIdx; /* not used */
#endif
  return FALSE;
    7bba:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:449
}
    7bbc:	4618      	mov	r0, r3
    7bbe:	3714      	adds	r7, #20
    7bc0:	46bd      	mov	sp, r7
    7bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
    7bc6:	4770      	bx	lr

00007bc8 <CLS_BLE_ReadLine>:
CLS_BLE_ReadLine():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:470
**         ---             - TRUE if something has been read, FALSE
**                           otherwise
** ===================================================================
*/
bool CLS_BLE_ReadLine(uint8_t *bufStart, uint8_t *buf, size_t bufSize, CLS_BLE_ConstStdIOType *io)
{
    7bc8:	b580      	push	{r7, lr}
    7bca:	b086      	sub	sp, #24
    7bcc:	af00      	add	r7, sp, #0
    7bce:	60f8      	str	r0, [r7, #12]
    7bd0:	60b9      	str	r1, [r7, #8]
    7bd2:	607a      	str	r2, [r7, #4]
    7bd4:	603b      	str	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:474
  uint8_t c;
  bool isBackwardHistory;

  if (io->keyPressed()) {
    7bd6:	683b      	ldr	r3, [r7, #0]
    7bd8:	68db      	ldr	r3, [r3, #12]
    7bda:	4798      	blx	r3
    7bdc:	4603      	mov	r3, r0
    7bde:	2b00      	cmp	r3, #0
    7be0:	d054      	beq.n	7c8c <CLS_BLE_ReadLine+0xc4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:476
    for(;;) {                          /* while not '\r' or '\n' */
      c = '\0';                        /* initialize character */
    7be2:	2300      	movs	r3, #0
    7be4:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:477
      io->stdIn(&c);                   /* read character */
    7be6:	683b      	ldr	r3, [r7, #0]
    7be8:	681b      	ldr	r3, [r3, #0]
    7bea:	f107 0217 	add.w	r2, r7, #23
    7bee:	4610      	mov	r0, r2
    7bf0:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:478
      if (c=='\0') { /* nothing in rx buffer? Something is wrong... */
    7bf2:	7dfb      	ldrb	r3, [r7, #23]
    7bf4:	2b00      	cmp	r3, #0
    7bf6:	d100      	bne.n	7bfa <CLS_BLE_ReadLine+0x32>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:479
        break; /* get out of loop */
    7bf8:	e043      	b.n	7c82 <CLS_BLE_ReadLine+0xba>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:481
      }
      if (c=='\b' || c=='\177') {      /* check for backspace */
    7bfa:	7dfb      	ldrb	r3, [r7, #23]
    7bfc:	2b08      	cmp	r3, #8
    7bfe:	d002      	beq.n	7c06 <CLS_BLE_ReadLine+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:481 (discriminator 1)
    7c00:	7dfb      	ldrb	r3, [r7, #23]
    7c02:	2b7f      	cmp	r3, #127	; 0x7f
    7c04:	d10e      	bne.n	7c24 <CLS_BLE_ReadLine+0x5c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:482
        if (buf > bufStart) {          /* Avoid buffer underflow */
    7c06:	68ba      	ldr	r2, [r7, #8]
    7c08:	68fb      	ldr	r3, [r7, #12]
    7c0a:	429a      	cmp	r2, r3
    7c0c:	d909      	bls.n	7c22 <CLS_BLE_ReadLine+0x5a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:490
             io->stdOut('\b');         /* delete character on terminal */
             io->stdOut(' ');
             io->stdOut('\b');
           }
#endif
           buf--;                      /* delete last character in buffer */
    7c0e:	68bb      	ldr	r3, [r7, #8]
    7c10:	3b01      	subs	r3, #1
    7c12:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:491
           *buf = '\0';
    7c14:	68bb      	ldr	r3, [r7, #8]
    7c16:	2200      	movs	r2, #0
    7c18:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:492
           bufSize++;
    7c1a:	687b      	ldr	r3, [r7, #4]
    7c1c:	3301      	adds	r3, #1
    7c1e:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:482
      io->stdIn(&c);                   /* read character */
      if (c=='\0') { /* nothing in rx buffer? Something is wrong... */
        break; /* get out of loop */
      }
      if (c=='\b' || c=='\177') {      /* check for backspace */
        if (buf > bufStart) {          /* Avoid buffer underflow */
    7c20:	e02e      	b.n	7c80 <CLS_BLE_ReadLine+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:482 (discriminator 1)
    7c22:	e02d      	b.n	7c80 <CLS_BLE_ReadLine+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:494
#endif
           buf--;                      /* delete last character in buffer */
           *buf = '\0';
           bufSize++;
        }
      } else if (CLS_BLE_IsHistoryCharacter(c, bufStart, (size_t)(buf-bufStart), &isBackwardHistory)) {
    7c24:	7df9      	ldrb	r1, [r7, #23]
    7c26:	68ba      	ldr	r2, [r7, #8]
    7c28:	68fb      	ldr	r3, [r7, #12]
    7c2a:	1ad3      	subs	r3, r2, r3
    7c2c:	461a      	mov	r2, r3
    7c2e:	f107 0316 	add.w	r3, r7, #22
    7c32:	4608      	mov	r0, r1
    7c34:	68f9      	ldr	r1, [r7, #12]
    7c36:	f7ff ffb5 	bl	7ba4 <CLS_BLE_IsHistoryCharacter>
    7c3a:	4603      	mov	r3, r0
    7c3c:	2b00      	cmp	r3, #0
    7c3e:	d00c      	beq.n	7c5a <CLS_BLE_ReadLine+0x92>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:500
#if CLS_BLE_HISTORY_ENABLED
        uint8_t cBuf[3]={'\0','\0','\0'}, cBufIdx = 0;
        bool prevInHistory;
#endif

        while (c!='\0') {              /* empty the rx buffer (escape sequence) */
    7c40:	e007      	b.n	7c52 <CLS_BLE_ReadLine+0x8a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:508
           cBufIdx++;
           if (cBufIdx==sizeof(cBuf)) {
             cBufIdx = 0; /* ring buffer */
           }
#endif
           c = '\0';                   /* initialize character */
    7c42:	2300      	movs	r3, #0
    7c44:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:509
           io->stdIn(&c);              /* read character */
    7c46:	683b      	ldr	r3, [r7, #0]
    7c48:	681b      	ldr	r3, [r3, #0]
    7c4a:	f107 0217 	add.w	r2, r7, #23
    7c4e:	4610      	mov	r0, r2
    7c50:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:500 (discriminator 1)
#if CLS_BLE_HISTORY_ENABLED
        uint8_t cBuf[3]={'\0','\0','\0'}, cBufIdx = 0;
        bool prevInHistory;
#endif

        while (c!='\0') {              /* empty the rx buffer (escape sequence) */
    7c52:	7dfb      	ldrb	r3, [r7, #23]
    7c54:	2b00      	cmp	r3, #0
    7c56:	d1f4      	bne.n	7c42 <CLS_BLE_ReadLine+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:580
        }
        if (bufSize <= 1) {            /* buffer full */
          break;
        }
      }
    } /* for */
    7c58:	e7c3      	b.n	7be2 <CLS_BLE_ReadLine+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:549
#if CLS_BLE_ECHO_ENABLED
        if (CLS_BLE_EchoEnabled) {
          io->stdOut(c);               /* echo character */
        }
#endif
        *buf = (uint8_t)c;             /* append character to the string */
    7c5a:	7dfa      	ldrb	r2, [r7, #23]
    7c5c:	68bb      	ldr	r3, [r7, #8]
    7c5e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:550
        buf++;
    7c60:	68bb      	ldr	r3, [r7, #8]
    7c62:	3301      	adds	r3, #1
    7c64:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:551
        bufSize--;
    7c66:	687b      	ldr	r3, [r7, #4]
    7c68:	3b01      	subs	r3, #1
    7c6a:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:552
        if ((c=='\r') || (c=='\n')) {
    7c6c:	7dfb      	ldrb	r3, [r7, #23]
    7c6e:	2b0d      	cmp	r3, #13
    7c70:	d007      	beq.n	7c82 <CLS_BLE_ReadLine+0xba>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:552 (discriminator 1)
    7c72:	7dfb      	ldrb	r3, [r7, #23]
    7c74:	2b0a      	cmp	r3, #10
    7c76:	d004      	beq.n	7c82 <CLS_BLE_ReadLine+0xba>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:576
            }
          }
#endif
          break;
        }
        if (bufSize <= 1) {            /* buffer full */
    7c78:	687b      	ldr	r3, [r7, #4]
    7c7a:	2b01      	cmp	r3, #1
    7c7c:	d800      	bhi.n	7c80 <CLS_BLE_ReadLine+0xb8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:577
          break;
    7c7e:	e000      	b.n	7c82 <CLS_BLE_ReadLine+0xba>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:580
        }
      }
    } /* for */
    7c80:	e7af      	b.n	7be2 <CLS_BLE_ReadLine+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:581
    *buf = '\0';                       /* zero terminate string */
    7c82:	68bb      	ldr	r3, [r7, #8]
    7c84:	2200      	movs	r2, #0
    7c86:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:582
    return TRUE;
    7c88:	2301      	movs	r3, #1
    7c8a:	e000      	b.n	7c8e <CLS_BLE_ReadLine+0xc6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:584
  } else {
    return FALSE;
    7c8c:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:586
  }
}
    7c8e:	4618      	mov	r0, r3
    7c90:	3718      	adds	r7, #24
    7c92:	46bd      	mov	sp, r7
    7c94:	bd80      	pop	{r7, pc}
    7c96:	bf00      	nop

00007c98 <CLS_BLE_PrintCommandFailed>:
CLS_BLE_PrintCommandFailed():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:626
**       * io              - Pointer to I/O callbacks
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_PrintCommandFailed(const uint8_t *cmd, CLS_BLE_ConstStdIOType *io)
{
    7c98:	b580      	push	{r7, lr}
    7c9a:	b082      	sub	sp, #8
    7c9c:	af00      	add	r7, sp, #0
    7c9e:	6078      	str	r0, [r7, #4]
    7ca0:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:627
  CLS_BLE_SendStr((unsigned char*)"*** Failed or unknown command: ", io->stdErr);
    7ca2:	683b      	ldr	r3, [r7, #0]
    7ca4:	689b      	ldr	r3, [r3, #8]
    7ca6:	4812      	ldr	r0, [pc, #72]	; (7cf0 <CLS_BLE_PrintCommandFailed+0x58>)
    7ca8:	4619      	mov	r1, r3
    7caa:	f7ff ff4b 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:628
  CLS_BLE_SendStr(cmd, io->stdErr);
    7cae:	683b      	ldr	r3, [r7, #0]
    7cb0:	689b      	ldr	r3, [r3, #8]
    7cb2:	6878      	ldr	r0, [r7, #4]
    7cb4:	4619      	mov	r1, r3
    7cb6:	f7ff ff45 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:629
  CLS_BLE_SendStr((unsigned char*)"\r\n", io->stdErr);
    7cba:	683b      	ldr	r3, [r7, #0]
    7cbc:	689b      	ldr	r3, [r3, #8]
    7cbe:	480d      	ldr	r0, [pc, #52]	; (7cf4 <CLS_BLE_PrintCommandFailed+0x5c>)
    7cc0:	4619      	mov	r1, r3
    7cc2:	f7ff ff3f 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:630
  CLS_BLE_SendStr((unsigned char*)"*** Type ", io->stdErr);
    7cc6:	683b      	ldr	r3, [r7, #0]
    7cc8:	689b      	ldr	r3, [r3, #8]
    7cca:	480b      	ldr	r0, [pc, #44]	; (7cf8 <CLS_BLE_PrintCommandFailed+0x60>)
    7ccc:	4619      	mov	r1, r3
    7cce:	f7ff ff39 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:631
  CLS_BLE_SendStr((unsigned char*)CLS_BLE_CMD_HELP, io->stdErr);
    7cd2:	683b      	ldr	r3, [r7, #0]
    7cd4:	689b      	ldr	r3, [r3, #8]
    7cd6:	4809      	ldr	r0, [pc, #36]	; (7cfc <CLS_BLE_PrintCommandFailed+0x64>)
    7cd8:	4619      	mov	r1, r3
    7cda:	f7ff ff33 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:632
  CLS_BLE_SendStr((unsigned char*)" to get a list of available commands\r\n", io->stdErr);
    7cde:	683b      	ldr	r3, [r7, #0]
    7ce0:	689b      	ldr	r3, [r3, #8]
    7ce2:	4807      	ldr	r0, [pc, #28]	; (7d00 <CLS_BLE_PrintCommandFailed+0x68>)
    7ce4:	4619      	mov	r1, r3
    7ce6:	f7ff ff2d 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:633
}
    7cea:	3708      	adds	r7, #8
    7cec:	46bd      	mov	sp, r7
    7cee:	bd80      	pop	{r7, pc}
    7cf0:	0000dcd0 	.word	0x0000dcd0
    7cf4:	0000dbe0 	.word	0x0000dbe0
    7cf8:	0000dcf0 	.word	0x0000dcf0
    7cfc:	0000dbc8 	.word	0x0000dbc8
    7d00:	0000dcfc 	.word	0x0000dcfc

00007d04 <CLS_BLE_IterateTable>:
CLS_BLE_IterateTable():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:656
**     Returns     :
**         ---             - Error code
** ===================================================================
*/
uint8_t CLS_BLE_IterateTable(const uint8_t *cmd, bool *handled, CLS_BLE_ConstStdIOType *io, CLS_BLE_ConstParseCommandCallback *parserTable)
{
    7d04:	b580      	push	{r7, lr}
    7d06:	b086      	sub	sp, #24
    7d08:	af00      	add	r7, sp, #0
    7d0a:	60f8      	str	r0, [r7, #12]
    7d0c:	60b9      	str	r1, [r7, #8]
    7d0e:	607a      	str	r2, [r7, #4]
    7d10:	603b      	str	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:657
  uint8_t res = ERR_OK;
    7d12:	2300      	movs	r3, #0
    7d14:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:659

  if (parserTable==NULL) { /* no table??? */
    7d16:	683b      	ldr	r3, [r7, #0]
    7d18:	2b00      	cmp	r3, #0
    7d1a:	d101      	bne.n	7d20 <CLS_BLE_IterateTable+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:660
    return ERR_FAILED;
    7d1c:	231b      	movs	r3, #27
    7d1e:	e018      	b.n	7d52 <CLS_BLE_IterateTable+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:662
  }
  if (io==NULL) { /* no IO handler??? */
    7d20:	687b      	ldr	r3, [r7, #4]
    7d22:	2b00      	cmp	r3, #0
    7d24:	d101      	bne.n	7d2a <CLS_BLE_IterateTable+0x26>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:663
    return ERR_FAILED;
    7d26:	231b      	movs	r3, #27
    7d28:	e013      	b.n	7d52 <CLS_BLE_IterateTable+0x4e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:666
  }
  /* iterate through all parser functions in table */
  while(*parserTable!=NULL) {
    7d2a:	e00d      	b.n	7d48 <CLS_BLE_IterateTable+0x44>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:667
    if ((*parserTable)(cmd, handled, io)!=ERR_OK) {
    7d2c:	683b      	ldr	r3, [r7, #0]
    7d2e:	681b      	ldr	r3, [r3, #0]
    7d30:	68f8      	ldr	r0, [r7, #12]
    7d32:	68b9      	ldr	r1, [r7, #8]
    7d34:	687a      	ldr	r2, [r7, #4]
    7d36:	4798      	blx	r3
    7d38:	4603      	mov	r3, r0
    7d3a:	2b00      	cmp	r3, #0
    7d3c:	d001      	beq.n	7d42 <CLS_BLE_IterateTable+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:668
      res = ERR_FAILED;
    7d3e:	231b      	movs	r3, #27
    7d40:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:670
    }
    parserTable++;
    7d42:	683b      	ldr	r3, [r7, #0]
    7d44:	3304      	adds	r3, #4
    7d46:	603b      	str	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:666 (discriminator 1)
  }
  if (io==NULL) { /* no IO handler??? */
    return ERR_FAILED;
  }
  /* iterate through all parser functions in table */
  while(*parserTable!=NULL) {
    7d48:	683b      	ldr	r3, [r7, #0]
    7d4a:	681b      	ldr	r3, [r3, #0]
    7d4c:	2b00      	cmp	r3, #0
    7d4e:	d1ed      	bne.n	7d2c <CLS_BLE_IterateTable+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:672
    if ((*parserTable)(cmd, handled, io)!=ERR_OK) {
      res = ERR_FAILED;
    }
    parserTable++;
  }
  return res;
    7d50:	7dfb      	ldrb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:673
}
    7d52:	4618      	mov	r0, r3
    7d54:	3718      	adds	r7, #24
    7d56:	46bd      	mov	sp, r7
    7d58:	bd80      	pop	{r7, pc}
    7d5a:	bf00      	nop

00007d5c <CLS_BLE_ParseWithCommandTable>:
CLS_BLE_ParseWithCommandTable():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:693
**     Returns     :
**         ---             - Error code
** ===================================================================
*/
uint8_t CLS_BLE_ParseWithCommandTable(const uint8_t *cmd, CLS_BLE_ConstStdIOType *io, CLS_BLE_ConstParseCommandCallback *parseCallback)
{
    7d5c:	b580      	push	{r7, lr}
    7d5e:	b086      	sub	sp, #24
    7d60:	af00      	add	r7, sp, #0
    7d62:	60f8      	str	r0, [r7, #12]
    7d64:	60b9      	str	r1, [r7, #8]
    7d66:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:694
  uint8_t res = ERR_OK;
    7d68:	2300      	movs	r3, #0
    7d6a:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:697
  bool handled;
#if CLS_BLE_SILENT_PREFIX_CHAR_ENABLED
  bool silent = FALSE;
    7d6c:	2300      	movs	r3, #0
    7d6e:	75bb      	strb	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:705
  uint8_t buf[CLS_BLE_MULTI_CMD_SIZE];
  uint8_t i;
  bool parseBuffer, finished;
#endif

  if (io==NULL) { /* no I/O handler? */
    7d70:	68bb      	ldr	r3, [r7, #8]
    7d72:	2b00      	cmp	r3, #0
    7d74:	d101      	bne.n	7d7a <CLS_BLE_ParseWithCommandTable+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:706
    return ERR_FAILED;
    7d76:	231b      	movs	r3, #27
    7d78:	e032      	b.n	7de0 <CLS_BLE_ParseWithCommandTable+0x84>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:708
  }
  if (*cmd=='\0') { /* empty command */
    7d7a:	68fb      	ldr	r3, [r7, #12]
    7d7c:	781b      	ldrb	r3, [r3, #0]
    7d7e:	2b00      	cmp	r3, #0
    7d80:	d101      	bne.n	7d86 <CLS_BLE_ParseWithCommandTable+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:709
    return ERR_OK;
    7d82:	2300      	movs	r3, #0
    7d84:	e02c      	b.n	7de0 <CLS_BLE_ParseWithCommandTable+0x84>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:752
      break; /* get out of loop */
    }
  } /* for */
#else
  #if CLS_BLE_SILENT_PREFIX_CHAR_ENABLED
  silent = (bool)(*cmd==CLS_BLE_SILENT_PREFIX_CHAR);
    7d86:	68fb      	ldr	r3, [r7, #12]
    7d88:	781b      	ldrb	r3, [r3, #0]
    7d8a:	2b23      	cmp	r3, #35	; 0x23
    7d8c:	bf14      	ite	ne
    7d8e:	2300      	movne	r3, #0
    7d90:	2301      	moveq	r3, #1
    7d92:	b2db      	uxtb	r3, r3
    7d94:	75bb      	strb	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:753
  if (silent) {
    7d96:	7dbb      	ldrb	r3, [r7, #22]
    7d98:	2b00      	cmp	r3, #0
    7d9a:	d002      	beq.n	7da2 <CLS_BLE_ParseWithCommandTable+0x46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:754
    cmd++; /* skip silent character */
    7d9c:	68fb      	ldr	r3, [r7, #12]
    7d9e:	3301      	adds	r3, #1
    7da0:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:757
  }
  #endif
  handled = FALSE;
    7da2:	2300      	movs	r3, #0
    7da4:	757b      	strb	r3, [r7, #21]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:758
  res = CLS_BLE_IterateTable(cmd, &handled, io, parseCallback); /* iterate through all parser functions in table */
    7da6:	f107 0315 	add.w	r3, r7, #21
    7daa:	68f8      	ldr	r0, [r7, #12]
    7dac:	4619      	mov	r1, r3
    7dae:	68ba      	ldr	r2, [r7, #8]
    7db0:	687b      	ldr	r3, [r7, #4]
    7db2:	f7ff ffa7 	bl	7d04 <CLS_BLE_IterateTable>
    7db6:	4603      	mov	r3, r0
    7db8:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:759
  if (!handled || res!=ERR_OK) { /* no handler has handled the command? */
    7dba:	7d7b      	ldrb	r3, [r7, #21]
    7dbc:	2b00      	cmp	r3, #0
    7dbe:	d002      	beq.n	7dc6 <CLS_BLE_ParseWithCommandTable+0x6a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:759 (discriminator 1)
    7dc0:	7dfb      	ldrb	r3, [r7, #23]
    7dc2:	2b00      	cmp	r3, #0
    7dc4:	d005      	beq.n	7dd2 <CLS_BLE_ParseWithCommandTable+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:760
    CLS_BLE_PrintCommandFailed(cmd, io);
    7dc6:	68f8      	ldr	r0, [r7, #12]
    7dc8:	68b9      	ldr	r1, [r7, #8]
    7dca:	f7ff ff65 	bl	7c98 <CLS_BLE_PrintCommandFailed>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:761
    res = ERR_FAILED;
    7dce:	231b      	movs	r3, #27
    7dd0:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:765
  }
#endif
#if CLS_BLE_SILENT_PREFIX_CHAR_ENABLED
  if (!silent) {
    7dd2:	7dbb      	ldrb	r3, [r7, #22]
    7dd4:	2b00      	cmp	r3, #0
    7dd6:	d102      	bne.n	7dde <CLS_BLE_ParseWithCommandTable+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:766
    CLS_BLE_PrintPrompt(io);
    7dd8:	68b8      	ldr	r0, [r7, #8]
    7dda:	f7ff fecb 	bl	7b74 <CLS_BLE_PrintPrompt>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:771
  }
#else
  CLS_BLE_PrintPrompt(io);
#endif
  return res;
    7dde:	7dfb      	ldrb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:772
}
    7de0:	4618      	mov	r0, r3
    7de2:	3718      	adds	r7, #24
    7de4:	46bd      	mov	sp, r7
    7de6:	bd80      	pop	{r7, pc}

00007de8 <CLS_BLE_GetStdio>:
CLS_BLE_GetStdio():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:804
**     Returns     :
**         ---             - Pointer to the stdio descriptor
** ===================================================================
*/
CLS_BLE_ConstStdIOTypePtr CLS_BLE_GetStdio(void)
{
    7de8:	b480      	push	{r7}
    7dea:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:805
  return CLS_BLE_currStdIO;
    7dec:	4b03      	ldr	r3, [pc, #12]	; (7dfc <CLS_BLE_GetStdio+0x14>)
    7dee:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:806
}
    7df0:	4618      	mov	r0, r3
    7df2:	46bd      	mov	sp, r7
    7df4:	f85d 7b04 	ldr.w	r7, [sp], #4
    7df8:	4770      	bx	lr
    7dfa:	bf00      	nop
    7dfc:	20000004 	.word	0x20000004

00007e00 <CLS_BLE_ReadAndParseWithCommandTable>:
CLS_BLE_ReadAndParseWithCommandTable():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:833
**     Returns     :
**         ---             - Error code
** ===================================================================
*/
uint8_t CLS_BLE_ReadAndParseWithCommandTable(uint8_t *cmdBuf, size_t cmdBufSize, CLS_BLE_ConstStdIOType *io, CLS_BLE_ConstParseCommandCallback *parseCallback)
{
    7e00:	b580      	push	{r7, lr}
    7e02:	b086      	sub	sp, #24
    7e04:	af00      	add	r7, sp, #0
    7e06:	60f8      	str	r0, [r7, #12]
    7e08:	60b9      	str	r1, [r7, #8]
    7e0a:	607a      	str	r2, [r7, #4]
    7e0c:	603b      	str	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:835
  /* IMPORTANT NOTE: this function *appends* to the buffer, so the buffer needs to be initialized first! */
  uint8_t res = ERR_OK;
    7e0e:	2300      	movs	r3, #0
    7e10:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:838
  size_t len;

  if (io==NULL) { /* no I/O handler? */
    7e12:	687b      	ldr	r3, [r7, #4]
    7e14:	2b00      	cmp	r3, #0
    7e16:	d101      	bne.n	7e1c <CLS_BLE_ReadAndParseWithCommandTable+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:839
    return ERR_FAILED;
    7e18:	231b      	movs	r3, #27
    7e1a:	e058      	b.n	7ece <CLS_BLE_ReadAndParseWithCommandTable+0xce>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:841
  }
  len = UTIL1_strlen((const char*)cmdBuf);
    7e1c:	68f8      	ldr	r0, [r7, #12]
    7e1e:	f005 fd2f 	bl	d880 <strlen>
    7e22:	6138      	str	r0, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:842
  if (CLS_BLE_ReadLine(cmdBuf, cmdBuf+len, cmdBufSize-len, io)) {
    7e24:	68fa      	ldr	r2, [r7, #12]
    7e26:	693b      	ldr	r3, [r7, #16]
    7e28:	441a      	add	r2, r3
    7e2a:	68b9      	ldr	r1, [r7, #8]
    7e2c:	693b      	ldr	r3, [r7, #16]
    7e2e:	1acb      	subs	r3, r1, r3
    7e30:	68f8      	ldr	r0, [r7, #12]
    7e32:	4611      	mov	r1, r2
    7e34:	461a      	mov	r2, r3
    7e36:	687b      	ldr	r3, [r7, #4]
    7e38:	f7ff fec6 	bl	7bc8 <CLS_BLE_ReadLine>
    7e3c:	4603      	mov	r3, r0
    7e3e:	2b00      	cmp	r3, #0
    7e40:	d044      	beq.n	7ecc <CLS_BLE_ReadAndParseWithCommandTable+0xcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:843
    len = UTIL1_strlen((const char*)cmdBuf); /* length of buffer string */
    7e42:	68f8      	ldr	r0, [r7, #12]
    7e44:	f005 fd1c 	bl	d880 <strlen>
    7e48:	6138      	str	r0, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:844
    if (len==0) { /* error case */
    7e4a:	693b      	ldr	r3, [r7, #16]
    7e4c:	2b00      	cmp	r3, #0
    7e4e:	d101      	bne.n	7e54 <CLS_BLE_ReadAndParseWithCommandTable+0x54>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:845
      return ERR_FAILED;
    7e50:	231b      	movs	r3, #27
    7e52:	e03c      	b.n	7ece <CLS_BLE_ReadAndParseWithCommandTable+0xce>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:846
    } else if (len==1 && (cmdBuf[0]=='\n' || cmdBuf[0]=='\r')) { /* eat preceding newline characters */
    7e54:	693b      	ldr	r3, [r7, #16]
    7e56:	2b01      	cmp	r3, #1
    7e58:	d10a      	bne.n	7e70 <CLS_BLE_ReadAndParseWithCommandTable+0x70>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:846 (discriminator 1)
    7e5a:	68fb      	ldr	r3, [r7, #12]
    7e5c:	781b      	ldrb	r3, [r3, #0]
    7e5e:	2b0a      	cmp	r3, #10
    7e60:	d003      	beq.n	7e6a <CLS_BLE_ReadAndParseWithCommandTable+0x6a>
    7e62:	68fb      	ldr	r3, [r7, #12]
    7e64:	781b      	ldrb	r3, [r3, #0]
    7e66:	2b0d      	cmp	r3, #13
    7e68:	d102      	bne.n	7e70 <CLS_BLE_ReadAndParseWithCommandTable+0x70>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:847
      cmdBuf[0] = '\0';
    7e6a:	68fb      	ldr	r3, [r7, #12]
    7e6c:	2200      	movs	r2, #0
    7e6e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:849
    }
    if (len>=cmdBufSize-1) {           /* buffer overflow? Parse what we have, will be likely return an error */
    7e70:	68bb      	ldr	r3, [r7, #8]
    7e72:	1e5a      	subs	r2, r3, #1
    7e74:	693b      	ldr	r3, [r7, #16]
    7e76:	429a      	cmp	r2, r3
    7e78:	d80a      	bhi.n	7e90 <CLS_BLE_ReadAndParseWithCommandTable+0x90>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:850
      (void)CLS_BLE_ParseWithCommandTable(cmdBuf, io, parseCallback);
    7e7a:	68f8      	ldr	r0, [r7, #12]
    7e7c:	6879      	ldr	r1, [r7, #4]
    7e7e:	683a      	ldr	r2, [r7, #0]
    7e80:	f7ff ff6c 	bl	7d5c <CLS_BLE_ParseWithCommandTable>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:851
      cmdBuf[0] = '\0'; /* start again */
    7e84:	68fb      	ldr	r3, [r7, #12]
    7e86:	2200      	movs	r2, #0
    7e88:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:852
      res = ERR_OVERFLOW;
    7e8a:	2304      	movs	r3, #4
    7e8c:	75fb      	strb	r3, [r7, #23]
    7e8e:	e01d      	b.n	7ecc <CLS_BLE_ReadAndParseWithCommandTable+0xcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:853
    } else if (cmdBuf[len-1]=='\n' || cmdBuf[len-1]=='\r') { /* line end: parse command */
    7e90:	693b      	ldr	r3, [r7, #16]
    7e92:	3b01      	subs	r3, #1
    7e94:	68fa      	ldr	r2, [r7, #12]
    7e96:	4413      	add	r3, r2
    7e98:	781b      	ldrb	r3, [r3, #0]
    7e9a:	2b0a      	cmp	r3, #10
    7e9c:	d006      	beq.n	7eac <CLS_BLE_ReadAndParseWithCommandTable+0xac>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:853 (discriminator 1)
    7e9e:	693b      	ldr	r3, [r7, #16]
    7ea0:	3b01      	subs	r3, #1
    7ea2:	68fa      	ldr	r2, [r7, #12]
    7ea4:	4413      	add	r3, r2
    7ea6:	781b      	ldrb	r3, [r3, #0]
    7ea8:	2b0d      	cmp	r3, #13
    7eaa:	d10f      	bne.n	7ecc <CLS_BLE_ReadAndParseWithCommandTable+0xcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:854
      cmdBuf[len-1] = '\0';            /* remove line end character for parser */
    7eac:	693b      	ldr	r3, [r7, #16]
    7eae:	3b01      	subs	r3, #1
    7eb0:	68fa      	ldr	r2, [r7, #12]
    7eb2:	4413      	add	r3, r2
    7eb4:	2200      	movs	r2, #0
    7eb6:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:855
      res = CLS_BLE_ParseWithCommandTable(cmdBuf, io, parseCallback);
    7eb8:	68f8      	ldr	r0, [r7, #12]
    7eba:	6879      	ldr	r1, [r7, #4]
    7ebc:	683a      	ldr	r2, [r7, #0]
    7ebe:	f7ff ff4d 	bl	7d5c <CLS_BLE_ParseWithCommandTable>
    7ec2:	4603      	mov	r3, r0
    7ec4:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:856
      cmdBuf[0] = '\0';                /* start again */
    7ec6:	68fb      	ldr	r3, [r7, #12]
    7ec8:	2200      	movs	r2, #0
    7eca:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:861
    } else {
      /* continue to append to buffer */
    }
  }
  return res;
    7ecc:	7dfb      	ldrb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:862
}
    7ece:	4618      	mov	r0, r3
    7ed0:	3718      	adds	r7, #24
    7ed2:	46bd      	mov	sp, r7
    7ed4:	bd80      	pop	{r7, pc}
    7ed6:	bf00      	nop

00007ed8 <SendSeparatedStrings>:
SendSeparatedStrings():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:931
**         command
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void SendSeparatedStrings(const uint8_t *strA, const uint8_t *strB, uint8_t tabChar, uint8_t tabPos, CLS_BLE_StdIO_OutErr_FctType io)
{
    7ed8:	b580      	push	{r7, lr}
    7eda:	b084      	sub	sp, #16
    7edc:	af00      	add	r7, sp, #0
    7ede:	60f8      	str	r0, [r7, #12]
    7ee0:	60b9      	str	r1, [r7, #8]
    7ee2:	71fa      	strb	r2, [r7, #7]
    7ee4:	71bb      	strb	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:933
  /* write command part */
  if (strA!=NULL) {
    7ee6:	68fb      	ldr	r3, [r7, #12]
    7ee8:	2b00      	cmp	r3, #0
    7eea:	d011      	beq.n	7f10 <SendSeparatedStrings+0x38>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:934
    while(*strA!='\0' && tabPos>0) {
    7eec:	e009      	b.n	7f02 <SendSeparatedStrings+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:935
      io(*strA++);
    7eee:	68fb      	ldr	r3, [r7, #12]
    7ef0:	1c5a      	adds	r2, r3, #1
    7ef2:	60fa      	str	r2, [r7, #12]
    7ef4:	781a      	ldrb	r2, [r3, #0]
    7ef6:	69bb      	ldr	r3, [r7, #24]
    7ef8:	4610      	mov	r0, r2
    7efa:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:936
      tabPos--;
    7efc:	79bb      	ldrb	r3, [r7, #6]
    7efe:	3b01      	subs	r3, #1
    7f00:	71bb      	strb	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:934 (discriminator 1)
*/
static void SendSeparatedStrings(const uint8_t *strA, const uint8_t *strB, uint8_t tabChar, uint8_t tabPos, CLS_BLE_StdIO_OutErr_FctType io)
{
  /* write command part */
  if (strA!=NULL) {
    while(*strA!='\0' && tabPos>0) {
    7f02:	68fb      	ldr	r3, [r7, #12]
    7f04:	781b      	ldrb	r3, [r3, #0]
    7f06:	2b00      	cmp	r3, #0
    7f08:	d002      	beq.n	7f10 <SendSeparatedStrings+0x38>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:934 (discriminator 2)
    7f0a:	79bb      	ldrb	r3, [r7, #6]
    7f0c:	2b00      	cmp	r3, #0
    7f0e:	d1ee      	bne.n	7eee <SendSeparatedStrings+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:940
      io(*strA++);
      tabPos--;
    }
  }
  /* fill up until ';' */
  while(tabPos>0) {
    7f10:	e005      	b.n	7f1e <SendSeparatedStrings+0x46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:941
    io(' ');
    7f12:	69bb      	ldr	r3, [r7, #24]
    7f14:	2020      	movs	r0, #32
    7f16:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:942
    tabPos--;
    7f18:	79bb      	ldrb	r3, [r7, #6]
    7f1a:	3b01      	subs	r3, #1
    7f1c:	71bb      	strb	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:940 (discriminator 1)
      io(*strA++);
      tabPos--;
    }
  }
  /* fill up until ';' */
  while(tabPos>0) {
    7f1e:	79bb      	ldrb	r3, [r7, #6]
    7f20:	2b00      	cmp	r3, #0
    7f22:	d1f6      	bne.n	7f12 <SendSeparatedStrings+0x3a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:945
    io(' ');
    tabPos--;
  }
  /* write separator */
  io(tabChar);
    7f24:	79fa      	ldrb	r2, [r7, #7]
    7f26:	69bb      	ldr	r3, [r7, #24]
    7f28:	4610      	mov	r0, r2
    7f2a:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:946
  io(' ');
    7f2c:	69bb      	ldr	r3, [r7, #24]
    7f2e:	2020      	movs	r0, #32
    7f30:	4798      	blx	r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:947
  if (strB!=NULL) {
    7f32:	68bb      	ldr	r3, [r7, #8]
    7f34:	2b00      	cmp	r3, #0
    7f36:	d003      	beq.n	7f40 <SendSeparatedStrings+0x68>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:949
    /* write help text */
    CLS_BLE_SendStr(strB, io);
    7f38:	68b8      	ldr	r0, [r7, #8]
    7f3a:	69b9      	ldr	r1, [r7, #24]
    7f3c:	f7ff fe02 	bl	7b44 <CLS_BLE_SendStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:951
  }
}
    7f40:	3710      	adds	r7, #16
    7f42:	46bd      	mov	sp, r7
    7f44:	bd80      	pop	{r7, pc}
    7f46:	bf00      	nop

00007f48 <CLS_BLE_SendHelpStr>:
CLS_BLE_SendHelpStr():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:968
**         io              - I/O callbacks to be used for printing.
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_SendHelpStr(const uint8_t *strCmd, const uint8_t *strHelp, CLS_BLE_StdIO_OutErr_FctType io)
{
    7f48:	b580      	push	{r7, lr}
    7f4a:	b086      	sub	sp, #24
    7f4c:	af02      	add	r7, sp, #8
    7f4e:	60f8      	str	r0, [r7, #12]
    7f50:	60b9      	str	r1, [r7, #8]
    7f52:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:970
  #define HELP_SEMICOLON_POS  26 /* position of the ';' after the command string */
  SendSeparatedStrings(strCmd, strHelp, ';', HELP_SEMICOLON_POS, io);
    7f54:	687b      	ldr	r3, [r7, #4]
    7f56:	9300      	str	r3, [sp, #0]
    7f58:	68f8      	ldr	r0, [r7, #12]
    7f5a:	68b9      	ldr	r1, [r7, #8]
    7f5c:	223b      	movs	r2, #59	; 0x3b
    7f5e:	231a      	movs	r3, #26
    7f60:	f7ff ffba 	bl	7ed8 <SendSeparatedStrings>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:971
}
    7f64:	3710      	adds	r7, #16
    7f66:	46bd      	mov	sp, r7
    7f68:	bd80      	pop	{r7, pc}
    7f6a:	bf00      	nop

00007f6c <CLS_BLE_SendStatusStr>:
CLS_BLE_SendStatusStr():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:988
**         io              - I/O callbacks to be used for printing.
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_SendStatusStr(const uint8_t *strItem, const uint8_t *strStatus, CLS_BLE_StdIO_OutErr_FctType io)
{
    7f6c:	b580      	push	{r7, lr}
    7f6e:	b086      	sub	sp, #24
    7f70:	af02      	add	r7, sp, #8
    7f72:	60f8      	str	r0, [r7, #12]
    7f74:	60b9      	str	r1, [r7, #8]
    7f76:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:990
  #define STATUS_COLON_POS  13 /* position of the ':' after the item string */
  SendSeparatedStrings(strItem, strStatus, ':', STATUS_COLON_POS, io);
    7f78:	687b      	ldr	r3, [r7, #4]
    7f7a:	9300      	str	r3, [sp, #0]
    7f7c:	68f8      	ldr	r0, [r7, #12]
    7f7e:	68b9      	ldr	r1, [r7, #8]
    7f80:	223a      	movs	r2, #58	; 0x3a
    7f82:	230d      	movs	r3, #13
    7f84:	f7ff ffa8 	bl	7ed8 <SendSeparatedStrings>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:991
}
    7f88:	3710      	adds	r7, #16
    7f8a:	46bd      	mov	sp, r7
    7f8c:	bd80      	pop	{r7, pc}
    7f8e:	bf00      	nop

00007f90 <CLS_BLE_ReadChar>:
CLS_BLE_ReadChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1006
**                           result
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_ReadChar(uint8_t *c)
{
    7f90:	b580      	push	{r7, lr}
    7f92:	b084      	sub	sp, #16
    7f94:	af00      	add	r7, sp, #0
    7f96:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1013
  uint8_t res;

#if CLS_BLE_CONFIG_USE_MUTEX
  (void)xSemaphoreTakeRecursive(ShellSem, portMAX_DELAY);
#endif
  res = CLS_BLE_CONFIG_DEFAULT_SERIAL_RECEIVE_FCT_NAME((uint8_t*)c);
    7f98:	6878      	ldr	r0, [r7, #4]
    7f9a:	f7fc fc55 	bl	4848 <AS_BLE_RecvChar>
    7f9e:	4603      	mov	r3, r0
    7fa0:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1014
  if (res==ERR_RXEMPTY) {
    7fa2:	7bfb      	ldrb	r3, [r7, #15]
    7fa4:	2b0a      	cmp	r3, #10
    7fa6:	d102      	bne.n	7fae <CLS_BLE_ReadChar+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1016
    /* no character in buffer */
    *c = '\0';
    7fa8:	687b      	ldr	r3, [r7, #4]
    7faa:	2200      	movs	r2, #0
    7fac:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1025
#endif
#else
  *c = '\0';
  return; /* no serial component set up in properties */
#endif
}
    7fae:	3710      	adds	r7, #16
    7fb0:	46bd      	mov	sp, r7
    7fb2:	bd80      	pop	{r7, pc}

00007fb4 <CLS_BLE_SendChar>:
CLS_BLE_SendChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1039
**         ch              - character to be sent
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_SendChar(uint8_t ch)
{
    7fb4:	b580      	push	{r7, lr}
    7fb6:	b082      	sub	sp, #8
    7fb8:	af00      	add	r7, sp, #0
    7fba:	4603      	mov	r3, r0
    7fbc:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1041
#if CLS_BLE_CONFIG_DEFAULT_SERIAL
  CLS_BLE_SendCharFct(ch, CLS_BLE_CONFIG_DEFAULT_SERIAL_SEND_FCT_NAME);
    7fbe:	79fb      	ldrb	r3, [r7, #7]
    7fc0:	4618      	mov	r0, r3
    7fc2:	4903      	ldr	r1, [pc, #12]	; (7fd0 <CLS_BLE_SendChar+0x1c>)
    7fc4:	f000 f81e 	bl	8004 <CLS_BLE_SendCharFct>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1045
#else
  (void)ch;                            /* avoid compiler warning about unused argument */
#endif
}
    7fc8:	3708      	adds	r7, #8
    7fca:	46bd      	mov	sp, r7
    7fcc:	bd80      	pop	{r7, pc}
    7fce:	bf00      	nop
    7fd0:	00004921 	.word	0x00004921

00007fd4 <CLS_BLE_KeyPressed>:
CLS_BLE_KeyPressed():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1059
**     Returns     :
**         ---             - Error code
** ===================================================================
*/
bool CLS_BLE_KeyPressed(void)
{
    7fd4:	b580      	push	{r7, lr}
    7fd6:	b082      	sub	sp, #8
    7fd8:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1067

#if CLS_BLE_CONFIG_USE_MUTEX
  (void)xSemaphoreTakeRecursive(ShellSem, portMAX_DELAY);
#endif
#if CLS_BLE_CONFIG_DEFAULT_SERIAL
  res = (bool)((CLS_BLE_CONFIG_DEFAULT_SERIAL_RXAVAIL_FCT_NAME()==0U) ? FALSE : TRUE); /* true if there are characters in receive buffer */
    7fda:	f7fc fd97 	bl	4b0c <AS_BLE_GetCharsInRxBuf>
    7fde:	4603      	mov	r3, r0
    7fe0:	2b00      	cmp	r3, #0
    7fe2:	bf0c      	ite	eq
    7fe4:	2300      	moveq	r3, #0
    7fe6:	2301      	movne	r3, #1
    7fe8:	b2db      	uxtb	r3, r3
    7fea:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1072
#endif
#if CLS_BLE_CONFIG_USE_MUTEX
  (void)xSemaphoreGiveRecursive(ShellSem);
#endif
  return res;
    7fec:	79fb      	ldrb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1076
#else
  return FALSE; /* no serial component set up in properties */
#endif
}
    7fee:	4618      	mov	r0, r3
    7ff0:	3708      	adds	r7, #8
    7ff2:	46bd      	mov	sp, r7
    7ff4:	bd80      	pop	{r7, pc}
    7ff6:	bf00      	nop

00007ff8 <CLS_BLE_Init>:
CLS_BLE_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1089
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_Init(void)
{
    7ff8:	b480      	push	{r7}
    7ffa:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1127
  }
#endif
#if CLS_BLE_ECHO_ENABLED
  CLS_BLE_EchoEnabled = TRUE;
#endif
}
    7ffc:	46bd      	mov	sp, r7
    7ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
    8002:	4770      	bx	lr

00008004 <CLS_BLE_SendCharFct>:
CLS_BLE_SendCharFct():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1255
**                           a byte to write and returns error code.
**     Returns     : Nothing
** ===================================================================
*/
void CLS_BLE_SendCharFct(uint8_t ch, uint8_t (*fct)(uint8_t ch))
{
    8004:	b580      	push	{r7, lr}
    8006:	b084      	sub	sp, #16
    8008:	af00      	add	r7, sp, #0
    800a:	4603      	mov	r3, r0
    800c:	6039      	str	r1, [r7, #0]
    800e:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1259
#if CLS_BLE_CONFIG_BLOCKING_SEND_ENABLED
  uint8_t res;
  #if CLS_BLE_CONFIG_BLOCKING_SEND_TIMEOUT_MS>0
  int timeoutMs = CLS_BLE_CONFIG_BLOCKING_SEND_TIMEOUT_MS;
    8010:	2314      	movs	r3, #20
    8012:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1268
#if CLS_BLE_CONFIG_USE_MUTEX
  (void)xSemaphoreTakeRecursive(ShellSem, portMAX_DELAY);
#endif
#if CLS_BLE_CONFIG_BLOCKING_SEND_ENABLED
  do {
    res = fct((uint8_t)ch);            /* Send char, returns error code */
    8014:	79fa      	ldrb	r2, [r7, #7]
    8016:	683b      	ldr	r3, [r7, #0]
    8018:	4610      	mov	r0, r2
    801a:	4798      	blx	r3
    801c:	4603      	mov	r3, r0
    801e:	72fb      	strb	r3, [r7, #11]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1270
  #if CLS_BLE_CONFIG_BLOCKING_SEND_TIMEOUT_MS>0
    if (res==ERR_TXFULL) {
    8020:	7afb      	ldrb	r3, [r7, #11]
    8022:	2b0b      	cmp	r3, #11
    8024:	d102      	bne.n	802c <CLS_BLE_SendCharFct+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1272
    #if CLS_BLE_CONFIG_BLOCKING_SEND_RTOS_WAIT
      WAIT1_WaitOSms(CLS_BLE_CONFIG_BLOCKING_SEND_TIMEOUT_WAIT_MS);
    8026:	2005      	movs	r0, #5
    8028:	f001 fcd6 	bl	99d8 <WAIT1_Waitms>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1279
      WAIT1_Waitms(CLS_BLE_CONFIG_BLOCKING_SEND_TIMEOUT_WAIT_MS);
    #endif
    }
  #endif
  #if CLS_BLE_CONFIG_BLOCKING_SEND_TIMEOUT_MS>0
    if(timeoutMs<=0) {
    802c:	68fb      	ldr	r3, [r7, #12]
    802e:	2b00      	cmp	r3, #0
    8030:	dc00      	bgt.n	8034 <CLS_BLE_SendCharFct+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1280
      break; /* timeout */
    8032:	e005      	b.n	8040 <CLS_BLE_SendCharFct+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1282
    }
    timeoutMs -= CLS_BLE_CONFIG_BLOCKING_SEND_TIMEOUT_WAIT_MS;
    8034:	68fb      	ldr	r3, [r7, #12]
    8036:	3b05      	subs	r3, #5
    8038:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1284
  #endif
  } while(res==ERR_TXFULL);
    803a:	7afb      	ldrb	r3, [r7, #11]
    803c:	2b0b      	cmp	r3, #11
    803e:	d0e9      	beq.n	8014 <CLS_BLE_SendCharFct+0x10>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CLS_BLE.c:1291
  (void)fct((uint8_t)ch);              /* non blocking send */
#endif
#if CLS_BLE_CONFIG_USE_MUTEX
  (void)xSemaphoreGiveRecursive(ShellSem);
#endif
}
    8040:	3710      	adds	r7, #16
    8042:	46bd      	mov	sp, r7
    8044:	bd80      	pop	{r7, pc}
    8046:	bf00      	nop

00008048 <CS1_Init>:
CS1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CS1.c:139
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void CS1_Init(void)
{
    8048:	b480      	push	{r7}
    804a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/CS1.c:141
  /* nothing needed */
}
    804c:	46bd      	mov	sp, r7
    804e:	f85d 7b04 	ldr.w	r7, [sp], #4
    8052:	4770      	bx	lr

00008054 <Common_Init>:
Common_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:87
**     Returns     : Nothing
** ===================================================================
*/
#if CPU_COMMON_INIT
void Common_Init(void)
{
    8054:	b480      	push	{r7}
    8056:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:100
     registers in this method (see active generator configuration 
     Optimizations\Utilize after reset values property or enabled processor 
     component Common settings\Utilize after reset values property) */
  /* Enable clock gate of peripherals initialized in Common_Init() */
  /* SIM_SCGC5: PORTE=1,PORTD=1,PORTB=1,PORTA=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK |
    8058:	4956      	ldr	r1, [pc, #344]	; (81b4 <Common_Init+0x160>)
    805a:	4b56      	ldr	r3, [pc, #344]	; (81b4 <Common_Init+0x160>)
    805c:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    8060:	3318      	adds	r3, #24
    8062:	681b      	ldr	r3, [r3, #0]
    8064:	f443 5258 	orr.w	r2, r3, #13824	; 0x3600
    8068:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    806c:	3318      	adds	r3, #24
    806e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:106
               SIM_SCGC5_PORTD_MASK |
               SIM_SCGC5_PORTB_MASK |
               SIM_SCGC5_PORTA_MASK;

  /* PORTA_PCR12: ISF=0,MUX=7 */
  PORTA_PCR12 = (uint32_t)((PORTA_PCR12 & (uint32_t)~(uint32_t)(
    8070:	4a51      	ldr	r2, [pc, #324]	; (81b8 <Common_Init+0x164>)
    8072:	4b51      	ldr	r3, [pc, #324]	; (81b8 <Common_Init+0x164>)
    8074:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    8076:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    807a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    807e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
    8082:	6313      	str	r3, [r2, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:112
                 PORT_PCR_ISF_MASK
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x07)
                ));
  /* PORTA_PCR13: ISF=0,MUX=7 */
  PORTA_PCR13 = (uint32_t)((PORTA_PCR13 & (uint32_t)~(uint32_t)(
    8084:	4a4c      	ldr	r2, [pc, #304]	; (81b8 <Common_Init+0x164>)
    8086:	4b4c      	ldr	r3, [pc, #304]	; (81b8 <Common_Init+0x164>)
    8088:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    808a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    808e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    8092:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
    8096:	6353      	str	r3, [r2, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:118
                 PORT_PCR_ISF_MASK
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x07)
                ));
  /* PORTA_PCR16: ISF=0,PE=0,PS=1 */
  PORTA_PCR16 = (uint32_t)((PORTA_PCR16 & (uint32_t)~(uint32_t)(
    8098:	4a47      	ldr	r2, [pc, #284]	; (81b8 <Common_Init+0x164>)
    809a:	4b47      	ldr	r3, [pc, #284]	; (81b8 <Common_Init+0x164>)
    809c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    809e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    80a2:	f023 0303 	bic.w	r3, r3, #3
    80a6:	f043 0301 	orr.w	r3, r3, #1
    80aa:	6413      	str	r3, [r2, #64]	; 0x40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:125
                 PORT_PCR_PE_MASK
                )) | (uint32_t)(
                 PORT_PCR_PS_MASK
                ));
  /* PORTA_PCR17: ISF=0,DSE=1,SRE=0,PE=1,PS=1 */
  PORTA_PCR17 = (uint32_t)((PORTA_PCR17 & (uint32_t)~(uint32_t)(
    80ac:	4a42      	ldr	r2, [pc, #264]	; (81b8 <Common_Init+0x164>)
    80ae:	4b42      	ldr	r3, [pc, #264]	; (81b8 <Common_Init+0x164>)
    80b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    80b2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    80b6:	f023 0347 	bic.w	r3, r3, #71	; 0x47
    80ba:	f043 0343 	orr.w	r3, r3, #67	; 0x43
    80be:	6453      	str	r3, [r2, #68]	; 0x44
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:134
                 PORT_PCR_DSE_MASK |
                 PORT_PCR_PE_MASK |
                 PORT_PCR_PS_MASK
                ));
  /* PORTB_PCR0: ISF=0,PE=1,PS=1 */
  PORTB_PCR0 = (uint32_t)((PORTB_PCR0 & (uint32_t)~(uint32_t)(
    80c0:	4a3e      	ldr	r2, [pc, #248]	; (81bc <Common_Init+0x168>)
    80c2:	4b3e      	ldr	r3, [pc, #248]	; (81bc <Common_Init+0x168>)
    80c4:	681b      	ldr	r3, [r3, #0]
    80c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    80ca:	f023 0303 	bic.w	r3, r3, #3
    80ce:	f043 0303 	orr.w	r3, r3, #3
    80d2:	6013      	str	r3, [r2, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:141
               )) | (uint32_t)(
                PORT_PCR_PE_MASK |
                PORT_PCR_PS_MASK
               ));
  /* PORTB_PCR1: ISF=0,PE=1,PS=1 */
  PORTB_PCR1 = (uint32_t)((PORTB_PCR1 & (uint32_t)~(uint32_t)(
    80d4:	4a39      	ldr	r2, [pc, #228]	; (81bc <Common_Init+0x168>)
    80d6:	4b39      	ldr	r3, [pc, #228]	; (81bc <Common_Init+0x168>)
    80d8:	685b      	ldr	r3, [r3, #4]
    80da:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    80de:	f023 0303 	bic.w	r3, r3, #3
    80e2:	f043 0303 	orr.w	r3, r3, #3
    80e6:	6053      	str	r3, [r2, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:148
               )) | (uint32_t)(
                PORT_PCR_PE_MASK |
                PORT_PCR_PS_MASK
               ));
  /* PORTB_PCR16: ISF=0,PE=1,PS=1 */
  PORTB_PCR16 = (uint32_t)((PORTB_PCR16 & (uint32_t)~(uint32_t)(
    80e8:	4a34      	ldr	r2, [pc, #208]	; (81bc <Common_Init+0x168>)
    80ea:	4b34      	ldr	r3, [pc, #208]	; (81bc <Common_Init+0x168>)
    80ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    80ee:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    80f2:	f023 0303 	bic.w	r3, r3, #3
    80f6:	f043 0303 	orr.w	r3, r3, #3
    80fa:	6413      	str	r3, [r2, #64]	; 0x40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:155
                )) | (uint32_t)(
                 PORT_PCR_PE_MASK |
                 PORT_PCR_PS_MASK
                ));
  /* PORTB_PCR18: ISF=0,MUX=6 */
  PORTB_PCR18 = (uint32_t)((PORTB_PCR18 & (uint32_t)~(uint32_t)(
    80fc:	4a2f      	ldr	r2, [pc, #188]	; (81bc <Common_Init+0x168>)
    80fe:	4b2f      	ldr	r3, [pc, #188]	; (81bc <Common_Init+0x168>)
    8100:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    8102:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    8106:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    810a:	f443 63c0 	orr.w	r3, r3, #1536	; 0x600
    810e:	6493      	str	r3, [r2, #72]	; 0x48
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:162
                 PORT_PCR_MUX(0x01)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x06)
                ));
  /* PORTB_PCR19: ISF=0,MUX=6 */
  PORTB_PCR19 = (uint32_t)((PORTB_PCR19 & (uint32_t)~(uint32_t)(
    8110:	4a2a      	ldr	r2, [pc, #168]	; (81bc <Common_Init+0x168>)
    8112:	4b2a      	ldr	r3, [pc, #168]	; (81bc <Common_Init+0x168>)
    8114:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    8116:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    811a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    811e:	f443 63c0 	orr.w	r3, r3, #1536	; 0x600
    8122:	64d3      	str	r3, [r2, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:169
                 PORT_PCR_MUX(0x01)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x06)
                ));
  /* PORTB_PCR2: ISF=0,PE=1,PS=1 */
  PORTB_PCR2 = (uint32_t)((PORTB_PCR2 & (uint32_t)~(uint32_t)(
    8124:	4a25      	ldr	r2, [pc, #148]	; (81bc <Common_Init+0x168>)
    8126:	4b25      	ldr	r3, [pc, #148]	; (81bc <Common_Init+0x168>)
    8128:	689b      	ldr	r3, [r3, #8]
    812a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    812e:	f023 0303 	bic.w	r3, r3, #3
    8132:	f043 0303 	orr.w	r3, r3, #3
    8136:	6093      	str	r3, [r2, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:176
               )) | (uint32_t)(
                PORT_PCR_PE_MASK |
                PORT_PCR_PS_MASK
               ));
  /* PORTB_PCR3: ISF=0,PE=1,PS=1 */
  PORTB_PCR3 = (uint32_t)((PORTB_PCR3 & (uint32_t)~(uint32_t)(
    8138:	4a20      	ldr	r2, [pc, #128]	; (81bc <Common_Init+0x168>)
    813a:	4b20      	ldr	r3, [pc, #128]	; (81bc <Common_Init+0x168>)
    813c:	68db      	ldr	r3, [r3, #12]
    813e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    8142:	f023 0303 	bic.w	r3, r3, #3
    8146:	f043 0303 	orr.w	r3, r3, #3
    814a:	60d3      	str	r3, [r2, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:183
               )) | (uint32_t)(
                PORT_PCR_PE_MASK |
                PORT_PCR_PS_MASK
               ));
  /* PORTB_PCR9: ISF=0,PE=1,PS=1 */
  PORTB_PCR9 = (uint32_t)((PORTB_PCR9 & (uint32_t)~(uint32_t)(
    814c:	4a1b      	ldr	r2, [pc, #108]	; (81bc <Common_Init+0x168>)
    814e:	4b1b      	ldr	r3, [pc, #108]	; (81bc <Common_Init+0x168>)
    8150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    8152:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    8156:	f023 0303 	bic.w	r3, r3, #3
    815a:	f043 0303 	orr.w	r3, r3, #3
    815e:	6253      	str	r3, [r2, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:190
               )) | (uint32_t)(
                PORT_PCR_PE_MASK |
                PORT_PCR_PS_MASK
               ));
  /* PORTD_PCR4: ISF=0,PE=0 */
  PORTD_PCR4 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_PE_MASK));
    8160:	4a17      	ldr	r2, [pc, #92]	; (81c0 <Common_Init+0x16c>)
    8162:	4b17      	ldr	r3, [pc, #92]	; (81c0 <Common_Init+0x16c>)
    8164:	691b      	ldr	r3, [r3, #16]
    8166:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    816a:	f023 0302 	bic.w	r3, r3, #2
    816e:	6113      	str	r3, [r2, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:192
  /* PORTD_PCR6: ISF=0,PE=0 */
  PORTD_PCR6 &= (uint32_t)~(uint32_t)((PORT_PCR_ISF_MASK | PORT_PCR_PE_MASK));
    8170:	4a13      	ldr	r2, [pc, #76]	; (81c0 <Common_Init+0x16c>)
    8172:	4b13      	ldr	r3, [pc, #76]	; (81c0 <Common_Init+0x16c>)
    8174:	699b      	ldr	r3, [r3, #24]
    8176:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    817a:	f023 0302 	bic.w	r3, r3, #2
    817e:	6193      	str	r3, [r2, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:194
  /* PORTE_PCR0: ISF=0,PE=1,PS=1 */
  PORTE_PCR0 = (uint32_t)((PORTE_PCR0 & (uint32_t)~(uint32_t)(
    8180:	4a10      	ldr	r2, [pc, #64]	; (81c4 <Common_Init+0x170>)
    8182:	4b10      	ldr	r3, [pc, #64]	; (81c4 <Common_Init+0x170>)
    8184:	681b      	ldr	r3, [r3, #0]
    8186:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    818a:	f023 0303 	bic.w	r3, r3, #3
    818e:	f043 0303 	orr.w	r3, r3, #3
    8192:	6013      	str	r3, [r2, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:203
                PORT_PCR_PS_MASK
               ));

  /* Disable clock gate of peripherals initialized in Common_Init() */
  /* SIM_SCGC5: PORTE=0,PORTD=0,PORTB=0,PORTA=0 */
  SIM_SCGC5 &= (uint32_t)~(uint32_t)(
    8194:	4907      	ldr	r1, [pc, #28]	; (81b4 <Common_Init+0x160>)
    8196:	4b07      	ldr	r3, [pc, #28]	; (81b4 <Common_Init+0x160>)
    8198:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    819c:	3318      	adds	r3, #24
    819e:	681b      	ldr	r3, [r3, #0]
    81a0:	f423 5258 	bic.w	r2, r3, #13824	; 0x3600
    81a4:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    81a8:	3318      	adds	r3, #24
    81aa:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:209
                SIM_SCGC5_PORTE_MASK |
                SIM_SCGC5_PORTD_MASK |
                SIM_SCGC5_PORTB_MASK |
                SIM_SCGC5_PORTA_MASK
               );
}
    81ac:	46bd      	mov	sp, r7
    81ae:	f85d 7b04 	ldr.w	r7, [sp], #4
    81b2:	4770      	bx	lr
    81b4:	40047000 	.word	0x40047000
    81b8:	40049000 	.word	0x40049000
    81bc:	4004a000 	.word	0x4004a000
    81c0:	4004c000 	.word	0x4004c000
    81c4:	4004d000 	.word	0x4004d000

000081c8 <Components_Init>:
Components_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:229
**     Returns     : Nothing
** ===================================================================
*/
#if CPU_COMPONENTS_INIT
void Components_Init(void)
{
    81c8:	b580      	push	{r7, lr}
    81ca:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:230
  MCUC1_Init(); /* ### McuLibConfig "MCUC1" init code ... */
    81cc:	f000 fa2e 	bl	862c <MCUC1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:232
  /* ### BitIO_LDD "BitIoLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd1_Init(NULL);
    81d0:	2000      	movs	r0, #0
    81d2:	f7fd fe7d 	bl	5ed0 <BitIoLdd1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:233
  LED_BLUE_F_L_Init(); /* ### LED "LED_BLUE_F_L" init code ... */
    81d6:	f000 f9ed 	bl	85b4 <LED_BLUE_F_L_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:235
  /* ### BitIO_LDD "BitIoLdd2" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd2_Init(NULL);
    81da:	2000      	movs	r0, #0
    81dc:	f7fe f932 	bl	6444 <BitIoLdd2_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:236
  LED_RED_F_L_Init(); /* ### LED "LED_RED_F_L" init code ... */
    81e0:	f000 fa10 	bl	8604 <LED_RED_F_L_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:238
  /* ### BitIO_LDD "BitIoLdd3" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd3_Init(NULL);
    81e4:	2000      	movs	r0, #0
    81e6:	f7fe fc91 	bl	6b0c <BitIoLdd3_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:239
  LED_GREEN_F_L_Init(); /* ### LED "LED_GREEN_F_L" init code ... */
    81ea:	f000 f9f7 	bl	85dc <LED_GREEN_F_L_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:241
  /* ### BitIO_LDD "BitIoLdd4" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd4_Init(NULL);
    81ee:	2000      	movs	r0, #0
    81f0:	f7ff f826 	bl	7240 <BitIoLdd4_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:242
  LED_BLUE_F_R_Init(); /* ### LED "LED_BLUE_F_R" init code ... */
    81f4:	f000 f9e8 	bl	85c8 <LED_BLUE_F_R_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:244
  /* ### BitIO_LDD "BitIoLdd5" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd5_Init(NULL);
    81f8:	2000      	movs	r0, #0
    81fa:	f7ff f931 	bl	7460 <BitIoLdd5_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:245
  LED_RED_F_R_Init(); /* ### LED "LED_RED_F_R" init code ... */
    81fe:	f000 fa0b 	bl	8618 <LED_RED_F_R_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:247
  /* ### BitIO_LDD "BitIoLdd6" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd6_Init(NULL);
    8202:	2000      	movs	r0, #0
    8204:	f7ff f996 	bl	7534 <BitIoLdd6_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:248
  LED_GREEN_F_R_Init(); /* ### LED "LED_GREEN_F_R" init code ... */
    8208:	f000 f9f2 	bl	85f0 <LED_GREEN_F_R_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:249
  WAIT1_Init(); /* ### Wait "WAIT1" init code ... */
    820c:	f001 fbfa 	bl	9a04 <WAIT1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:250
  GI2C1_Init(); /* ### GenericI2C "GI2C1" init code ... */
    8210:	f000 f9c0 	bl	8594 <GI2C1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:252
  /* ### BitIO_LDD "BitIoLdd16" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd16_Init(NULL);
    8214:	2000      	movs	r0, #0
    8216:	f7fd ffcd 	bl	61b4 <BitIoLdd16_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:254
  /* ### BitIO_LDD "BitIoLdd17" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd17_Init(NULL);
    821a:	2000      	movs	r0, #0
    821c:	f7fe f81c 	bl	6258 <BitIoLdd17_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:256
  /* ### BitIO_LDD "BitIoLdd18" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd18_Init(NULL);
    8220:	2000      	movs	r0, #0
    8222:	f7fe f86b 	bl	62fc <BitIoLdd18_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:258
  /* ### BitIO_LDD "BitIoLdd19" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd19_Init(NULL);
    8226:	2000      	movs	r0, #0
    8228:	f7fe f8ba 	bl	63a0 <BitIoLdd19_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:260
  /* ### BitIO_LDD "BitIoLdd20" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd20_Init(NULL);
    822c:	2000      	movs	r0, #0
    822e:	f7fe f969 	bl	6504 <BitIoLdd20_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:262
  /* ### Asynchro serial "AS_BLE" init code ... */
  AS_BLE_Init();
    8232:	f7fc fc77 	bl	4b24 <AS_BLE_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:263
  UTIL1_Init(); /* ### Utility "UTIL1" init code ... */
    8236:	f001 fb7b 	bl	9930 <UTIL1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:264
  XF1_Init(); /* ### XFormat "XF1" init code ... */
    823a:	f001 fbe9 	bl	9a10 <XF1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:265
  CS1_Init(); /* ### CriticalSection "CS1" init code ... */
    823e:	f7ff ff03 	bl	8048 <CS1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:266
  CLS_BLE_Init(); /* ### Shell "CLS_BLE" init code ... */
    8242:	f7ff fed9 	bl	7ff8 <CLS_BLE_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:268
  /* ### Asynchro serial "AS_PRG" init code ... */
  AS_PRG_Init();
    8246:	f7fc fd8b 	bl	4d60 <AS_PRG_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:270
  /* ### DAC_LDD "DacLdd1" component auto initialization. Auto initialization feature can be disabled by component's property "Auto initialization". */
  (void)DacLdd1_Init(NULL);
    824a:	2000      	movs	r0, #0
    824c:	f000 f86c 	bl	8328 <DacLdd1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:272
  /* ### BitIO_LDD "BitIoLdd27" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd27_Init(NULL);
    8250:	2000      	movs	r0, #0
    8252:	f7fe fb93 	bl	697c <BitIoLdd27_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:274
  /* ### BitIO_LDD "BitIoLdd28" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd28_Init(NULL);
    8256:	2000      	movs	r0, #0
    8258:	f7fe fbd0 	bl	69fc <BitIoLdd28_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:276
  /* ### BitIO_LDD "BitIoLdd31" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd31_Init(NULL);
    825c:	2000      	movs	r0, #0
    825e:	f7fe fcef 	bl	6c40 <BitIoLdd31_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:278
  /* ### ADC "ADC_0" init code ... */
  ADC_0_Init();
    8262:	f7fc fa25 	bl	46b0 <ADC_0_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:280
  /* ### TimerInt_LDD "TimerIntLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)TimerIntLdd1_Init(NULL);
    8266:	2000      	movs	r0, #0
    8268:	f000 fff4 	bl	9254 <TimerIntLdd1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:283
  /* ### TimerInt "Distance_INT" init code ... */
  /* ### FreeCntr_LDD "FreeCntrLdd1" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)FreeCntrLdd1_Init(NULL);
    826c:	2000      	movs	r0, #0
    826e:	f000 f941 	bl	84f4 <FreeCntrLdd1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:285
  /* ### ADC "ADC_1" init code ... */
  ADC_1_Init();
    8272:	f7fc fac5 	bl	4800 <ADC_1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:287
  /* ### BitIO_LDD "BitIoLdd7" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd7_Init(NULL);
    8276:	2000      	movs	r0, #0
    8278:	f7ff f9c6 	bl	7608 <BitIoLdd7_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:289
  /* ### BitIO_LDD "BitIoLdd10" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd10_Init(NULL);
    827c:	2000      	movs	r0, #0
    827e:	f7fd fe97 	bl	5fb0 <BitIoLdd10_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:291
  /* ### BitIO_LDD "BitIoLdd8" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd8_Init(NULL);
    8282:	2000      	movs	r0, #0
    8284:	f7ff fa00 	bl	7688 <BitIoLdd8_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:293
  /* ### BitIO_LDD "BitIoLdd14" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd14_Init(NULL);
    8288:	2000      	movs	r0, #0
    828a:	f7fd ff05 	bl	6098 <BitIoLdd14_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:295
  /* ### DAC_LDD "DacLdd2" component auto initialization. Auto initialization feature can be disabled by component's property "Auto initialization". */
  (void)DacLdd2_Init(NULL);
    828e:	2000      	movs	r0, #0
    8290:	f000 f8b8 	bl	8404 <DacLdd2_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:297
  /* ### BitIO_LDD "BitIoLdd15" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd15_Init(NULL);
    8294:	2000      	movs	r0, #0
    8296:	f7fd ff4d 	bl	6134 <BitIoLdd15_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:299
  /* ### BitIO_LDD "BitIoLdd21" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd21_Init(NULL);
    829a:	2000      	movs	r0, #0
    829c:	f7fe f984 	bl	65a8 <BitIoLdd21_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:301
  /* ### BitIO_LDD "BitIoLdd22" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd22_Init(NULL);
    82a0:	2000      	movs	r0, #0
    82a2:	f7fe f9f5 	bl	6690 <BitIoLdd22_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:303
  /* ### BitIO_LDD "BitIoLdd23" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd23_Init(NULL);
    82a6:	2000      	movs	r0, #0
    82a8:	f7fe fa4e 	bl	6748 <BitIoLdd23_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:305
  /* ### BitIO_LDD "BitIoLdd24" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd24_Init(NULL);
    82ac:	2000      	movs	r0, #0
    82ae:	f7fe fa99 	bl	67e4 <BitIoLdd24_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:307
  /* ### BitIO_LDD "BitIoLdd25" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd25_Init(NULL);
    82b2:	2000      	movs	r0, #0
    82b4:	f7fe fad6 	bl	6864 <BitIoLdd25_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:309
  /* ### BitIO_LDD "BitIoLdd26" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd26_Init(NULL);
    82b8:	2000      	movs	r0, #0
    82ba:	f7fe fb0d 	bl	68d8 <BitIoLdd26_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:311
  /* ### BitIO_LDD "BitIoLdd29" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd29_Init(NULL);
    82be:	2000      	movs	r0, #0
    82c0:	f7fe fbd6 	bl	6a70 <BitIoLdd29_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:313
  /* ### BitIO_LDD "BitIoLdd30" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd30_Init(NULL);
    82c4:	2000      	movs	r0, #0
    82c6:	f7fe fc81 	bl	6bcc <BitIoLdd30_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:315
  /* ### BitIO_LDD "BitIoLdd32" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd32_Init(NULL);
    82ca:	2000      	movs	r0, #0
    82cc:	f7fe fcf8 	bl	6cc0 <BitIoLdd32_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:317
  /* ### SynchroMaster "SM1" init code ... */
  SM1_Init();
    82d0:	f000 faea 	bl	88a8 <SM1_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:319
  /* ### BitIO_LDD "BitIoLdd33" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd33_Init(NULL);
    82d4:	2000      	movs	r0, #0
    82d6:	f7fe fd33 	bl	6d40 <BitIoLdd33_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:321
  /* ### BitIO_LDD "BitIoLdd34" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd34_Init(NULL);
    82da:	2000      	movs	r0, #0
    82dc:	f7fe fd90 	bl	6e00 <BitIoLdd34_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:323
  /* ### BitIO_LDD "BitIoLdd35" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd35_Init(NULL);
    82e0:	2000      	movs	r0, #0
    82e2:	f7fe fded 	bl	6ec0 <BitIoLdd35_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:325
  /* ### BitIO_LDD "BitIoLdd36" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd36_Init(NULL);
    82e6:	2000      	movs	r0, #0
    82e8:	f7fe fe4a 	bl	6f80 <BitIoLdd36_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:327
  /* ### BitIO_LDD "BitIoLdd37" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd37_Init(NULL);
    82ec:	2000      	movs	r0, #0
    82ee:	f7fe fea7 	bl	7040 <BitIoLdd37_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:329
  /* ### BitIO_LDD "BitIoLdd38" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd38_Init(NULL);
    82f2:	2000      	movs	r0, #0
    82f4:	f7fe ff04 	bl	7100 <BitIoLdd38_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:331
  /* ### BitIO_LDD "BitIoLdd39" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd39_Init(NULL);
    82f8:	2000      	movs	r0, #0
    82fa:	f7fe ff61 	bl	71c0 <BitIoLdd39_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:333
  /* ### BitIO_LDD "BitIoLdd40" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd40_Init(NULL);
    82fe:	2000      	movs	r0, #0
    8300:	f7fe fffe 	bl	7300 <BitIoLdd40_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:335
  /* ### BitIO_LDD "BitIoLdd41" component auto initialization. Auto initialization feature can be disabled by component property "Auto initialization". */
  (void)BitIoLdd41_Init(NULL);
    8304:	2000      	movs	r0, #0
    8306:	f7ff f84b 	bl	73a0 <BitIoLdd41_Init>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:336
}
    830a:	bd80      	pop	{r7, pc}

0000830c <Cpu_INT_NMIInterrupt>:
Cpu_INT_NMIInterrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:349
**         This ISR services the Non Maskable Interrupt interrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(Cpu_INT_NMIInterrupt)
{
    830c:	4668      	mov	r0, sp
    830e:	f020 0107 	bic.w	r1, r0, #7
    8312:	468d      	mov	sp, r1
    8314:	b589      	push	{r0, r3, r7, lr}
    8316:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:350
  Cpu_OnNMI();
    8318:	f7fa fbaa 	bl	2a70 <Cpu_OnNMI>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Cpu.c:351
}
    831c:	46bd      	mov	sp, r7
    831e:	e8bd 4089 	ldmia.w	sp!, {r0, r3, r7, lr}
    8322:	4685      	mov	sp, r0
    8324:	4770      	bx	lr
    8326:	bf00      	nop

00008328 <DacLdd1_Init>:
DacLdd1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:138
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* DacLdd1_Init(LDD_TUserData *UserDataPtr)
{
    8328:	b480      	push	{r7}
    832a:	b085      	sub	sp, #20
    832c:	af00      	add	r7, sp, #0
    832e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:143
  DacLdd1_TDeviceData *DeviceDataPtr;  /* LDD device structure */

  /* Allocate HAL device structure */
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPtr = &DeviceDataPtr__DEFAULT_RTOS_ALLOC;
    8330:	4b1e      	ldr	r3, [pc, #120]	; (83ac <DacLdd1_Init+0x84>)
    8332:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:144
  DeviceDataPtr->DmaTransferDeviceDataPtr = NULL; /* DMA is not used */
    8334:	68fb      	ldr	r3, [r7, #12]
    8336:	2200      	movs	r2, #0
    8338:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:145
  DeviceDataPtr->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    833a:	68fb      	ldr	r3, [r7, #12]
    833c:	687a      	ldr	r2, [r7, #4]
    833e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:147
  /* SIM_SCGC2: DAC0=1 */
  SIM_SCGC2 |= SIM_SCGC2_DAC0_MASK;
    8340:	491b      	ldr	r1, [pc, #108]	; (83b0 <DacLdd1_Init+0x88>)
    8342:	4b1b      	ldr	r3, [pc, #108]	; (83b0 <DacLdd1_Init+0x88>)
    8344:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    8348:	330c      	adds	r3, #12
    834a:	681b      	ldr	r3, [r3, #0]
    834c:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    8350:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    8354:	330c      	adds	r3, #12
    8356:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:148
  DAC_PDD_EnableDevice(DAC0_BASE_PTR,PDD_DISABLE); /* Disable device */
    8358:	4b16      	ldr	r3, [pc, #88]	; (83b4 <DacLdd1_Init+0x8c>)
    835a:	4a16      	ldr	r2, [pc, #88]	; (83b4 <DacLdd1_Init+0x8c>)
    835c:	f892 2021 	ldrb.w	r2, [r2, #33]	; 0x21
    8360:	b2d2      	uxtb	r2, r2
    8362:	f002 027f 	and.w	r2, r2, #127	; 0x7f
    8366:	b2d2      	uxtb	r2, r2
    8368:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:150
  /* DAC0_DAT0H: ??=0,??=0,??=0,??=0,DATA1=0 */
  DAC0_DAT0H = DAC_DATH_DATA1(0x00);
    836c:	4b11      	ldr	r3, [pc, #68]	; (83b4 <DacLdd1_Init+0x8c>)
    836e:	2200      	movs	r2, #0
    8370:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:152
  /* DAC0_DAT0L: DATA0=0 */
  DAC0_DAT0L = DAC_DATL_DATA0(0x00);
    8372:	4b10      	ldr	r3, [pc, #64]	; (83b4 <DacLdd1_Init+0x8c>)
    8374:	2200      	movs	r2, #0
    8376:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:154
  /* DAC0_C2: DACBFRP=0,DACBFUP=0x0F */
  DAC0_C2 = (DAC_C2_DACBFRP(0x00) | DAC_C2_DACBFUP(0x0F));
    8378:	4b0e      	ldr	r3, [pc, #56]	; (83b4 <DacLdd1_Init+0x8c>)
    837a:	220f      	movs	r2, #15
    837c:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:156
  /* DAC0_C1: DMAEN=0,??=0,??=0,DACBFWM=0,DACBFMD=0,DACBFEN=0 */
  DAC0_C1 = (DAC_C1_DACBFWM(0x00) | DAC_C1_DACBFMD(0x00));
    8380:	4b0c      	ldr	r3, [pc, #48]	; (83b4 <DacLdd1_Init+0x8c>)
    8382:	2200      	movs	r2, #0
    8384:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:158
  /* DAC0_SR: ??=0,??=0,??=0,??=0,??=0,DACBFWMF=0,DACBFRPTF=0,DACBFRPBF=0 */
  DAC0_SR = 0x00U;
    8388:	4b0a      	ldr	r3, [pc, #40]	; (83b4 <DacLdd1_Init+0x8c>)
    838a:	2200      	movs	r2, #0
    838c:	f883 2020 	strb.w	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:160
  /* DAC0_C0: DACEN=1,DACRFS=1,DACTRGSEL=0,DACSWTRG=0,LPEN=0,DACBWIEN=0,DACBTIEN=0,DACBBIEN=0 */
  DAC0_C0 = (DAC_C0_DACEN_MASK | DAC_C0_DACRFS_MASK);
    8390:	4b08      	ldr	r3, [pc, #32]	; (83b4 <DacLdd1_Init+0x8c>)
    8392:	22c0      	movs	r2, #192	; 0xc0
    8394:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:162
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_DacLdd1_ID,DeviceDataPtr);
    8398:	4b07      	ldr	r3, [pc, #28]	; (83b8 <DacLdd1_Init+0x90>)
    839a:	68fa      	ldr	r2, [r7, #12]
    839c:	639a      	str	r2, [r3, #56]	; 0x38
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:163
  return ((LDD_TDeviceData*)DeviceDataPtr); /* Return pointer to the data data structure */
    839e:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:164
}
    83a0:	4618      	mov	r0, r3
    83a2:	3714      	adds	r7, #20
    83a4:	46bd      	mov	sp, r7
    83a6:	f85d 7b04 	ldr.w	r7, [sp], #4
    83aa:	4770      	bx	lr
    83ac:	2000045c 	.word	0x2000045c
    83b0:	40047000 	.word	0x40047000
    83b4:	400cc000 	.word	0x400cc000
    83b8:	20000480 	.word	0x20000480

000083bc <DacLdd1_SetValue>:
DacLdd1_SetValue():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:193
**                           - ERR_DISABLED - Component or device is
**                           disabled.
*/
/* ===================================================================*/
LDD_TError DacLdd1_SetValue(LDD_TDeviceData *DeviceDataPtr, LDD_DAC_TData Data)
{
    83bc:	b480      	push	{r7}
    83be:	b083      	sub	sp, #12
    83c0:	af00      	add	r7, sp, #0
    83c2:	6078      	str	r0, [r7, #4]
    83c4:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:195
  (void)DeviceDataPtr;                 /* Parameter not used, suppress not used argument warning */
  DAC_PDD_SetData(DAC0_BASE_PTR,(uint16_t)Data,0U);
    83c6:	4b0e      	ldr	r3, [pc, #56]	; (8400 <DacLdd1_SetValue+0x44>)
    83c8:	683a      	ldr	r2, [r7, #0]
    83ca:	b2d2      	uxtb	r2, r2
    83cc:	701a      	strb	r2, [r3, #0]
    83ce:	4b0c      	ldr	r3, [pc, #48]	; (8400 <DacLdd1_SetValue+0x44>)
    83d0:	4a0b      	ldr	r2, [pc, #44]	; (8400 <DacLdd1_SetValue+0x44>)
    83d2:	7852      	ldrb	r2, [r2, #1]
    83d4:	b2d2      	uxtb	r2, r2
    83d6:	b2d2      	uxtb	r2, r2
    83d8:	f022 020f 	bic.w	r2, r2, #15
    83dc:	b2d1      	uxtb	r1, r2
    83de:	683a      	ldr	r2, [r7, #0]
    83e0:	b292      	uxth	r2, r2
    83e2:	0a12      	lsrs	r2, r2, #8
    83e4:	b292      	uxth	r2, r2
    83e6:	b2d2      	uxtb	r2, r2
    83e8:	430a      	orrs	r2, r1
    83ea:	b2d2      	uxtb	r2, r2
    83ec:	b2d2      	uxtb	r2, r2
    83ee:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:196
  return ERR_OK;
    83f0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd1.c:197
}
    83f2:	4618      	mov	r0, r3
    83f4:	370c      	adds	r7, #12
    83f6:	46bd      	mov	sp, r7
    83f8:	f85d 7b04 	ldr.w	r7, [sp], #4
    83fc:	4770      	bx	lr
    83fe:	bf00      	nop
    8400:	400cc000 	.word	0x400cc000

00008404 <DacLdd2_Init>:
DacLdd2_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:138
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* DacLdd2_Init(LDD_TUserData *UserDataPtr)
{
    8404:	b480      	push	{r7}
    8406:	b085      	sub	sp, #20
    8408:	af00      	add	r7, sp, #0
    840a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:143
  DacLdd2_TDeviceData *DeviceDataPtr;  /* LDD device structure */

  /* Allocate HAL device structure */
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPtr = &DeviceDataPtr__DEFAULT_RTOS_ALLOC;
    840c:	4b1e      	ldr	r3, [pc, #120]	; (8488 <DacLdd2_Init+0x84>)
    840e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:144
  DeviceDataPtr->DmaTransferDeviceDataPtr = NULL; /* DMA is not used */
    8410:	68fb      	ldr	r3, [r7, #12]
    8412:	2200      	movs	r2, #0
    8414:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:145
  DeviceDataPtr->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    8416:	68fb      	ldr	r3, [r7, #12]
    8418:	687a      	ldr	r2, [r7, #4]
    841a:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:147
  /* SIM_SCGC2: DAC1=1 */
  SIM_SCGC2 |= SIM_SCGC2_DAC1_MASK;
    841c:	491b      	ldr	r1, [pc, #108]	; (848c <DacLdd2_Init+0x88>)
    841e:	4b1b      	ldr	r3, [pc, #108]	; (848c <DacLdd2_Init+0x88>)
    8420:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    8424:	330c      	adds	r3, #12
    8426:	681b      	ldr	r3, [r3, #0]
    8428:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
    842c:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    8430:	330c      	adds	r3, #12
    8432:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:148
  DAC_PDD_EnableDevice(DAC1_BASE_PTR,PDD_DISABLE); /* Disable device */
    8434:	4b16      	ldr	r3, [pc, #88]	; (8490 <DacLdd2_Init+0x8c>)
    8436:	4a16      	ldr	r2, [pc, #88]	; (8490 <DacLdd2_Init+0x8c>)
    8438:	f892 2021 	ldrb.w	r2, [r2, #33]	; 0x21
    843c:	b2d2      	uxtb	r2, r2
    843e:	f002 027f 	and.w	r2, r2, #127	; 0x7f
    8442:	b2d2      	uxtb	r2, r2
    8444:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:150
  /* DAC1_DAT0H: ??=0,??=0,??=0,??=0,DATA1=0 */
  DAC1_DAT0H = DAC_DATH_DATA1(0x00);
    8448:	4b11      	ldr	r3, [pc, #68]	; (8490 <DacLdd2_Init+0x8c>)
    844a:	2200      	movs	r2, #0
    844c:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:152
  /* DAC1_DAT0L: DATA0=0 */
  DAC1_DAT0L = DAC_DATL_DATA0(0x00);
    844e:	4b10      	ldr	r3, [pc, #64]	; (8490 <DacLdd2_Init+0x8c>)
    8450:	2200      	movs	r2, #0
    8452:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:154
  /* DAC1_C2: DACBFRP=0,DACBFUP=0x0F */
  DAC1_C2 = (DAC_C2_DACBFRP(0x00) | DAC_C2_DACBFUP(0x0F));
    8454:	4b0e      	ldr	r3, [pc, #56]	; (8490 <DacLdd2_Init+0x8c>)
    8456:	220f      	movs	r2, #15
    8458:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:156
  /* DAC1_C1: DMAEN=0,??=0,??=0,DACBFWM=0,DACBFMD=0,DACBFEN=0 */
  DAC1_C1 = (DAC_C1_DACBFWM(0x00) | DAC_C1_DACBFMD(0x00));
    845c:	4b0c      	ldr	r3, [pc, #48]	; (8490 <DacLdd2_Init+0x8c>)
    845e:	2200      	movs	r2, #0
    8460:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:158
  /* DAC1_SR: ??=0,??=0,??=0,??=0,??=0,DACBFWMF=0,DACBFRPTF=0,DACBFRPBF=0 */
  DAC1_SR = 0x00U;
    8464:	4b0a      	ldr	r3, [pc, #40]	; (8490 <DacLdd2_Init+0x8c>)
    8466:	2200      	movs	r2, #0
    8468:	f883 2020 	strb.w	r2, [r3, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:160
  /* DAC1_C0: DACEN=1,DACRFS=1,DACTRGSEL=0,DACSWTRG=0,LPEN=0,DACBWIEN=0,DACBTIEN=0,DACBBIEN=0 */
  DAC1_C0 = (DAC_C0_DACEN_MASK | DAC_C0_DACRFS_MASK);
    846c:	4b08      	ldr	r3, [pc, #32]	; (8490 <DacLdd2_Init+0x8c>)
    846e:	22c0      	movs	r2, #192	; 0xc0
    8470:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:162
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_DacLdd2_ID,DeviceDataPtr);
    8474:	4b07      	ldr	r3, [pc, #28]	; (8494 <DacLdd2_Init+0x90>)
    8476:	68fa      	ldr	r2, [r7, #12]
    8478:	671a      	str	r2, [r3, #112]	; 0x70
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:163
  return ((LDD_TDeviceData*)DeviceDataPtr); /* Return pointer to the data data structure */
    847a:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:164
}
    847c:	4618      	mov	r0, r3
    847e:	3714      	adds	r7, #20
    8480:	46bd      	mov	sp, r7
    8482:	f85d 7b04 	ldr.w	r7, [sp], #4
    8486:	4770      	bx	lr
    8488:	20000464 	.word	0x20000464
    848c:	40047000 	.word	0x40047000
    8490:	400cd000 	.word	0x400cd000
    8494:	20000480 	.word	0x20000480

00008498 <DacLdd2_SetValue>:
DacLdd2_SetValue():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:193
**                           - ERR_DISABLED - Component or device is
**                           disabled.
*/
/* ===================================================================*/
LDD_TError DacLdd2_SetValue(LDD_TDeviceData *DeviceDataPtr, LDD_DAC_TData Data)
{
    8498:	b480      	push	{r7}
    849a:	b083      	sub	sp, #12
    849c:	af00      	add	r7, sp, #0
    849e:	6078      	str	r0, [r7, #4]
    84a0:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:195
  (void)DeviceDataPtr;                 /* Parameter not used, suppress not used argument warning */
  DAC_PDD_SetData(DAC1_BASE_PTR,(uint16_t)Data,0U);
    84a2:	4b0e      	ldr	r3, [pc, #56]	; (84dc <DacLdd2_SetValue+0x44>)
    84a4:	683a      	ldr	r2, [r7, #0]
    84a6:	b2d2      	uxtb	r2, r2
    84a8:	701a      	strb	r2, [r3, #0]
    84aa:	4b0c      	ldr	r3, [pc, #48]	; (84dc <DacLdd2_SetValue+0x44>)
    84ac:	4a0b      	ldr	r2, [pc, #44]	; (84dc <DacLdd2_SetValue+0x44>)
    84ae:	7852      	ldrb	r2, [r2, #1]
    84b0:	b2d2      	uxtb	r2, r2
    84b2:	b2d2      	uxtb	r2, r2
    84b4:	f022 020f 	bic.w	r2, r2, #15
    84b8:	b2d1      	uxtb	r1, r2
    84ba:	683a      	ldr	r2, [r7, #0]
    84bc:	b292      	uxth	r2, r2
    84be:	0a12      	lsrs	r2, r2, #8
    84c0:	b292      	uxth	r2, r2
    84c2:	b2d2      	uxtb	r2, r2
    84c4:	430a      	orrs	r2, r1
    84c6:	b2d2      	uxtb	r2, r2
    84c8:	b2d2      	uxtb	r2, r2
    84ca:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:196
  return ERR_OK;
    84cc:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/DacLdd2.c:197
}
    84ce:	4618      	mov	r0, r3
    84d0:	370c      	adds	r7, #12
    84d2:	46bd      	mov	sp, r7
    84d4:	f85d 7b04 	ldr.w	r7, [sp], #4
    84d8:	4770      	bx	lr
    84da:	bf00      	nop
    84dc:	400cd000 	.word	0x400cd000

000084e0 <TimerIntLdd1_OnInterrupt>:
TimerIntLdd1_OnInterrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Distance_INT.c:144
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TimerIntLdd1_OnInterrupt(LDD_TUserData *UserDataPtr)
{
    84e0:	b580      	push	{r7, lr}
    84e2:	b082      	sub	sp, #8
    84e4:	af00      	add	r7, sp, #0
    84e6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Distance_INT.c:146
  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  Distance_INT_OnInterrupt();          /* Invoke OnInterrupt event */
    84e8:	f7fa fabc 	bl	2a64 <Distance_INT_OnInterrupt>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/Distance_INT.c:147
}
    84ec:	3708      	adds	r7, #8
    84ee:	46bd      	mov	sp, r7
    84f0:	bd80      	pop	{r7, pc}
    84f2:	bf00      	nop

000084f4 <FreeCntrLdd1_Init>:
FreeCntrLdd1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:141
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* FreeCntrLdd1_Init(LDD_TUserData *UserDataPtr)
{
    84f4:	b580      	push	{r7, lr}
    84f6:	b084      	sub	sp, #16
    84f8:	af00      	add	r7, sp, #0
    84fa:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:145
  /* Allocate device structure */
  FreeCntrLdd1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    84fc:	4b0f      	ldr	r3, [pc, #60]	; (853c <FreeCntrLdd1_Init+0x48>)
    84fe:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:146
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    8500:	68fb      	ldr	r3, [r7, #12]
    8502:	687a      	ldr	r2, [r7, #4]
    8504:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:147
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    8506:	68fb      	ldr	r3, [r7, #12]
    8508:	2201      	movs	r2, #1
    850a:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:149
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_FreeCntrLdd1_ID,DeviceDataPrv);
    850c:	4b0c      	ldr	r3, [pc, #48]	; (8540 <FreeCntrLdd1_Init+0x4c>)
    850e:	68fa      	ldr	r2, [r7, #12]
    8510:	659a      	str	r2, [r3, #88]	; 0x58
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:150
  DeviceDataPrv->LinkedDeviceDataPtr = TU5_Init((LDD_TUserData *)NULL);
    8512:	2000      	movs	r0, #0
    8514:	f000 fe30 	bl	9178 <TU5_Init>
    8518:	4602      	mov	r2, r0
    851a:	68fb      	ldr	r3, [r7, #12]
    851c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:151
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    851e:	68fb      	ldr	r3, [r7, #12]
    8520:	681b      	ldr	r3, [r3, #0]
    8522:	2b00      	cmp	r3, #0
    8524:	d104      	bne.n	8530 <FreeCntrLdd1_Init+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:153
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_FreeCntrLdd1_ID);
    8526:	4b06      	ldr	r3, [pc, #24]	; (8540 <FreeCntrLdd1_Init+0x4c>)
    8528:	2200      	movs	r2, #0
    852a:	659a      	str	r2, [r3, #88]	; 0x58
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:156
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the FreeCntr initialization is also unsuccessful */
    852c:	2300      	movs	r3, #0
    852e:	e000      	b.n	8532 <FreeCntrLdd1_Init+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:158
  }
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    8530:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/FreeCntrLdd1.c:159
}
    8532:	4618      	mov	r0, r3
    8534:	3710      	adds	r7, #16
    8536:	46bd      	mov	sp, r7
    8538:	bd80      	pop	{r7, pc}
    853a:	bf00      	nop
    853c:	2000046c 	.word	0x2000046c
    8540:	20000480 	.word	0x20000480

00008544 <CI2C1_OnMasterBlockSent>:
CI2C1_OnMasterBlockSent():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:430
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void CI2C1_OnMasterBlockSent(LDD_TUserData *UserDataPtr)
{
    8544:	b480      	push	{r7}
    8546:	b085      	sub	sp, #20
    8548:	af00      	add	r7, sp, #0
    854a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:431
  if (UserDataPtr==&GI2C1_deviceData) { /* it is our own message */
    854c:	687a      	ldr	r2, [r7, #4]
    854e:	4b06      	ldr	r3, [pc, #24]	; (8568 <CI2C1_OnMasterBlockSent+0x24>)
    8550:	429a      	cmp	r2, r3
    8552:	d104      	bne.n	855e <CI2C1_OnMasterBlockSent+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:432
    GI2C1_TDataState *devicePtr = (GI2C1_TDataState*)UserDataPtr;
    8554:	687b      	ldr	r3, [r7, #4]
    8556:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:434

    devicePtr->dataTransmittedFlg = TRUE;
    8558:	68fb      	ldr	r3, [r7, #12]
    855a:	2201      	movs	r2, #1
    855c:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:436
  }
}
    855e:	3714      	adds	r7, #20
    8560:	46bd      	mov	sp, r7
    8562:	f85d 7b04 	ldr.w	r7, [sp], #4
    8566:	4770      	bx	lr
    8568:	20000478 	.word	0x20000478

0000856c <CI2C1_OnMasterBlockReceived>:
CI2C1_OnMasterBlockReceived():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:447
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void CI2C1_OnMasterBlockReceived(LDD_TUserData *UserDataPtr)
{
    856c:	b480      	push	{r7}
    856e:	b085      	sub	sp, #20
    8570:	af00      	add	r7, sp, #0
    8572:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:448
  if (UserDataPtr==&GI2C1_deviceData) { /* it is our own message */
    8574:	687a      	ldr	r2, [r7, #4]
    8576:	4b06      	ldr	r3, [pc, #24]	; (8590 <CI2C1_OnMasterBlockReceived+0x24>)
    8578:	429a      	cmp	r2, r3
    857a:	d104      	bne.n	8586 <CI2C1_OnMasterBlockReceived+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:449
    GI2C1_TDataState *devicePtr = (GI2C1_TDataState*)UserDataPtr;
    857c:	687b      	ldr	r3, [r7, #4]
    857e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:451

    devicePtr->dataReceivedFlg = TRUE;
    8580:	68fb      	ldr	r3, [r7, #12]
    8582:	2201      	movs	r2, #1
    8584:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:453
  }
}
    8586:	3714      	adds	r7, #20
    8588:	46bd      	mov	sp, r7
    858a:	f85d 7b04 	ldr.w	r7, [sp], #4
    858e:	4770      	bx	lr
    8590:	20000478 	.word	0x20000478

00008594 <GI2C1_Init>:
GI2C1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:465
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void GI2C1_Init(void)
{
    8594:	b580      	push	{r7, lr}
    8596:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:466
  GI2C1_deviceData.handle = CI2C1_Init(&GI2C1_deviceData);
    8598:	4805      	ldr	r0, [pc, #20]	; (85b0 <GI2C1_Init+0x1c>)
    859a:	f7ff fa2b 	bl	79f4 <CI2C1_Init>
    859e:	4602      	mov	r2, r0
    85a0:	4b03      	ldr	r3, [pc, #12]	; (85b0 <GI2C1_Init+0x1c>)
    85a2:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:467
  if (GI2C1_deviceData.handle==NULL) {
    85a4:	4b02      	ldr	r3, [pc, #8]	; (85b0 <GI2C1_Init+0x1c>)
    85a6:	685b      	ldr	r3, [r3, #4]
    85a8:	2b00      	cmp	r3, #0
    85aa:	d100      	bne.n	85ae <GI2C1_Init+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:471 (discriminator 1)
  #if GI2C1_CONFIG_USE_ON_ERROR_EVENT
    GI2C1_CONFIG_ON_ERROR_EVENT();
  #endif
    for(;;){} /* failure! */
    85ac:	e7fe      	b.n	85ac <GI2C1_Init+0x18>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/GI2C1.c:483
  #endif
    for(;;) {} /* error, not enough memory? */
  }
  vQueueAddToRegistry(GI2C1_busSem, "GI2C1_Mutex");
#endif
}
    85ae:	bd80      	pop	{r7, pc}
    85b0:	20000478 	.word	0x20000478

000085b4 <LED_BLUE_F_L_Init>:
LED_BLUE_F_L_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_BLUE_F_L.c:169
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void LED_BLUE_F_L_Init(void)
{
    85b4:	b580      	push	{r7, lr}
    85b6:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_BLUE_F_L.c:173
#if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
  LEDpin1_Init();
#endif
  LED_BLUE_F_L_Off();
    85b8:	4b02      	ldr	r3, [pc, #8]	; (85c4 <LED_BLUE_F_L_Init+0x10>)
    85ba:	681b      	ldr	r3, [r3, #0]
    85bc:	4618      	mov	r0, r3
    85be:	f7fd fcd7 	bl	5f70 <BitIoLdd1_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_BLUE_F_L.c:174
}
    85c2:	bd80      	pop	{r7, pc}
    85c4:	20000480 	.word	0x20000480

000085c8 <LED_BLUE_F_R_Init>:
LED_BLUE_F_R_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_BLUE_F_R.c:169
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void LED_BLUE_F_R_Init(void)
{
    85c8:	b580      	push	{r7, lr}
    85ca:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_BLUE_F_R.c:173
#if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
  LEDpin4_Init();
#endif
  LED_BLUE_F_R_Off();
    85cc:	4b02      	ldr	r3, [pc, #8]	; (85d8 <LED_BLUE_F_R_Init+0x10>)
    85ce:	68db      	ldr	r3, [r3, #12]
    85d0:	4618      	mov	r0, r3
    85d2:	f7fe fe85 	bl	72e0 <BitIoLdd4_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_BLUE_F_R.c:174
}
    85d6:	bd80      	pop	{r7, pc}
    85d8:	20000480 	.word	0x20000480

000085dc <LED_GREEN_F_L_Init>:
LED_GREEN_F_L_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_GREEN_F_L.c:169
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void LED_GREEN_F_L_Init(void)
{
    85dc:	b580      	push	{r7, lr}
    85de:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_GREEN_F_L.c:173
#if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
  LEDpin3_Init();
#endif
  LED_GREEN_F_L_Off();
    85e0:	4b02      	ldr	r3, [pc, #8]	; (85ec <LED_GREEN_F_L_Init+0x10>)
    85e2:	689b      	ldr	r3, [r3, #8]
    85e4:	4618      	mov	r0, r3
    85e6:	f7fe fae1 	bl	6bac <BitIoLdd3_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_GREEN_F_L.c:174
}
    85ea:	bd80      	pop	{r7, pc}
    85ec:	20000480 	.word	0x20000480

000085f0 <LED_GREEN_F_R_Init>:
LED_GREEN_F_R_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_GREEN_F_R.c:169
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void LED_GREEN_F_R_Init(void)
{
    85f0:	b580      	push	{r7, lr}
    85f2:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_GREEN_F_R.c:173
#if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
  LEDpin6_Init();
#endif
  LED_GREEN_F_R_Off();
    85f4:	4b02      	ldr	r3, [pc, #8]	; (8600 <LED_GREEN_F_R_Init+0x10>)
    85f6:	695b      	ldr	r3, [r3, #20]
    85f8:	4618      	mov	r0, r3
    85fa:	f7fe ffe9 	bl	75d0 <BitIoLdd6_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_GREEN_F_R.c:174
}
    85fe:	bd80      	pop	{r7, pc}
    8600:	20000480 	.word	0x20000480

00008604 <LED_RED_F_L_Init>:
LED_RED_F_L_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_RED_F_L.c:169
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void LED_RED_F_L_Init(void)
{
    8604:	b580      	push	{r7, lr}
    8606:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_RED_F_L.c:173
#if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
  LEDpin2_Init();
#endif
  LED_RED_F_L_Off();
    8608:	4b02      	ldr	r3, [pc, #8]	; (8614 <LED_RED_F_L_Init+0x10>)
    860a:	685b      	ldr	r3, [r3, #4]
    860c:	4618      	mov	r0, r3
    860e:	f7fd ff69 	bl	64e4 <BitIoLdd2_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_RED_F_L.c:174
}
    8612:	bd80      	pop	{r7, pc}
    8614:	20000480 	.word	0x20000480

00008618 <LED_RED_F_R_Init>:
LED_RED_F_R_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_RED_F_R.c:169
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void LED_RED_F_R_Init(void)
{
    8618:	b580      	push	{r7, lr}
    861a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_RED_F_R.c:173
#if MCUC1_CONFIG_SDK_VERSION_USED != MCUC1_CONFIG_SDK_PROCESSOR_EXPERT
  LEDpin5_Init();
#endif
  LED_RED_F_R_Off();
    861c:	4b02      	ldr	r3, [pc, #8]	; (8628 <LED_RED_F_R_Init+0x10>)
    861e:	691b      	ldr	r3, [r3, #16]
    8620:	4618      	mov	r0, r3
    8622:	f7fe ff6b 	bl	74fc <BitIoLdd5_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/LED_RED_F_R.c:174
}
    8626:	bd80      	pop	{r7, pc}
    8628:	20000480 	.word	0x20000480

0000862c <MCUC1_Init>:
MCUC1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/MCUC1.c:76
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void MCUC1_Init(void)
{
    862c:	b480      	push	{r7}
    862e:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/MCUC1.c:78
  /* nothing to implement */
}
    8630:	46bd      	mov	sp, r7
    8632:	f85d 7b04 	ldr.w	r7, [sp], #4
    8636:	4770      	bx	lr

00008638 <SM1_RecvChar>:
SM1_RecvChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:189
**                           supports the faul mode function - where
**                           <Fault mode> property is available.
** ===================================================================
*/
byte SM1_RecvChar(SM1_TComData *Chr)
{
    8638:	b490      	push	{r4, r7}
    863a:	b084      	sub	sp, #16
    863c:	af00      	add	r7, sp, #0
    863e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:192
  register byte FlagTmp;

  if (SM1_InpLen > 0U) {               /* Is number of received chars greater than 0? */
    8640:	4b2b      	ldr	r3, [pc, #172]	; (86f0 <SM1_RecvChar+0xb8>)
    8642:	881b      	ldrh	r3, [r3, #0]
    8644:	b29b      	uxth	r3, r3
    8646:	2b00      	cmp	r3, #0
    8648:	d042      	beq.n	86d0 <SM1_RecvChar+0x98>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:193
    EnterCritical();                   /* Disable global interrupts */
    864a:	f3ef 8013 	mrs	r0, FAULTMASK
    864e:	b671      	cpsid	f
    8650:	73f8      	strb	r0, [r7, #15]
    8652:	4b28      	ldr	r3, [pc, #160]	; (86f4 <SM1_RecvChar+0xbc>)
    8654:	781b      	ldrb	r3, [r3, #0]
    8656:	b2db      	uxtb	r3, r3
    8658:	3301      	adds	r3, #1
    865a:	b2db      	uxtb	r3, r3
    865c:	4a25      	ldr	r2, [pc, #148]	; (86f4 <SM1_RecvChar+0xbc>)
    865e:	4619      	mov	r1, r3
    8660:	7011      	strb	r1, [r2, #0]
    8662:	2b01      	cmp	r3, #1
    8664:	d102      	bne.n	866c <SM1_RecvChar+0x34>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:193 (discriminator 1)
    8666:	7bfa      	ldrb	r2, [r7, #15]
    8668:	4b23      	ldr	r3, [pc, #140]	; (86f8 <SM1_RecvChar+0xc0>)
    866a:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:194
    SM1_InpLen--;                      /* Decrease number of received chars */
    866c:	4b20      	ldr	r3, [pc, #128]	; (86f0 <SM1_RecvChar+0xb8>)
    866e:	881b      	ldrh	r3, [r3, #0]
    8670:	b29b      	uxth	r3, r3
    8672:	3b01      	subs	r3, #1
    8674:	b29a      	uxth	r2, r3
    8676:	4b1e      	ldr	r3, [pc, #120]	; (86f0 <SM1_RecvChar+0xb8>)
    8678:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:195
    *Chr = InpBuffer[InpIndexR++];     /* Read the char */
    867a:	4b20      	ldr	r3, [pc, #128]	; (86fc <SM1_RecvChar+0xc4>)
    867c:	781b      	ldrb	r3, [r3, #0]
    867e:	1c5a      	adds	r2, r3, #1
    8680:	b2d1      	uxtb	r1, r2
    8682:	4a1e      	ldr	r2, [pc, #120]	; (86fc <SM1_RecvChar+0xc4>)
    8684:	7011      	strb	r1, [r2, #0]
    8686:	461a      	mov	r2, r3
    8688:	4b1d      	ldr	r3, [pc, #116]	; (8700 <SM1_RecvChar+0xc8>)
    868a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
    868e:	687b      	ldr	r3, [r7, #4]
    8690:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:196
    if (InpIndexR >= SM1_INP_BUF_SIZE) { /* Is the index out of the receive buffer? */
    8692:	4b1a      	ldr	r3, [pc, #104]	; (86fc <SM1_RecvChar+0xc4>)
    8694:	781b      	ldrb	r3, [r3, #0]
    8696:	2b07      	cmp	r3, #7
    8698:	d902      	bls.n	86a0 <SM1_RecvChar+0x68>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:197
      InpIndexR = 0x00U;               /* Set index to the first item into the receive buffer */
    869a:	4b18      	ldr	r3, [pc, #96]	; (86fc <SM1_RecvChar+0xc4>)
    869c:	2200      	movs	r2, #0
    869e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:199
    }
    FlagTmp = SerFlag;                 /* Safe the flags */
    86a0:	4b18      	ldr	r3, [pc, #96]	; (8704 <SM1_RecvChar+0xcc>)
    86a2:	781c      	ldrb	r4, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:200
    SerFlag &= (byte)~(OVERRUN_ERR | FULL_RX); /* Clear flag "char in RX buffer" */
    86a4:	4b17      	ldr	r3, [pc, #92]	; (8704 <SM1_RecvChar+0xcc>)
    86a6:	781b      	ldrb	r3, [r3, #0]
    86a8:	f023 0341 	bic.w	r3, r3, #65	; 0x41
    86ac:	b2da      	uxtb	r2, r3
    86ae:	4b15      	ldr	r3, [pc, #84]	; (8704 <SM1_RecvChar+0xcc>)
    86b0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:201
    ExitCritical();                    /* Enable global interrupts */
    86b2:	4b10      	ldr	r3, [pc, #64]	; (86f4 <SM1_RecvChar+0xbc>)
    86b4:	781b      	ldrb	r3, [r3, #0]
    86b6:	b2db      	uxtb	r3, r3
    86b8:	3b01      	subs	r3, #1
    86ba:	b2db      	uxtb	r3, r3
    86bc:	4a0d      	ldr	r2, [pc, #52]	; (86f4 <SM1_RecvChar+0xbc>)
    86be:	4619      	mov	r1, r3
    86c0:	7011      	strb	r1, [r2, #0]
    86c2:	2b00      	cmp	r3, #0
    86c4:	d106      	bne.n	86d4 <SM1_RecvChar+0x9c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:201 (discriminator 1)
    86c6:	4b0c      	ldr	r3, [pc, #48]	; (86f8 <SM1_RecvChar+0xc0>)
    86c8:	7818      	ldrb	r0, [r3, #0]
    86ca:	f380 8813 	msr	FAULTMASK, r0
    86ce:	e001      	b.n	86d4 <SM1_RecvChar+0x9c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:203
  } else {
    return ERR_RXEMPTY;                /* Receiver is empty */
    86d0:	230a      	movs	r3, #10
    86d2:	e007      	b.n	86e4 <SM1_RecvChar+0xac>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:205
  }
  if ((FlagTmp & (OVERRUN_ERR | FULL_RX)) != 0U) { /* Is the overrun occurred? */
    86d4:	4623      	mov	r3, r4
    86d6:	f003 0341 	and.w	r3, r3, #65	; 0x41
    86da:	2b00      	cmp	r3, #0
    86dc:	d001      	beq.n	86e2 <SM1_RecvChar+0xaa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:206
    return ERR_OVERRUN;                /* If yes then return error */
    86de:	230d      	movs	r3, #13
    86e0:	e000      	b.n	86e4 <SM1_RecvChar+0xac>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:208
  } else {
    return ERR_OK;
    86e2:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:210
  }
}
    86e4:	4618      	mov	r0, r3
    86e6:	3710      	adds	r7, #16
    86e8:	46bd      	mov	sp, r7
    86ea:	bc90      	pop	{r4, r7}
    86ec:	4770      	bx	lr
    86ee:	bf00      	nop
    86f0:	20000546 	.word	0x20000546
    86f4:	2000010c 	.word	0x2000010c
    86f8:	20000b80 	.word	0x20000b80
    86fc:	20000548 	.word	0x20000548
    8700:	2000054c 	.word	0x2000054c
    8704:	20000544 	.word	0x20000544

00008708 <SM1_SendChar>:
SM1_SendChar():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:231
**                           output DMA is supported and enabled)
**                           ERR_TXFULL - Transmitter is full
** ===================================================================
*/
byte SM1_SendChar(SM1_TComData Chr)
{
    8708:	b580      	push	{r7, lr}
    870a:	b084      	sub	sp, #16
    870c:	af00      	add	r7, sp, #0
    870e:	4603      	mov	r3, r0
    8710:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:232
  if (SM1_OutLen == SM1_OUT_BUF_SIZE) { /* Is number of chars in buffer the same as the size of transmit buffer? */
    8712:	4b2e      	ldr	r3, [pc, #184]	; (87cc <SM1_SendChar+0xc4>)
    8714:	881b      	ldrh	r3, [r3, #0]
    8716:	b29b      	uxth	r3, r3
    8718:	2b08      	cmp	r3, #8
    871a:	d101      	bne.n	8720 <SM1_SendChar+0x18>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:233
    return ERR_TXFULL;                 /* If yes then error */
    871c:	230b      	movs	r3, #11
    871e:	e051      	b.n	87c4 <SM1_SendChar+0xbc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:235
  }
  EnterCritical();                     /* Disable global interrupts */
    8720:	f3ef 8013 	mrs	r0, FAULTMASK
    8724:	b671      	cpsid	f
    8726:	73f8      	strb	r0, [r7, #15]
    8728:	4b29      	ldr	r3, [pc, #164]	; (87d0 <SM1_SendChar+0xc8>)
    872a:	781b      	ldrb	r3, [r3, #0]
    872c:	b2db      	uxtb	r3, r3
    872e:	3301      	adds	r3, #1
    8730:	b2db      	uxtb	r3, r3
    8732:	4a27      	ldr	r2, [pc, #156]	; (87d0 <SM1_SendChar+0xc8>)
    8734:	4619      	mov	r1, r3
    8736:	7011      	strb	r1, [r2, #0]
    8738:	2b01      	cmp	r3, #1
    873a:	d102      	bne.n	8742 <SM1_SendChar+0x3a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:235 (discriminator 1)
    873c:	7bfa      	ldrb	r2, [r7, #15]
    873e:	4b25      	ldr	r3, [pc, #148]	; (87d4 <SM1_SendChar+0xcc>)
    8740:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:236
  SM1_OutLen++;                        /* Increase number of bytes in the transmit buffer */
    8742:	4b22      	ldr	r3, [pc, #136]	; (87cc <SM1_SendChar+0xc4>)
    8744:	881b      	ldrh	r3, [r3, #0]
    8746:	b29b      	uxth	r3, r3
    8748:	3301      	adds	r3, #1
    874a:	b29a      	uxth	r2, r3
    874c:	4b1f      	ldr	r3, [pc, #124]	; (87cc <SM1_SendChar+0xc4>)
    874e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:237
  OutBuffer[OutIndexW++] = Chr;        /* Store char to buffer */
    8750:	4b21      	ldr	r3, [pc, #132]	; (87d8 <SM1_SendChar+0xd0>)
    8752:	781b      	ldrb	r3, [r3, #0]
    8754:	1c5a      	adds	r2, r3, #1
    8756:	b2d1      	uxtb	r1, r2
    8758:	4a1f      	ldr	r2, [pc, #124]	; (87d8 <SM1_SendChar+0xd0>)
    875a:	7011      	strb	r1, [r2, #0]
    875c:	461a      	mov	r2, r3
    875e:	4b1f      	ldr	r3, [pc, #124]	; (87dc <SM1_SendChar+0xd4>)
    8760:	88f9      	ldrh	r1, [r7, #6]
    8762:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:238
  if (OutIndexW >= SM1_OUT_BUF_SIZE) { /* Is the index out of the transmit buffer? */
    8766:	4b1c      	ldr	r3, [pc, #112]	; (87d8 <SM1_SendChar+0xd0>)
    8768:	781b      	ldrb	r3, [r3, #0]
    876a:	2b07      	cmp	r3, #7
    876c:	d902      	bls.n	8774 <SM1_SendChar+0x6c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:239
    OutIndexW = 0x00U;                 /* Set index to the first item in the transmit buffer */
    876e:	4b1a      	ldr	r3, [pc, #104]	; (87d8 <SM1_SendChar+0xd0>)
    8770:	2200      	movs	r2, #0
    8772:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:241
  }
  if ((SerFlag & RUNINT_FROM_TX) == 0U) {
    8774:	4b1a      	ldr	r3, [pc, #104]	; (87e0 <SM1_SendChar+0xd8>)
    8776:	781b      	ldrb	r3, [r3, #0]
    8778:	f003 0320 	and.w	r3, r3, #32
    877c:	2b00      	cmp	r3, #0
    877e:	d112      	bne.n	87a6 <SM1_SendChar+0x9e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:242
    SerFlag |= RUNINT_FROM_TX;         /* Set flag "running int from TX"? */
    8780:	4b17      	ldr	r3, [pc, #92]	; (87e0 <SM1_SendChar+0xd8>)
    8782:	781b      	ldrb	r3, [r3, #0]
    8784:	f043 0320 	orr.w	r3, r3, #32
    8788:	b2da      	uxtb	r2, r3
    878a:	4b15      	ldr	r3, [pc, #84]	; (87e0 <SM1_SendChar+0xd8>)
    878c:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:243
    (void)SMasterLdd1_SendBlock(SMasterLdd1_DeviceDataPtr, (LDD_TData *)&OutBuffer[OutIndexR], 1U); /* Send one data byte */
    878e:	4b15      	ldr	r3, [pc, #84]	; (87e4 <SM1_SendChar+0xdc>)
    8790:	681a      	ldr	r2, [r3, #0]
    8792:	4b15      	ldr	r3, [pc, #84]	; (87e8 <SM1_SendChar+0xe0>)
    8794:	781b      	ldrb	r3, [r3, #0]
    8796:	0059      	lsls	r1, r3, #1
    8798:	4b10      	ldr	r3, [pc, #64]	; (87dc <SM1_SendChar+0xd4>)
    879a:	440b      	add	r3, r1
    879c:	4610      	mov	r0, r2
    879e:	4619      	mov	r1, r3
    87a0:	2201      	movs	r2, #1
    87a2:	f000 fa81 	bl	8ca8 <SMasterLdd1_SendBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:245
  }
  ExitCritical();                      /* Enable global interrupts */
    87a6:	4b0a      	ldr	r3, [pc, #40]	; (87d0 <SM1_SendChar+0xc8>)
    87a8:	781b      	ldrb	r3, [r3, #0]
    87aa:	b2db      	uxtb	r3, r3
    87ac:	3b01      	subs	r3, #1
    87ae:	b2db      	uxtb	r3, r3
    87b0:	4a07      	ldr	r2, [pc, #28]	; (87d0 <SM1_SendChar+0xc8>)
    87b2:	4619      	mov	r1, r3
    87b4:	7011      	strb	r1, [r2, #0]
    87b6:	2b00      	cmp	r3, #0
    87b8:	d103      	bne.n	87c2 <SM1_SendChar+0xba>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:245 (discriminator 1)
    87ba:	4b06      	ldr	r3, [pc, #24]	; (87d4 <SM1_SendChar+0xcc>)
    87bc:	7818      	ldrb	r0, [r3, #0]
    87be:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:246
  return ERR_OK;
    87c2:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:247
}
    87c4:	4618      	mov	r0, r3
    87c6:	3710      	adds	r7, #16
    87c8:	46bd      	mov	sp, r7
    87ca:	bd80      	pop	{r7, pc}
    87cc:	2000055e 	.word	0x2000055e
    87d0:	2000010c 	.word	0x2000010c
    87d4:	20000b80 	.word	0x20000b80
    87d8:	20000561 	.word	0x20000561
    87dc:	20000564 	.word	0x20000564
    87e0:	20000544 	.word	0x20000544
    87e4:	20023668 	.word	0x20023668
    87e8:	20000560 	.word	0x20000560

000087ec <SM1_ClearRxBuf>:
SM1_ClearRxBuf():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:392
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
** ===================================================================
*/
byte SM1_ClearRxBuf(void)
{
    87ec:	b480      	push	{r7}
    87ee:	b083      	sub	sp, #12
    87f0:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:393
  EnterCritical();                     /* Disable global interrupts */
    87f2:	f3ef 8013 	mrs	r0, FAULTMASK
    87f6:	b671      	cpsid	f
    87f8:	71f8      	strb	r0, [r7, #7]
    87fa:	4b19      	ldr	r3, [pc, #100]	; (8860 <SM1_ClearRxBuf+0x74>)
    87fc:	781b      	ldrb	r3, [r3, #0]
    87fe:	b2db      	uxtb	r3, r3
    8800:	3301      	adds	r3, #1
    8802:	b2db      	uxtb	r3, r3
    8804:	4a16      	ldr	r2, [pc, #88]	; (8860 <SM1_ClearRxBuf+0x74>)
    8806:	4619      	mov	r1, r3
    8808:	7011      	strb	r1, [r2, #0]
    880a:	2b01      	cmp	r3, #1
    880c:	d102      	bne.n	8814 <SM1_ClearRxBuf+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:393 (discriminator 1)
    880e:	79fa      	ldrb	r2, [r7, #7]
    8810:	4b14      	ldr	r3, [pc, #80]	; (8864 <SM1_ClearRxBuf+0x78>)
    8812:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:394
  SM1_InpLen = 0U;                     /* Set number of chars in the transmit buffer to 0 */
    8814:	4b14      	ldr	r3, [pc, #80]	; (8868 <SM1_ClearRxBuf+0x7c>)
    8816:	2200      	movs	r2, #0
    8818:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:395
  InpIndexW = 0x00U;                   /* Set index on the first item in the transmit buffer */
    881a:	4b14      	ldr	r3, [pc, #80]	; (886c <SM1_ClearRxBuf+0x80>)
    881c:	2200      	movs	r2, #0
    881e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:396
  InpIndexR = 0x00U;
    8820:	4b13      	ldr	r3, [pc, #76]	; (8870 <SM1_ClearRxBuf+0x84>)
    8822:	2200      	movs	r2, #0
    8824:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:397
  SerFlag &= (byte)~(OVERRUN_ERR | FULL_RX); /* Clear flags */
    8826:	4b13      	ldr	r3, [pc, #76]	; (8874 <SM1_ClearRxBuf+0x88>)
    8828:	781b      	ldrb	r3, [r3, #0]
    882a:	f023 0341 	bic.w	r3, r3, #65	; 0x41
    882e:	b2da      	uxtb	r2, r3
    8830:	4b10      	ldr	r3, [pc, #64]	; (8874 <SM1_ClearRxBuf+0x88>)
    8832:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:398
  ExitCritical();                      /* Enable global interrupts */
    8834:	4b0a      	ldr	r3, [pc, #40]	; (8860 <SM1_ClearRxBuf+0x74>)
    8836:	781b      	ldrb	r3, [r3, #0]
    8838:	b2db      	uxtb	r3, r3
    883a:	3b01      	subs	r3, #1
    883c:	b2db      	uxtb	r3, r3
    883e:	4a08      	ldr	r2, [pc, #32]	; (8860 <SM1_ClearRxBuf+0x74>)
    8840:	4619      	mov	r1, r3
    8842:	7011      	strb	r1, [r2, #0]
    8844:	2b00      	cmp	r3, #0
    8846:	d103      	bne.n	8850 <SM1_ClearRxBuf+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:398 (discriminator 1)
    8848:	4b06      	ldr	r3, [pc, #24]	; (8864 <SM1_ClearRxBuf+0x78>)
    884a:	7818      	ldrb	r0, [r3, #0]
    884c:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:399
  return ERR_OK;                       /* OK */
    8850:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:400
}
    8852:	4618      	mov	r0, r3
    8854:	370c      	adds	r7, #12
    8856:	46bd      	mov	sp, r7
    8858:	f85d 7b04 	ldr.w	r7, [sp], #4
    885c:	4770      	bx	lr
    885e:	bf00      	nop
    8860:	2000010c 	.word	0x2000010c
    8864:	20000b80 	.word	0x20000b80
    8868:	20000546 	.word	0x20000546
    886c:	20000549 	.word	0x20000549
    8870:	20000548 	.word	0x20000548
    8874:	20000544 	.word	0x20000544

00008878 <SM1_GetCharsInRxBuf>:
SM1_GetCharsInRxBuf():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:441
**     Returns     :
**         ---             - Number of characters in the input buffer.
** ===================================================================
*/
word SM1_GetCharsInRxBuf(void)
{
    8878:	b480      	push	{r7}
    887a:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:442
  return SM1_InpLen;                   /* Return number of chars in receive buffer */
    887c:	4b03      	ldr	r3, [pc, #12]	; (888c <SM1_GetCharsInRxBuf+0x14>)
    887e:	881b      	ldrh	r3, [r3, #0]
    8880:	b29b      	uxth	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:443
}
    8882:	4618      	mov	r0, r3
    8884:	46bd      	mov	sp, r7
    8886:	f85d 7b04 	ldr.w	r7, [sp], #4
    888a:	4770      	bx	lr
    888c:	20000546 	.word	0x20000546

00008890 <SM1_GetCharsInTxBuf>:
SM1_GetCharsInTxBuf():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:456
**     Returns     :
**         ---             - Number of characters in the output buffer.
** ===================================================================
*/
word SM1_GetCharsInTxBuf(void)
{
    8890:	b480      	push	{r7}
    8892:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:457
  return SM1_OutLen;                   /* Return number of chars in the transmit buffer */
    8894:	4b03      	ldr	r3, [pc, #12]	; (88a4 <SM1_GetCharsInTxBuf+0x14>)
    8896:	881b      	ldrh	r3, [r3, #0]
    8898:	b29b      	uxth	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:458
}
    889a:	4618      	mov	r0, r3
    889c:	46bd      	mov	sp, r7
    889e:	f85d 7b04 	ldr.w	r7, [sp], #4
    88a2:	4770      	bx	lr
    88a4:	2000055e 	.word	0x2000055e

000088a8 <SM1_Init>:
SM1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:503
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void SM1_Init(void)
{
    88a8:	b580      	push	{r7, lr}
    88aa:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:504
  SerFlag = 0U;                        /* Reset all flags */
    88ac:	4b14      	ldr	r3, [pc, #80]	; (8900 <SM1_Init+0x58>)
    88ae:	2200      	movs	r2, #0
    88b0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:505
  ErrFlag = 0U;                        /* Reset all flags in mirror */
    88b2:	4b14      	ldr	r3, [pc, #80]	; (8904 <SM1_Init+0x5c>)
    88b4:	2200      	movs	r2, #0
    88b6:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:506
  OnFreeTxBufSemaphore = FALSE;        /* Clear the OnFreeTxBufSemaphore */
    88b8:	4b13      	ldr	r3, [pc, #76]	; (8908 <SM1_Init+0x60>)
    88ba:	2200      	movs	r2, #0
    88bc:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:507
  SM1_InpLen = 0U;                     /* No char in the receive buffer */
    88be:	4b13      	ldr	r3, [pc, #76]	; (890c <SM1_Init+0x64>)
    88c0:	2200      	movs	r2, #0
    88c2:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:508
  InpIndexR = 0x00U;                   /* Set index on the first item in the receive buffer */
    88c4:	4b12      	ldr	r3, [pc, #72]	; (8910 <SM1_Init+0x68>)
    88c6:	2200      	movs	r2, #0
    88c8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:509
  InpIndexW = 0x00U;
    88ca:	4b12      	ldr	r3, [pc, #72]	; (8914 <SM1_Init+0x6c>)
    88cc:	2200      	movs	r2, #0
    88ce:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:510
  SM1_OutLen = 0U;                     /* No char in the transmit buffer */
    88d0:	4b11      	ldr	r3, [pc, #68]	; (8918 <SM1_Init+0x70>)
    88d2:	2200      	movs	r2, #0
    88d4:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:511
  OutIndexR = 0x00U;                   /* Set index on the first item in the transmit buffer */
    88d6:	4b11      	ldr	r3, [pc, #68]	; (891c <SM1_Init+0x74>)
    88d8:	2200      	movs	r2, #0
    88da:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:512
  OutIndexW = 0x00U;
    88dc:	4b10      	ldr	r3, [pc, #64]	; (8920 <SM1_Init+0x78>)
    88de:	2200      	movs	r2, #0
    88e0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:513
  SMasterLdd1_DeviceDataPtr = SMasterLdd1_Init(NULL); /* Calling init method of the inherited component */
    88e2:	2000      	movs	r0, #0
    88e4:	f000 f8f8 	bl	8ad8 <SMasterLdd1_Init>
    88e8:	4602      	mov	r2, r0
    88ea:	4b0e      	ldr	r3, [pc, #56]	; (8924 <SM1_Init+0x7c>)
    88ec:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:514
  (void)SMasterLdd1_ReceiveBlock(SMasterLdd1_DeviceDataPtr, &BufferRead, 1U); /* Receive one data byte */
    88ee:	4b0d      	ldr	r3, [pc, #52]	; (8924 <SM1_Init+0x7c>)
    88f0:	681b      	ldr	r3, [r3, #0]
    88f2:	4618      	mov	r0, r3
    88f4:	490c      	ldr	r1, [pc, #48]	; (8928 <SM1_Init+0x80>)
    88f6:	2201      	movs	r2, #1
    88f8:	f000 f996 	bl	8c28 <SMasterLdd1_ReceiveBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:515
}
    88fc:	bd80      	pop	{r7, pc}
    88fe:	bf00      	nop
    8900:	20000544 	.word	0x20000544
    8904:	20000545 	.word	0x20000545
    8908:	20000574 	.word	0x20000574
    890c:	20000546 	.word	0x20000546
    8910:	20000548 	.word	0x20000548
    8914:	20000549 	.word	0x20000549
    8918:	2000055e 	.word	0x2000055e
    891c:	20000560 	.word	0x20000560
    8920:	20000561 	.word	0x20000561
    8924:	20023668 	.word	0x20023668
    8928:	2000055c 	.word	0x2000055c

0000892c <SMasterLdd1_OnBlockReceived>:
SMasterLdd1_OnBlockReceived():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:535
**         events.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void SMasterLdd1_OnBlockReceived(LDD_TUserData *UserDataPtr)
{
    892c:	b590      	push	{r4, r7, lr}
    892e:	b083      	sub	sp, #12
    8930:	af00      	add	r7, sp, #0
    8932:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:536
  register byte Flags = 0U;            /* Temporary variable for flags */
    8934:	2400      	movs	r4, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:539

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  if (SM1_InpLen < SM1_INP_BUF_SIZE) { /* Is number of bytes in the receive buffer lower than size of buffer? */
    8936:	4b2e      	ldr	r3, [pc, #184]	; (89f0 <SMasterLdd1_OnBlockReceived+0xc4>)
    8938:	881b      	ldrh	r3, [r3, #0]
    893a:	b29b      	uxth	r3, r3
    893c:	2b07      	cmp	r3, #7
    893e:	d825      	bhi.n	898c <SMasterLdd1_OnBlockReceived+0x60>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:540
    SM1_InpLen++;                      /* Increase number of chars in the receive buffer */
    8940:	4b2b      	ldr	r3, [pc, #172]	; (89f0 <SMasterLdd1_OnBlockReceived+0xc4>)
    8942:	881b      	ldrh	r3, [r3, #0]
    8944:	b29b      	uxth	r3, r3
    8946:	3301      	adds	r3, #1
    8948:	b29a      	uxth	r2, r3
    894a:	4b29      	ldr	r3, [pc, #164]	; (89f0 <SMasterLdd1_OnBlockReceived+0xc4>)
    894c:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:541
    InpBuffer[InpIndexW++] = (SM1_TComData)BufferRead; /* Save received char to the receive buffer */
    894e:	4b29      	ldr	r3, [pc, #164]	; (89f4 <SMasterLdd1_OnBlockReceived+0xc8>)
    8950:	781b      	ldrb	r3, [r3, #0]
    8952:	1c5a      	adds	r2, r3, #1
    8954:	b2d1      	uxtb	r1, r2
    8956:	4a27      	ldr	r2, [pc, #156]	; (89f4 <SMasterLdd1_OnBlockReceived+0xc8>)
    8958:	7011      	strb	r1, [r2, #0]
    895a:	461a      	mov	r2, r3
    895c:	4b26      	ldr	r3, [pc, #152]	; (89f8 <SMasterLdd1_OnBlockReceived+0xcc>)
    895e:	8819      	ldrh	r1, [r3, #0]
    8960:	4b26      	ldr	r3, [pc, #152]	; (89fc <SMasterLdd1_OnBlockReceived+0xd0>)
    8962:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:542
    if (InpIndexW >= SM1_INP_BUF_SIZE) { /* Is the index out of the receive buffer? */
    8966:	4b23      	ldr	r3, [pc, #140]	; (89f4 <SMasterLdd1_OnBlockReceived+0xc8>)
    8968:	781b      	ldrb	r3, [r3, #0]
    896a:	2b07      	cmp	r3, #7
    896c:	d902      	bls.n	8974 <SMasterLdd1_OnBlockReceived+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:543
      InpIndexW = 0x00U;               /* Set index on the first item into the receive buffer */
    896e:	4b21      	ldr	r3, [pc, #132]	; (89f4 <SMasterLdd1_OnBlockReceived+0xc8>)
    8970:	2200      	movs	r2, #0
    8972:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:545
    }
    Flags |= ON_RX_CHAR;               /* If yes then set the OnRxChar flag */
    8974:	f044 0304 	orr.w	r3, r4, #4
    8978:	b2dc      	uxtb	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:546
    if (SM1_InpLen == SM1_INP_BUF_SIZE) { /* Is number of bytes in the receive buffer equal to the size of buffer? */
    897a:	4b1d      	ldr	r3, [pc, #116]	; (89f0 <SMasterLdd1_OnBlockReceived+0xc4>)
    897c:	881b      	ldrh	r3, [r3, #0]
    897e:	b29b      	uxth	r3, r3
    8980:	2b08      	cmp	r3, #8
    8982:	d114      	bne.n	89ae <SMasterLdd1_OnBlockReceived+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:547
      Flags |= ON_FULL_RX;             /* Set flag "OnFullRxBuf" */
    8984:	f044 0302 	orr.w	r3, r4, #2
    8988:	b2dc      	uxtb	r4, r3
    898a:	e010      	b.n	89ae <SMasterLdd1_OnBlockReceived+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:550
    }
  } else {
    SerFlag |= FULL_RX;                /* Set flag "full RX buffer" */
    898c:	4b1c      	ldr	r3, [pc, #112]	; (8a00 <SMasterLdd1_OnBlockReceived+0xd4>)
    898e:	781b      	ldrb	r3, [r3, #0]
    8990:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8994:	b2da      	uxtb	r2, r3
    8996:	4b1a      	ldr	r3, [pc, #104]	; (8a00 <SMasterLdd1_OnBlockReceived+0xd4>)
    8998:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:551
    ErrFlag |= FULL_RX;                /* Set flag "full RX buffer" for GetError method */
    899a:	4b1a      	ldr	r3, [pc, #104]	; (8a04 <SMasterLdd1_OnBlockReceived+0xd8>)
    899c:	781b      	ldrb	r3, [r3, #0]
    899e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    89a2:	b2da      	uxtb	r2, r3
    89a4:	4b17      	ldr	r3, [pc, #92]	; (8a04 <SMasterLdd1_OnBlockReceived+0xd8>)
    89a6:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:552
    Flags |= ON_ERROR;                 /* Set the OnError flag */
    89a8:	f044 0301 	orr.w	r3, r4, #1
    89ac:	b2dc      	uxtb	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:554
  }
  if ((Flags & ON_ERROR) != 0U) {      /* Is any error flag set? */
    89ae:	4623      	mov	r3, r4
    89b0:	f003 0301 	and.w	r3, r3, #1
    89b4:	2b00      	cmp	r3, #0
    89b6:	d002      	beq.n	89be <SMasterLdd1_OnBlockReceived+0x92>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:555
    SM1_OnError();                     /* Invoke user event */
    89b8:	f7fa f86c 	bl	2a94 <SM1_OnError>
    89bc:	e00d      	b.n	89da <SMasterLdd1_OnBlockReceived+0xae>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:557
  } else {
    if ((Flags & ON_RX_CHAR) != 0U) {  /* Is OnRxChar flag set? */
    89be:	4623      	mov	r3, r4
    89c0:	f003 0304 	and.w	r3, r3, #4
    89c4:	2b00      	cmp	r3, #0
    89c6:	d001      	beq.n	89cc <SMasterLdd1_OnBlockReceived+0xa0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:558
      SM1_OnRxChar();                  /* Invoke user event */
    89c8:	f7fa f858 	bl	2a7c <SM1_OnRxChar>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:560
    }
    if ((Flags & ON_FULL_RX) != 0U) {  /* Is OnTxChar flag set? */
    89cc:	4623      	mov	r3, r4
    89ce:	f003 0302 	and.w	r3, r3, #2
    89d2:	2b00      	cmp	r3, #0
    89d4:	d001      	beq.n	89da <SMasterLdd1_OnBlockReceived+0xae>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:561
      SM1_OnFullRxBuf();               /* Invoke user event */
    89d6:	f7fa f863 	bl	2aa0 <SM1_OnFullRxBuf>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:564
    }
  }
  (void)SMasterLdd1_ReceiveBlock(SMasterLdd1_DeviceDataPtr, &BufferRead, 1U); /* Receive one data byte */
    89da:	4b0b      	ldr	r3, [pc, #44]	; (8a08 <SMasterLdd1_OnBlockReceived+0xdc>)
    89dc:	681b      	ldr	r3, [r3, #0]
    89de:	4618      	mov	r0, r3
    89e0:	4905      	ldr	r1, [pc, #20]	; (89f8 <SMasterLdd1_OnBlockReceived+0xcc>)
    89e2:	2201      	movs	r2, #1
    89e4:	f000 f920 	bl	8c28 <SMasterLdd1_ReceiveBlock>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:565
}
    89e8:	370c      	adds	r7, #12
    89ea:	46bd      	mov	sp, r7
    89ec:	bd90      	pop	{r4, r7, pc}
    89ee:	bf00      	nop
    89f0:	20000546 	.word	0x20000546
    89f4:	20000549 	.word	0x20000549
    89f8:	2000055c 	.word	0x2000055c
    89fc:	2000054c 	.word	0x2000054c
    8a00:	20000544 	.word	0x20000544
    8a04:	20000545 	.word	0x20000545
    8a08:	20023668 	.word	0x20023668

00008a0c <SMasterLdd1_OnBlockSent>:
SMasterLdd1_OnBlockSent():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:583
**         other events.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void SMasterLdd1_OnBlockSent(LDD_TUserData *UserDataPtr)
{
    8a0c:	b590      	push	{r4, r7, lr}
    8a0e:	b083      	sub	sp, #12
    8a10:	af00      	add	r7, sp, #0
    8a12:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:584
  register byte Flags = 0U;            /* Temporary variable for flags */
    8a14:	2400      	movs	r4, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:587

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  if ((SerFlag & RUNINT_FROM_TX) != 0U) { /* Is flag "running int from TX" set? */
    8a16:	4b2a      	ldr	r3, [pc, #168]	; (8ac0 <SMasterLdd1_OnBlockSent+0xb4>)
    8a18:	781b      	ldrb	r3, [r3, #0]
    8a1a:	f003 0320 	and.w	r3, r3, #32
    8a1e:	2b00      	cmp	r3, #0
    8a20:	d002      	beq.n	8a28 <SMasterLdd1_OnBlockSent+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:588
    Flags |= ON_TX_CHAR ;              /* Set the OnTXChar flag */
    8a22:	f044 0302 	orr.w	r3, r4, #2
    8a26:	b2dc      	uxtb	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:590
  }
  OutIndexR++;
    8a28:	4b26      	ldr	r3, [pc, #152]	; (8ac4 <SMasterLdd1_OnBlockSent+0xb8>)
    8a2a:	781b      	ldrb	r3, [r3, #0]
    8a2c:	3301      	adds	r3, #1
    8a2e:	b2da      	uxtb	r2, r3
    8a30:	4b24      	ldr	r3, [pc, #144]	; (8ac4 <SMasterLdd1_OnBlockSent+0xb8>)
    8a32:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:591
  if (OutIndexR >= SM1_OUT_BUF_SIZE) { /* Is the index out of the transmit buffer? */
    8a34:	4b23      	ldr	r3, [pc, #140]	; (8ac4 <SMasterLdd1_OnBlockSent+0xb8>)
    8a36:	781b      	ldrb	r3, [r3, #0]
    8a38:	2b07      	cmp	r3, #7
    8a3a:	d902      	bls.n	8a42 <SMasterLdd1_OnBlockSent+0x36>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:592
    OutIndexR = 0x00U;                 /* Set index on the first item into the transmit buffer */
    8a3c:	4b21      	ldr	r3, [pc, #132]	; (8ac4 <SMasterLdd1_OnBlockSent+0xb8>)
    8a3e:	2200      	movs	r2, #0
    8a40:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:594
  }
  SM1_OutLen--;                        /* Decrease number of chars in the transmit buffer */
    8a42:	4b21      	ldr	r3, [pc, #132]	; (8ac8 <SMasterLdd1_OnBlockSent+0xbc>)
    8a44:	881b      	ldrh	r3, [r3, #0]
    8a46:	b29b      	uxth	r3, r3
    8a48:	3b01      	subs	r3, #1
    8a4a:	b29a      	uxth	r2, r3
    8a4c:	4b1e      	ldr	r3, [pc, #120]	; (8ac8 <SMasterLdd1_OnBlockSent+0xbc>)
    8a4e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:595
  if (SM1_OutLen != 0U) {              /* Is number of bytes in the transmit buffer greater then 0? */
    8a50:	4b1d      	ldr	r3, [pc, #116]	; (8ac8 <SMasterLdd1_OnBlockSent+0xbc>)
    8a52:	881b      	ldrh	r3, [r3, #0]
    8a54:	b29b      	uxth	r3, r3
    8a56:	2b00      	cmp	r3, #0
    8a58:	d013      	beq.n	8a82 <SMasterLdd1_OnBlockSent+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:596
    SerFlag |= RUNINT_FROM_TX;         /* Set flag "running int from TX"? */
    8a5a:	4b19      	ldr	r3, [pc, #100]	; (8ac0 <SMasterLdd1_OnBlockSent+0xb4>)
    8a5c:	781b      	ldrb	r3, [r3, #0]
    8a5e:	f043 0320 	orr.w	r3, r3, #32
    8a62:	b2da      	uxtb	r2, r3
    8a64:	4b16      	ldr	r3, [pc, #88]	; (8ac0 <SMasterLdd1_OnBlockSent+0xb4>)
    8a66:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:597
    (void)SMasterLdd1_SendBlock(SMasterLdd1_DeviceDataPtr, (LDD_TData *)&OutBuffer[OutIndexR], 1U); /* Send one data byte */
    8a68:	4b18      	ldr	r3, [pc, #96]	; (8acc <SMasterLdd1_OnBlockSent+0xc0>)
    8a6a:	681a      	ldr	r2, [r3, #0]
    8a6c:	4b15      	ldr	r3, [pc, #84]	; (8ac4 <SMasterLdd1_OnBlockSent+0xb8>)
    8a6e:	781b      	ldrb	r3, [r3, #0]
    8a70:	0059      	lsls	r1, r3, #1
    8a72:	4b17      	ldr	r3, [pc, #92]	; (8ad0 <SMasterLdd1_OnBlockSent+0xc4>)
    8a74:	440b      	add	r3, r1
    8a76:	4610      	mov	r0, r2
    8a78:	4619      	mov	r1, r3
    8a7a:	2201      	movs	r2, #1
    8a7c:	f000 f914 	bl	8ca8 <SMasterLdd1_SendBlock>
    8a80:	e00d      	b.n	8a9e <SMasterLdd1_OnBlockSent+0x92>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:599
  } else {
    SerFlag &= (byte)~(RUNINT_FROM_TX | FULL_TX); /* Clear "running int from TX" and "full TX buff" flags */
    8a82:	4b0f      	ldr	r3, [pc, #60]	; (8ac0 <SMasterLdd1_OnBlockSent+0xb4>)
    8a84:	781b      	ldrb	r3, [r3, #0]
    8a86:	f023 0330 	bic.w	r3, r3, #48	; 0x30
    8a8a:	b2da      	uxtb	r2, r3
    8a8c:	4b0c      	ldr	r3, [pc, #48]	; (8ac0 <SMasterLdd1_OnBlockSent+0xb4>)
    8a8e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:600
    if (!(OnFreeTxBufSemaphore)) {     /* Is the OnFreeTXBuf flag blocked ?*/
    8a90:	4b10      	ldr	r3, [pc, #64]	; (8ad4 <SMasterLdd1_OnBlockSent+0xc8>)
    8a92:	781b      	ldrb	r3, [r3, #0]
    8a94:	2b00      	cmp	r3, #0
    8a96:	d102      	bne.n	8a9e <SMasterLdd1_OnBlockSent+0x92>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:601
      Flags |= ON_FREE_TX;             /* If not, set the OnFreeTxBuf flag */
    8a98:	f044 0301 	orr.w	r3, r4, #1
    8a9c:	b2dc      	uxtb	r4, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:604
    }
  }
  if ((Flags & ON_TX_CHAR) != 0U) {    /* Is flag "OnTxChar" set? */
    8a9e:	4623      	mov	r3, r4
    8aa0:	f003 0302 	and.w	r3, r3, #2
    8aa4:	2b00      	cmp	r3, #0
    8aa6:	d001      	beq.n	8aac <SMasterLdd1_OnBlockSent+0xa0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:605
    SM1_OnTxChar();                    /* Invoke user event */
    8aa8:	f7f9 ffee 	bl	2a88 <SM1_OnTxChar>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:607
  }
  if ((Flags & ON_FREE_TX) != 0U) {    /* Is flag "OnFreeTxBuf" set? */
    8aac:	4623      	mov	r3, r4
    8aae:	f003 0301 	and.w	r3, r3, #1
    8ab2:	2b00      	cmp	r3, #0
    8ab4:	d001      	beq.n	8aba <SMasterLdd1_OnBlockSent+0xae>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:608
    SM1_OnFreeTxBuf();                 /* Invoke user event */
    8ab6:	f7f9 fff9 	bl	2aac <SM1_OnFreeTxBuf>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SM1.c:610
  }
}
    8aba:	370c      	adds	r7, #12
    8abc:	46bd      	mov	sp, r7
    8abe:	bd90      	pop	{r4, r7, pc}
    8ac0:	20000544 	.word	0x20000544
    8ac4:	20000560 	.word	0x20000560
    8ac8:	2000055e 	.word	0x2000055e
    8acc:	20023668 	.word	0x20023668
    8ad0:	20000564 	.word	0x20000564
    8ad4:	20000574 	.word	0x20000574

00008ad8 <SMasterLdd1_Init>:
SMasterLdd1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:180
**     @return
**                         - Device data structure pointer.
*/
/* ===================================================================*/
LDD_TDeviceData* SMasterLdd1_Init(LDD_TUserData *UserDataPtr)
{
    8ad8:	b480      	push	{r7}
    8ada:	b085      	sub	sp, #20
    8adc:	af00      	add	r7, sp, #0
    8ade:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:185
  /* Allocate LDD device structure */
  SMasterLdd1_TDeviceDataPtr DeviceDataPrv;

  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    8ae0:	4b45      	ldr	r3, [pc, #276]	; (8bf8 <SMasterLdd1_Init+0x120>)
    8ae2:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:186
  DeviceDataPrv->UserData = UserDataPtr; /* Store the RTOS device structure */
    8ae4:	68fb      	ldr	r3, [r7, #12]
    8ae6:	687a      	ldr	r2, [r7, #4]
    8ae8:	61da      	str	r2, [r3, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:189
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_SPI0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    8aea:	4b44      	ldr	r3, [pc, #272]	; (8bfc <SMasterLdd1_Init+0x124>)
    8aec:	68fa      	ldr	r2, [r7, #12]
    8aee:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:190
  DeviceDataPrv->TxCommand = 0x80010000U; /* Initialization of current Tx command */
    8af0:	68fb      	ldr	r3, [r7, #12]
    8af2:	4a43      	ldr	r2, [pc, #268]	; (8c00 <SMasterLdd1_Init+0x128>)
    8af4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:191
  DeviceDataPrv->ErrFlag = 0x00U;      /* Clear error flags */
    8af6:	68fb      	ldr	r3, [r7, #12]
    8af8:	2200      	movs	r2, #0
    8afa:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:193
  /* Clear the receive counters and pointer */
  DeviceDataPrv->InpRecvDataNum = 0x00U; /* Clear the counter of received characters */
    8afc:	68fb      	ldr	r3, [r7, #12]
    8afe:	2200      	movs	r2, #0
    8b00:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:194
  DeviceDataPrv->InpDataNumReq = 0x00U; /* Clear the counter of characters to receive by ReceiveBlock() */
    8b02:	68fb      	ldr	r3, [r7, #12]
    8b04:	2200      	movs	r2, #0
    8b06:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:195
  DeviceDataPrv->InpDataPtr = NULL;    /* Clear the buffer pointer for received characters */
    8b08:	68fb      	ldr	r3, [r7, #12]
    8b0a:	2200      	movs	r2, #0
    8b0c:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:197
  /* Clear the transmit counters and pointer */
  DeviceDataPrv->OutSentDataNum = 0x00U; /* Clear the counter of sent characters */
    8b0e:	68fb      	ldr	r3, [r7, #12]
    8b10:	2200      	movs	r2, #0
    8b12:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:198
  DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    8b14:	68fb      	ldr	r3, [r7, #12]
    8b16:	2200      	movs	r2, #0
    8b18:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:199
  DeviceDataPrv->OutDataPtr = NULL;    /* Clear the buffer pointer for data to be transmitted */
    8b1a:	68fb      	ldr	r3, [r7, #12]
    8b1c:	2200      	movs	r2, #0
    8b1e:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:201
  /* SIM_SCGC6: SPI0=1 */
  SIM_SCGC6 |= SIM_SCGC6_SPI0_MASK;
    8b20:	4938      	ldr	r1, [pc, #224]	; (8c04 <SMasterLdd1_Init+0x12c>)
    8b22:	4b38      	ldr	r3, [pc, #224]	; (8c04 <SMasterLdd1_Init+0x12c>)
    8b24:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    8b28:	331c      	adds	r3, #28
    8b2a:	681b      	ldr	r3, [r3, #0]
    8b2c:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
    8b30:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    8b34:	331c      	adds	r3, #28
    8b36:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:204
  /* Interrupt vector(s) priority setting */
  /* NVICIP26: PRI26=0x50 */
  NVICIP26 = NVIC_IP_PRI26(0x50);
    8b38:	4b33      	ldr	r3, [pc, #204]	; (8c08 <SMasterLdd1_Init+0x130>)
    8b3a:	2250      	movs	r2, #80	; 0x50
    8b3c:	f883 231a 	strb.w	r2, [r3, #794]	; 0x31a
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:206
  /* NVICISER0: SETENA|=0x04000000 */
  NVICISER0 |= NVIC_ISER_SETENA(0x04000000);
    8b40:	4b31      	ldr	r3, [pc, #196]	; (8c08 <SMasterLdd1_Init+0x130>)
    8b42:	4a31      	ldr	r2, [pc, #196]	; (8c08 <SMasterLdd1_Init+0x130>)
    8b44:	6812      	ldr	r2, [r2, #0]
    8b46:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
    8b4a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:208
  /* SIM_SCGC5: PORTA=1 */
  SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
    8b4c:	492d      	ldr	r1, [pc, #180]	; (8c04 <SMasterLdd1_Init+0x12c>)
    8b4e:	4b2d      	ldr	r3, [pc, #180]	; (8c04 <SMasterLdd1_Init+0x12c>)
    8b50:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    8b54:	3318      	adds	r3, #24
    8b56:	681b      	ldr	r3, [r3, #0]
    8b58:	f443 7200 	orr.w	r2, r3, #512	; 0x200
    8b5c:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    8b60:	3318      	adds	r3, #24
    8b62:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:210
  /* PORTA_PCR17: ISF=0,MUX=2 */
  PORTA_PCR17 = (uint32_t)((PORTA_PCR17 & (uint32_t)~(uint32_t)(
    8b64:	4a29      	ldr	r2, [pc, #164]	; (8c0c <SMasterLdd1_Init+0x134>)
    8b66:	4b29      	ldr	r3, [pc, #164]	; (8c0c <SMasterLdd1_Init+0x134>)
    8b68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    8b6a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    8b6e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    8b72:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    8b76:	6453      	str	r3, [r2, #68]	; 0x44
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:217
                 PORT_PCR_MUX(0x05)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x02)
                ));
  /* PORTA_PCR16: ISF=0,MUX=2 */
  PORTA_PCR16 = (uint32_t)((PORTA_PCR16 & (uint32_t)~(uint32_t)(
    8b78:	4a24      	ldr	r2, [pc, #144]	; (8c0c <SMasterLdd1_Init+0x134>)
    8b7a:	4b24      	ldr	r3, [pc, #144]	; (8c0c <SMasterLdd1_Init+0x134>)
    8b7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    8b7e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    8b82:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    8b86:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    8b8a:	6413      	str	r3, [r2, #64]	; 0x40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:224
                 PORT_PCR_MUX(0x05)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x02)
                ));
  /* PORTA_PCR15: ISF=0,MUX=2 */
  PORTA_PCR15 = (uint32_t)((PORTA_PCR15 & (uint32_t)~(uint32_t)(
    8b8c:	4a1f      	ldr	r2, [pc, #124]	; (8c0c <SMasterLdd1_Init+0x134>)
    8b8e:	4b1f      	ldr	r3, [pc, #124]	; (8c0c <SMasterLdd1_Init+0x134>)
    8b90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    8b92:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    8b96:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    8b9a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    8b9e:	63d3      	str	r3, [r2, #60]	; 0x3c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:231
                 PORT_PCR_MUX(0x05)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x02)
                ));
  /* PORTA_PCR14: ISF=0,MUX=2 */
  PORTA_PCR14 = (uint32_t)((PORTA_PCR14 & (uint32_t)~(uint32_t)(
    8ba0:	4a1a      	ldr	r2, [pc, #104]	; (8c0c <SMasterLdd1_Init+0x134>)
    8ba2:	4b1a      	ldr	r3, [pc, #104]	; (8c0c <SMasterLdd1_Init+0x134>)
    8ba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    8ba6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
    8baa:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
    8bae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    8bb2:	6393      	str	r3, [r2, #56]	; 0x38
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:238
                 PORT_PCR_MUX(0x05)
                )) | (uint32_t)(
                 PORT_PCR_MUX(0x02)
                ));
  /* SPI0_MCR: MSTR=0,CONT_SCKE=0,DCONF=0,FRZ=0,MTFE=0,PCSSE=0,ROOE=1,??=0,??=0,PCSIS=1,DOZE=0,MDIS=0,DIS_TXF=0,DIS_RXF=0,CLR_TXF=0,CLR_RXF=0,SMPL_PT=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,HALT=1 */
  SPI0_MCR = SPI_MCR_DCONF(0x00) |
    8bb4:	4b16      	ldr	r3, [pc, #88]	; (8c10 <SMasterLdd1_Init+0x138>)
    8bb6:	4a17      	ldr	r2, [pc, #92]	; (8c14 <SMasterLdd1_Init+0x13c>)
    8bb8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:244
             SPI_MCR_ROOE_MASK |
             SPI_MCR_PCSIS(0x01) |
             SPI_MCR_SMPL_PT(0x00) |
             SPI_MCR_HALT_MASK;        /* Set Configuration register */
  /* SPI0_MCR: MSTR=1,CONT_SCKE=0,DCONF=0,FRZ=0,MTFE=0,PCSSE=0,ROOE=1,??=0,??=0,PCSIS=1,DOZE=0,MDIS=0,DIS_TXF=1,DIS_RXF=1,CLR_TXF=1,CLR_RXF=1,SMPL_PT=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,HALT=1 */
  SPI0_MCR = SPI_MCR_MSTR_MASK |
    8bba:	4b15      	ldr	r3, [pc, #84]	; (8c10 <SMasterLdd1_Init+0x138>)
    8bbc:	4a16      	ldr	r2, [pc, #88]	; (8c18 <SMasterLdd1_Init+0x140>)
    8bbe:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:255
             SPI_MCR_CLR_TXF_MASK |
             SPI_MCR_CLR_RXF_MASK |
             SPI_MCR_SMPL_PT(0x00) |
             SPI_MCR_HALT_MASK;        /* Set Configuration register */
  /* SPI0_CTAR0: DBR=1,FMSZ=0x0F,CPOL=1,CPHA=1,LSBFE=0,PCSSCK=0,PASC=0,PDT=1,PBR=2,CSSCK=0,ASC=0,DT=2,BR=1 */
  SPI0_CTAR0 = SPI_CTAR_DBR_MASK |
    8bc0:	4b13      	ldr	r3, [pc, #76]	; (8c10 <SMasterLdd1_Init+0x138>)
    8bc2:	4a16      	ldr	r2, [pc, #88]	; (8c1c <SMasterLdd1_Init+0x144>)
    8bc4:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:268
               SPI_CTAR_CSSCK(0x00) |
               SPI_CTAR_ASC(0x00) |
               SPI_CTAR_DT(0x02) |
               SPI_CTAR_BR(0x01);      /* Set Clock and Transfer Attributes register */
  /* SPI0_SR: TCF=1,TXRXS=0,??=0,EOQF=1,TFUF=1,??=0,TFFF=1,??=0,??=0,??=0,??=1,??=0,RFOF=1,??=0,RFDF=1,??=0,TXCTR=0,TXNXTPTR=0,RXCTR=0,POPNXTPTR=0 */
  SPI0_SR = SPI_SR_TCF_MASK |
    8bc6:	4b12      	ldr	r3, [pc, #72]	; (8c10 <SMasterLdd1_Init+0x138>)
    8bc8:	4a15      	ldr	r2, [pc, #84]	; (8c20 <SMasterLdd1_Init+0x148>)
    8bca:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:280
            SPI_SR_TXNXTPTR(0x00) |
            SPI_SR_RXCTR(0x00) |
            SPI_SR_POPNXTPTR(0x00) |
            0x00200000U;               /* Clear flags */
  /* SPI0_RSER: TCF_RE=0,??=0,??=0,EOQF_RE=0,TFUF_RE=0,??=0,TFFF_RE=0,TFFF_DIRS=0,??=0,??=0,??=0,??=0,RFOF_RE=0,??=0,RFDF_RE=1,RFDF_DIRS=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0 */
  SPI0_RSER = SPI_RSER_RFDF_RE_MASK;   /* Set DMA Interrupt Request Select and Enable register */
    8bcc:	4b10      	ldr	r3, [pc, #64]	; (8c10 <SMasterLdd1_Init+0x138>)
    8bce:	f44f 3200 	mov.w	r2, #131072	; 0x20000
    8bd2:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:282
  /* SPI0_MCR: HALT=0 */
  SPI0_MCR &= (uint32_t)~(uint32_t)(SPI_MCR_HALT_MASK);
    8bd4:	4b0e      	ldr	r3, [pc, #56]	; (8c10 <SMasterLdd1_Init+0x138>)
    8bd6:	4a0e      	ldr	r2, [pc, #56]	; (8c10 <SMasterLdd1_Init+0x138>)
    8bd8:	6812      	ldr	r2, [r2, #0]
    8bda:	f022 0201 	bic.w	r2, r2, #1
    8bde:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:284
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_SMasterLdd1_ID,DeviceDataPrv);
    8be0:	4b10      	ldr	r3, [pc, #64]	; (8c24 <SMasterLdd1_Init+0x14c>)
    8be2:	68fa      	ldr	r2, [r7, #12]
    8be4:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:285
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the data data structure */
    8be8:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:286
}
    8bea:	4618      	mov	r0, r3
    8bec:	3714      	adds	r7, #20
    8bee:	46bd      	mov	sp, r7
    8bf0:	f85d 7b04 	ldr.w	r7, [sp], #4
    8bf4:	4770      	bx	lr
    8bf6:	bf00      	nop
    8bf8:	20000578 	.word	0x20000578
    8bfc:	20000598 	.word	0x20000598
    8c00:	80010000 	.word	0x80010000
    8c04:	40047000 	.word	0x40047000
    8c08:	e000e100 	.word	0xe000e100
    8c0c:	40049000 	.word	0x40049000
    8c10:	4002c000 	.word	0x4002c000
    8c14:	01010001 	.word	0x01010001
    8c18:	81013c01 	.word	0x81013c01
    8c1c:	fe060021 	.word	0xfe060021
    8c20:	9a2a0000 	.word	0x9a2a0000
    8c24:	20000480 	.word	0x20000480

00008c28 <SMasterLdd1_ReceiveBlock>:
SMasterLdd1_ReceiveBlock():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:327
**                           ERR_BUSY - The previous receive request is
**                           pending
*/
/* ===================================================================*/
LDD_TError SMasterLdd1_ReceiveBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    8c28:	b480      	push	{r7}
    8c2a:	b087      	sub	sp, #28
    8c2c:	af00      	add	r7, sp, #0
    8c2e:	60f8      	str	r0, [r7, #12]
    8c30:	60b9      	str	r1, [r7, #8]
    8c32:	4613      	mov	r3, r2
    8c34:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:328
  if (((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->InpDataNumReq != 0x00U) { /* Is the previous receive operation pending? */
    8c36:	68fb      	ldr	r3, [r7, #12]
    8c38:	8a1b      	ldrh	r3, [r3, #16]
    8c3a:	2b00      	cmp	r3, #0
    8c3c:	d001      	beq.n	8c42 <SMasterLdd1_ReceiveBlock+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:329
    return ERR_BUSY;                   /* If yes then error */
    8c3e:	2308      	movs	r3, #8
    8c40:	e028      	b.n	8c94 <SMasterLdd1_ReceiveBlock+0x6c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:332
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    8c42:	f3ef 8013 	mrs	r0, FAULTMASK
    8c46:	b671      	cpsid	f
    8c48:	75f8      	strb	r0, [r7, #23]
    8c4a:	4b15      	ldr	r3, [pc, #84]	; (8ca0 <SMasterLdd1_ReceiveBlock+0x78>)
    8c4c:	781b      	ldrb	r3, [r3, #0]
    8c4e:	b2db      	uxtb	r3, r3
    8c50:	3301      	adds	r3, #1
    8c52:	b2db      	uxtb	r3, r3
    8c54:	4a12      	ldr	r2, [pc, #72]	; (8ca0 <SMasterLdd1_ReceiveBlock+0x78>)
    8c56:	4619      	mov	r1, r3
    8c58:	7011      	strb	r1, [r2, #0]
    8c5a:	2b01      	cmp	r3, #1
    8c5c:	d102      	bne.n	8c64 <SMasterLdd1_ReceiveBlock+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:332 (discriminator 1)
    8c5e:	7dfa      	ldrb	r2, [r7, #23]
    8c60:	4b10      	ldr	r3, [pc, #64]	; (8ca4 <SMasterLdd1_ReceiveBlock+0x7c>)
    8c62:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:333
  ((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->InpDataPtr = (uint8_t*)BufferPtr; /* Store a pointer to the input data. */
    8c64:	68fb      	ldr	r3, [r7, #12]
    8c66:	68ba      	ldr	r2, [r7, #8]
    8c68:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:334
  ((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->InpDataNumReq = Size; /* Store a number of characters to be received. */
    8c6a:	68fb      	ldr	r3, [r7, #12]
    8c6c:	88fa      	ldrh	r2, [r7, #6]
    8c6e:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:335
  ((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->InpRecvDataNum = 0x00U; /* Set number of received characters to zero. */
    8c70:	68fb      	ldr	r3, [r7, #12]
    8c72:	2200      	movs	r2, #0
    8c74:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:337
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    8c76:	4b0a      	ldr	r3, [pc, #40]	; (8ca0 <SMasterLdd1_ReceiveBlock+0x78>)
    8c78:	781b      	ldrb	r3, [r3, #0]
    8c7a:	b2db      	uxtb	r3, r3
    8c7c:	3b01      	subs	r3, #1
    8c7e:	b2db      	uxtb	r3, r3
    8c80:	4a07      	ldr	r2, [pc, #28]	; (8ca0 <SMasterLdd1_ReceiveBlock+0x78>)
    8c82:	4619      	mov	r1, r3
    8c84:	7011      	strb	r1, [r2, #0]
    8c86:	2b00      	cmp	r3, #0
    8c88:	d103      	bne.n	8c92 <SMasterLdd1_ReceiveBlock+0x6a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:337 (discriminator 1)
    8c8a:	4b06      	ldr	r3, [pc, #24]	; (8ca4 <SMasterLdd1_ReceiveBlock+0x7c>)
    8c8c:	7818      	ldrb	r0, [r3, #0]
    8c8e:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:338
  return ERR_OK;                       /* OK */
    8c92:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:339
}
    8c94:	4618      	mov	r0, r3
    8c96:	371c      	adds	r7, #28
    8c98:	46bd      	mov	sp, r7
    8c9a:	f85d 7b04 	ldr.w	r7, [sp], #4
    8c9e:	4770      	bx	lr
    8ca0:	2000010c 	.word	0x2000010c
    8ca4:	20000b80 	.word	0x20000b80

00008ca8 <SMasterLdd1_SendBlock>:
SMasterLdd1_SendBlock():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:374
**                           ERR_BUSY - The previous transmit request is
**                           pending
*/
/* ===================================================================*/
LDD_TError SMasterLdd1_SendBlock(LDD_TDeviceData *DeviceDataPtr, LDD_TData *BufferPtr, uint16_t Size)
{
    8ca8:	b480      	push	{r7}
    8caa:	b087      	sub	sp, #28
    8cac:	af00      	add	r7, sp, #0
    8cae:	60f8      	str	r0, [r7, #12]
    8cb0:	60b9      	str	r1, [r7, #8]
    8cb2:	4613      	mov	r3, r2
    8cb4:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:375
  if (((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->OutDataNumReq != 0x00U) { /* Is the previous transmit operation pending? */
    8cb6:	68fb      	ldr	r3, [r7, #12]
    8cb8:	8b1b      	ldrh	r3, [r3, #24]
    8cba:	2b00      	cmp	r3, #0
    8cbc:	d001      	beq.n	8cc2 <SMasterLdd1_SendBlock+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:376
    return ERR_BUSY;                   /* If yes then error */
    8cbe:	2308      	movs	r3, #8
    8cc0:	e02e      	b.n	8d20 <SMasterLdd1_SendBlock+0x78>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:379
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    8cc2:	f3ef 8013 	mrs	r0, FAULTMASK
    8cc6:	b671      	cpsid	f
    8cc8:	75f8      	strb	r0, [r7, #23]
    8cca:	4b18      	ldr	r3, [pc, #96]	; (8d2c <SMasterLdd1_SendBlock+0x84>)
    8ccc:	781b      	ldrb	r3, [r3, #0]
    8cce:	b2db      	uxtb	r3, r3
    8cd0:	3301      	adds	r3, #1
    8cd2:	b2db      	uxtb	r3, r3
    8cd4:	4a15      	ldr	r2, [pc, #84]	; (8d2c <SMasterLdd1_SendBlock+0x84>)
    8cd6:	4619      	mov	r1, r3
    8cd8:	7011      	strb	r1, [r2, #0]
    8cda:	2b01      	cmp	r3, #1
    8cdc:	d102      	bne.n	8ce4 <SMasterLdd1_SendBlock+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:379 (discriminator 1)
    8cde:	7dfa      	ldrb	r2, [r7, #23]
    8ce0:	4b13      	ldr	r3, [pc, #76]	; (8d30 <SMasterLdd1_SendBlock+0x88>)
    8ce2:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:380
  ((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->OutDataPtr = (uint8_t*)BufferPtr; /* Set a pointer to the output data. */
    8ce4:	68fb      	ldr	r3, [r7, #12]
    8ce6:	68ba      	ldr	r2, [r7, #8]
    8ce8:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:381
  ((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->OutDataNumReq = Size; /* Set the counter of characters to be sent. */
    8cea:	68fb      	ldr	r3, [r7, #12]
    8cec:	88fa      	ldrh	r2, [r7, #6]
    8cee:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:382
  ((SMasterLdd1_TDeviceDataPtr)DeviceDataPtr)->OutSentDataNum = 0x00U; /* Clear the counter of sent characters. */
    8cf0:	68fb      	ldr	r3, [r7, #12]
    8cf2:	2200      	movs	r2, #0
    8cf4:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:383
  SPI_PDD_EnableDmasInterrupts(SPI0_BASE_PTR, SPI_PDD_TX_FIFO_FILL_INT_DMA); /* Enable TX interrupt */
    8cf6:	4b0f      	ldr	r3, [pc, #60]	; (8d34 <SMasterLdd1_SendBlock+0x8c>)
    8cf8:	4a0e      	ldr	r2, [pc, #56]	; (8d34 <SMasterLdd1_SendBlock+0x8c>)
    8cfa:	6b12      	ldr	r2, [r2, #48]	; 0x30
    8cfc:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
    8d00:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:385
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    8d02:	4b0a      	ldr	r3, [pc, #40]	; (8d2c <SMasterLdd1_SendBlock+0x84>)
    8d04:	781b      	ldrb	r3, [r3, #0]
    8d06:	b2db      	uxtb	r3, r3
    8d08:	3b01      	subs	r3, #1
    8d0a:	b2db      	uxtb	r3, r3
    8d0c:	4a07      	ldr	r2, [pc, #28]	; (8d2c <SMasterLdd1_SendBlock+0x84>)
    8d0e:	4619      	mov	r1, r3
    8d10:	7011      	strb	r1, [r2, #0]
    8d12:	2b00      	cmp	r3, #0
    8d14:	d103      	bne.n	8d1e <SMasterLdd1_SendBlock+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:385 (discriminator 1)
    8d16:	4b06      	ldr	r3, [pc, #24]	; (8d30 <SMasterLdd1_SendBlock+0x88>)
    8d18:	7818      	ldrb	r0, [r3, #0]
    8d1a:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:386
  return ERR_OK;                       /* OK */
    8d1e:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:387
}
    8d20:	4618      	mov	r0, r3
    8d22:	371c      	adds	r7, #28
    8d24:	46bd      	mov	sp, r7
    8d26:	f85d 7b04 	ldr.w	r7, [sp], #4
    8d2a:	4770      	bx	lr
    8d2c:	2000010c 	.word	0x2000010c
    8d30:	20000b80 	.word	0x20000b80
    8d34:	4002c000 	.word	0x4002c000

00008d38 <SMasterLdd1_Interrupt>:
SMasterLdd1_Interrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:400
**         interrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(SMasterLdd1_Interrupt)
{
    8d38:	4668      	mov	r0, sp
    8d3a:	f020 0107 	bic.w	r1, r0, #7
    8d3e:	468d      	mov	sp, r1
    8d40:	b581      	push	{r0, r7, lr}
    8d42:	b085      	sub	sp, #20
    8d44:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:402
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  SMasterLdd1_TDeviceDataPtr DeviceDataPrv = INT_SPI0__DEFAULT_RTOS_ISRPARAM;
    8d46:	4b44      	ldr	r3, [pc, #272]	; (8e58 <SMasterLdd1_Interrupt+0x120>)
    8d48:	681b      	ldr	r3, [r3, #0]
    8d4a:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:403
  uint32_t StatReg = SPI_PDD_GetInterruptFlags(SPI0_BASE_PTR); /* Read status register */
    8d4c:	4b43      	ldr	r3, [pc, #268]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8d4e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    8d50:	4b43      	ldr	r3, [pc, #268]	; (8e60 <SMasterLdd1_Interrupt+0x128>)
    8d52:	4013      	ands	r3, r2
    8d54:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:407
  uint16_t Data;                       /* Temporary variable for data */
  uint32_t TxCommand;                  /* Temporary variable for Tx command */

  if ((StatReg & SPI_PDD_RX_FIFO_OVERFLOW_INT) != 0U) { /* Is any error flag set? */
    8d56:	687b      	ldr	r3, [r7, #4]
    8d58:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
    8d5c:	2b00      	cmp	r3, #0
    8d5e:	d003      	beq.n	8d68 <SMasterLdd1_Interrupt+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:408
    SPI_PDD_ClearInterruptFlags(SPI0_BASE_PTR,SPI_PDD_RX_FIFO_OVERFLOW_INT); /* Clear error flags */
    8d60:	4b3e      	ldr	r3, [pc, #248]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8d62:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    8d66:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:410
  }
  if ((StatReg & SPI_PDD_RX_FIFO_DRAIN_INT_DMA) != 0U) { /* Is any char in HW buffer? */
    8d68:	687b      	ldr	r3, [r7, #4]
    8d6a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
    8d6e:	2b00      	cmp	r3, #0
    8d70:	d027      	beq.n	8dc2 <SMasterLdd1_Interrupt+0x8a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:411
    Data = (uint16_t)SPI_PDD_ReadPopRxFIFOReg(SPI0_BASE_PTR); /* Read character from receiver */
    8d72:	4b3a      	ldr	r3, [pc, #232]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8d74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    8d76:	807b      	strh	r3, [r7, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:412
    SPI_PDD_ClearInterruptFlags(SPI0_BASE_PTR,SPI_PDD_RX_FIFO_DRAIN_INT_DMA); /* Clear Rx FIFO drain flags */
    8d78:	4b38      	ldr	r3, [pc, #224]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8d7a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
    8d7e:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:413
    if (DeviceDataPrv->InpDataNumReq != 0x00U) { /* Is the receive block operation pending? */
    8d80:	68bb      	ldr	r3, [r7, #8]
    8d82:	8a1b      	ldrh	r3, [r3, #16]
    8d84:	2b00      	cmp	r3, #0
    8d86:	d01c      	beq.n	8dc2 <SMasterLdd1_Interrupt+0x8a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:414
      *((uint16_t *)DeviceDataPrv->InpDataPtr) = Data; /* Put a character to the receive buffer */
    8d88:	68bb      	ldr	r3, [r7, #8]
    8d8a:	68db      	ldr	r3, [r3, #12]
    8d8c:	887a      	ldrh	r2, [r7, #2]
    8d8e:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:415
      DeviceDataPrv->InpDataPtr += sizeof(uint16_t); /* Increment pointer to the receive buffer */
    8d90:	68bb      	ldr	r3, [r7, #8]
    8d92:	68db      	ldr	r3, [r3, #12]
    8d94:	1c9a      	adds	r2, r3, #2
    8d96:	68bb      	ldr	r3, [r7, #8]
    8d98:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:416
      DeviceDataPrv->InpRecvDataNum++; /* Increment received char. counter */
    8d9a:	68bb      	ldr	r3, [r7, #8]
    8d9c:	891b      	ldrh	r3, [r3, #8]
    8d9e:	3301      	adds	r3, #1
    8da0:	b29a      	uxth	r2, r3
    8da2:	68bb      	ldr	r3, [r7, #8]
    8da4:	811a      	strh	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:417
      if (DeviceDataPrv->InpRecvDataNum == DeviceDataPrv->InpDataNumReq) { /* Is the requested number of characters received? */
    8da6:	68bb      	ldr	r3, [r7, #8]
    8da8:	891a      	ldrh	r2, [r3, #8]
    8daa:	68bb      	ldr	r3, [r7, #8]
    8dac:	8a1b      	ldrh	r3, [r3, #16]
    8dae:	429a      	cmp	r2, r3
    8db0:	d107      	bne.n	8dc2 <SMasterLdd1_Interrupt+0x8a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:418
        DeviceDataPrv->InpDataNumReq = 0x00U; /* If yes then clear number of requested characters to be received. */
    8db2:	68bb      	ldr	r3, [r7, #8]
    8db4:	2200      	movs	r2, #0
    8db6:	821a      	strh	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:419
        SMasterLdd1_OnBlockReceived(DeviceDataPrv->UserData);
    8db8:	68bb      	ldr	r3, [r7, #8]
    8dba:	69db      	ldr	r3, [r3, #28]
    8dbc:	4618      	mov	r0, r3
    8dbe:	f7ff fdb5 	bl	892c <SMasterLdd1_OnBlockReceived>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:423
      }
    }
  }
  if ((StatReg & SPI_PDD_TX_FIFO_FILL_INT_DMA) != 0U) { /* Is HW buffer empty? */
    8dc2:	687b      	ldr	r3, [r7, #4]
    8dc4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
    8dc8:	2b00      	cmp	r3, #0
    8dca:	d03e      	beq.n	8e4a <SMasterLdd1_Interrupt+0x112>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:424
    if (DeviceDataPrv->OutSentDataNum < DeviceDataPrv->OutDataNumReq) { /* Is number of sent characters less than the number of requested incoming characters? */
    8dcc:	68bb      	ldr	r3, [r7, #8]
    8dce:	8a5a      	ldrh	r2, [r3, #18]
    8dd0:	68bb      	ldr	r3, [r7, #8]
    8dd2:	8b1b      	ldrh	r3, [r3, #24]
    8dd4:	429a      	cmp	r2, r3
    8dd6:	d22e      	bcs.n	8e36 <SMasterLdd1_Interrupt+0xfe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:425
      DeviceDataPrv->OutSentDataNum++; /* Increment the counter of sent characters. */
    8dd8:	68bb      	ldr	r3, [r7, #8]
    8dda:	8a5b      	ldrh	r3, [r3, #18]
    8ddc:	3301      	adds	r3, #1
    8dde:	b29a      	uxth	r2, r3
    8de0:	68bb      	ldr	r3, [r7, #8]
    8de2:	825a      	strh	r2, [r3, #18]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:426
      TxCommand = (uint32_t)(*((uint16_t *)DeviceDataPrv->OutDataPtr) | DeviceDataPrv->TxCommand);
    8de4:	68bb      	ldr	r3, [r7, #8]
    8de6:	695b      	ldr	r3, [r3, #20]
    8de8:	881b      	ldrh	r3, [r3, #0]
    8dea:	461a      	mov	r2, r3
    8dec:	68bb      	ldr	r3, [r7, #8]
    8dee:	681b      	ldr	r3, [r3, #0]
    8df0:	4313      	orrs	r3, r2
    8df2:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:427
      DeviceDataPrv->OutDataPtr += sizeof(uint16_t); /* Increment pointer to the transmitt buffer */
    8df4:	68bb      	ldr	r3, [r7, #8]
    8df6:	695b      	ldr	r3, [r3, #20]
    8df8:	1c9a      	adds	r2, r3, #2
    8dfa:	68bb      	ldr	r3, [r7, #8]
    8dfc:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:428
      if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
    8dfe:	68bb      	ldr	r3, [r7, #8]
    8e00:	8a5a      	ldrh	r2, [r3, #18]
    8e02:	68bb      	ldr	r3, [r7, #8]
    8e04:	8b1b      	ldrh	r3, [r3, #24]
    8e06:	429a      	cmp	r2, r3
    8e08:	d103      	bne.n	8e12 <SMasterLdd1_Interrupt+0xda>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:429
        TxCommand &= 0x7FFFFFFFU;
    8e0a:	68fb      	ldr	r3, [r7, #12]
    8e0c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
    8e10:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:431
      }
      SPI_PDD_WriteMasterPushTxFIFOReg(SPI0_BASE_PTR, TxCommand); /* Put a character with command to the transmit register */
    8e12:	4b12      	ldr	r3, [pc, #72]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8e14:	68fa      	ldr	r2, [r7, #12]
    8e16:	635a      	str	r2, [r3, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:432
      if (DeviceDataPrv->OutSentDataNum == DeviceDataPrv->OutDataNumReq) {
    8e18:	68bb      	ldr	r3, [r7, #8]
    8e1a:	8a5a      	ldrh	r2, [r3, #18]
    8e1c:	68bb      	ldr	r3, [r7, #8]
    8e1e:	8b1b      	ldrh	r3, [r3, #24]
    8e20:	429a      	cmp	r2, r3
    8e22:	d10e      	bne.n	8e42 <SMasterLdd1_Interrupt+0x10a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:433
        DeviceDataPrv->OutDataNumReq = 0x00U; /* Clear the counter of characters to be send by SendBlock() */
    8e24:	68bb      	ldr	r3, [r7, #8]
    8e26:	2200      	movs	r2, #0
    8e28:	831a      	strh	r2, [r3, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:434
        SMasterLdd1_OnBlockSent(DeviceDataPrv->UserData);
    8e2a:	68bb      	ldr	r3, [r7, #8]
    8e2c:	69db      	ldr	r3, [r3, #28]
    8e2e:	4618      	mov	r0, r3
    8e30:	f7ff fdec 	bl	8a0c <SMasterLdd1_OnBlockSent>
    8e34:	e005      	b.n	8e42 <SMasterLdd1_Interrupt+0x10a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:437
      }
    } else {
      SPI_PDD_DisableDmasInterrupts(SPI0_BASE_PTR, SPI_PDD_TX_FIFO_FILL_INT_DMA); /* Disable TX interrupt */
    8e36:	4b09      	ldr	r3, [pc, #36]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8e38:	4a08      	ldr	r2, [pc, #32]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8e3a:	6b12      	ldr	r2, [r2, #48]	; 0x30
    8e3c:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
    8e40:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:439
    }
    SPI_PDD_ClearInterruptFlags(SPI0_BASE_PTR,SPI_PDD_TX_FIFO_FILL_INT_DMA); /* Clear Tx FIFO fill flags */
    8e42:	4b06      	ldr	r3, [pc, #24]	; (8e5c <SMasterLdd1_Interrupt+0x124>)
    8e44:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
    8e48:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/SMasterLdd1.c:441
  }
}
    8e4a:	3714      	adds	r7, #20
    8e4c:	46bd      	mov	sp, r7
    8e4e:	e8bd 4081 	ldmia.w	sp!, {r0, r7, lr}
    8e52:	4685      	mov	sp, r0
    8e54:	4770      	bx	lr
    8e56:	bf00      	nop
    8e58:	20000598 	.word	0x20000598
    8e5c:	4002c000 	.word	0x4002c000
    8e60:	9a0a0000 	.word	0x9a0a0000

00008e64 <TU3_Init>:
TU3_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:168
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU3_Init(LDD_TUserData *UserDataPtr)
{
    8e64:	b480      	push	{r7}
    8e66:	b085      	sub	sp, #20
    8e68:	af00      	add	r7, sp, #0
    8e6a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:171
  TU3_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU3_ID] == NULL) {
    8e6c:	4b38      	ldr	r3, [pc, #224]	; (8f50 <TU3_Init+0xec>)
    8e6e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    8e70:	2b00      	cmp	r3, #0
    8e72:	d159      	bne.n	8f28 <TU3_Init+0xc4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:174
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    8e74:	4b37      	ldr	r3, [pc, #220]	; (8f54 <TU3_Init+0xf0>)
    8e76:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:175
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    8e78:	68fb      	ldr	r3, [r7, #12]
    8e7a:	687a      	ldr	r2, [r7, #4]
    8e7c:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:176
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    8e7e:	68fb      	ldr	r3, [r7, #12]
    8e80:	2201      	movs	r2, #1
    8e82:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:187
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* Interrupt vector(s) allocation */
  /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the global variable */
  INT_FTM0__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
    8e84:	4b34      	ldr	r3, [pc, #208]	; (8f58 <TU3_Init+0xf4>)
    8e86:	68fa      	ldr	r2, [r7, #12]
    8e88:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:189
  /* SIM_SCGC6: FTM0=1 */
  SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
    8e8a:	4934      	ldr	r1, [pc, #208]	; (8f5c <TU3_Init+0xf8>)
    8e8c:	4b33      	ldr	r3, [pc, #204]	; (8f5c <TU3_Init+0xf8>)
    8e8e:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    8e92:	331c      	adds	r3, #28
    8e94:	681b      	ldr	r3, [r3, #0]
    8e96:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
    8e9a:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    8e9e:	331c      	adds	r3, #28
    8ea0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:191
  /* FTM0_MODE: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,FAULTIE=0,FAULTM=0,CAPTEST=0,PWMSYNC=0,WPDIS=1,INIT=0,FTMEN=0 */
  FTM0_MODE = (FTM_MODE_FAULTM(0x00) | FTM_MODE_WPDIS_MASK); /* Set up mode register */
    8ea2:	4b2f      	ldr	r3, [pc, #188]	; (8f60 <TU3_Init+0xfc>)
    8ea4:	2204      	movs	r2, #4
    8ea6:	655a      	str	r2, [r3, #84]	; 0x54
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:193
  /* FTM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TOF=0,TOIE=0,CPWMS=0,CLKS=0,PS=0 */
  FTM0_SC = (FTM_SC_CLKS(0x00) | FTM_SC_PS(0x00)); /* Clear status and control register */
    8ea8:	4b2d      	ldr	r3, [pc, #180]	; (8f60 <TU3_Init+0xfc>)
    8eaa:	2200      	movs	r2, #0
    8eac:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:195
  /* FTM0_CNTIN: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,INIT=0 */
  FTM0_CNTIN = FTM_CNTIN_INIT(0x00);   /* Clear counter initial register */
    8eae:	4b2c      	ldr	r3, [pc, #176]	; (8f60 <TU3_Init+0xfc>)
    8eb0:	2200      	movs	r2, #0
    8eb2:	64da      	str	r2, [r3, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:197
  /* FTM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNT=0 */
  FTM0_CNT = FTM_CNT_COUNT(0x00);      /* Reset counter register */
    8eb4:	4b2a      	ldr	r3, [pc, #168]	; (8f60 <TU3_Init+0xfc>)
    8eb6:	2200      	movs	r2, #0
    8eb8:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:199
  /* FTM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C0SC = 0x00U;                   /* Clear channel status and control register */
    8eba:	4b29      	ldr	r3, [pc, #164]	; (8f60 <TU3_Init+0xfc>)
    8ebc:	2200      	movs	r2, #0
    8ebe:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:201
  /* FTM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C1SC = 0x00U;                   /* Clear channel status and control register */
    8ec0:	4b27      	ldr	r3, [pc, #156]	; (8f60 <TU3_Init+0xfc>)
    8ec2:	2200      	movs	r2, #0
    8ec4:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:203
  /* FTM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C2SC = 0x00U;                   /* Clear channel status and control register */
    8ec6:	4b26      	ldr	r3, [pc, #152]	; (8f60 <TU3_Init+0xfc>)
    8ec8:	2200      	movs	r2, #0
    8eca:	61da      	str	r2, [r3, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:205
  /* FTM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C3SC = 0x00U;                   /* Clear channel status and control register */
    8ecc:	4b24      	ldr	r3, [pc, #144]	; (8f60 <TU3_Init+0xfc>)
    8ece:	2200      	movs	r2, #0
    8ed0:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:207
  /* FTM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C4SC = 0x00U;                   /* Clear channel status and control register */
    8ed2:	4b23      	ldr	r3, [pc, #140]	; (8f60 <TU3_Init+0xfc>)
    8ed4:	2200      	movs	r2, #0
    8ed6:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:209
  /* FTM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C5SC = 0x00U;                   /* Clear channel status and control register */
    8ed8:	4b21      	ldr	r3, [pc, #132]	; (8f60 <TU3_Init+0xfc>)
    8eda:	2200      	movs	r2, #0
    8edc:	635a      	str	r2, [r3, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:211
  /* FTM0_C6SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C6SC = 0x00U;                   /* Clear channel status and control register */
    8ede:	4b20      	ldr	r3, [pc, #128]	; (8f60 <TU3_Init+0xfc>)
    8ee0:	2200      	movs	r2, #0
    8ee2:	63da      	str	r2, [r3, #60]	; 0x3c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:213
  /* FTM0_C7SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C7SC = 0x00U;                   /* Clear channel status and control register */
    8ee4:	4b1e      	ldr	r3, [pc, #120]	; (8f60 <TU3_Init+0xfc>)
    8ee6:	2200      	movs	r2, #0
    8ee8:	645a      	str	r2, [r3, #68]	; 0x44
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:215
  /* FTM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=0xFFFF */
  FTM0_MOD = FTM_MOD_MOD(0xFFFF);      /* Set up modulo register */
    8eea:	4b1d      	ldr	r3, [pc, #116]	; (8f60 <TU3_Init+0xfc>)
    8eec:	f64f 72ff 	movw	r2, #65535	; 0xffff
    8ef0:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:217
  /* FTM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=1,MSB=0,MSA=1,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM0_C0SC = (FTM_CnSC_CHIE_MASK | FTM_CnSC_MSA_MASK); /* Set up channel status and control register */
    8ef2:	4b1b      	ldr	r3, [pc, #108]	; (8f60 <TU3_Init+0xfc>)
    8ef4:	2250      	movs	r2, #80	; 0x50
    8ef6:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:219
  /* FTM0_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0xEA */
  FTM0_C0V = FTM_CnV_VAL(0xEA);        /* Set up channel value register */
    8ef8:	4b19      	ldr	r3, [pc, #100]	; (8f60 <TU3_Init+0xfc>)
    8efa:	22ea      	movs	r2, #234	; 0xea
    8efc:	611a      	str	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:220
  DeviceDataPrv->EnEvents = 0x01U;     /* Enable selected events */
    8efe:	68fb      	ldr	r3, [r7, #12]
    8f00:	2201      	movs	r2, #1
    8f02:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:222
  /* NVICIP42: PRI42=0x70 */
  NVICIP42 = NVIC_IP_PRI42(0x70);
    8f04:	4b17      	ldr	r3, [pc, #92]	; (8f64 <TU3_Init+0x100>)
    8f06:	2270      	movs	r2, #112	; 0x70
    8f08:	f883 232a 	strb.w	r2, [r3, #810]	; 0x32a
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:224
  /* NVICISER1: SETENA|=0x0400 */
  NVICISER1 |= NVIC_ISER_SETENA(0x0400);
    8f0c:	4b15      	ldr	r3, [pc, #84]	; (8f64 <TU3_Init+0x100>)
    8f0e:	4a15      	ldr	r2, [pc, #84]	; (8f64 <TU3_Init+0x100>)
    8f10:	6852      	ldr	r2, [r2, #4]
    8f12:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    8f16:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:226
  /* FTM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TOF=0,TOIE=0,CPWMS=0,CLKS=1,PS=7 */
  FTM0_SC = (FTM_SC_CLKS(0x01) | FTM_SC_PS(0x07)); /* Set up status and control register */
    8f18:	4b11      	ldr	r3, [pc, #68]	; (8f60 <TU3_Init+0xfc>)
    8f1a:	220f      	movs	r2, #15
    8f1c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:228
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID,DeviceDataPrv);
    8f1e:	4b0c      	ldr	r3, [pc, #48]	; (8f50 <TU3_Init+0xec>)
    8f20:	68fa      	ldr	r2, [r7, #12]
    8f22:	651a      	str	r2, [r3, #80]	; 0x50
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:229
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    8f24:	68fb      	ldr	r3, [r7, #12]
    8f26:	e00c      	b.n	8f42 <TU3_Init+0xde>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:180
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU3_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU3_ID];
    8f28:	4b09      	ldr	r3, [pc, #36]	; (8f50 <TU3_Init+0xec>)
    8f2a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    8f2c:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:181
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    8f2e:	68fb      	ldr	r3, [r7, #12]
    8f30:	687a      	ldr	r2, [r7, #4]
    8f32:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:182
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    8f34:	68fb      	ldr	r3, [r7, #12]
    8f36:	791b      	ldrb	r3, [r3, #4]
    8f38:	3301      	adds	r3, #1
    8f3a:	b2da      	uxtb	r2, r3
    8f3c:	68fb      	ldr	r3, [r7, #12]
    8f3e:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:183
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    8f40:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:230
  /* FTM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TOF=0,TOIE=0,CPWMS=0,CLKS=1,PS=7 */
  FTM0_SC = (FTM_SC_CLKS(0x01) | FTM_SC_PS(0x07)); /* Set up status and control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU3_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    8f42:	4618      	mov	r0, r3
    8f44:	3714      	adds	r7, #20
    8f46:	46bd      	mov	sp, r7
    8f48:	f85d 7b04 	ldr.w	r7, [sp], #4
    8f4c:	4770      	bx	lr
    8f4e:	bf00      	nop
    8f50:	20000480 	.word	0x20000480
    8f54:	2000059c 	.word	0x2000059c
    8f58:	200005a8 	.word	0x200005a8
    8f5c:	40047000 	.word	0x40047000
    8f60:	40038000 	.word	0x40038000
    8f64:	e000e100 	.word	0xe000e100

00008f68 <TU3_SetEventMask>:
TU3_SetEventMask():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:259
**                           the active clock configuration
**                           ERR_PARAM_MASK - Event mask is not valid
*/
/* ===================================================================*/
LDD_TError TU3_SetEventMask(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask)
{
    8f68:	b480      	push	{r7}
    8f6a:	b085      	sub	sp, #20
    8f6c:	af00      	add	r7, sp, #0
    8f6e:	6078      	str	r0, [r7, #4]
    8f70:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:260
  TU3_TDeviceData *DeviceDataPrv = (TU3_TDeviceData *)DeviceDataPtr;
    8f72:	687b      	ldr	r3, [r7, #4]
    8f74:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:264

  /* Event mask test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((EventMask & ((LDD_TEventMask)~AVAILABLE_EVENTS_MASK)) != 0U) {
    8f76:	683b      	ldr	r3, [r7, #0]
    8f78:	f023 0301 	bic.w	r3, r3, #1
    8f7c:	2b00      	cmp	r3, #0
    8f7e:	d001      	beq.n	8f84 <TU3_SetEventMask+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:265
    return ERR_PARAM_MASK;
    8f80:	2380      	movs	r3, #128	; 0x80
    8f82:	e057      	b.n	9034 <TU3_SetEventMask+0xcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:268
  }
  /* {Default RTOS Adapter} Critical section begin, general PE function is used */
  EnterCritical();
    8f84:	f3ef 8013 	mrs	r0, FAULTMASK
    8f88:	b671      	cpsid	f
    8f8a:	72f8      	strb	r0, [r7, #11]
    8f8c:	4b2c      	ldr	r3, [pc, #176]	; (9040 <TU3_SetEventMask+0xd8>)
    8f8e:	781b      	ldrb	r3, [r3, #0]
    8f90:	b2db      	uxtb	r3, r3
    8f92:	3301      	adds	r3, #1
    8f94:	b2db      	uxtb	r3, r3
    8f96:	4a2a      	ldr	r2, [pc, #168]	; (9040 <TU3_SetEventMask+0xd8>)
    8f98:	4619      	mov	r1, r3
    8f9a:	7011      	strb	r1, [r2, #0]
    8f9c:	2b01      	cmp	r3, #1
    8f9e:	d102      	bne.n	8fa6 <TU3_SetEventMask+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:268 (discriminator 1)
    8fa0:	7afa      	ldrb	r2, [r7, #11]
    8fa2:	4b28      	ldr	r3, [pc, #160]	; (9044 <TU3_SetEventMask+0xdc>)
    8fa4:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:269
  if ((EventMask & LDD_TIMERUNIT_ON_CHANNEL_0) != 0U) { /* Is the event enabled? */
    8fa6:	683b      	ldr	r3, [r7, #0]
    8fa8:	f003 0301 	and.w	r3, r3, #1
    8fac:	2b00      	cmp	r3, #0
    8fae:	d020      	beq.n	8ff2 <TU3_SetEventMask+0x8a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:270
    FTM_PDD_ClearChannelInterruptFlag(FTM0_BASE_PTR, ChannelDevice[0]); /* If yes then clear flag */
    8fb0:	4925      	ldr	r1, [pc, #148]	; (9048 <TU3_SetEventMask+0xe0>)
    8fb2:	2300      	movs	r3, #0
    8fb4:	4618      	mov	r0, r3
    8fb6:	4a24      	ldr	r2, [pc, #144]	; (9048 <TU3_SetEventMask+0xe0>)
    8fb8:	2300      	movs	r3, #0
    8fba:	3301      	adds	r3, #1
    8fbc:	00db      	lsls	r3, r3, #3
    8fbe:	4413      	add	r3, r2
    8fc0:	685b      	ldr	r3, [r3, #4]
    8fc2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
    8fc6:	1c43      	adds	r3, r0, #1
    8fc8:	00db      	lsls	r3, r3, #3
    8fca:	440b      	add	r3, r1
    8fcc:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:271
    FTM_PDD_EnableChannelInterrupt(FTM0_BASE_PTR, ChannelDevice[0]); /* and enable interrupt */
    8fce:	491e      	ldr	r1, [pc, #120]	; (9048 <TU3_SetEventMask+0xe0>)
    8fd0:	2300      	movs	r3, #0
    8fd2:	4618      	mov	r0, r3
    8fd4:	4a1c      	ldr	r2, [pc, #112]	; (9048 <TU3_SetEventMask+0xe0>)
    8fd6:	2300      	movs	r3, #0
    8fd8:	3301      	adds	r3, #1
    8fda:	00db      	lsls	r3, r3, #3
    8fdc:	4413      	add	r3, r2
    8fde:	685b      	ldr	r3, [r3, #4]
    8fe0:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
    8fe4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
    8fe8:	1c43      	adds	r3, r0, #1
    8fea:	00db      	lsls	r3, r3, #3
    8fec:	440b      	add	r3, r1
    8fee:	605a      	str	r2, [r3, #4]
    8ff0:	e00e      	b.n	9010 <TU3_SetEventMask+0xa8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:274
  }
  else {
    FTM_PDD_DisableChannelInterrupt(FTM0_BASE_PTR, ChannelDevice[0]); /* Disable channel 0 interrupt */
    8ff2:	4915      	ldr	r1, [pc, #84]	; (9048 <TU3_SetEventMask+0xe0>)
    8ff4:	2300      	movs	r3, #0
    8ff6:	4618      	mov	r0, r3
    8ff8:	4a13      	ldr	r2, [pc, #76]	; (9048 <TU3_SetEventMask+0xe0>)
    8ffa:	2300      	movs	r3, #0
    8ffc:	3301      	adds	r3, #1
    8ffe:	00db      	lsls	r3, r3, #3
    9000:	4413      	add	r3, r2
    9002:	685b      	ldr	r3, [r3, #4]
    9004:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
    9008:	1c43      	adds	r3, r0, #1
    900a:	00db      	lsls	r3, r3, #3
    900c:	440b      	add	r3, r1
    900e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:276
  }
  DeviceDataPrv->EnEvents = EventMask;
    9010:	68fb      	ldr	r3, [r7, #12]
    9012:	683a      	ldr	r2, [r7, #0]
    9014:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:278
  /* {Default RTOS Adapter} Critical section end, general PE function is used */
  ExitCritical();
    9016:	4b0a      	ldr	r3, [pc, #40]	; (9040 <TU3_SetEventMask+0xd8>)
    9018:	781b      	ldrb	r3, [r3, #0]
    901a:	b2db      	uxtb	r3, r3
    901c:	3b01      	subs	r3, #1
    901e:	b2db      	uxtb	r3, r3
    9020:	4a07      	ldr	r2, [pc, #28]	; (9040 <TU3_SetEventMask+0xd8>)
    9022:	4619      	mov	r1, r3
    9024:	7011      	strb	r1, [r2, #0]
    9026:	2b00      	cmp	r3, #0
    9028:	d103      	bne.n	9032 <TU3_SetEventMask+0xca>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:278 (discriminator 1)
    902a:	4b06      	ldr	r3, [pc, #24]	; (9044 <TU3_SetEventMask+0xdc>)
    902c:	7818      	ldrb	r0, [r3, #0]
    902e:	f380 8813 	msr	FAULTMASK, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:279
  return ERR_OK;
    9032:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:280
}
    9034:	4618      	mov	r0, r3
    9036:	3714      	adds	r7, #20
    9038:	46bd      	mov	sp, r7
    903a:	f85d 7b04 	ldr.w	r7, [sp], #4
    903e:	4770      	bx	lr
    9040:	2000010c 	.word	0x2000010c
    9044:	20000b80 	.word	0x20000b80
    9048:	40038000 	.word	0x40038000

0000904c <TU3_GetEventMask>:
TU3_GetEventMask():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:302
**                           The component event masks are defined in
**                           the PE_Types.h file.
*/
/* ===================================================================*/
LDD_TEventMask TU3_GetEventMask(LDD_TDeviceData *DeviceDataPtr)
{
    904c:	b480      	push	{r7}
    904e:	b085      	sub	sp, #20
    9050:	af00      	add	r7, sp, #0
    9052:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:303
  TU3_TDeviceData *DeviceDataPrv = (TU3_TDeviceData *)DeviceDataPtr;
    9054:	687b      	ldr	r3, [r7, #4]
    9056:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:305

  return DeviceDataPrv->EnEvents;
    9058:	68fb      	ldr	r3, [r7, #12]
    905a:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:306
}
    905c:	4618      	mov	r0, r3
    905e:	3714      	adds	r7, #20
    9060:	46bd      	mov	sp, r7
    9062:	f85d 7b04 	ldr.w	r7, [sp], #4
    9066:	4770      	bx	lr

00009068 <TU3_SetOffsetTicks>:
TU3_SetOffsetTicks():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:364
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU3_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU3_TValueType Ticks)
{
    9068:	b480      	push	{r7}
    906a:	b083      	sub	sp, #12
    906c:	af00      	add	r7, sp, #0
    906e:	6078      	str	r0, [r7, #4]
    9070:	4613      	mov	r3, r2
    9072:	460a      	mov	r2, r1
    9074:	70fa      	strb	r2, [r7, #3]
    9076:	803b      	strh	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:368
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  /* Parameter test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
    9078:	78fb      	ldrb	r3, [r7, #3]
    907a:	2b00      	cmp	r3, #0
    907c:	d001      	beq.n	9082 <TU3_SetOffsetTicks+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:369
    return ERR_PARAM_INDEX;            /* If yes then error */
    907e:	2382      	movs	r3, #130	; 0x82
    9080:	e00c      	b.n	909c <TU3_SetOffsetTicks+0x34>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:371
  }
  if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
    9082:	2300      	movs	r3, #0
    9084:	2b00      	cmp	r3, #0
    9086:	d001      	beq.n	908c <TU3_SetOffsetTicks+0x24>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:372
    return ERR_NOTAVAIL;               /* If not then error */
    9088:	2309      	movs	r3, #9
    908a:	e007      	b.n	909c <TU3_SetOffsetTicks+0x34>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:374
  }
  FTM_PDD_WriteChannelValueReg(FTM0_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
    908c:	4906      	ldr	r1, [pc, #24]	; (90a8 <TU3_SetOffsetTicks+0x40>)
    908e:	2300      	movs	r3, #0
    9090:	883a      	ldrh	r2, [r7, #0]
    9092:	3301      	adds	r3, #1
    9094:	00db      	lsls	r3, r3, #3
    9096:	440b      	add	r3, r1
    9098:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:375
  return ERR_OK;                       /* OK */
    909a:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:376
}
    909c:	4618      	mov	r0, r3
    909e:	370c      	adds	r7, #12
    90a0:	46bd      	mov	sp, r7
    90a2:	f85d 7b04 	ldr.w	r7, [sp], #4
    90a6:	4770      	bx	lr
    90a8:	40038000 	.word	0x40038000

000090ac <TU3_GetOffsetTicks>:
TU3_GetOffsetTicks():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:409
**                           ERR_SPEED - The component does not work in
**                           the active clock configuration
*/
/* ===================================================================*/
LDD_TError TU3_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU3_TValueType *TicksPtr)
{
    90ac:	b480      	push	{r7}
    90ae:	b085      	sub	sp, #20
    90b0:	af00      	add	r7, sp, #0
    90b2:	60f8      	str	r0, [r7, #12]
    90b4:	460b      	mov	r3, r1
    90b6:	607a      	str	r2, [r7, #4]
    90b8:	72fb      	strb	r3, [r7, #11]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:413
  (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning */
  /* Parameter test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
    90ba:	7afb      	ldrb	r3, [r7, #11]
    90bc:	2b00      	cmp	r3, #0
    90be:	d001      	beq.n	90c4 <TU3_GetOffsetTicks+0x18>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:414
    return ERR_PARAM_INDEX;            /* If yes then error */
    90c0:	2382      	movs	r3, #130	; 0x82
    90c2:	e00e      	b.n	90e2 <TU3_GetOffsetTicks+0x36>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:416
  }
  if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
    90c4:	2300      	movs	r3, #0
    90c6:	2b00      	cmp	r3, #0
    90c8:	d001      	beq.n	90ce <TU3_GetOffsetTicks+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:417
    return ERR_NOTAVAIL;               /* If not then error */
    90ca:	2309      	movs	r3, #9
    90cc:	e009      	b.n	90e2 <TU3_GetOffsetTicks+0x36>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:419
  }
  *TicksPtr = (TU3_TValueType)(FTM_PDD_ReadChannelValueReg(FTM0_BASE_PTR, ChannelDevice[ChannelIdx]));
    90ce:	4a08      	ldr	r2, [pc, #32]	; (90f0 <TU3_GetOffsetTicks+0x44>)
    90d0:	2300      	movs	r3, #0
    90d2:	3301      	adds	r3, #1
    90d4:	00db      	lsls	r3, r3, #3
    90d6:	4413      	add	r3, r2
    90d8:	689b      	ldr	r3, [r3, #8]
    90da:	b29a      	uxth	r2, r3
    90dc:	687b      	ldr	r3, [r7, #4]
    90de:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:420
  return ERR_OK;                       /* OK */
    90e0:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:421
}
    90e2:	4618      	mov	r0, r3
    90e4:	3714      	adds	r7, #20
    90e6:	46bd      	mov	sp, r7
    90e8:	f85d 7b04 	ldr.w	r7, [sp], #4
    90ec:	4770      	bx	lr
    90ee:	bf00      	nop
    90f0:	40038000 	.word	0x40038000

000090f4 <TU3_Interrupt>:
TU3_Interrupt():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:434
**         and eventually invokes event(s) of the component.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
PE_ISR(TU3_Interrupt)
{
    90f4:	4668      	mov	r0, sp
    90f6:	f020 0107 	bic.w	r1, r0, #7
    90fa:	468d      	mov	sp, r1
    90fc:	b581      	push	{r0, r7, lr}
    90fe:	b083      	sub	sp, #12
    9100:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:436
  /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
  TU3_TDeviceDataPtr DeviceDataPrv = INT_FTM0__DEFAULT_RTOS_ISRPARAM;
    9102:	4b1b      	ldr	r3, [pc, #108]	; (9170 <TU3_Interrupt+0x7c>)
    9104:	681b      	ldr	r3, [r3, #0]
    9106:	603b      	str	r3, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:438

  LDD_TEventMask State = 0U;
    9108:	2300      	movs	r3, #0
    910a:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:440

  if ((FTM_PDD_GetChannelInterruptFlag(FTM0_BASE_PTR, ChannelDevice[0])) != 0U) { /* Is the channel interrupt flag pending? */
    910c:	4a19      	ldr	r2, [pc, #100]	; (9174 <TU3_Interrupt+0x80>)
    910e:	2300      	movs	r3, #0
    9110:	3301      	adds	r3, #1
    9112:	00db      	lsls	r3, r3, #3
    9114:	4413      	add	r3, r2
    9116:	685b      	ldr	r3, [r3, #4]
    9118:	f003 0380 	and.w	r3, r3, #128	; 0x80
    911c:	2b00      	cmp	r3, #0
    911e:	d003      	beq.n	9128 <TU3_Interrupt+0x34>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:441
    State |= LDD_TIMERUNIT_ON_CHANNEL_0; /* and set mask */
    9120:	687b      	ldr	r3, [r7, #4]
    9122:	f043 0301 	orr.w	r3, r3, #1
    9126:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:443
  }
  State &= DeviceDataPrv->EnEvents;    /* Handle only enabled interrupts */
    9128:	683b      	ldr	r3, [r7, #0]
    912a:	681b      	ldr	r3, [r3, #0]
    912c:	687a      	ldr	r2, [r7, #4]
    912e:	4013      	ands	r3, r2
    9130:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:444
  if (State & LDD_TIMERUNIT_ON_CHANNEL_0) { /* Is the channel 0 interrupt flag pending? */
    9132:	687b      	ldr	r3, [r7, #4]
    9134:	f003 0301 	and.w	r3, r3, #1
    9138:	2b00      	cmp	r3, #0
    913a:	d013      	beq.n	9164 <TU3_Interrupt+0x70>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:445
    FTM_PDD_ClearChannelInterruptFlag(FTM0_BASE_PTR, ChannelDevice[0]); /* Clear flag */
    913c:	490d      	ldr	r1, [pc, #52]	; (9174 <TU3_Interrupt+0x80>)
    913e:	2300      	movs	r3, #0
    9140:	4618      	mov	r0, r3
    9142:	4a0c      	ldr	r2, [pc, #48]	; (9174 <TU3_Interrupt+0x80>)
    9144:	2300      	movs	r3, #0
    9146:	3301      	adds	r3, #1
    9148:	00db      	lsls	r3, r3, #3
    914a:	4413      	add	r3, r2
    914c:	685b      	ldr	r3, [r3, #4]
    914e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
    9152:	1c43      	adds	r3, r0, #1
    9154:	00db      	lsls	r3, r3, #3
    9156:	440b      	add	r3, r1
    9158:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:446
    TU3_OnChannel0(DeviceDataPrv->UserDataPtr); /* Invoke OnChannel0 event */
    915a:	683b      	ldr	r3, [r7, #0]
    915c:	689b      	ldr	r3, [r3, #8]
    915e:	4618      	mov	r0, r3
    9160:	f000 f8cc 	bl	92fc <TU3_OnChannel0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU3.c:448
  }
}
    9164:	370c      	adds	r7, #12
    9166:	46bd      	mov	sp, r7
    9168:	e8bd 4081 	ldmia.w	sp!, {r0, r7, lr}
    916c:	4685      	mov	sp, r0
    916e:	4770      	bx	lr
    9170:	200005a8 	.word	0x200005a8
    9174:	40038000 	.word	0x40038000

00009178 <TU5_Init>:
TU5_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:157
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TU5_Init(LDD_TUserData *UserDataPtr)
{
    9178:	b480      	push	{r7}
    917a:	b085      	sub	sp, #20
    917c:	af00      	add	r7, sp, #0
    917e:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:160
  TU5_TDeviceData *DeviceDataPrv;

  if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU5_ID] == NULL) {
    9180:	4b30      	ldr	r3, [pc, #192]	; (9244 <TU5_Init+0xcc>)
    9182:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    9184:	2b00      	cmp	r3, #0
    9186:	d149      	bne.n	921c <TU5_Init+0xa4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:163
    /* Allocate device structure */
    /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
    DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    9188:	4b2f      	ldr	r3, [pc, #188]	; (9248 <TU5_Init+0xd0>)
    918a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:164
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    918c:	68fb      	ldr	r3, [r7, #12]
    918e:	687a      	ldr	r2, [r7, #4]
    9190:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:165
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
    9192:	68fb      	ldr	r3, [r7, #12]
    9194:	2201      	movs	r2, #1
    9196:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:175
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  }
  /* SIM_SCGC3: FTM3=1 */
  SIM_SCGC3 |= SIM_SCGC3_FTM3_MASK;
    9198:	492c      	ldr	r1, [pc, #176]	; (924c <TU5_Init+0xd4>)
    919a:	4b2c      	ldr	r3, [pc, #176]	; (924c <TU5_Init+0xd4>)
    919c:	f503 5381 	add.w	r3, r3, #4128	; 0x1020
    91a0:	3310      	adds	r3, #16
    91a2:	681b      	ldr	r3, [r3, #0]
    91a4:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
    91a8:	f501 5381 	add.w	r3, r1, #4128	; 0x1020
    91ac:	3310      	adds	r3, #16
    91ae:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:177
  /* FTM3_MODE: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,FAULTIE=0,FAULTM=0,CAPTEST=0,PWMSYNC=0,WPDIS=1,INIT=0,FTMEN=0 */
  FTM3_MODE = (FTM_MODE_FAULTM(0x00) | FTM_MODE_WPDIS_MASK); /* Set up mode register */
    91b0:	4b27      	ldr	r3, [pc, #156]	; (9250 <TU5_Init+0xd8>)
    91b2:	2204      	movs	r2, #4
    91b4:	655a      	str	r2, [r3, #84]	; 0x54
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:179
  /* FTM3_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TOF=0,TOIE=0,CPWMS=0,CLKS=0,PS=0 */
  FTM3_SC = (FTM_SC_CLKS(0x00) | FTM_SC_PS(0x00)); /* Clear status and control register */
    91b6:	4b26      	ldr	r3, [pc, #152]	; (9250 <TU5_Init+0xd8>)
    91b8:	2200      	movs	r2, #0
    91ba:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:181
  /* FTM3_CNTIN: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,INIT=0 */
  FTM3_CNTIN = FTM_CNTIN_INIT(0x00);   /* Clear counter initial register */
    91bc:	4b24      	ldr	r3, [pc, #144]	; (9250 <TU5_Init+0xd8>)
    91be:	2200      	movs	r2, #0
    91c0:	64da      	str	r2, [r3, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:183
  /* FTM3_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNT=0 */
  FTM3_CNT = FTM_CNT_COUNT(0x00);      /* Reset counter register */
    91c2:	4b23      	ldr	r3, [pc, #140]	; (9250 <TU5_Init+0xd8>)
    91c4:	2200      	movs	r2, #0
    91c6:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:185
  /* FTM3_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C0SC = 0x00U;                   /* Clear channel status and control register */
    91c8:	4b21      	ldr	r3, [pc, #132]	; (9250 <TU5_Init+0xd8>)
    91ca:	2200      	movs	r2, #0
    91cc:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:187
  /* FTM3_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C1SC = 0x00U;                   /* Clear channel status and control register */
    91ce:	4b20      	ldr	r3, [pc, #128]	; (9250 <TU5_Init+0xd8>)
    91d0:	2200      	movs	r2, #0
    91d2:	615a      	str	r2, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:189
  /* FTM3_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C2SC = 0x00U;                   /* Clear channel status and control register */
    91d4:	4b1e      	ldr	r3, [pc, #120]	; (9250 <TU5_Init+0xd8>)
    91d6:	2200      	movs	r2, #0
    91d8:	61da      	str	r2, [r3, #28]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:191
  /* FTM3_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C3SC = 0x00U;                   /* Clear channel status and control register */
    91da:	4b1d      	ldr	r3, [pc, #116]	; (9250 <TU5_Init+0xd8>)
    91dc:	2200      	movs	r2, #0
    91de:	625a      	str	r2, [r3, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:193
  /* FTM3_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C4SC = 0x00U;                   /* Clear channel status and control register */
    91e0:	4b1b      	ldr	r3, [pc, #108]	; (9250 <TU5_Init+0xd8>)
    91e2:	2200      	movs	r2, #0
    91e4:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:195
  /* FTM3_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C5SC = 0x00U;                   /* Clear channel status and control register */
    91e6:	4b1a      	ldr	r3, [pc, #104]	; (9250 <TU5_Init+0xd8>)
    91e8:	2200      	movs	r2, #0
    91ea:	635a      	str	r2, [r3, #52]	; 0x34
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:197
  /* FTM3_C6SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C6SC = 0x00U;                   /* Clear channel status and control register */
    91ec:	4b18      	ldr	r3, [pc, #96]	; (9250 <TU5_Init+0xd8>)
    91ee:	2200      	movs	r2, #0
    91f0:	63da      	str	r2, [r3, #60]	; 0x3c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:199
  /* FTM3_C7SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=0,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C7SC = 0x00U;                   /* Clear channel status and control register */
    91f2:	4b17      	ldr	r3, [pc, #92]	; (9250 <TU5_Init+0xd8>)
    91f4:	2200      	movs	r2, #0
    91f6:	645a      	str	r2, [r3, #68]	; 0x44
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:201
  /* FTM3_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=0xFFFF */
  FTM3_MOD = FTM_MOD_MOD(0xFFFF);      /* Set up modulo register */
    91f8:	4b15      	ldr	r3, [pc, #84]	; (9250 <TU5_Init+0xd8>)
    91fa:	f64f 72ff 	movw	r2, #65535	; 0xffff
    91fe:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:203
  /* FTM3_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CHF=0,CHIE=0,MSB=0,MSA=1,ELSB=0,ELSA=0,??=0,DMA=0 */
  FTM3_C0SC = FTM_CnSC_MSA_MASK;       /* Set up channel status and control register */
    9200:	4b13      	ldr	r3, [pc, #76]	; (9250 <TU5_Init+0xd8>)
    9202:	2210      	movs	r2, #16
    9204:	60da      	str	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:205
  /* FTM3_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=0 */
  FTM3_C0V = FTM_CnV_VAL(0x00);        /* Set up channel value register */
    9206:	4b12      	ldr	r3, [pc, #72]	; (9250 <TU5_Init+0xd8>)
    9208:	2200      	movs	r2, #0
    920a:	611a      	str	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:207
  /* FTM3_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TOF=0,TOIE=0,CPWMS=0,CLKS=1,PS=7 */
  FTM3_SC = (FTM_SC_CLKS(0x01) | FTM_SC_PS(0x07)); /* Set up status and control register */
    920c:	4b10      	ldr	r3, [pc, #64]	; (9250 <TU5_Init+0xd8>)
    920e:	220f      	movs	r2, #15
    9210:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:209
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU5_ID,DeviceDataPrv);
    9212:	4b0c      	ldr	r3, [pc, #48]	; (9244 <TU5_Init+0xcc>)
    9214:	68fa      	ldr	r2, [r7, #12]
    9216:	64da      	str	r2, [r3, #76]	; 0x4c
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:210
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    9218:	68fb      	ldr	r3, [r7, #12]
    921a:	e00c      	b.n	9236 <TU5_Init+0xbe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:169
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  }
  else {
    /* Memory is already allocated */
    DeviceDataPrv = (TU5_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU5_ID];
    921c:	4b09      	ldr	r3, [pc, #36]	; (9244 <TU5_Init+0xcc>)
    921e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    9220:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:170
    DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    9222:	68fb      	ldr	r3, [r7, #12]
    9224:	687a      	ldr	r2, [r7, #4]
    9226:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:171
    DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
    9228:	68fb      	ldr	r3, [r7, #12]
    922a:	781b      	ldrb	r3, [r3, #0]
    922c:	3301      	adds	r3, #1
    922e:	b2da      	uxtb	r2, r3
    9230:	68fb      	ldr	r3, [r7, #12]
    9232:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:172
    return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    9234:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TU5.c:211
  /* FTM3_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,TOF=0,TOIE=0,CPWMS=0,CLKS=1,PS=7 */
  FTM3_SC = (FTM_SC_CLKS(0x01) | FTM_SC_PS(0x07)); /* Set up status and control register */
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU5_ID,DeviceDataPrv);
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
}
    9236:	4618      	mov	r0, r3
    9238:	3714      	adds	r7, #20
    923a:	46bd      	mov	sp, r7
    923c:	f85d 7b04 	ldr.w	r7, [sp], #4
    9240:	4770      	bx	lr
    9242:	bf00      	nop
    9244:	20000480 	.word	0x20000480
    9248:	200005ac 	.word	0x200005ac
    924c:	40047000 	.word	0x40047000
    9250:	400b9000 	.word	0x400b9000

00009254 <TimerIntLdd1_Init>:
TimerIntLdd1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:146
**                         - Pointer to the dynamically allocated private
**                           structure or NULL if there was an error.
*/
/* ===================================================================*/
LDD_TDeviceData* TimerIntLdd1_Init(LDD_TUserData *UserDataPtr)
{
    9254:	b590      	push	{r4, r7, lr}
    9256:	b085      	sub	sp, #20
    9258:	af00      	add	r7, sp, #0
    925a:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:150
  /* Allocate device structure */
  TimerIntLdd1_TDeviceData *DeviceDataPrv;
  /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer to the static object */
  DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
    925c:	4b19      	ldr	r3, [pc, #100]	; (92c4 <TimerIntLdd1_Init+0x70>)
    925e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:151
  DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
    9260:	68fb      	ldr	r3, [r7, #12]
    9262:	687a      	ldr	r2, [r7, #4]
    9264:	611a      	str	r2, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:152
  DeviceDataPrv->EnEvents = 0x00u;     /* Initial event mask */
    9266:	68fb      	ldr	r3, [r7, #12]
    9268:	2200      	movs	r2, #0
    926a:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:153
  DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
    926c:	68fb      	ldr	r3, [r7, #12]
    926e:	2201      	movs	r2, #1
    9270:	711a      	strb	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:154
  DeviceDataPrv->CmpVal = 0xEAU;       /* Initial value periodically addded to compare register */
    9272:	68fb      	ldr	r3, [r7, #12]
    9274:	22ea      	movs	r2, #234	; 0xea
    9276:	819a      	strh	r2, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:156
  /* Registration of the device structure */
  PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID,DeviceDataPrv);
    9278:	4b13      	ldr	r3, [pc, #76]	; (92c8 <TimerIntLdd1_Init+0x74>)
    927a:	68fa      	ldr	r2, [r7, #12]
    927c:	655a      	str	r2, [r3, #84]	; 0x54
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:157
  DeviceDataPrv->LinkedDeviceDataPtr = TU3_Init((LDD_TUserData *)NULL);
    927e:	2000      	movs	r0, #0
    9280:	f7ff fdf0 	bl	8e64 <TU3_Init>
    9284:	4602      	mov	r2, r0
    9286:	68fb      	ldr	r3, [r7, #12]
    9288:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:158
  if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful? */
    928a:	68fb      	ldr	r3, [r7, #12]
    928c:	681b      	ldr	r3, [r3, #0]
    928e:	2b00      	cmp	r3, #0
    9290:	d104      	bne.n	929c <TimerIntLdd1_Init+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:160
    /* Unregistration of the device structure */
    PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TimerIntLdd1_ID);
    9292:	4b0d      	ldr	r3, [pc, #52]	; (92c8 <TimerIntLdd1_Init+0x74>)
    9294:	2200      	movs	r2, #0
    9296:	655a      	str	r2, [r3, #84]	; 0x54
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:163
    /* Deallocation of the device structure */
    /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deallocation code is generated */
    return NULL;                       /* If so, then the TimerInt initialization is also unsuccessful */
    9298:	2300      	movs	r3, #0
    929a:	e00e      	b.n	92ba <TimerIntLdd1_Init+0x66>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:165
  }
  (void)TU3_SetEventMask(DeviceDataPrv->LinkedDeviceDataPtr, TU3_GetEventMask(DeviceDataPrv->LinkedDeviceDataPtr) | LDD_TIMERUNIT_ON_CHANNEL_0); /* Enable TimerUnit event */
    929c:	68fb      	ldr	r3, [r7, #12]
    929e:	681c      	ldr	r4, [r3, #0]
    92a0:	68fb      	ldr	r3, [r7, #12]
    92a2:	681b      	ldr	r3, [r3, #0]
    92a4:	4618      	mov	r0, r3
    92a6:	f7ff fed1 	bl	904c <TU3_GetEventMask>
    92aa:	4603      	mov	r3, r0
    92ac:	f043 0301 	orr.w	r3, r3, #1
    92b0:	4620      	mov	r0, r4
    92b2:	4619      	mov	r1, r3
    92b4:	f7ff fe58 	bl	8f68 <TU3_SetEventMask>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:166
  return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
    92b8:	68fb      	ldr	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:167
}
    92ba:	4618      	mov	r0, r3
    92bc:	3714      	adds	r7, #20
    92be:	46bd      	mov	sp, r7
    92c0:	bd90      	pop	{r4, r7, pc}
    92c2:	bf00      	nop
    92c4:	200005b4 	.word	0x200005b4
    92c8:	20000480 	.word	0x20000480

000092cc <TimerIntLdd1_SetEventMask>:
TimerIntLdd1_SetEventMask():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:196
**                           the active clock configuration
**                           ERR_PARAM_MASK - Event mask is not valid
*/
/* ===================================================================*/
LDD_TError TimerIntLdd1_SetEventMask(LDD_TDeviceData *DeviceDataPtr, LDD_TEventMask EventMask)
{
    92cc:	b480      	push	{r7}
    92ce:	b085      	sub	sp, #20
    92d0:	af00      	add	r7, sp, #0
    92d2:	6078      	str	r0, [r7, #4]
    92d4:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:197
  TimerIntLdd1_TDeviceData *DeviceDataPrv = (TimerIntLdd1_TDeviceData *)DeviceDataPtr;
    92d6:	687b      	ldr	r3, [r7, #4]
    92d8:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:201

  /* Event mask test - this test can be disabled by setting the "Ignore range checking"
     property to the "yes" value in the "Configuration inspector" */
  if ((EventMask & ((LDD_TEventMask)~AVAILABLE_EVENTS_MASK)) != 0U) {
    92da:	683b      	ldr	r3, [r7, #0]
    92dc:	f023 0301 	bic.w	r3, r3, #1
    92e0:	2b00      	cmp	r3, #0
    92e2:	d001      	beq.n	92e8 <TimerIntLdd1_SetEventMask+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:202
    return ERR_PARAM_MASK;
    92e4:	2380      	movs	r3, #128	; 0x80
    92e6:	e003      	b.n	92f0 <TimerIntLdd1_SetEventMask+0x24>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:204
  }
  DeviceDataPrv->EnEvents = EventMask;
    92e8:	68fb      	ldr	r3, [r7, #12]
    92ea:	683a      	ldr	r2, [r7, #0]
    92ec:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:205
  return ERR_OK;
    92ee:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:206
}
    92f0:	4618      	mov	r0, r3
    92f2:	3714      	adds	r7, #20
    92f4:	46bd      	mov	sp, r7
    92f6:	f85d 7b04 	ldr.w	r7, [sp], #4
    92fa:	4770      	bx	lr

000092fc <TU3_OnChannel0>:
TU3_OnChannel0():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:219
**         eventually invokes event TimerIntLdd1_OnInterrupt.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void TU3_OnChannel0(LDD_TUserData *UserDataPtr)
{
    92fc:	b580      	push	{r7, lr}
    92fe:	b084      	sub	sp, #16
    9300:	af00      	add	r7, sp, #0
    9302:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:220
  TimerIntLdd1_TDeviceData *DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TimerIntLdd1_ID];
    9304:	4b13      	ldr	r3, [pc, #76]	; (9354 <TU3_OnChannel0+0x58>)
    9306:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    9308:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:224
  uint16_t Ticks;

  (void)UserDataPtr;                   /* Parameter is not used, suppress unused argument warning */
  (void)TU3_GetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, &Ticks);
    930a:	68fb      	ldr	r3, [r7, #12]
    930c:	681a      	ldr	r2, [r3, #0]
    930e:	f107 030a 	add.w	r3, r7, #10
    9312:	4610      	mov	r0, r2
    9314:	2100      	movs	r1, #0
    9316:	461a      	mov	r2, r3
    9318:	f7ff fec8 	bl	90ac <TU3_GetOffsetTicks>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:225
  Ticks += DeviceDataPrv->CmpVal;
    931c:	68fb      	ldr	r3, [r7, #12]
    931e:	899a      	ldrh	r2, [r3, #12]
    9320:	897b      	ldrh	r3, [r7, #10]
    9322:	4413      	add	r3, r2
    9324:	b29b      	uxth	r3, r3
    9326:	817b      	strh	r3, [r7, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:226
  (void)TU3_SetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, Ticks);
    9328:	68fb      	ldr	r3, [r7, #12]
    932a:	681a      	ldr	r2, [r3, #0]
    932c:	897b      	ldrh	r3, [r7, #10]
    932e:	4610      	mov	r0, r2
    9330:	2100      	movs	r1, #0
    9332:	461a      	mov	r2, r3
    9334:	f7ff fe98 	bl	9068 <TU3_SetOffsetTicks>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:227
  if (DeviceDataPrv->EnEvents & LDD_TIMERINT_ON_INTERRUPT) { /* Is the event enabled? */
    9338:	68fb      	ldr	r3, [r7, #12]
    933a:	689b      	ldr	r3, [r3, #8]
    933c:	f003 0301 	and.w	r3, r3, #1
    9340:	2b00      	cmp	r3, #0
    9342:	d004      	beq.n	934e <TU3_OnChannel0+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:228
    TimerIntLdd1_OnInterrupt(DeviceDataPrv->UserDataPtr); /* Invoke OnInterrupt event */
    9344:	68fb      	ldr	r3, [r7, #12]
    9346:	691b      	ldr	r3, [r3, #16]
    9348:	4618      	mov	r0, r3
    934a:	f7ff f8c9 	bl	84e0 <TimerIntLdd1_OnInterrupt>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/TimerIntLdd1.c:230
  }
}
    934e:	3710      	adds	r7, #16
    9350:	46bd      	mov	sp, r7
    9352:	bd80      	pop	{r7, pc}
    9354:	20000480 	.word	0x20000480

00009358 <UTIL1_strcpy>:
UTIL1_strcpy():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:160
  \param[in,out] dst Start of string buffer, where to append the number string
  \param[in] dstSize The size of the buffer, including the zero byte
  \param[in] src The source string to copy
*/
void UTIL1_strcpy(uint8_t *dst, size_t dstSize, const unsigned char *src)
{
    9358:	b480      	push	{r7}
    935a:	b085      	sub	sp, #20
    935c:	af00      	add	r7, sp, #0
    935e:	60f8      	str	r0, [r7, #12]
    9360:	60b9      	str	r1, [r7, #8]
    9362:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:161
  dstSize--; /* for zero byte */
    9364:	68bb      	ldr	r3, [r7, #8]
    9366:	3b01      	subs	r3, #1
    9368:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:162
  while (dstSize > 0 && *src != '\0') {
    936a:	e00a      	b.n	9382 <UTIL1_strcpy+0x2a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:163
    *dst++ = *src++;
    936c:	68fb      	ldr	r3, [r7, #12]
    936e:	1c5a      	adds	r2, r3, #1
    9370:	60fa      	str	r2, [r7, #12]
    9372:	687a      	ldr	r2, [r7, #4]
    9374:	1c51      	adds	r1, r2, #1
    9376:	6079      	str	r1, [r7, #4]
    9378:	7812      	ldrb	r2, [r2, #0]
    937a:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:164
    dstSize--;
    937c:	68bb      	ldr	r3, [r7, #8]
    937e:	3b01      	subs	r3, #1
    9380:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:162 (discriminator 1)
  \param[in] src The source string to copy
*/
void UTIL1_strcpy(uint8_t *dst, size_t dstSize, const unsigned char *src)
{
  dstSize--; /* for zero byte */
  while (dstSize > 0 && *src != '\0') {
    9382:	68bb      	ldr	r3, [r7, #8]
    9384:	2b00      	cmp	r3, #0
    9386:	d003      	beq.n	9390 <UTIL1_strcpy+0x38>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:162 (discriminator 2)
    9388:	687b      	ldr	r3, [r7, #4]
    938a:	781b      	ldrb	r3, [r3, #0]
    938c:	2b00      	cmp	r3, #0
    938e:	d1ed      	bne.n	936c <UTIL1_strcpy+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:166
    *dst++ = *src++;
    dstSize--;
  }
  *dst = '\0';
    9390:	68fb      	ldr	r3, [r7, #12]
    9392:	2200      	movs	r2, #0
    9394:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:167
}
    9396:	3714      	adds	r7, #20
    9398:	46bd      	mov	sp, r7
    939a:	f85d 7b04 	ldr.w	r7, [sp], #4
    939e:	4770      	bx	lr

000093a0 <UTIL1_strcat>:
UTIL1_strcat():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:193
  \param[in,out] dst Start of string buffer, where to append the number string
  \param[in] dstSize The size of the buffer, including the zero byte
  \param[in] src The source string to add
  */
void UTIL1_strcat(uint8_t *dst, size_t dstSize, const unsigned char *src)
{
    93a0:	b480      	push	{r7}
    93a2:	b085      	sub	sp, #20
    93a4:	af00      	add	r7, sp, #0
    93a6:	60f8      	str	r0, [r7, #12]
    93a8:	60b9      	str	r1, [r7, #8]
    93aa:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:194
  dstSize--; /* for zero byte */
    93ac:	68bb      	ldr	r3, [r7, #8]
    93ae:	3b01      	subs	r3, #1
    93b0:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:196
  /* point to the end of the source */
  while (dstSize > 0 && *dst != '\0') {
    93b2:	e005      	b.n	93c0 <UTIL1_strcat+0x20>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:197
    dst++;
    93b4:	68fb      	ldr	r3, [r7, #12]
    93b6:	3301      	adds	r3, #1
    93b8:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:198
    dstSize--;
    93ba:	68bb      	ldr	r3, [r7, #8]
    93bc:	3b01      	subs	r3, #1
    93be:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:196 (discriminator 1)
  */
void UTIL1_strcat(uint8_t *dst, size_t dstSize, const unsigned char *src)
{
  dstSize--; /* for zero byte */
  /* point to the end of the source */
  while (dstSize > 0 && *dst != '\0') {
    93c0:	68bb      	ldr	r3, [r7, #8]
    93c2:	2b00      	cmp	r3, #0
    93c4:	d003      	beq.n	93ce <UTIL1_strcat+0x2e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:196 (discriminator 2)
    93c6:	68fb      	ldr	r3, [r7, #12]
    93c8:	781b      	ldrb	r3, [r3, #0]
    93ca:	2b00      	cmp	r3, #0
    93cc:	d1f2      	bne.n	93b4 <UTIL1_strcat+0x14>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:201
    dst++;
    dstSize--;
  }
  /* copy the src in the destination */
  while (dstSize > 0 && *src != '\0') {
    93ce:	e00a      	b.n	93e6 <UTIL1_strcat+0x46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:202
    *dst++ = *src++;
    93d0:	68fb      	ldr	r3, [r7, #12]
    93d2:	1c5a      	adds	r2, r3, #1
    93d4:	60fa      	str	r2, [r7, #12]
    93d6:	687a      	ldr	r2, [r7, #4]
    93d8:	1c51      	adds	r1, r2, #1
    93da:	6079      	str	r1, [r7, #4]
    93dc:	7812      	ldrb	r2, [r2, #0]
    93de:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:203
    dstSize--;
    93e0:	68bb      	ldr	r3, [r7, #8]
    93e2:	3b01      	subs	r3, #1
    93e4:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:201 (discriminator 1)
  while (dstSize > 0 && *dst != '\0') {
    dst++;
    dstSize--;
  }
  /* copy the src in the destination */
  while (dstSize > 0 && *src != '\0') {
    93e6:	68bb      	ldr	r3, [r7, #8]
    93e8:	2b00      	cmp	r3, #0
    93ea:	d003      	beq.n	93f4 <UTIL1_strcat+0x54>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:201 (discriminator 2)
    93ec:	687b      	ldr	r3, [r7, #4]
    93ee:	781b      	ldrb	r3, [r3, #0]
    93f0:	2b00      	cmp	r3, #0
    93f2:	d1ed      	bne.n	93d0 <UTIL1_strcat+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:206
    *dst++ = *src++;
    dstSize--;
  }
  /* terminate the string */
  *dst = '\0';
    93f4:	68fb      	ldr	r3, [r7, #12]
    93f6:	2200      	movs	r2, #0
    93f8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:207
}
    93fa:	3714      	adds	r7, #20
    93fc:	46bd      	mov	sp, r7
    93fe:	f85d 7b04 	ldr.w	r7, [sp], #4
    9402:	4770      	bx	lr

00009404 <UTIL1_chcat>:
UTIL1_chcat():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:225
**         ch              - character to append
**     Returns     : Nothing
** ===================================================================
*/
void UTIL1_chcat(uint8_t *dst, size_t dstSize, uint8_t ch)
{
    9404:	b480      	push	{r7}
    9406:	b085      	sub	sp, #20
    9408:	af00      	add	r7, sp, #0
    940a:	60f8      	str	r0, [r7, #12]
    940c:	60b9      	str	r1, [r7, #8]
    940e:	4613      	mov	r3, r2
    9410:	71fb      	strb	r3, [r7, #7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:226
  dstSize--; /* for zero byte */
    9412:	68bb      	ldr	r3, [r7, #8]
    9414:	3b01      	subs	r3, #1
    9416:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:228
  /* point to the end of the source */
  while (dstSize > 0 && *dst != '\0') {
    9418:	e005      	b.n	9426 <UTIL1_chcat+0x22>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:229
    dst++;
    941a:	68fb      	ldr	r3, [r7, #12]
    941c:	3301      	adds	r3, #1
    941e:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:230
    dstSize--;
    9420:	68bb      	ldr	r3, [r7, #8]
    9422:	3b01      	subs	r3, #1
    9424:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:228 (discriminator 1)
*/
void UTIL1_chcat(uint8_t *dst, size_t dstSize, uint8_t ch)
{
  dstSize--; /* for zero byte */
  /* point to the end of the source */
  while (dstSize > 0 && *dst != '\0') {
    9426:	68bb      	ldr	r3, [r7, #8]
    9428:	2b00      	cmp	r3, #0
    942a:	d003      	beq.n	9434 <UTIL1_chcat+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:228 (discriminator 2)
    942c:	68fb      	ldr	r3, [r7, #12]
    942e:	781b      	ldrb	r3, [r3, #0]
    9430:	2b00      	cmp	r3, #0
    9432:	d1f2      	bne.n	941a <UTIL1_chcat+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:233
    dst++;
    dstSize--;
  }
  /* copy the ch in the destination */
  if (dstSize > 0) {
    9434:	68bb      	ldr	r3, [r7, #8]
    9436:	2b00      	cmp	r3, #0
    9438:	d004      	beq.n	9444 <UTIL1_chcat+0x40>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:234
    *dst++ = ch;
    943a:	68fb      	ldr	r3, [r7, #12]
    943c:	1c5a      	adds	r2, r3, #1
    943e:	60fa      	str	r2, [r7, #12]
    9440:	79fa      	ldrb	r2, [r7, #7]
    9442:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:237
  }
  /* terminate the string */
  *dst = '\0';
    9444:	68fb      	ldr	r3, [r7, #12]
    9446:	2200      	movs	r2, #0
    9448:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:238
}
    944a:	3714      	adds	r7, #20
    944c:	46bd      	mov	sp, r7
    944e:	f85d 7b04 	ldr.w	r7, [sp], #4
    9452:	4770      	bx	lr

00009454 <ShiftRightAndFill>:
ShiftRightAndFill():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:400
**         on the left side with a pattern
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
static void ShiftRightAndFill(uint8_t *dst, uint8_t fill, uint8_t nofFill)
{
    9454:	b480      	push	{r7}
    9456:	b085      	sub	sp, #20
    9458:	af00      	add	r7, sp, #0
    945a:	6078      	str	r0, [r7, #4]
    945c:	4613      	mov	r3, r2
    945e:	460a      	mov	r2, r1
    9460:	70fa      	strb	r2, [r7, #3]
    9462:	70bb      	strb	r3, [r7, #2]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:403
  signed char i, j;

  j = 0;
    9464:	2300      	movs	r3, #0
    9466:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:404
  while(dst[j] != '\0') {
    9468:	e002      	b.n	9470 <ShiftRightAndFill+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:405
    j++;
    946a:	7bbb      	ldrb	r3, [r7, #14]
    946c:	3301      	adds	r3, #1
    946e:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:404 (discriminator 1)
static void ShiftRightAndFill(uint8_t *dst, uint8_t fill, uint8_t nofFill)
{
  signed char i, j;

  j = 0;
  while(dst[j] != '\0') {
    9470:	f997 300e 	ldrsb.w	r3, [r7, #14]
    9474:	687a      	ldr	r2, [r7, #4]
    9476:	4413      	add	r3, r2
    9478:	781b      	ldrb	r3, [r3, #0]
    947a:	2b00      	cmp	r3, #0
    947c:	d1f5      	bne.n	946a <ShiftRightAndFill+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:407
    j++;
  }
  i = (signed char)nofFill;
    947e:	78bb      	ldrb	r3, [r7, #2]
    9480:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:408
  if (i==j) {
    9482:	f997 200f 	ldrsb.w	r2, [r7, #15]
    9486:	f997 300e 	ldrsb.w	r3, [r7, #14]
    948a:	429a      	cmp	r2, r3
    948c:	d028      	beq.n	94e0 <ShiftRightAndFill+0x8c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:410
    /* nothing to do, we are done */
  } else if (i>j) {
    948e:	f997 200f 	ldrsb.w	r2, [r7, #15]
    9492:	f997 300e 	ldrsb.w	r3, [r7, #14]
    9496:	429a      	cmp	r2, r3
    9498:	dd22      	ble.n	94e0 <ShiftRightAndFill+0x8c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:411
    while (j>=0) {
    949a:	e00f      	b.n	94bc <ShiftRightAndFill+0x68>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:412
      dst[i] = dst[j];
    949c:	f997 300f 	ldrsb.w	r3, [r7, #15]
    94a0:	687a      	ldr	r2, [r7, #4]
    94a2:	4413      	add	r3, r2
    94a4:	f997 200e 	ldrsb.w	r2, [r7, #14]
    94a8:	6879      	ldr	r1, [r7, #4]
    94aa:	440a      	add	r2, r1
    94ac:	7812      	ldrb	r2, [r2, #0]
    94ae:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:413
      i--; j--;
    94b0:	7bfb      	ldrb	r3, [r7, #15]
    94b2:	3b01      	subs	r3, #1
    94b4:	73fb      	strb	r3, [r7, #15]
    94b6:	7bbb      	ldrb	r3, [r7, #14]
    94b8:	3b01      	subs	r3, #1
    94ba:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:411 (discriminator 1)
  }
  i = (signed char)nofFill;
  if (i==j) {
    /* nothing to do, we are done */
  } else if (i>j) {
    while (j>=0) {
    94bc:	f997 300e 	ldrsb.w	r3, [r7, #14]
    94c0:	2b00      	cmp	r3, #0
    94c2:	daeb      	bge.n	949c <ShiftRightAndFill+0x48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:415
      dst[i] = dst[j];
      i--; j--;
    }
    while(i>=0) {
    94c4:	e008      	b.n	94d8 <ShiftRightAndFill+0x84>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:416
      dst[i] = fill;
    94c6:	f997 300f 	ldrsb.w	r3, [r7, #15]
    94ca:	687a      	ldr	r2, [r7, #4]
    94cc:	4413      	add	r3, r2
    94ce:	78fa      	ldrb	r2, [r7, #3]
    94d0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:417
      i--;
    94d2:	7bfb      	ldrb	r3, [r7, #15]
    94d4:	3b01      	subs	r3, #1
    94d6:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:415 (discriminator 1)
  } else if (i>j) {
    while (j>=0) {
      dst[i] = dst[j];
      i--; j--;
    }
    while(i>=0) {
    94d8:	f997 300f 	ldrsb.w	r3, [r7, #15]
    94dc:	2b00      	cmp	r3, #0
    94de:	daf2      	bge.n	94c6 <ShiftRightAndFill+0x72>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:422
      i--;
    }
  } else {
    /* hmmm, not enough space, return what we have, do nothing */
  }
}
    94e0:	3714      	adds	r7, #20
    94e2:	46bd      	mov	sp, r7
    94e4:	f85d 7b04 	ldr.w	r7, [sp], #4
    94e8:	4770      	bx	lr
    94ea:	bf00      	nop

000094ec <UTIL1_Num32uToStrFormatted>:
UTIL1_Num32uToStrFormatted():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:518
  \param[in] val The 32bit unsigned number to add
  \param[in] fill Fill character, typically ' ' (like for "%2d" or '0' (for "%02d")
  \param[in] nofFill Size for the format (right aligned) string, e.g. '2' for "%2d"
*/
void UTIL1_Num32uToStrFormatted(uint8_t *dst, size_t dstSize, uint32_t val, char fill, uint8_t nofFill)
{
    94ec:	b580      	push	{r7, lr}
    94ee:	b084      	sub	sp, #16
    94f0:	af00      	add	r7, sp, #0
    94f2:	60f8      	str	r0, [r7, #12]
    94f4:	60b9      	str	r1, [r7, #8]
    94f6:	607a      	str	r2, [r7, #4]
    94f8:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:519
  UTIL1_Num32uToStr(dst, dstSize, val);
    94fa:	68f8      	ldr	r0, [r7, #12]
    94fc:	68b9      	ldr	r1, [r7, #8]
    94fe:	687a      	ldr	r2, [r7, #4]
    9500:	f000 f8d6 	bl	96b0 <UTIL1_Num32uToStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:520
  ShiftRightAndFill(dst, fill, nofFill);
    9504:	78fa      	ldrb	r2, [r7, #3]
    9506:	7e3b      	ldrb	r3, [r7, #24]
    9508:	68f8      	ldr	r0, [r7, #12]
    950a:	4611      	mov	r1, r2
    950c:	461a      	mov	r2, r3
    950e:	f7ff ffa1 	bl	9454 <ShiftRightAndFill>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:521
}
    9512:	3710      	adds	r7, #16
    9514:	46bd      	mov	sp, r7
    9516:	bd80      	pop	{r7, pc}

00009518 <UTIL1_strcatNum32uFormatted>:
UTIL1_strcatNum32uFormatted():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:777
  \param[in] val The 32bit unsigned number to add
  \param[in] fill Fill character
  \param[in] nofFill Number of fill characters
  */
void UTIL1_strcatNum32uFormatted(uint8_t *dst, size_t dstSize, uint32_t val, char fill, uint8_t nofFill)
{
    9518:	b580      	push	{r7, lr}
    951a:	b08a      	sub	sp, #40	; 0x28
    951c:	af02      	add	r7, sp, #8
    951e:	60f8      	str	r0, [r7, #12]
    9520:	60b9      	str	r1, [r7, #8]
    9522:	607a      	str	r2, [r7, #4]
    9524:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:780
  unsigned char buf[sizeof("4294967295")]; /* maximum buffer size we need */

  UTIL1_Num32uToStrFormatted(buf, dstSize, val, fill, nofFill);
    9526:	f107 0214 	add.w	r2, r7, #20
    952a:	f997 3003 	ldrsb.w	r3, [r7, #3]
    952e:	f897 1028 	ldrb.w	r1, [r7, #40]	; 0x28
    9532:	9100      	str	r1, [sp, #0]
    9534:	4610      	mov	r0, r2
    9536:	68b9      	ldr	r1, [r7, #8]
    9538:	687a      	ldr	r2, [r7, #4]
    953a:	f7ff ffd7 	bl	94ec <UTIL1_Num32uToStrFormatted>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:781
  UTIL1_strcat(dst, dstSize, buf);
    953e:	f107 0314 	add.w	r3, r7, #20
    9542:	68f8      	ldr	r0, [r7, #12]
    9544:	68b9      	ldr	r1, [r7, #8]
    9546:	461a      	mov	r2, r3
    9548:	f7ff ff2a 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:782
}
    954c:	3720      	adds	r7, #32
    954e:	46bd      	mov	sp, r7
    9550:	bd80      	pop	{r7, pc}
    9552:	bf00      	nop

00009554 <UTIL1_strcatNum32s>:
UTIL1_strcatNum32s():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:991
  \param[in,out] dst Start of string buffer, where to append the number string
  \param[in] dstSize The size of the buffer, including the zero byte
  \param[in] val The 32bit number to add
  */
void UTIL1_strcatNum32s(uint8_t *dst, size_t dstSize, int32_t val)
{
    9554:	b580      	push	{r7, lr}
    9556:	b088      	sub	sp, #32
    9558:	af00      	add	r7, sp, #0
    955a:	60f8      	str	r0, [r7, #12]
    955c:	60b9      	str	r1, [r7, #8]
    955e:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:994
  unsigned char buf[sizeof("-4294967295")]; /* maximum buffer size we need */

  UTIL1_Num32sToStr(buf, sizeof(buf), val);
    9560:	f107 0314 	add.w	r3, r7, #20
    9564:	4618      	mov	r0, r3
    9566:	210c      	movs	r1, #12
    9568:	687a      	ldr	r2, [r7, #4]
    956a:	f000 f80b 	bl	9584 <UTIL1_Num32sToStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:995
  UTIL1_strcat(dst, dstSize, buf);
    956e:	f107 0314 	add.w	r3, r7, #20
    9572:	68f8      	ldr	r0, [r7, #12]
    9574:	68b9      	ldr	r1, [r7, #8]
    9576:	461a      	mov	r2, r3
    9578:	f7ff ff12 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:996
}
    957c:	3720      	adds	r7, #32
    957e:	46bd      	mov	sp, r7
    9580:	bd80      	pop	{r7, pc}
    9582:	bf00      	nop

00009584 <UTIL1_Num32sToStr>:
UTIL1_Num32sToStr():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1049
  \param[in,out] dst String buffer to store the number.
  \param[in] dstSize Size of the destination buffer in uint8_ts.
  \param[in] val 32bit signed number to convert.
 */
void UTIL1_Num32sToStr(uint8_t *dst, size_t dstSize, int32_t val)
{
    9584:	b580      	push	{r7, lr}
    9586:	b088      	sub	sp, #32
    9588:	af00      	add	r7, sp, #0
    958a:	60f8      	str	r0, [r7, #12]
    958c:	60b9      	str	r1, [r7, #8]
    958e:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1050
  unsigned char *ptr = ((unsigned char *)dst);
    9590:	68fb      	ldr	r3, [r7, #12]
    9592:	61bb      	str	r3, [r7, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1051
  unsigned char i=0, j;
    9594:	2300      	movs	r3, #0
    9596:	77fb      	strb	r3, [r7, #31]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1053
  unsigned char tmp;
  unsigned char sign = (unsigned char)(val < 0);
    9598:	687b      	ldr	r3, [r7, #4]
    959a:	0fdb      	lsrs	r3, r3, #31
    959c:	b2db      	uxtb	r3, r3
    959e:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1055

  if (val==(int32_t)(0x80000000)) { /* special case 0x80000000/-2147483648: prevent overflow below. */
    95a0:	687b      	ldr	r3, [r7, #4]
    95a2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
    95a6:	d105      	bne.n	95b4 <UTIL1_Num32sToStr+0x30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1056
    UTIL1_strcpy(dst, dstSize, (unsigned char*)"-2147483648");
    95a8:	68f8      	ldr	r0, [r7, #12]
    95aa:	68b9      	ldr	r1, [r7, #8]
    95ac:	4a3e      	ldr	r2, [pc, #248]	; (96a8 <UTIL1_Num32sToStr+0x124>)
    95ae:	f7ff fed3 	bl	9358 <UTIL1_strcpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1057
    return;
    95b2:	e076      	b.n	96a2 <UTIL1_Num32sToStr+0x11e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1059
  }
  dstSize--; /* for zero byte */
    95b4:	68bb      	ldr	r3, [r7, #8]
    95b6:	3b01      	subs	r3, #1
    95b8:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1060
  if (sign) {
    95ba:	7dfb      	ldrb	r3, [r7, #23]
    95bc:	2b00      	cmp	r3, #0
    95be:	d002      	beq.n	95c6 <UTIL1_Num32sToStr+0x42>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1061
    val = -val;
    95c0:	687b      	ldr	r3, [r7, #4]
    95c2:	425b      	negs	r3, r3
    95c4:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1063
  }
  if (val == 0 && dstSize > 0){
    95c6:	687b      	ldr	r3, [r7, #4]
    95c8:	2b00      	cmp	r3, #0
    95ca:	d10d      	bne.n	95e8 <UTIL1_Num32sToStr+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1063 (discriminator 1)
    95cc:	68bb      	ldr	r3, [r7, #8]
    95ce:	2b00      	cmp	r3, #0
    95d0:	d00a      	beq.n	95e8 <UTIL1_Num32sToStr+0x64>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1064
    ptr[i++] = '0';
    95d2:	7ffb      	ldrb	r3, [r7, #31]
    95d4:	1c5a      	adds	r2, r3, #1
    95d6:	77fa      	strb	r2, [r7, #31]
    95d8:	69ba      	ldr	r2, [r7, #24]
    95da:	4413      	add	r3, r2
    95dc:	2230      	movs	r2, #48	; 0x30
    95de:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1065
    dstSize--;
    95e0:	68bb      	ldr	r3, [r7, #8]
    95e2:	3b01      	subs	r3, #1
    95e4:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1067
  }
  while (val > 0 && dstSize > 0) {
    95e6:	e020      	b.n	962a <UTIL1_Num32sToStr+0xa6>
    95e8:	e01f      	b.n	962a <UTIL1_Num32sToStr+0xa6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1068
    ptr[i++] = (unsigned char)((val % 10) + '0');
    95ea:	7ffb      	ldrb	r3, [r7, #31]
    95ec:	1c5a      	adds	r2, r3, #1
    95ee:	77fa      	strb	r2, [r7, #31]
    95f0:	69ba      	ldr	r2, [r7, #24]
    95f2:	18d0      	adds	r0, r2, r3
    95f4:	6879      	ldr	r1, [r7, #4]
    95f6:	4b2d      	ldr	r3, [pc, #180]	; (96ac <UTIL1_Num32sToStr+0x128>)
    95f8:	fb83 2301 	smull	r2, r3, r3, r1
    95fc:	109a      	asrs	r2, r3, #2
    95fe:	17cb      	asrs	r3, r1, #31
    9600:	1ad2      	subs	r2, r2, r3
    9602:	4613      	mov	r3, r2
    9604:	009b      	lsls	r3, r3, #2
    9606:	4413      	add	r3, r2
    9608:	005b      	lsls	r3, r3, #1
    960a:	1aca      	subs	r2, r1, r3
    960c:	b2d3      	uxtb	r3, r2
    960e:	3330      	adds	r3, #48	; 0x30
    9610:	b2db      	uxtb	r3, r3
    9612:	7003      	strb	r3, [r0, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1069
    dstSize--;
    9614:	68bb      	ldr	r3, [r7, #8]
    9616:	3b01      	subs	r3, #1
    9618:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1070
    val /= 10;
    961a:	687b      	ldr	r3, [r7, #4]
    961c:	4a23      	ldr	r2, [pc, #140]	; (96ac <UTIL1_Num32sToStr+0x128>)
    961e:	fb82 1203 	smull	r1, r2, r2, r3
    9622:	1092      	asrs	r2, r2, #2
    9624:	17db      	asrs	r3, r3, #31
    9626:	1ad3      	subs	r3, r2, r3
    9628:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1067 (discriminator 1)
  }
  if (val == 0 && dstSize > 0){
    ptr[i++] = '0';
    dstSize--;
  }
  while (val > 0 && dstSize > 0) {
    962a:	687b      	ldr	r3, [r7, #4]
    962c:	2b00      	cmp	r3, #0
    962e:	dd02      	ble.n	9636 <UTIL1_Num32sToStr+0xb2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1067 (discriminator 2)
    9630:	68bb      	ldr	r3, [r7, #8]
    9632:	2b00      	cmp	r3, #0
    9634:	d1d9      	bne.n	95ea <UTIL1_Num32sToStr+0x66>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1072
    ptr[i++] = (unsigned char)((val % 10) + '0');
    dstSize--;
    val /= 10;
  }
  if (sign && dstSize > 0){
    9636:	7dfb      	ldrb	r3, [r7, #23]
    9638:	2b00      	cmp	r3, #0
    963a:	d009      	beq.n	9650 <UTIL1_Num32sToStr+0xcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1072 (discriminator 1)
    963c:	68bb      	ldr	r3, [r7, #8]
    963e:	2b00      	cmp	r3, #0
    9640:	d006      	beq.n	9650 <UTIL1_Num32sToStr+0xcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1073
    ptr[i++] = '-';
    9642:	7ffb      	ldrb	r3, [r7, #31]
    9644:	1c5a      	adds	r2, r3, #1
    9646:	77fa      	strb	r2, [r7, #31]
    9648:	69ba      	ldr	r2, [r7, #24]
    964a:	4413      	add	r3, r2
    964c:	222d      	movs	r2, #45	; 0x2d
    964e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1075
  }
  for(j=0; j<(i/2); j++) { /* swap buffer */
    9650:	2300      	movs	r3, #0
    9652:	77bb      	strb	r3, [r7, #30]
    9654:	e01a      	b.n	968c <UTIL1_Num32sToStr+0x108>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1076 (discriminator 2)
    tmp = ptr[j];
    9656:	7fbb      	ldrb	r3, [r7, #30]
    9658:	69ba      	ldr	r2, [r7, #24]
    965a:	4413      	add	r3, r2
    965c:	781b      	ldrb	r3, [r3, #0]
    965e:	75bb      	strb	r3, [r7, #22]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1077 (discriminator 2)
    ptr[j] = ptr[(i-j)-1];
    9660:	7fbb      	ldrb	r3, [r7, #30]
    9662:	69ba      	ldr	r2, [r7, #24]
    9664:	4413      	add	r3, r2
    9666:	7ff9      	ldrb	r1, [r7, #31]
    9668:	7fba      	ldrb	r2, [r7, #30]
    966a:	1a8a      	subs	r2, r1, r2
    966c:	3a01      	subs	r2, #1
    966e:	69b9      	ldr	r1, [r7, #24]
    9670:	440a      	add	r2, r1
    9672:	7812      	ldrb	r2, [r2, #0]
    9674:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1078 (discriminator 2)
    ptr[(i-j)-1] = tmp;
    9676:	7ffa      	ldrb	r2, [r7, #31]
    9678:	7fbb      	ldrb	r3, [r7, #30]
    967a:	1ad3      	subs	r3, r2, r3
    967c:	3b01      	subs	r3, #1
    967e:	69ba      	ldr	r2, [r7, #24]
    9680:	4413      	add	r3, r2
    9682:	7dba      	ldrb	r2, [r7, #22]
    9684:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1075 (discriminator 2)
    val /= 10;
  }
  if (sign && dstSize > 0){
    ptr[i++] = '-';
  }
  for(j=0; j<(i/2); j++) { /* swap buffer */
    9686:	7fbb      	ldrb	r3, [r7, #30]
    9688:	3301      	adds	r3, #1
    968a:	77bb      	strb	r3, [r7, #30]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1075 (discriminator 1)
    968c:	7ffb      	ldrb	r3, [r7, #31]
    968e:	085b      	lsrs	r3, r3, #1
    9690:	b2db      	uxtb	r3, r3
    9692:	7fba      	ldrb	r2, [r7, #30]
    9694:	429a      	cmp	r2, r3
    9696:	d3de      	bcc.n	9656 <UTIL1_Num32sToStr+0xd2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1080
    tmp = ptr[j];
    ptr[j] = ptr[(i-j)-1];
    ptr[(i-j)-1] = tmp;
  }
  ptr[i] = '\0';
    9698:	7ffb      	ldrb	r3, [r7, #31]
    969a:	69ba      	ldr	r2, [r7, #24]
    969c:	4413      	add	r3, r2
    969e:	2200      	movs	r2, #0
    96a0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1081
}
    96a2:	3720      	adds	r7, #32
    96a4:	46bd      	mov	sp, r7
    96a6:	bd80      	pop	{r7, pc}
    96a8:	0000ddb4 	.word	0x0000ddb4
    96ac:	66666667 	.word	0x66666667

000096b0 <UTIL1_Num32uToStr>:
UTIL1_Num32uToStr():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1104
  \param[in,out] dst String buffer to store the number.
  \param[in] dstSize Size of the destination buffer in uint8_ts.
  \param[in] val 32bit unsigned number to convert.
 */
void UTIL1_Num32uToStr(uint8_t *dst, size_t dstSize, uint32_t val)
{
    96b0:	b480      	push	{r7}
    96b2:	b089      	sub	sp, #36	; 0x24
    96b4:	af00      	add	r7, sp, #0
    96b6:	60f8      	str	r0, [r7, #12]
    96b8:	60b9      	str	r1, [r7, #8]
    96ba:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1105
  unsigned char *ptr = ((unsigned char *)dst);
    96bc:	68fb      	ldr	r3, [r7, #12]
    96be:	61bb      	str	r3, [r7, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1106
  unsigned char i=0, j;
    96c0:	2300      	movs	r3, #0
    96c2:	77fb      	strb	r3, [r7, #31]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1109
  unsigned char tmp;

  dstSize--; /* for zero byte */
    96c4:	68bb      	ldr	r3, [r7, #8]
    96c6:	3b01      	subs	r3, #1
    96c8:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1110
  if (val == 0 && dstSize > 0){
    96ca:	687b      	ldr	r3, [r7, #4]
    96cc:	2b00      	cmp	r3, #0
    96ce:	d10d      	bne.n	96ec <UTIL1_Num32uToStr+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1110 (discriminator 1)
    96d0:	68bb      	ldr	r3, [r7, #8]
    96d2:	2b00      	cmp	r3, #0
    96d4:	d00a      	beq.n	96ec <UTIL1_Num32uToStr+0x3c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1111
    ptr[i++] = '0';
    96d6:	7ffb      	ldrb	r3, [r7, #31]
    96d8:	1c5a      	adds	r2, r3, #1
    96da:	77fa      	strb	r2, [r7, #31]
    96dc:	69ba      	ldr	r2, [r7, #24]
    96de:	4413      	add	r3, r2
    96e0:	2230      	movs	r2, #48	; 0x30
    96e2:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1112
    dstSize--;
    96e4:	68bb      	ldr	r3, [r7, #8]
    96e6:	3b01      	subs	r3, #1
    96e8:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1114
  }
  while (val > 0 && dstSize > 0) {
    96ea:	e01c      	b.n	9726 <UTIL1_Num32uToStr+0x76>
    96ec:	e01b      	b.n	9726 <UTIL1_Num32uToStr+0x76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1115
    ptr[i++] = (unsigned char)((val % 10) + '0');
    96ee:	7ffb      	ldrb	r3, [r7, #31]
    96f0:	1c5a      	adds	r2, r3, #1
    96f2:	77fa      	strb	r2, [r7, #31]
    96f4:	69ba      	ldr	r2, [r7, #24]
    96f6:	18d0      	adds	r0, r2, r3
    96f8:	6879      	ldr	r1, [r7, #4]
    96fa:	4b25      	ldr	r3, [pc, #148]	; (9790 <UTIL1_Num32uToStr+0xe0>)
    96fc:	fba3 2301 	umull	r2, r3, r3, r1
    9700:	08da      	lsrs	r2, r3, #3
    9702:	4613      	mov	r3, r2
    9704:	009b      	lsls	r3, r3, #2
    9706:	4413      	add	r3, r2
    9708:	005b      	lsls	r3, r3, #1
    970a:	1aca      	subs	r2, r1, r3
    970c:	b2d3      	uxtb	r3, r2
    970e:	3330      	adds	r3, #48	; 0x30
    9710:	b2db      	uxtb	r3, r3
    9712:	7003      	strb	r3, [r0, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1116
    dstSize--;
    9714:	68bb      	ldr	r3, [r7, #8]
    9716:	3b01      	subs	r3, #1
    9718:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1117
    val /= 10;
    971a:	687a      	ldr	r2, [r7, #4]
    971c:	4b1c      	ldr	r3, [pc, #112]	; (9790 <UTIL1_Num32uToStr+0xe0>)
    971e:	fba3 1302 	umull	r1, r3, r3, r2
    9722:	08db      	lsrs	r3, r3, #3
    9724:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1114 (discriminator 1)
  dstSize--; /* for zero byte */
  if (val == 0 && dstSize > 0){
    ptr[i++] = '0';
    dstSize--;
  }
  while (val > 0 && dstSize > 0) {
    9726:	687b      	ldr	r3, [r7, #4]
    9728:	2b00      	cmp	r3, #0
    972a:	d002      	beq.n	9732 <UTIL1_Num32uToStr+0x82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1114 (discriminator 2)
    972c:	68bb      	ldr	r3, [r7, #8]
    972e:	2b00      	cmp	r3, #0
    9730:	d1dd      	bne.n	96ee <UTIL1_Num32uToStr+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1119
    ptr[i++] = (unsigned char)((val % 10) + '0');
    dstSize--;
    val /= 10;
  }
  for(j=0; j<(i/2); j++) { /* swap buffer */
    9732:	2300      	movs	r3, #0
    9734:	77bb      	strb	r3, [r7, #30]
    9736:	e01a      	b.n	976e <UTIL1_Num32uToStr+0xbe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1120 (discriminator 2)
    tmp = ptr[j];
    9738:	7fbb      	ldrb	r3, [r7, #30]
    973a:	69ba      	ldr	r2, [r7, #24]
    973c:	4413      	add	r3, r2
    973e:	781b      	ldrb	r3, [r3, #0]
    9740:	75fb      	strb	r3, [r7, #23]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1121 (discriminator 2)
    ptr[j] = ptr[(i-j)-1];
    9742:	7fbb      	ldrb	r3, [r7, #30]
    9744:	69ba      	ldr	r2, [r7, #24]
    9746:	4413      	add	r3, r2
    9748:	7ff9      	ldrb	r1, [r7, #31]
    974a:	7fba      	ldrb	r2, [r7, #30]
    974c:	1a8a      	subs	r2, r1, r2
    974e:	3a01      	subs	r2, #1
    9750:	69b9      	ldr	r1, [r7, #24]
    9752:	440a      	add	r2, r1
    9754:	7812      	ldrb	r2, [r2, #0]
    9756:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1122 (discriminator 2)
    ptr[(i-j)-1] = tmp;
    9758:	7ffa      	ldrb	r2, [r7, #31]
    975a:	7fbb      	ldrb	r3, [r7, #30]
    975c:	1ad3      	subs	r3, r2, r3
    975e:	3b01      	subs	r3, #1
    9760:	69ba      	ldr	r2, [r7, #24]
    9762:	4413      	add	r3, r2
    9764:	7dfa      	ldrb	r2, [r7, #23]
    9766:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1119 (discriminator 2)
  while (val > 0 && dstSize > 0) {
    ptr[i++] = (unsigned char)((val % 10) + '0');
    dstSize--;
    val /= 10;
  }
  for(j=0; j<(i/2); j++) { /* swap buffer */
    9768:	7fbb      	ldrb	r3, [r7, #30]
    976a:	3301      	adds	r3, #1
    976c:	77bb      	strb	r3, [r7, #30]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1119 (discriminator 1)
    976e:	7ffb      	ldrb	r3, [r7, #31]
    9770:	085b      	lsrs	r3, r3, #1
    9772:	b2db      	uxtb	r3, r3
    9774:	7fba      	ldrb	r2, [r7, #30]
    9776:	429a      	cmp	r2, r3
    9778:	d3de      	bcc.n	9738 <UTIL1_Num32uToStr+0x88>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1124
    tmp = ptr[j];
    ptr[j] = ptr[(i-j)-1];
    ptr[(i-j)-1] = tmp;
  }
  ptr[i] = '\0';
    977a:	7ffb      	ldrb	r3, [r7, #31]
    977c:	69ba      	ldr	r2, [r7, #24]
    977e:	4413      	add	r3, r2
    9780:	2200      	movs	r2, #0
    9782:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:1125
}
    9784:	3724      	adds	r7, #36	; 0x24
    9786:	46bd      	mov	sp, r7
    9788:	f85d 7b04 	ldr.w	r7, [sp], #4
    978c:	4770      	bx	lr
    978e:	bf00      	nop
    9790:	cccccccd 	.word	0xcccccccd

00009794 <UTIL1_strFind>:
UTIL1_strFind():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2174
**         ---             - -1 if not found, otherwise the character
**                           index.
** ===================================================================
*/
int16_t UTIL1_strFind(uint8_t *str, uint8_t *subStr)
{
    9794:	b580      	push	{r7, lr}
    9796:	b084      	sub	sp, #16
    9798:	af00      	add	r7, sp, #0
    979a:	6078      	str	r0, [r7, #4]
    979c:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2177
  int16_t i, len;

  len = (int16_t)UTIL1_strlen((char*)subStr);
    979e:	6838      	ldr	r0, [r7, #0]
    97a0:	f004 f86e 	bl	d880 <strlen>
    97a4:	4603      	mov	r3, r0
    97a6:	81bb      	strh	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2178
  for (i=0; *str!='\0'; i++, str++) {
    97a8:	2300      	movs	r3, #0
    97aa:	81fb      	strh	r3, [r7, #14]
    97ac:	e011      	b.n	97d2 <UTIL1_strFind+0x3e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2179
    if (UTIL1_strncmp((char*)str, (char*)subStr, len)==0) {
    97ae:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
    97b2:	6878      	ldr	r0, [r7, #4]
    97b4:	6839      	ldr	r1, [r7, #0]
    97b6:	461a      	mov	r2, r3
    97b8:	f004 f86a 	bl	d890 <strncmp>
    97bc:	4603      	mov	r3, r0
    97be:	2b00      	cmp	r3, #0
    97c0:	d101      	bne.n	97c6 <UTIL1_strFind+0x32>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2180
      return i; /* found */
    97c2:	89fb      	ldrh	r3, [r7, #14]
    97c4:	e00b      	b.n	97de <UTIL1_strFind+0x4a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2178
int16_t UTIL1_strFind(uint8_t *str, uint8_t *subStr)
{
  int16_t i, len;

  len = (int16_t)UTIL1_strlen((char*)subStr);
  for (i=0; *str!='\0'; i++, str++) {
    97c6:	89fb      	ldrh	r3, [r7, #14]
    97c8:	3301      	adds	r3, #1
    97ca:	81fb      	strh	r3, [r7, #14]
    97cc:	687b      	ldr	r3, [r7, #4]
    97ce:	3301      	adds	r3, #1
    97d0:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2178 (discriminator 1)
    97d2:	687b      	ldr	r3, [r7, #4]
    97d4:	781b      	ldrb	r3, [r3, #0]
    97d6:	2b00      	cmp	r3, #0
    97d8:	d1e9      	bne.n	97ae <UTIL1_strFind+0x1a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2183
    if (UTIL1_strncmp((char*)str, (char*)subStr, len)==0) {
      return i; /* found */
    }
  }
  return -1; /* not found */
    97da:	f64f 73ff 	movw	r3, #65535	; 0xffff
    97de:	b21b      	sxth	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2184
}
    97e0:	4618      	mov	r0, r3
    97e2:	3710      	adds	r7, #16
    97e4:	46bd      	mov	sp, r7
    97e6:	bd80      	pop	{r7, pc}

000097e8 <UTIL1_NumFloatToStr>:
UTIL1_NumFloatToStr():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2346
**                           digits to print
**     Returns     : Nothing
** ===================================================================
*/
void UTIL1_NumFloatToStr(uint8_t *dst, size_t dstSize, float val, uint8_t nofFracDigits)
{
    97e8:	b580      	push	{r7, lr}
    97ea:	b08c      	sub	sp, #48	; 0x30
    97ec:	af02      	add	r7, sp, #8
    97ee:	60f8      	str	r0, [r7, #12]
    97f0:	60b9      	str	r1, [r7, #8]
    97f2:	ed87 0a01 	vstr	s0, [r7, #4]
    97f6:	4613      	mov	r3, r2
    97f8:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2352
  uint32_t integral;
  uint32_t fractional, shift;
  int i;
  bool isNeg;

  isNeg = (bool)(val<0);
    97fa:	edd7 7a01 	vldr	s15, [r7, #4]
    97fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
    9802:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    9806:	bf54      	ite	pl
    9808:	2300      	movpl	r3, #0
    980a:	2301      	movmi	r3, #1
    980c:	b2db      	uxtb	r3, r3
    980e:	77fb      	strb	r3, [r7, #31]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2353
  if (isNeg) {
    9810:	7ffb      	ldrb	r3, [r7, #31]
    9812:	2b00      	cmp	r3, #0
    9814:	d005      	beq.n	9822 <UTIL1_NumFloatToStr+0x3a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2354
    val = -val; /* make it positive */
    9816:	edd7 7a01 	vldr	s15, [r7, #4]
    981a:	eef1 7a67 	vneg.f32	s15, s15
    981e:	edc7 7a01 	vstr	s15, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2356
  }
  integral = (uint32_t)(int32_t)val;
    9822:	edd7 7a01 	vldr	s15, [r7, #4]
    9826:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    982a:	ee17 3a90 	vmov	r3, s15
    982e:	61bb      	str	r3, [r7, #24]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2357
  val = val-(float)integral; /* get rid of integral part */
    9830:	69bb      	ldr	r3, [r7, #24]
    9832:	ee07 3a10 	vmov	s14, r3
    9836:	eef8 7a47 	vcvt.f32.u32	s15, s14
    983a:	ed97 7a01 	vldr	s14, [r7, #4]
    983e:	ee77 7a67 	vsub.f32	s15, s14, s15
    9842:	edc7 7a01 	vstr	s15, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2358
  shift = 1;
    9846:	2301      	movs	r3, #1
    9848:	627b      	str	r3, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2359
  for(i=0;i<nofFracDigits;i++) {
    984a:	2300      	movs	r3, #0
    984c:	623b      	str	r3, [r7, #32]
    984e:	e008      	b.n	9862 <UTIL1_NumFloatToStr+0x7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2360 (discriminator 2)
    shift *= 10;
    9850:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    9852:	4613      	mov	r3, r2
    9854:	009b      	lsls	r3, r3, #2
    9856:	4413      	add	r3, r2
    9858:	005b      	lsls	r3, r3, #1
    985a:	627b      	str	r3, [r7, #36]	; 0x24
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2359 (discriminator 2)
    val = -val; /* make it positive */
  }
  integral = (uint32_t)(int32_t)val;
  val = val-(float)integral; /* get rid of integral part */
  shift = 1;
  for(i=0;i<nofFracDigits;i++) {
    985c:	6a3b      	ldr	r3, [r7, #32]
    985e:	3301      	adds	r3, #1
    9860:	623b      	str	r3, [r7, #32]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2359 (discriminator 1)
    9862:	78fa      	ldrb	r2, [r7, #3]
    9864:	6a3b      	ldr	r3, [r7, #32]
    9866:	429a      	cmp	r2, r3
    9868:	dcf2      	bgt.n	9850 <UTIL1_NumFloatToStr+0x68>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2363
    shift *= 10;
  }
  /* get fractional part */
  fractional = (uint32_t)(val*shift);
    986a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    986c:	ee07 3a90 	vmov	s15, r3
    9870:	eeb8 7a67 	vcvt.f32.u32	s14, s15
    9874:	edd7 7a01 	vldr	s15, [r7, #4]
    9878:	ee67 7a27 	vmul.f32	s15, s14, s15
    987c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    9880:	ee17 3a90 	vmov	r3, s15
    9884:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2365
  /* write integral part */
  if (integral==0 && fractional==0) { /* special check to avoid writing -0 or -0.000 */
    9886:	69bb      	ldr	r3, [r7, #24]
    9888:	2b00      	cmp	r3, #0
    988a:	d108      	bne.n	989e <UTIL1_NumFloatToStr+0xb6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2365 (discriminator 1)
    988c:	697b      	ldr	r3, [r7, #20]
    988e:	2b00      	cmp	r3, #0
    9890:	d105      	bne.n	989e <UTIL1_NumFloatToStr+0xb6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2366
    UTIL1_Num32sToStr(dst, dstSize, 0); /* just write the zero */
    9892:	68f8      	ldr	r0, [r7, #12]
    9894:	68b9      	ldr	r1, [r7, #8]
    9896:	2200      	movs	r2, #0
    9898:	f7ff fe74 	bl	9584 <UTIL1_Num32sToStr>
    989c:	e014      	b.n	98c8 <UTIL1_NumFloatToStr+0xe0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2367
  } else if (isNeg) { /* for negative numbers, write it with sign */
    989e:	7ffb      	ldrb	r3, [r7, #31]
    98a0:	2b00      	cmp	r3, #0
    98a2:	d00b      	beq.n	98bc <UTIL1_NumFloatToStr+0xd4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2368
    UTIL1_strcpy(dst, dstSize, (unsigned char*)"-");
    98a4:	68f8      	ldr	r0, [r7, #12]
    98a6:	68b9      	ldr	r1, [r7, #8]
    98a8:	4a11      	ldr	r2, [pc, #68]	; (98f0 <UTIL1_NumFloatToStr+0x108>)
    98aa:	f7ff fd55 	bl	9358 <UTIL1_strcpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2369
    UTIL1_strcatNum32s(dst, dstSize, (int32_t)integral);
    98ae:	69bb      	ldr	r3, [r7, #24]
    98b0:	68f8      	ldr	r0, [r7, #12]
    98b2:	68b9      	ldr	r1, [r7, #8]
    98b4:	461a      	mov	r2, r3
    98b6:	f7ff fe4d 	bl	9554 <UTIL1_strcatNum32s>
    98ba:	e005      	b.n	98c8 <UTIL1_NumFloatToStr+0xe0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2371
  } else {
    UTIL1_Num32sToStr(dst, dstSize, (int32_t)integral);
    98bc:	69bb      	ldr	r3, [r7, #24]
    98be:	68f8      	ldr	r0, [r7, #12]
    98c0:	68b9      	ldr	r1, [r7, #8]
    98c2:	461a      	mov	r2, r3
    98c4:	f7ff fe5e 	bl	9584 <UTIL1_Num32sToStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2374
  }
  /* write fractional part */
  if (nofFracDigits>0) {
    98c8:	78fb      	ldrb	r3, [r7, #3]
    98ca:	2b00      	cmp	r3, #0
    98cc:	d00c      	beq.n	98e8 <UTIL1_NumFloatToStr+0x100>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2375
    UTIL1_chcat(dst, dstSize, '.');
    98ce:	68f8      	ldr	r0, [r7, #12]
    98d0:	68b9      	ldr	r1, [r7, #8]
    98d2:	222e      	movs	r2, #46	; 0x2e
    98d4:	f7ff fd96 	bl	9404 <UTIL1_chcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2376
    UTIL1_strcatNum32uFormatted(dst, dstSize, fractional, '0', nofFracDigits);
    98d8:	78fb      	ldrb	r3, [r7, #3]
    98da:	9300      	str	r3, [sp, #0]
    98dc:	68f8      	ldr	r0, [r7, #12]
    98de:	68b9      	ldr	r1, [r7, #8]
    98e0:	697a      	ldr	r2, [r7, #20]
    98e2:	2330      	movs	r3, #48	; 0x30
    98e4:	f7ff fe18 	bl	9518 <UTIL1_strcatNum32uFormatted>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2378
  }
}
    98e8:	3728      	adds	r7, #40	; 0x28
    98ea:	46bd      	mov	sp, r7
    98ec:	bd80      	pop	{r7, pc}
    98ee:	bf00      	nop
    98f0:	0000ddc4 	.word	0x0000ddc4

000098f4 <UTIL1_strcatNumFloat>:
UTIL1_strcatNumFloat():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2397
**                           digits to print
**     Returns     : Nothing
** ===================================================================
*/
void UTIL1_strcatNumFloat(uint8_t *dst, size_t dstSize, float val, uint8_t nofFracDigits)
{
    98f4:	b580      	push	{r7, lr}
    98f6:	b08c      	sub	sp, #48	; 0x30
    98f8:	af00      	add	r7, sp, #0
    98fa:	60f8      	str	r0, [r7, #12]
    98fc:	60b9      	str	r1, [r7, #8]
    98fe:	ed87 0a01 	vstr	s0, [r7, #4]
    9902:	4613      	mov	r3, r2
    9904:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2400
  uint8_t buf[32];

  UTIL1_NumFloatToStr(buf, sizeof(buf), val, nofFracDigits);
    9906:	f107 0210 	add.w	r2, r7, #16
    990a:	78fb      	ldrb	r3, [r7, #3]
    990c:	4610      	mov	r0, r2
    990e:	2120      	movs	r1, #32
    9910:	ed97 0a01 	vldr	s0, [r7, #4]
    9914:	461a      	mov	r2, r3
    9916:	f7ff ff67 	bl	97e8 <UTIL1_NumFloatToStr>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2401
  UTIL1_strcat(dst, dstSize, buf);
    991a:	f107 0310 	add.w	r3, r7, #16
    991e:	68f8      	ldr	r0, [r7, #12]
    9920:	68b9      	ldr	r1, [r7, #8]
    9922:	461a      	mov	r2, r3
    9924:	f7ff fd3c 	bl	93a0 <UTIL1_strcat>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2402
}
    9928:	3730      	adds	r7, #48	; 0x30
    992a:	46bd      	mov	sp, r7
    992c:	bd80      	pop	{r7, pc}
    992e:	bf00      	nop

00009930 <UTIL1_Init>:
UTIL1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2536
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void UTIL1_Init(void)
{
    9930:	b480      	push	{r7}
    9932:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/UTIL1.c:2538
  /* nothing needed */
}
    9934:	46bd      	mov	sp, r7
    9936:	f85d 7b04 	ldr.w	r7, [sp], #4
    993a:	4770      	bx	lr

0000993c <WAIT1_Wait10Cycles>:
WAIT1_Wait10Cycles():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:107
  /*lint -save -e522 function lacks side effect. */

#if MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M
  /* NOTE: Cortex-M0 and M4 have 1 cycle for a NOP */
  /* Compiler is GNUC */
  __asm (
    993c:	bf00      	nop
    993e:	bf00      	nop
    9940:	bf00      	nop
    9942:	4770      	bx	lr

00009944 <WAIT1_Wait100Cycles>:
WAIT1_Wait100Cycles():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:154
void WAIT1_Wait100Cycles(void)
{
  /* This function will spend 100 CPU cycles (including call overhead). */
  /*lint -save -e522 function lacks side effect. */
#if MCUC1_CONFIG_CPU_IS_ARM_CORTEX_M
  __asm (
    9944:	b401      	push	{r0}
    9946:	2000      	movs	r0, #0

00009948 <loop>:
    9948:	bf00      	nop
    994a:	bf00      	nop
    994c:	bf00      	nop
    994e:	bf00      	nop
    9950:	f100 0001 	add.w	r0, r0, #1
    9954:	2809      	cmp	r0, #9
    9956:	f67f aff7 	bls.w	9948 <loop>
    995a:	bf00      	nop
    995c:	bf00      	nop
    995e:	bf00      	nop
    9960:	bf00      	nop
    9962:	bf00      	nop
    9964:	bf00      	nop
    9966:	bf00      	nop
    9968:	bc01      	pop	{r0}
    996a:	4770      	bx	lr

0000996c <WAIT1_WaitCycles>:
WAIT1_WaitCycles():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:200
**         cycles          - The number of cycles to wait.
**     Returns     : Nothing
** ===================================================================
*/
void WAIT1_WaitCycles(uint16_t cycles)
{
    996c:	b580      	push	{r7, lr}
    996e:	b082      	sub	sp, #8
    9970:	af00      	add	r7, sp, #0
    9972:	4603      	mov	r3, r0
    9974:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:210
  counter += KIN1_GetCycleCounter();
  while(KIN1_GetCycleCounter()<counter) {
    /* wait */
  }
#else
  while(cycles > 100) {
    9976:	e004      	b.n	9982 <WAIT1_WaitCycles+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:211
    WAIT1_Wait100Cycles();
    9978:	f7ff ffe4 	bl	9944 <WAIT1_Wait100Cycles>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:212
    cycles -= 100;
    997c:	88fb      	ldrh	r3, [r7, #6]
    997e:	3b64      	subs	r3, #100	; 0x64
    9980:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:210 (discriminator 1)
  counter += KIN1_GetCycleCounter();
  while(KIN1_GetCycleCounter()<counter) {
    /* wait */
  }
#else
  while(cycles > 100) {
    9982:	88fb      	ldrh	r3, [r7, #6]
    9984:	2b64      	cmp	r3, #100	; 0x64
    9986:	d8f7      	bhi.n	9978 <WAIT1_WaitCycles+0xc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:214
    WAIT1_Wait100Cycles();
    cycles -= 100;
  }
  while(cycles > 10) {
    9988:	e004      	b.n	9994 <WAIT1_WaitCycles+0x28>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:215
    WAIT1_Wait10Cycles();
    998a:	f7ff ffd7 	bl	993c <WAIT1_Wait10Cycles>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:216
    cycles -= 10;
    998e:	88fb      	ldrh	r3, [r7, #6]
    9990:	3b0a      	subs	r3, #10
    9992:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:214 (discriminator 1)
#else
  while(cycles > 100) {
    WAIT1_Wait100Cycles();
    cycles -= 100;
  }
  while(cycles > 10) {
    9994:	88fb      	ldrh	r3, [r7, #6]
    9996:	2b0a      	cmp	r3, #10
    9998:	d8f7      	bhi.n	998a <WAIT1_WaitCycles+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:220
    WAIT1_Wait10Cycles();
    cycles -= 10;
  }
#endif
  /*lint -restore */
}
    999a:	3708      	adds	r7, #8
    999c:	46bd      	mov	sp, r7
    999e:	bd80      	pop	{r7, pc}

000099a0 <WAIT1_WaitLongCycles>:
WAIT1_WaitLongCycles():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:234
**         cycles          - The number of cycles to wait.
**     Returns     : Nothing
** ===================================================================
*/
void WAIT1_WaitLongCycles(uint32_t cycles)
{
    99a0:	b580      	push	{r7, lr}
    99a2:	b082      	sub	sp, #8
    99a4:	af00      	add	r7, sp, #0
    99a6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:244
  while(KIN1_GetCycleCounter()<counter) {
    /* wait */
  }
#else
  /*lint -save -e522 function lacks side effect. */
  while(cycles>60000) {
    99a8:	e008      	b.n	99bc <WAIT1_WaitLongCycles+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:245
    WAIT1_WaitCycles(60000);
    99aa:	f64e 2060 	movw	r0, #60000	; 0xea60
    99ae:	f7ff ffdd 	bl	996c <WAIT1_WaitCycles>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:246
    cycles -= 60000;
    99b2:	687b      	ldr	r3, [r7, #4]
    99b4:	f5a3 436a 	sub.w	r3, r3, #59904	; 0xea00
    99b8:	3b60      	subs	r3, #96	; 0x60
    99ba:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:244 (discriminator 1)
  while(KIN1_GetCycleCounter()<counter) {
    /* wait */
  }
#else
  /*lint -save -e522 function lacks side effect. */
  while(cycles>60000) {
    99bc:	687a      	ldr	r2, [r7, #4]
    99be:	f64e 2360 	movw	r3, #60000	; 0xea60
    99c2:	429a      	cmp	r2, r3
    99c4:	d8f1      	bhi.n	99aa <WAIT1_WaitLongCycles+0xa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:248
    WAIT1_WaitCycles(60000);
    cycles -= 60000;
  }
  WAIT1_WaitCycles((uint16_t)cycles);
    99c6:	687b      	ldr	r3, [r7, #4]
    99c8:	b29b      	uxth	r3, r3
    99ca:	4618      	mov	r0, r3
    99cc:	f7ff ffce 	bl	996c <WAIT1_WaitCycles>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:251
  /*lint -restore */
#endif
}
    99d0:	3708      	adds	r7, #8
    99d2:	46bd      	mov	sp, r7
    99d4:	bd80      	pop	{r7, pc}
    99d6:	bf00      	nop

000099d8 <WAIT1_Waitms>:
WAIT1_Waitms():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:266
**                           wait
**     Returns     : Nothing
** ===================================================================
*/
void WAIT1_Waitms(uint16_t ms)
{
    99d8:	b580      	push	{r7, lr}
    99da:	b084      	sub	sp, #16
    99dc:	af00      	add	r7, sp, #0
    99de:	4603      	mov	r3, r0
    99e0:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:271
  /*lint -save -e522 function lacks side effect. */
  uint32_t msCycles; /* cycles for 1 ms */

  /* static clock/speed configuration */
  msCycles = WAIT1_NofCyclesMs(1, WAIT1_INSTR_CLOCK_HZ);
    99e2:	4b07      	ldr	r3, [pc, #28]	; (9a00 <WAIT1_Waitms+0x28>)
    99e4:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:272
  while(ms>0) {
    99e6:	e005      	b.n	99f4 <WAIT1_Waitms+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:273
    WAIT1_WaitLongCycles(msCycles);
    99e8:	68f8      	ldr	r0, [r7, #12]
    99ea:	f7ff ffd9 	bl	99a0 <WAIT1_WaitLongCycles>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:274
    ms--;
    99ee:	88fb      	ldrh	r3, [r7, #6]
    99f0:	3b01      	subs	r3, #1
    99f2:	80fb      	strh	r3, [r7, #6]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:272 (discriminator 1)
  /*lint -save -e522 function lacks side effect. */
  uint32_t msCycles; /* cycles for 1 ms */

  /* static clock/speed configuration */
  msCycles = WAIT1_NofCyclesMs(1, WAIT1_INSTR_CLOCK_HZ);
  while(ms>0) {
    99f4:	88fb      	ldrh	r3, [r7, #6]
    99f6:	2b00      	cmp	r3, #0
    99f8:	d1f6      	bne.n	99e8 <WAIT1_Waitms+0x10>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:277
    WAIT1_WaitLongCycles(msCycles);
    ms--;
  }
  /*lint -restore */
}
    99fa:	3710      	adds	r7, #16
    99fc:	46bd      	mov	sp, r7
    99fe:	bd80      	pop	{r7, pc}
    9a00:	0001d4c0 	.word	0x0001d4c0

00009a04 <WAIT1_Init>:
WAIT1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:330
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void WAIT1_Init(void)
{
    9a04:	b480      	push	{r7}
    9a06:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/WAIT1.c:337
  /* init cycle counter */
  KIN1_InitCycleCounter();
  KIN1_ResetCycleCounter();
  KIN1_EnableCycleCounter();
#endif
}
    9a08:	46bd      	mov	sp, r7
    9a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
    9a0e:	4770      	bx	lr

00009a10 <XF1_Init>:
XF1_Init():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/XF1.c:1187
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
void XF1_Init(void)
{
    9a10:	b480      	push	{r7}
    9a12:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\git\BATMAZEEXPLOR\MCCAR_V_2_75\Debug/../Generated_Code/XF1.c:1189
  /* nothing needed */
}
    9a14:	46bd      	mov	sp, r7
    9a16:	f85d 7b04 	ldr.w	r7, [sp], #4
    9a1a:	4770      	bx	lr
    9a1c:	0000      	movs	r0, r0
	...

00009a20 <Driving>:
Driving():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:35
	static bool exploDriveFlag_to_reinit_Drving = false;
#endif



bool Driving(Maze_segments MazeSegmentsToBeDriven) {
    9a20:	b084      	sub	sp, #16
    9a22:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
    9a26:	f5ad 7d6e 	sub.w	sp, sp, #952	; 0x3b8
    9a2a:	afee      	add	r7, sp, #952	; 0x3b8
    9a2c:	f107 0c18 	add.w	ip, r7, #24
    9a30:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:132
	#endif



	/* Segment Target Computation is only called the very first time Driving() is called */
	if(exploDriveFlag_to_reinit_Drving){
    9a34:	4ba1      	ldr	r3, [pc, #644]	; (9cbc <Driving+0x29c>)
    9a36:	781b      	ldrb	r3, [r3, #0]
    9a38:	2b00      	cmp	r3, #0
    9a3a:	f000 810b 	beq.w	9c54 <Driving+0x234>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:134
		/* General variable definition */
		q[0] = START_POSITION_X * MAZE_SIZE;    // Position of MC-Car in an inertial cartesian frame (m, m, rad)
    9a3e:	4ba0      	ldr	r3, [pc, #640]	; (9cc0 <Driving+0x2a0>)
    9a40:	4aa0      	ldr	r2, [pc, #640]	; (9cc4 <Driving+0x2a4>)
    9a42:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:135
		q[1] = START_POSITION_Y * MAZE_SIZE;
    9a44:	4b9e      	ldr	r3, [pc, #632]	; (9cc0 <Driving+0x2a0>)
    9a46:	4aa0      	ldr	r2, [pc, #640]	; (9cc8 <Driving+0x2a8>)
    9a48:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:136
		q[2] = START_POSITION_THETA;
    9a4a:	4b9d      	ldr	r3, [pc, #628]	; (9cc0 <Driving+0x2a0>)
    9a4c:	4a9f      	ldr	r2, [pc, #636]	; (9ccc <Driving+0x2ac>)
    9a4e:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:138

		q_r[0] = START_POSITION_X * MAZE_SIZE;
    9a50:	4b9f      	ldr	r3, [pc, #636]	; (9cd0 <Driving+0x2b0>)
    9a52:	4a9c      	ldr	r2, [pc, #624]	; (9cc4 <Driving+0x2a4>)
    9a54:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:139
		q_r[1] = START_POSITION_Y * MAZE_SIZE,
    9a56:	4b9e      	ldr	r3, [pc, #632]	; (9cd0 <Driving+0x2b0>)
    9a58:	4a9b      	ldr	r2, [pc, #620]	; (9cc8 <Driving+0x2a8>)
    9a5a:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:140
		q_r[2] = START_POSITION_THETA;
    9a5c:	4b9c      	ldr	r3, [pc, #624]	; (9cd0 <Driving+0x2b0>)
    9a5e:	4a9b      	ldr	r2, [pc, #620]	; (9ccc <Driving+0x2ac>)
    9a60:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:142

		vc_dot[0] = 0;
    9a62:	4b9c      	ldr	r3, [pc, #624]	; (9cd4 <Driving+0x2b4>)
    9a64:	f04f 0200 	mov.w	r2, #0
    9a68:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:143
		vc_dot[1] = 0;
    9a6a:	4b9a      	ldr	r3, [pc, #616]	; (9cd4 <Driving+0x2b4>)
    9a6c:	f04f 0200 	mov.w	r2, #0
    9a70:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:144
		q_r_1 = 0;
    9a72:	4b99      	ldr	r3, [pc, #612]	; (9cd8 <Driving+0x2b8>)
    9a74:	f04f 0200 	mov.w	r2, #0
    9a78:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:146

		TargetPointsCalculated = false;
    9a7a:	4b98      	ldr	r3, [pc, #608]	; (9cdc <Driving+0x2bc>)
    9a7c:	2200      	movs	r2, #0
    9a7e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:147
		SegmentTargets = SegmentTargetsNull;
    9a80:	4a97      	ldr	r2, [pc, #604]	; (9ce0 <Driving+0x2c0>)
    9a82:	4b98      	ldr	r3, [pc, #608]	; (9ce4 <Driving+0x2c4>)
    9a84:	4611      	mov	r1, r2
    9a86:	461a      	mov	r2, r3
    9a88:	f44f 73f6 	mov.w	r3, #492	; 0x1ec
    9a8c:	4608      	mov	r0, r1
    9a8e:	4611      	mov	r1, r2
    9a90:	461a      	mov	r2, r3
    9a92:	f003 fed7 	bl	d844 <memcpy>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:148
		theta_target = 0;
    9a96:	4b94      	ldr	r3, [pc, #592]	; (9ce8 <Driving+0x2c8>)
    9a98:	2200      	movs	r2, #0
    9a9a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:150

		SegmentFinished = true;
    9a9c:	4b93      	ldr	r3, [pc, #588]	; (9cec <Driving+0x2cc>)
    9a9e:	2201      	movs	r2, #1
    9aa0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:151
		SegmentType = true;				// true = straight; false = turn/curve segment
    9aa2:	4b93      	ldr	r3, [pc, #588]	; (9cf0 <Driving+0x2d0>)
    9aa4:	2201      	movs	r2, #1
    9aa6:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:152
		NewStraightSegment = false;
    9aa8:	4b92      	ldr	r3, [pc, #584]	; (9cf4 <Driving+0x2d4>)
    9aaa:	2200      	movs	r2, #0
    9aac:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:153
		watchingWall = false;
    9aae:	4b92      	ldr	r3, [pc, #584]	; (9cf8 <Driving+0x2d8>)
    9ab0:	2200      	movs	r2, #0
    9ab2:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:154
		SegmentNumber = 0;
    9ab4:	4b91      	ldr	r3, [pc, #580]	; (9cfc <Driving+0x2dc>)
    9ab6:	2200      	movs	r2, #0
    9ab8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:156

		path = 0;						// current path segment
    9aba:	4b91      	ldr	r3, [pc, #580]	; (9d00 <Driving+0x2e0>)
    9abc:	2200      	movs	r2, #0
    9abe:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:157
		path_next = 0;					// next path segment
    9ac0:	4b90      	ldr	r3, [pc, #576]	; (9d04 <Driving+0x2e4>)
    9ac2:	2200      	movs	r2, #0
    9ac4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:158
		path_prev = 0;					// previous path segment
    9ac6:	4b90      	ldr	r3, [pc, #576]	; (9d08 <Driving+0x2e8>)
    9ac8:	2200      	movs	r2, #0
    9aca:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:159
		ds = 0;						// delta distance to be driven (m)
    9acc:	4b8f      	ldr	r3, [pc, #572]	; (9d0c <Driving+0x2ec>)
    9ace:	f04f 0200 	mov.w	r2, #0
    9ad2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:160
		ds_before_curve = (float)(DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE + 0.01);
    9ad4:	4b8e      	ldr	r3, [pc, #568]	; (9d10 <Driving+0x2f0>)
    9ad6:	4a8f      	ldr	r2, [pc, #572]	; (9d14 <Driving+0x2f4>)
    9ad8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:162

		ds_driven = 0;					// theoretically driven distance
    9ada:	4b8f      	ldr	r3, [pc, #572]	; (9d18 <Driving+0x2f8>)
    9adc:	f04f 0200 	mov.w	r2, #0
    9ae0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:163
		Nr_of_field_in_segment = 0;
    9ae2:	4b8e      	ldr	r3, [pc, #568]	; (9d1c <Driving+0x2fc>)
    9ae4:	2200      	movs	r2, #0
    9ae6:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:164
		wall_availability_calculated = wall_availability_calculatedNull; //ADD to logging and multiply for visualisation!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    9ae8:	4b8d      	ldr	r3, [pc, #564]	; (9d20 <Driving+0x300>)
    9aea:	4a8e      	ldr	r2, [pc, #568]	; (9d24 <Driving+0x304>)
    9aec:	8812      	ldrh	r2, [r2, #0]
    9aee:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:165
		wall_availability_fusion = wall_availability_fusionNull;
    9af0:	4b8d      	ldr	r3, [pc, #564]	; (9d28 <Driving+0x308>)
    9af2:	4a8e      	ldr	r2, [pc, #568]	; (9d2c <Driving+0x30c>)
    9af4:	8812      	ldrh	r2, [r2, #0]
    9af6:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:167

		t1 = 0; t2 = 0; t3 = 0;		// time of acceleration, constant speed and deceleration (s)
    9af8:	4b8d      	ldr	r3, [pc, #564]	; (9d30 <Driving+0x310>)
    9afa:	f04f 0200 	mov.w	r2, #0
    9afe:	601a      	str	r2, [r3, #0]
    9b00:	4b8c      	ldr	r3, [pc, #560]	; (9d34 <Driving+0x314>)
    9b02:	f04f 0200 	mov.w	r2, #0
    9b06:	601a      	str	r2, [r3, #0]
    9b08:	4b8b      	ldr	r3, [pc, #556]	; (9d38 <Driving+0x318>)
    9b0a:	f04f 0200 	mov.w	r2, #0
    9b0e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:168
		timeWhenWatchingEndOfWall = 0;// time when end of wall shall be observed
    9b10:	4b8a      	ldr	r3, [pc, #552]	; (9d3c <Driving+0x31c>)
    9b12:	f04f 0200 	mov.w	r2, #0
    9b16:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:169
		v_ref[0] = 0;			// reference velocity {right, left}
    9b18:	4b89      	ldr	r3, [pc, #548]	; (9d40 <Driving+0x320>)
    9b1a:	f04f 0200 	mov.w	r2, #0
    9b1e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:170
		v_ref[1] = 0;
    9b20:	4b87      	ldr	r3, [pc, #540]	; (9d40 <Driving+0x320>)
    9b22:	f04f 0200 	mov.w	r2, #0
    9b26:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:172

		v_prev = 0;					// previous forward velocity
    9b28:	4b86      	ldr	r3, [pc, #536]	; (9d44 <Driving+0x324>)
    9b2a:	f04f 0200 	mov.w	r2, #0
    9b2e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:173
		v_est[0] = 0;			// {forwad (m/s), angular (rad/s)}
    9b30:	4b85      	ldr	r3, [pc, #532]	; (9d48 <Driving+0x328>)
    9b32:	f04f 0200 	mov.w	r2, #0
    9b36:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:174
		v_est[1] = 0;
    9b38:	4b83      	ldr	r3, [pc, #524]	; (9d48 <Driving+0x328>)
    9b3a:	f04f 0200 	mov.w	r2, #0
    9b3e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:176

		n_rpm[0] = 0;			// {right, left} (1/min)
    9b40:	4b82      	ldr	r3, [pc, #520]	; (9d4c <Driving+0x32c>)
    9b42:	f04f 0200 	mov.w	r2, #0
    9b46:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:177
		n_rpm[1] = 0;
    9b48:	4b80      	ldr	r3, [pc, #512]	; (9d4c <Driving+0x32c>)
    9b4a:	f04f 0200 	mov.w	r2, #0
    9b4e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:179

		M[0] = 0;				// {right, left} (mNm)
    9b50:	4b7f      	ldr	r3, [pc, #508]	; (9d50 <Driving+0x330>)
    9b52:	f04f 0200 	mov.w	r2, #0
    9b56:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:180
		M[1] = 0;
    9b58:	4b7d      	ldr	r3, [pc, #500]	; (9d50 <Driving+0x330>)
    9b5a:	f04f 0200 	mov.w	r2, #0
    9b5e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:182

		U_mot[0] = 0;			// {right, left} (V)
    9b60:	4b7c      	ldr	r3, [pc, #496]	; (9d54 <Driving+0x334>)
    9b62:	f04f 0200 	mov.w	r2, #0
    9b66:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:183
		U_mot[1] = 0;
    9b68:	4b7a      	ldr	r3, [pc, #488]	; (9d54 <Driving+0x334>)
    9b6a:	f04f 0200 	mov.w	r2, #0
    9b6e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:185

		I_mot[0] = 0;			// (A)
    9b70:	4b79      	ldr	r3, [pc, #484]	; (9d58 <Driving+0x338>)
    9b72:	f04f 0200 	mov.w	r2, #0
    9b76:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:186
		I_mot[1] = 0;
    9b78:	4b77      	ldr	r3, [pc, #476]	; (9d58 <Driving+0x338>)
    9b7a:	f04f 0200 	mov.w	r2, #0
    9b7e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:188

		v_next = V_CURVE_MAX;
    9b80:	4b76      	ldr	r3, [pc, #472]	; (9d5c <Driving+0x33c>)
    9b82:	4a77      	ldr	r2, [pc, #476]	; (9d60 <Driving+0x340>)
    9b84:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:189
		SegmentTime = 0;
    9b86:	4b77      	ldr	r3, [pc, #476]	; (9d64 <Driving+0x344>)
    9b88:	f04f 0200 	mov.w	r2, #0
    9b8c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:192

		/* End of segment detection */
		distance = distanceNull;			// sensor distances
    9b8e:	4b76      	ldr	r3, [pc, #472]	; (9d68 <Driving+0x348>)
    9b90:	4a76      	ldr	r2, [pc, #472]	; (9d6c <Driving+0x34c>)
    9b92:	ca07      	ldmia	r2, {r0, r1, r2}
    9b94:	e883 0007 	stmia.w	r3, {r0, r1, r2}
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:193
		distanceLP = distanceLPNull;
    9b98:	4a75      	ldr	r2, [pc, #468]	; (9d70 <Driving+0x350>)
    9b9a:	4b76      	ldr	r3, [pc, #472]	; (9d74 <Driving+0x354>)
    9b9c:	4614      	mov	r4, r2
    9b9e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
    9ba0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:196

		// distance sensor history for end of segment detection through HP
		d_right_history[0] = 0;
    9ba4:	4b74      	ldr	r3, [pc, #464]	; (9d78 <Driving+0x358>)
    9ba6:	f04f 0200 	mov.w	r2, #0
    9baa:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:197
		d_right_history[1] = 0;
    9bac:	4b72      	ldr	r3, [pc, #456]	; (9d78 <Driving+0x358>)
    9bae:	f04f 0200 	mov.w	r2, #0
    9bb2:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:198
		d_left_history[0] = 0;
    9bb4:	4b71      	ldr	r3, [pc, #452]	; (9d7c <Driving+0x35c>)
    9bb6:	f04f 0200 	mov.w	r2, #0
    9bba:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:199
		d_left_history[1] = 0;
    9bbc:	4b6f      	ldr	r3, [pc, #444]	; (9d7c <Driving+0x35c>)
    9bbe:	f04f 0200 	mov.w	r2, #0
    9bc2:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:200
		d_hp_filtered = 0;				// HP filtered relevant distance values
    9bc4:	4b6e      	ldr	r3, [pc, #440]	; (9d80 <Driving+0x360>)
    9bc6:	f04f 0200 	mov.w	r2, #0
    9bca:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:201
		distance_HP = distance_HPNull;
    9bcc:	4a6d      	ldr	r2, [pc, #436]	; (9d84 <Driving+0x364>)
    9bce:	4b6e      	ldr	r3, [pc, #440]	; (9d88 <Driving+0x368>)
    9bd0:	4614      	mov	r4, r2
    9bd2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
    9bd4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:204

		//#ifdef WALL_DISAPPEARANCE_ENABLE
			wall_availability_distance_sensors = wall_availability_distance_sensorsNull;
    9bd8:	4b6c      	ldr	r3, [pc, #432]	; (9d8c <Driving+0x36c>)
    9bda:	4a6d      	ldr	r2, [pc, #436]	; (9d90 <Driving+0x370>)
    9bdc:	8812      	ldrh	r2, [r2, #0]
    9bde:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:205
			distanceBandpass = distanceBandpassNull;
    9be0:	4a6c      	ldr	r2, [pc, #432]	; (9d94 <Driving+0x374>)
    9be2:	4b6d      	ldr	r3, [pc, #436]	; (9d98 <Driving+0x378>)
    9be4:	4614      	mov	r4, r2
    9be6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
    9be8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:206
			wallStateDistanceSensors = wallStateDistanceSensorsNull;
    9bec:	4b6b      	ldr	r3, [pc, #428]	; (9d9c <Driving+0x37c>)
    9bee:	4a6c      	ldr	r2, [pc, #432]	; (9da0 <Driving+0x380>)
    9bf0:	8812      	ldrh	r2, [r2, #0]
    9bf2:	801a      	strh	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:209
		//#endif
		/* For actual position and attitude correction */
		theta = 0; // is used for theta estimation in VelocityEstimation
    9bf4:	4b6b      	ldr	r3, [pc, #428]	; (9da4 <Driving+0x384>)
    9bf6:	f04f 0200 	mov.w	r2, #0
    9bfa:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:210
		wallCenterDivergence = 0;
    9bfc:	4b6a      	ldr	r3, [pc, #424]	; (9da8 <Driving+0x388>)
    9bfe:	f04f 0200 	mov.w	r2, #0
    9c02:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:211
		weightDistanceSensor = 0;
    9c04:	4b69      	ldr	r3, [pc, #420]	; (9dac <Driving+0x38c>)
    9c06:	f04f 0200 	mov.w	r2, #0
    9c0a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:214

		/* distance test */
		x_IMU_dot_test = 0;
    9c0c:	4b68      	ldr	r3, [pc, #416]	; (9db0 <Driving+0x390>)
    9c0e:	f04f 0200 	mov.w	r2, #0
    9c12:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:215
		x_enc_test = 0;
    9c14:	4b67      	ldr	r3, [pc, #412]	; (9db4 <Driving+0x394>)
    9c16:	f04f 0200 	mov.w	r2, #0
    9c1a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:216
		u_bat = 0;
    9c1c:	4b66      	ldr	r3, [pc, #408]	; (9db8 <Driving+0x398>)
    9c1e:	f04f 0200 	mov.w	r2, #0
    9c22:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:218

		gyroXY[0] = 0;
    9c24:	4b65      	ldr	r3, [pc, #404]	; (9dbc <Driving+0x39c>)
    9c26:	f04f 0200 	mov.w	r2, #0
    9c2a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:219
		gyroXY[1] = 0;
    9c2c:	4b63      	ldr	r3, [pc, #396]	; (9dbc <Driving+0x39c>)
    9c2e:	f04f 0200 	mov.w	r2, #0
    9c32:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:220
		vc_logging[0] = 0;
    9c34:	4b62      	ldr	r3, [pc, #392]	; (9dc0 <Driving+0x3a0>)
    9c36:	f04f 0200 	mov.w	r2, #0
    9c3a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:221
		vc_logging[1] = 0;
    9c3c:	4b60      	ldr	r3, [pc, #384]	; (9dc0 <Driving+0x3a0>)
    9c3e:	f04f 0200 	mov.w	r2, #0
    9c42:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:222
		I_mot_ist[0] = 0;
    9c44:	4b5f      	ldr	r3, [pc, #380]	; (9dc4 <Driving+0x3a4>)
    9c46:	f04f 0200 	mov.w	r2, #0
    9c4a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:223
		I_mot_ist[1] = 0;
    9c4c:	4b5d      	ldr	r3, [pc, #372]	; (9dc4 <Driving+0x3a4>)
    9c4e:	f04f 0200 	mov.w	r2, #0
    9c52:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:227
	}


	if(!TargetPointsCalculated){
    9c54:	4b21      	ldr	r3, [pc, #132]	; (9cdc <Driving+0x2bc>)
    9c56:	781b      	ldrb	r3, [r3, #0]
    9c58:	f083 0301 	eor.w	r3, r3, #1
    9c5c:	b2db      	uxtb	r3, r3
    9c5e:	2b00      	cmp	r3, #0
    9c60:	f000 80b5 	beq.w	9dce <Driving+0x3ae>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:228
		exploDriveFlag_to_reinit_Drving = false;
    9c64:	4b15      	ldr	r3, [pc, #84]	; (9cbc <Driving+0x29c>)
    9c66:	2200      	movs	r2, #0
    9c68:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:230
		/* set start position */
		SegmentTargets.q_x[0] = q_r[0];
    9c6a:	4b19      	ldr	r3, [pc, #100]	; (9cd0 <Driving+0x2b0>)
    9c6c:	681a      	ldr	r2, [r3, #0]
    9c6e:	4b1c      	ldr	r3, [pc, #112]	; (9ce0 <Driving+0x2c0>)
    9c70:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:231
		SegmentTargets.q_y[0] = q_r[1];
    9c72:	4b17      	ldr	r3, [pc, #92]	; (9cd0 <Driving+0x2b0>)
    9c74:	685a      	ldr	r2, [r3, #4]
    9c76:	4b1a      	ldr	r3, [pc, #104]	; (9ce0 <Driving+0x2c0>)
    9c78:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:232
		SegmentTargets.q_theta[0] = q_r[2];
    9c7c:	4b14      	ldr	r3, [pc, #80]	; (9cd0 <Driving+0x2b0>)
    9c7e:	689a      	ldr	r2, [r3, #8]
    9c80:	4b17      	ldr	r3, [pc, #92]	; (9ce0 <Driving+0x2c0>)
    9c82:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:233
		if(SegmentTargetComputation(MazeSegmentsToBeDriven, &SegmentTargets)){
    9c86:	4b16      	ldr	r3, [pc, #88]	; (9ce0 <Driving+0x2c0>)
    9c88:	93ed      	str	r3, [sp, #948]	; 0x3b4
    9c8a:	4669      	mov	r1, sp
    9c8c:	f107 0228 	add.w	r2, r7, #40	; 0x28
    9c90:	f44f 736d 	mov.w	r3, #948	; 0x3b4
    9c94:	4608      	mov	r0, r1
    9c96:	4611      	mov	r1, r2
    9c98:	461a      	mov	r2, r3
    9c9a:	f003 fdd3 	bl	d844 <memcpy>
    9c9e:	f107 0c18 	add.w	ip, r7, #24
    9ca2:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    9ca6:	f000 ffa3 	bl	abf0 <SegmentTargetComputation>
    9caa:	4603      	mov	r3, r0
    9cac:	2b00      	cmp	r3, #0
    9cae:	f000 808b 	beq.w	9dc8 <Driving+0x3a8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:234
			TargetPointsCalculated = true;
    9cb2:	4b0a      	ldr	r3, [pc, #40]	; (9cdc <Driving+0x2bc>)
    9cb4:	2201      	movs	r2, #1
    9cb6:	701a      	strb	r2, [r3, #0]
    9cb8:	e089      	b.n	9dce <Driving+0x3ae>
    9cba:	bf00      	nop
    9cbc:	200005cc 	.word	0x200005cc
    9cc0:	20000008 	.word	0x20000008
    9cc4:	3fb851ec 	.word	0x3fb851ec
    9cc8:	bfc3d70b 	.word	0xbfc3d70b
    9ccc:	40490fdb 	.word	0x40490fdb
    9cd0:	20000014 	.word	0x20000014
    9cd4:	200005d0 	.word	0x200005d0
    9cd8:	200005d8 	.word	0x200005d8
    9cdc:	200005dc 	.word	0x200005dc
    9ce0:	200005e0 	.word	0x200005e0
    9ce4:	200007cc 	.word	0x200007cc
    9ce8:	200009b8 	.word	0x200009b8
    9cec:	20000020 	.word	0x20000020
    9cf0:	20000021 	.word	0x20000021
    9cf4:	200009bc 	.word	0x200009bc
    9cf8:	200009bd 	.word	0x200009bd
    9cfc:	200009be 	.word	0x200009be
    9d00:	200009c0 	.word	0x200009c0
    9d04:	200009c4 	.word	0x200009c4
    9d08:	200009c8 	.word	0x200009c8
    9d0c:	200009cc 	.word	0x200009cc
    9d10:	20000024 	.word	0x20000024
    9d14:	3c23d70a 	.word	0x3c23d70a
    9d18:	200009d0 	.word	0x200009d0
    9d1c:	200009d4 	.word	0x200009d4
    9d20:	200009d8 	.word	0x200009d8
    9d24:	200009dc 	.word	0x200009dc
    9d28:	200009e0 	.word	0x200009e0
    9d2c:	200009e4 	.word	0x200009e4
    9d30:	200009e8 	.word	0x200009e8
    9d34:	200009ec 	.word	0x200009ec
    9d38:	200009f0 	.word	0x200009f0
    9d3c:	200009f4 	.word	0x200009f4
    9d40:	200009f8 	.word	0x200009f8
    9d44:	20000a00 	.word	0x20000a00
    9d48:	20000a04 	.word	0x20000a04
    9d4c:	20000a0c 	.word	0x20000a0c
    9d50:	20000a14 	.word	0x20000a14
    9d54:	20000a1c 	.word	0x20000a1c
    9d58:	20000a24 	.word	0x20000a24
    9d5c:	20000028 	.word	0x20000028
    9d60:	3f4ccccd 	.word	0x3f4ccccd
    9d64:	20000a2c 	.word	0x20000a2c
    9d68:	20000a30 	.word	0x20000a30
    9d6c:	20000a3c 	.word	0x20000a3c
    9d70:	20000a48 	.word	0x20000a48
    9d74:	20000a58 	.word	0x20000a58
    9d78:	20000a68 	.word	0x20000a68
    9d7c:	20000a70 	.word	0x20000a70
    9d80:	20000a78 	.word	0x20000a78
    9d84:	20000a7c 	.word	0x20000a7c
    9d88:	20000a8c 	.word	0x20000a8c
    9d8c:	20000a9c 	.word	0x20000a9c
    9d90:	20000aa0 	.word	0x20000aa0
    9d94:	20000aa4 	.word	0x20000aa4
    9d98:	20000ab4 	.word	0x20000ab4
    9d9c:	20000ac4 	.word	0x20000ac4
    9da0:	20000ac8 	.word	0x20000ac8
    9da4:	20000acc 	.word	0x20000acc
    9da8:	20000ad0 	.word	0x20000ad0
    9dac:	20000ad4 	.word	0x20000ad4
    9db0:	20000ad8 	.word	0x20000ad8
    9db4:	20000adc 	.word	0x20000adc
    9db8:	20000ae0 	.word	0x20000ae0
    9dbc:	20000ae4 	.word	0x20000ae4
    9dc0:	20000aec 	.word	0x20000aec
    9dc4:	20000af4 	.word	0x20000af4
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:237
		}else{
			/* error: segment target computation not succeeded! */
			return true; /* stop calling driving, i am done (not started, as segment target computation failed)!*/
    9dc8:	2301      	movs	r3, #1
    9dca:	f000 be08 	b.w	a9de <Driving+0xfbe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:245

	/*
	* Calculate new reference velocity profile for next maze segment
	* when segment has been finished.
	*/
	path_prev = path;
    9dce:	4ba2      	ldr	r3, [pc, #648]	; (a058 <Driving+0x638>)
    9dd0:	681a      	ldr	r2, [r3, #0]
    9dd2:	4ba2      	ldr	r3, [pc, #648]	; (a05c <Driving+0x63c>)
    9dd4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:246
	if (SegmentFinished == true && SegmentNumber < MazeSegmentsToBeDriven.numberOfSegments &&
    9dd6:	4ba2      	ldr	r3, [pc, #648]	; (a060 <Driving+0x640>)
    9dd8:	781b      	ldrb	r3, [r3, #0]
    9dda:	2b00      	cmp	r3, #0
    9ddc:	f000 831c 	beq.w	a418 <Driving+0x9f8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:246 (discriminator 1)
    9de0:	f897 23d8 	ldrb.w	r2, [r7, #984]	; 0x3d8
    9de4:	4b9f      	ldr	r3, [pc, #636]	; (a064 <Driving+0x644>)
    9de6:	781b      	ldrb	r3, [r3, #0]
    9de8:	429a      	cmp	r2, r3
    9dea:	f240 8315 	bls.w	a418 <Driving+0x9f8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:247 (discriminator 1)
			ds_before_curve >= DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE){
    9dee:	4b9e      	ldr	r3, [pc, #632]	; (a068 <Driving+0x648>)
    9df0:	edd3 7a00 	vldr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:246 (discriminator 1)
	/*
	* Calculate new reference velocity profile for next maze segment
	* when segment has been finished.
	*/
	path_prev = path;
	if (SegmentFinished == true && SegmentNumber < MazeSegmentsToBeDriven.numberOfSegments &&
    9df4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
    9df8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    9dfc:	f2c0 830c 	blt.w	a418 <Driving+0x9f8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:250
			ds_before_curve >= DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE){

		/* NEW: target_point realignment/correction (integration leads to a small divergence) */
		q[0] = SegmentTargets.q_x[SegmentNumber] - (q_r[0] - q[0]);
    9e00:	4b98      	ldr	r3, [pc, #608]	; (a064 <Driving+0x644>)
    9e02:	781b      	ldrb	r3, [r3, #0]
    9e04:	4a99      	ldr	r2, [pc, #612]	; (a06c <Driving+0x64c>)
    9e06:	009b      	lsls	r3, r3, #2
    9e08:	4413      	add	r3, r2
    9e0a:	ed93 7a00 	vldr	s14, [r3]
    9e0e:	4b98      	ldr	r3, [pc, #608]	; (a070 <Driving+0x650>)
    9e10:	edd3 6a00 	vldr	s13, [r3]
    9e14:	4b97      	ldr	r3, [pc, #604]	; (a074 <Driving+0x654>)
    9e16:	edd3 7a00 	vldr	s15, [r3]
    9e1a:	ee76 7ae7 	vsub.f32	s15, s13, s15
    9e1e:	ee77 7a67 	vsub.f32	s15, s14, s15
    9e22:	4b94      	ldr	r3, [pc, #592]	; (a074 <Driving+0x654>)
    9e24:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:251
		q[1] = SegmentTargets.q_y[SegmentNumber] - (q_r[1] - q[1]);
    9e28:	4b8e      	ldr	r3, [pc, #568]	; (a064 <Driving+0x644>)
    9e2a:	781b      	ldrb	r3, [r3, #0]
    9e2c:	4a8f      	ldr	r2, [pc, #572]	; (a06c <Driving+0x64c>)
    9e2e:	3328      	adds	r3, #40	; 0x28
    9e30:	009b      	lsls	r3, r3, #2
    9e32:	4413      	add	r3, r2
    9e34:	ed93 7a01 	vldr	s14, [r3, #4]
    9e38:	4b8d      	ldr	r3, [pc, #564]	; (a070 <Driving+0x650>)
    9e3a:	edd3 6a01 	vldr	s13, [r3, #4]
    9e3e:	4b8d      	ldr	r3, [pc, #564]	; (a074 <Driving+0x654>)
    9e40:	edd3 7a01 	vldr	s15, [r3, #4]
    9e44:	ee76 7ae7 	vsub.f32	s15, s13, s15
    9e48:	ee77 7a67 	vsub.f32	s15, s14, s15
    9e4c:	4b89      	ldr	r3, [pc, #548]	; (a074 <Driving+0x654>)
    9e4e:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:252
		q[2] = SegmentTargets.q_theta[SegmentNumber];
    9e52:	4b84      	ldr	r3, [pc, #528]	; (a064 <Driving+0x644>)
    9e54:	781b      	ldrb	r3, [r3, #0]
    9e56:	4a85      	ldr	r2, [pc, #532]	; (a06c <Driving+0x64c>)
    9e58:	3352      	adds	r3, #82	; 0x52
    9e5a:	009b      	lsls	r3, r3, #2
    9e5c:	4413      	add	r3, r2
    9e5e:	681a      	ldr	r2, [r3, #0]
    9e60:	4b84      	ldr	r3, [pc, #528]	; (a074 <Driving+0x654>)
    9e62:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:253
		q_r[0] = SegmentTargets.q_x[SegmentNumber];
    9e64:	4b7f      	ldr	r3, [pc, #508]	; (a064 <Driving+0x644>)
    9e66:	781b      	ldrb	r3, [r3, #0]
    9e68:	4a80      	ldr	r2, [pc, #512]	; (a06c <Driving+0x64c>)
    9e6a:	009b      	lsls	r3, r3, #2
    9e6c:	4413      	add	r3, r2
    9e6e:	681a      	ldr	r2, [r3, #0]
    9e70:	4b7f      	ldr	r3, [pc, #508]	; (a070 <Driving+0x650>)
    9e72:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:254
		q_r[1] = SegmentTargets.q_y[SegmentNumber];
    9e74:	4b7b      	ldr	r3, [pc, #492]	; (a064 <Driving+0x644>)
    9e76:	781b      	ldrb	r3, [r3, #0]
    9e78:	4a7c      	ldr	r2, [pc, #496]	; (a06c <Driving+0x64c>)
    9e7a:	3328      	adds	r3, #40	; 0x28
    9e7c:	009b      	lsls	r3, r3, #2
    9e7e:	4413      	add	r3, r2
    9e80:	685a      	ldr	r2, [r3, #4]
    9e82:	4b7b      	ldr	r3, [pc, #492]	; (a070 <Driving+0x650>)
    9e84:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:255
		q_r[2] = SegmentTargets.q_theta[SegmentNumber];
    9e86:	4b77      	ldr	r3, [pc, #476]	; (a064 <Driving+0x644>)
    9e88:	781b      	ldrb	r3, [r3, #0]
    9e8a:	4a78      	ldr	r2, [pc, #480]	; (a06c <Driving+0x64c>)
    9e8c:	3352      	adds	r3, #82	; 0x52
    9e8e:	009b      	lsls	r3, r3, #2
    9e90:	4413      	add	r3, r2
    9e92:	681a      	ldr	r2, [r3, #0]
    9e94:	4b76      	ldr	r3, [pc, #472]	; (a070 <Driving+0x650>)
    9e96:	609a      	str	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:257

		path = MazeSegmentsToBeDriven.segments[SegmentNumber].SingleSegment;
    9e98:	4b72      	ldr	r3, [pc, #456]	; (a064 <Driving+0x644>)
    9e9a:	781b      	ldrb	r3, [r3, #0]
    9e9c:	461a      	mov	r2, r3
    9e9e:	4613      	mov	r3, r2
    9ea0:	005b      	lsls	r3, r3, #1
    9ea2:	4413      	add	r3, r2
    9ea4:	00db      	lsls	r3, r3, #3
    9ea6:	f107 0218 	add.w	r2, r7, #24
    9eaa:	4413      	add	r3, r2
    9eac:	681a      	ldr	r2, [r3, #0]
    9eae:	4b6a      	ldr	r3, [pc, #424]	; (a058 <Driving+0x638>)
    9eb0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:258
		path_next = MazeSegmentsToBeDriven.segments[SegmentNumber + 1].SingleSegment;
    9eb2:	4b6c      	ldr	r3, [pc, #432]	; (a064 <Driving+0x644>)
    9eb4:	781b      	ldrb	r3, [r3, #0]
    9eb6:	1c5a      	adds	r2, r3, #1
    9eb8:	4613      	mov	r3, r2
    9eba:	005b      	lsls	r3, r3, #1
    9ebc:	4413      	add	r3, r2
    9ebe:	00db      	lsls	r3, r3, #3
    9ec0:	f107 0c18 	add.w	ip, r7, #24
    9ec4:	4463      	add	r3, ip
    9ec6:	681a      	ldr	r2, [r3, #0]
    9ec8:	4b6b      	ldr	r3, [pc, #428]	; (a078 <Driving+0x658>)
    9eca:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:260

		ds_driven = 0;
    9ecc:	4b6b      	ldr	r3, [pc, #428]	; (a07c <Driving+0x65c>)
    9ece:	f04f 0200 	mov.w	r2, #0
    9ed2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:261
		Nr_of_field_in_segment = 0;
    9ed4:	4b6a      	ldr	r3, [pc, #424]	; (a080 <Driving+0x660>)
    9ed6:	2200      	movs	r2, #0
    9ed8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:262
		wall_availability_fusion.wallRightDisappeared = true;
    9eda:	4b6a      	ldr	r3, [pc, #424]	; (a084 <Driving+0x664>)
    9edc:	2201      	movs	r2, #1
    9ede:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:263
		wall_availability_fusion.wallLeftDisappeared = true;
    9ee0:	4b68      	ldr	r3, [pc, #416]	; (a084 <Driving+0x664>)
    9ee2:	2201      	movs	r2, #1
    9ee4:	705a      	strb	r2, [r3, #1]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:267
		/*
		* TURN segment:
		*/
		if (path == 45 || path == -45 ||
    9ee6:	4b5c      	ldr	r3, [pc, #368]	; (a058 <Driving+0x638>)
    9ee8:	681b      	ldr	r3, [r3, #0]
    9eea:	2b2d      	cmp	r3, #45	; 0x2d
    9eec:	d01f      	beq.n	9f2e <Driving+0x50e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:267 (discriminator 1)
    9eee:	4b5a      	ldr	r3, [pc, #360]	; (a058 <Driving+0x638>)
    9ef0:	681b      	ldr	r3, [r3, #0]
    9ef2:	f113 0f2d 	cmn.w	r3, #45	; 0x2d
    9ef6:	d01a      	beq.n	9f2e <Driving+0x50e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:268 (discriminator 1)
			path == 90 || path == -90 ||
    9ef8:	4b57      	ldr	r3, [pc, #348]	; (a058 <Driving+0x638>)
    9efa:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:267 (discriminator 1)
		wall_availability_fusion.wallRightDisappeared = true;
		wall_availability_fusion.wallLeftDisappeared = true;
		/*
		* TURN segment:
		*/
		if (path == 45 || path == -45 ||
    9efc:	2b5a      	cmp	r3, #90	; 0x5a
    9efe:	d016      	beq.n	9f2e <Driving+0x50e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:268
			path == 90 || path == -90 ||
    9f00:	4b55      	ldr	r3, [pc, #340]	; (a058 <Driving+0x638>)
    9f02:	681b      	ldr	r3, [r3, #0]
    9f04:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    9f08:	d011      	beq.n	9f2e <Driving+0x50e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:269 (discriminator 1)
			path == 135 || path == -135 ||
    9f0a:	4b53      	ldr	r3, [pc, #332]	; (a058 <Driving+0x638>)
    9f0c:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:268 (discriminator 1)
		wall_availability_fusion.wallLeftDisappeared = true;
		/*
		* TURN segment:
		*/
		if (path == 45 || path == -45 ||
			path == 90 || path == -90 ||
    9f0e:	2b87      	cmp	r3, #135	; 0x87
    9f10:	d00d      	beq.n	9f2e <Driving+0x50e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:269
			path == 135 || path == -135 ||
    9f12:	4b51      	ldr	r3, [pc, #324]	; (a058 <Driving+0x638>)
    9f14:	681b      	ldr	r3, [r3, #0]
    9f16:	f113 0f87 	cmn.w	r3, #135	; 0x87
    9f1a:	d008      	beq.n	9f2e <Driving+0x50e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:270 (discriminator 1)
			path == 180 || path == -180) {
    9f1c:	4b4e      	ldr	r3, [pc, #312]	; (a058 <Driving+0x638>)
    9f1e:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:269 (discriminator 1)
		/*
		* TURN segment:
		*/
		if (path == 45 || path == -45 ||
			path == 90 || path == -90 ||
			path == 135 || path == -135 ||
    9f20:	2bb4      	cmp	r3, #180	; 0xb4
    9f22:	d004      	beq.n	9f2e <Driving+0x50e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:270
			path == 180 || path == -180) {
    9f24:	4b4c      	ldr	r3, [pc, #304]	; (a058 <Driving+0x638>)
    9f26:	681b      	ldr	r3, [r3, #0]
    9f28:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    9f2c:	d14c      	bne.n	9fc8 <Driving+0x5a8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:271
				SegmentType = false;
    9f2e:	4b56      	ldr	r3, [pc, #344]	; (a088 <Driving+0x668>)
    9f30:	2200      	movs	r2, #0
    9f32:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:272
				t1 = (float)(CURVE_RADIUS * fabsf((float)DEGREES_TO_RAD*path) * V_CURVE_INVERSE);
    9f34:	4b48      	ldr	r3, [pc, #288]	; (a058 <Driving+0x638>)
    9f36:	681b      	ldr	r3, [r3, #0]
    9f38:	ee07 3a90 	vmov	s15, r3
    9f3c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    9f40:	eddf 7a52 	vldr	s15, [pc, #328]	; a08c <Driving+0x66c>
    9f44:	ee67 7a27 	vmul.f32	s15, s14, s15
    9f48:	eeb0 7ae7 	vabs.f32	s14, s15
    9f4c:	eddf 7a50 	vldr	s15, [pc, #320]	; a090 <Driving+0x670>
    9f50:	ee27 7a27 	vmul.f32	s14, s14, s15
    9f54:	eef7 7a04 	vmov.f32	s15, #116	; 0x74
    9f58:	ee67 7a27 	vmul.f32	s15, s14, s15
    9f5c:	4b4d      	ldr	r3, [pc, #308]	; (a094 <Driving+0x674>)
    9f5e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:273
				t2 = 0;
    9f62:	4b4d      	ldr	r3, [pc, #308]	; (a098 <Driving+0x678>)
    9f64:	f04f 0200 	mov.w	r2, #0
    9f68:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:274
				t3 = 0;
    9f6a:	4b4c      	ldr	r3, [pc, #304]	; (a09c <Driving+0x67c>)
    9f6c:	f04f 0200 	mov.w	r2, #0
    9f70:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:275
				v_ref[0] = v_next;
    9f72:	4b4b      	ldr	r3, [pc, #300]	; (a0a0 <Driving+0x680>)
    9f74:	681a      	ldr	r2, [r3, #0]
    9f76:	4b4b      	ldr	r3, [pc, #300]	; (a0a4 <Driving+0x684>)
    9f78:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:276
				v_ref[1] = (float)(DEGREES_TO_RAD*path / t1);
    9f7a:	4b37      	ldr	r3, [pc, #220]	; (a058 <Driving+0x638>)
    9f7c:	681b      	ldr	r3, [r3, #0]
    9f7e:	ee07 3a90 	vmov	s15, r3
    9f82:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    9f86:	eddf 7a41 	vldr	s15, [pc, #260]	; a08c <Driving+0x66c>
    9f8a:	ee27 7a27 	vmul.f32	s14, s14, s15
    9f8e:	4b41      	ldr	r3, [pc, #260]	; (a094 <Driving+0x674>)
    9f90:	edd3 7a00 	vldr	s15, [r3]
    9f94:	eec7 7a27 	vdiv.f32	s15, s14, s15
    9f98:	4b42      	ldr	r3, [pc, #264]	; (a0a4 <Driving+0x684>)
    9f9a:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:277
				theta_target = theta_target + path;
    9f9e:	4b42      	ldr	r3, [pc, #264]	; (a0a8 <Driving+0x688>)
    9fa0:	681a      	ldr	r2, [r3, #0]
    9fa2:	4b2d      	ldr	r3, [pc, #180]	; (a058 <Driving+0x638>)
    9fa4:	681b      	ldr	r3, [r3, #0]
    9fa6:	441a      	add	r2, r3
    9fa8:	4b3f      	ldr	r3, [pc, #252]	; (a0a8 <Driving+0x688>)
    9faa:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:278
				SegmentTime = 0;
    9fac:	4b3f      	ldr	r3, [pc, #252]	; (a0ac <Driving+0x68c>)
    9fae:	f04f 0200 	mov.w	r2, #0
    9fb2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:279
				SegmentNumber = SegmentNumber + 1;
    9fb4:	4b2b      	ldr	r3, [pc, #172]	; (a064 <Driving+0x644>)
    9fb6:	781b      	ldrb	r3, [r3, #0]
    9fb8:	3301      	adds	r3, #1
    9fba:	b2da      	uxtb	r2, r3
    9fbc:	4b29      	ldr	r3, [pc, #164]	; (a064 <Driving+0x644>)
    9fbe:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:280
				SegmentFinished = false;
    9fc0:	4b27      	ldr	r3, [pc, #156]	; (a060 <Driving+0x640>)
    9fc2:	2200      	movs	r2, #0
    9fc4:	701a      	strb	r2, [r3, #0]
    9fc6:	e1f4      	b.n	a3b2 <Driving+0x992>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:285
		}
		/*
		* TURN on the spot segment:
		*/
		else if(path == 900 || path == -900){
    9fc8:	4b23      	ldr	r3, [pc, #140]	; (a058 <Driving+0x638>)
    9fca:	681b      	ldr	r3, [r3, #0]
    9fcc:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    9fd0:	d004      	beq.n	9fdc <Driving+0x5bc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:285 (discriminator 1)
    9fd2:	4b21      	ldr	r3, [pc, #132]	; (a058 <Driving+0x638>)
    9fd4:	681b      	ldr	r3, [r3, #0]
    9fd6:	f513 7f61 	cmn.w	r3, #900	; 0x384
    9fda:	d16f      	bne.n	a0bc <Driving+0x69c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:286
			SegmentType = false;
    9fdc:	4b2a      	ldr	r3, [pc, #168]	; (a088 <Driving+0x668>)
    9fde:	2200      	movs	r2, #0
    9fe0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:287
			t1 =(float)(((float)DEGREES_TO_RAD * 90) * V_ANGULAR_SPOT_INVERSE);
    9fe2:	4b2c      	ldr	r3, [pc, #176]	; (a094 <Driving+0x674>)
    9fe4:	4a32      	ldr	r2, [pc, #200]	; (a0b0 <Driving+0x690>)
    9fe6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:288
			t2 = 0;
    9fe8:	4b2b      	ldr	r3, [pc, #172]	; (a098 <Driving+0x678>)
    9fea:	f04f 0200 	mov.w	r2, #0
    9fee:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:289
			t3 = 0;
    9ff0:	4b2a      	ldr	r3, [pc, #168]	; (a09c <Driving+0x67c>)
    9ff2:	f04f 0200 	mov.w	r2, #0
    9ff6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:290
			v_ref[0] = (float)0;
    9ff8:	4b2a      	ldr	r3, [pc, #168]	; (a0a4 <Driving+0x684>)
    9ffa:	f04f 0200 	mov.w	r2, #0
    9ffe:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:291
			if (path == 900){
    a000:	4b15      	ldr	r3, [pc, #84]	; (a058 <Driving+0x638>)
    a002:	681b      	ldr	r3, [r3, #0]
    a004:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    a008:	d109      	bne.n	a01e <Driving+0x5fe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:292
				theta_target = theta_target + 90;
    a00a:	4b27      	ldr	r3, [pc, #156]	; (a0a8 <Driving+0x688>)
    a00c:	681b      	ldr	r3, [r3, #0]
    a00e:	f103 025a 	add.w	r2, r3, #90	; 0x5a
    a012:	4b25      	ldr	r3, [pc, #148]	; (a0a8 <Driving+0x688>)
    a014:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:293
				v_ref[1] =(V_ANGULAR_SPOT);
    a016:	4b23      	ldr	r3, [pc, #140]	; (a0a4 <Driving+0x684>)
    a018:	4a26      	ldr	r2, [pc, #152]	; (a0b4 <Driving+0x694>)
    a01a:	605a      	str	r2, [r3, #4]
    a01c:	e00d      	b.n	a03a <Driving+0x61a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:294
			}else if(path == -900){
    a01e:	4b0e      	ldr	r3, [pc, #56]	; (a058 <Driving+0x638>)
    a020:	681b      	ldr	r3, [r3, #0]
    a022:	f513 7f61 	cmn.w	r3, #900	; 0x384
    a026:	d108      	bne.n	a03a <Driving+0x61a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:295
				theta_target = theta_target - 90;
    a028:	4b1f      	ldr	r3, [pc, #124]	; (a0a8 <Driving+0x688>)
    a02a:	681b      	ldr	r3, [r3, #0]
    a02c:	f1a3 025a 	sub.w	r2, r3, #90	; 0x5a
    a030:	4b1d      	ldr	r3, [pc, #116]	; (a0a8 <Driving+0x688>)
    a032:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:296
				v_ref[1] = -(V_ANGULAR_SPOT);
    a034:	4b1b      	ldr	r3, [pc, #108]	; (a0a4 <Driving+0x684>)
    a036:	4a20      	ldr	r2, [pc, #128]	; (a0b8 <Driving+0x698>)
    a038:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:298
			}
			SegmentTime = 0;
    a03a:	4b1c      	ldr	r3, [pc, #112]	; (a0ac <Driving+0x68c>)
    a03c:	f04f 0200 	mov.w	r2, #0
    a040:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:299
			SegmentNumber = SegmentNumber + 1;
    a042:	4b08      	ldr	r3, [pc, #32]	; (a064 <Driving+0x644>)
    a044:	781b      	ldrb	r3, [r3, #0]
    a046:	3301      	adds	r3, #1
    a048:	b2da      	uxtb	r2, r3
    a04a:	4b06      	ldr	r3, [pc, #24]	; (a064 <Driving+0x644>)
    a04c:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:300
			SegmentFinished = false;
    a04e:	4b04      	ldr	r3, [pc, #16]	; (a060 <Driving+0x640>)
    a050:	2200      	movs	r2, #0
    a052:	701a      	strb	r2, [r3, #0]
    a054:	e1ad      	b.n	a3b2 <Driving+0x992>
    a056:	bf00      	nop
    a058:	200009c0 	.word	0x200009c0
    a05c:	200009c8 	.word	0x200009c8
    a060:	20000020 	.word	0x20000020
    a064:	200009be 	.word	0x200009be
    a068:	20000024 	.word	0x20000024
    a06c:	200005e0 	.word	0x200005e0
    a070:	20000014 	.word	0x20000014
    a074:	20000008 	.word	0x20000008
    a078:	200009c4 	.word	0x200009c4
    a07c:	200009d0 	.word	0x200009d0
    a080:	200009d4 	.word	0x200009d4
    a084:	200009e0 	.word	0x200009e0
    a088:	20000021 	.word	0x20000021
    a08c:	3c8efa35 	.word	0x3c8efa35
    a090:	3db851ec 	.word	0x3db851ec
    a094:	200009e8 	.word	0x200009e8
    a098:	200009ec 	.word	0x200009ec
    a09c:	200009f0 	.word	0x200009f0
    a0a0:	20000028 	.word	0x20000028
    a0a4:	200009f8 	.word	0x200009f8
    a0a8:	200009b8 	.word	0x200009b8
    a0ac:	20000a2c 	.word	0x20000a2c
    a0b0:	3dd692c3 	.word	0x3dd692c3
    a0b4:	41700000 	.word	0x41700000
    a0b8:	c1700000 	.word	0xc1700000
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:307
		/*
		* STRAIGHT segment:
		*/
		else
		{
			SegmentType = true;
    a0bc:	4bc0      	ldr	r3, [pc, #768]	; (a3c0 <Driving+0x9a0>)
    a0be:	2201      	movs	r2, #1
    a0c0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:308
			ds = (float)((path * MAZE_SIZE) - DISTANCE_BETWEEN_CENTER_OF_MASS_AND_DISTANCE_SENSOR);
    a0c2:	4bc0      	ldr	r3, [pc, #768]	; (a3c4 <Driving+0x9a4>)
    a0c4:	681b      	ldr	r3, [r3, #0]
    a0c6:	ee07 3a90 	vmov	s15, r3
    a0ca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    a0ce:	eddf 7abe 	vldr	s15, [pc, #760]	; a3c8 <Driving+0x9a8>
    a0d2:	ee27 7a27 	vmul.f32	s14, s14, s15
    a0d6:	eddf 7abd 	vldr	s15, [pc, #756]	; a3cc <Driving+0x9ac>
    a0da:	ee77 7a67 	vsub.f32	s15, s14, s15
    a0de:	4bbc      	ldr	r3, [pc, #752]	; (a3d0 <Driving+0x9b0>)
    a0e0:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:310
			/* Final segment reached, v_next = 0 to stop */
			if (SegmentNumber + 1 == MazeSegmentsToBeDriven.numberOfSegments){
    a0e4:	4bbb      	ldr	r3, [pc, #748]	; (a3d4 <Driving+0x9b4>)
    a0e6:	781b      	ldrb	r3, [r3, #0]
    a0e8:	1c5a      	adds	r2, r3, #1
    a0ea:	f897 33d8 	ldrb.w	r3, [r7, #984]	; 0x3d8
    a0ee:	429a      	cmp	r2, r3
    a0f0:	d103      	bne.n	a0fa <Driving+0x6da>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:311
				v_next = 0;
    a0f2:	4bb9      	ldr	r3, [pc, #740]	; (a3d8 <Driving+0x9b8>)
    a0f4:	f04f 0200 	mov.w	r2, #0
    a0f8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:313
			}
			t1 = (float)((-(2 * v_prev) + sqrtf((4 * v_prev* v_prev) -
    a0fa:	4bb8      	ldr	r3, [pc, #736]	; (a3dc <Driving+0x9bc>)
    a0fc:	ed93 7a00 	vldr	s14, [r3]
    a100:	eef1 7a00 	vmov.f32	s15, #16
    a104:	ee27 7a27 	vmul.f32	s14, s14, s15
    a108:	4bb4      	ldr	r3, [pc, #720]	; (a3dc <Driving+0x9bc>)
    a10a:	edd3 7a00 	vldr	s15, [r3]
    a10e:	ee27 7a27 	vmul.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:314
				4 * A_MAX * (((-(v_next * v_next) + (v_prev * v_prev)) *
    a112:	4bb2      	ldr	r3, [pc, #712]	; (a3dc <Driving+0x9bc>)
    a114:	edd3 6a00 	vldr	s13, [r3]
    a118:	4bb0      	ldr	r3, [pc, #704]	; (a3dc <Driving+0x9bc>)
    a11a:	edd3 7a00 	vldr	s15, [r3]
    a11e:	ee66 6aa7 	vmul.f32	s13, s13, s15
    a122:	4bad      	ldr	r3, [pc, #692]	; (a3d8 <Driving+0x9b8>)
    a124:	ed93 6a00 	vldr	s12, [r3]
    a128:	4bab      	ldr	r3, [pc, #684]	; (a3d8 <Driving+0x9b8>)
    a12a:	edd3 7a00 	vldr	s15, [r3]
    a12e:	ee66 7a27 	vmul.f32	s15, s12, s15
    a132:	ee76 6ae7 	vsub.f32	s13, s13, s15
    a136:	eddf 7aaa 	vldr	s15, [pc, #680]	; a3e0 <Driving+0x9c0>
    a13a:	ee66 6aa7 	vmul.f32	s13, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:315
					TWO_A_MAX_INVERSE) - ds))) * TWO_A_MAX_INVERSE);
    a13e:	4ba4      	ldr	r3, [pc, #656]	; (a3d0 <Driving+0x9b0>)
    a140:	edd3 7a00 	vldr	s15, [r3]
    a144:	ee76 6ae7 	vsub.f32	s13, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:314
			/* Final segment reached, v_next = 0 to stop */
			if (SegmentNumber + 1 == MazeSegmentsToBeDriven.numberOfSegments){
				v_next = 0;
			}
			t1 = (float)((-(2 * v_prev) + sqrtf((4 * v_prev* v_prev) -
				4 * A_MAX * (((-(v_next * v_next) + (v_prev * v_prev)) *
    a148:	eddf 7aa6 	vldr	s15, [pc, #664]	; a3e4 <Driving+0x9c4>
    a14c:	ee66 7aa7 	vmul.f32	s15, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:313
			ds = (float)((path * MAZE_SIZE) - DISTANCE_BETWEEN_CENTER_OF_MASS_AND_DISTANCE_SENSOR);
			/* Final segment reached, v_next = 0 to stop */
			if (SegmentNumber + 1 == MazeSegmentsToBeDriven.numberOfSegments){
				v_next = 0;
			}
			t1 = (float)((-(2 * v_prev) + sqrtf((4 * v_prev* v_prev) -
    a150:	ee77 7a67 	vsub.f32	s15, s14, s15
    a154:	eeb0 0a67 	vmov.f32	s0, s15
    a158:	f002 ffd0 	bl	d0fc <sqrtf>
    a15c:	eeb0 7a40 	vmov.f32	s14, s0
    a160:	4b9e      	ldr	r3, [pc, #632]	; (a3dc <Driving+0x9bc>)
    a162:	edd3 7a00 	vldr	s15, [r3]
    a166:	ee77 7aa7 	vadd.f32	s15, s15, s15
    a16a:	ee37 7a67 	vsub.f32	s14, s14, s15
    a16e:	eddf 7a9c 	vldr	s15, [pc, #624]	; a3e0 <Driving+0x9c0>
    a172:	ee67 7a27 	vmul.f32	s15, s14, s15
    a176:	4b9c      	ldr	r3, [pc, #624]	; (a3e8 <Driving+0x9c8>)
    a178:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:316
				4 * A_MAX * (((-(v_next * v_next) + (v_prev * v_prev)) *
					TWO_A_MAX_INVERSE) - ds))) * TWO_A_MAX_INVERSE);
			t2 = 0;
    a17c:	4b9b      	ldr	r3, [pc, #620]	; (a3ec <Driving+0x9cc>)
    a17e:	f04f 0200 	mov.w	r2, #0
    a182:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:317
			t3 = (float)((A_MAX * t1 + v_prev - v_next) * A_MAX_INVERSE);
    a184:	4b98      	ldr	r3, [pc, #608]	; (a3e8 <Driving+0x9c8>)
    a186:	ed93 7a00 	vldr	s14, [r3]
    a18a:	eef2 7a02 	vmov.f32	s15, #34	; 0x22
    a18e:	ee27 7a27 	vmul.f32	s14, s14, s15
    a192:	4b92      	ldr	r3, [pc, #584]	; (a3dc <Driving+0x9bc>)
    a194:	edd3 7a00 	vldr	s15, [r3]
    a198:	ee37 7a27 	vadd.f32	s14, s14, s15
    a19c:	4b8e      	ldr	r3, [pc, #568]	; (a3d8 <Driving+0x9b8>)
    a19e:	edd3 7a00 	vldr	s15, [r3]
    a1a2:	ee37 7a67 	vsub.f32	s14, s14, s15
    a1a6:	eddf 7a92 	vldr	s15, [pc, #584]	; a3f0 <Driving+0x9d0>
    a1aa:	ee67 7a27 	vmul.f32	s15, s14, s15
    a1ae:	4b91      	ldr	r3, [pc, #580]	; (a3f4 <Driving+0x9d4>)
    a1b0:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:318
			if ((v_prev + A_MAX * t1) > V_MAX) {
    a1b4:	4b8c      	ldr	r3, [pc, #560]	; (a3e8 <Driving+0x9c8>)
    a1b6:	ed93 7a00 	vldr	s14, [r3]
    a1ba:	eef2 7a02 	vmov.f32	s15, #34	; 0x22
    a1be:	ee27 7a27 	vmul.f32	s14, s14, s15
    a1c2:	4b86      	ldr	r3, [pc, #536]	; (a3dc <Driving+0x9bc>)
    a1c4:	edd3 7a00 	vldr	s15, [r3]
    a1c8:	ee37 7a27 	vadd.f32	s14, s14, s15
    a1cc:	eddf 7a8a 	vldr	s15, [pc, #552]	; a3f8 <Driving+0x9d8>
    a1d0:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a1d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a1d8:	f340 8083 	ble.w	a2e2 <Driving+0x8c2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:319
				t1 = (float)(V_MAX - v_prev) * A_MAX_INVERSE;
    a1dc:	4b7f      	ldr	r3, [pc, #508]	; (a3dc <Driving+0x9bc>)
    a1de:	edd3 7a00 	vldr	s15, [r3]
    a1e2:	ed9f 7a85 	vldr	s14, [pc, #532]	; a3f8 <Driving+0x9d8>
    a1e6:	ee37 7a67 	vsub.f32	s14, s14, s15
    a1ea:	eddf 7a81 	vldr	s15, [pc, #516]	; a3f0 <Driving+0x9d0>
    a1ee:	ee67 7a27 	vmul.f32	s15, s14, s15
    a1f2:	4b7d      	ldr	r3, [pc, #500]	; (a3e8 <Driving+0x9c8>)
    a1f4:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:320
				t3 = (float)(V_MAX - v_next) * A_MAX_INVERSE;
    a1f8:	4b77      	ldr	r3, [pc, #476]	; (a3d8 <Driving+0x9b8>)
    a1fa:	edd3 7a00 	vldr	s15, [r3]
    a1fe:	ed9f 7a7e 	vldr	s14, [pc, #504]	; a3f8 <Driving+0x9d8>
    a202:	ee37 7a67 	vsub.f32	s14, s14, s15
    a206:	eddf 7a7a 	vldr	s15, [pc, #488]	; a3f0 <Driving+0x9d0>
    a20a:	ee67 7a27 	vmul.f32	s15, s14, s15
    a20e:	4b79      	ldr	r3, [pc, #484]	; (a3f4 <Driving+0x9d4>)
    a210:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:321
				t2 = (float)(ds - (0.5 * A_MAX * ((t1 * t1) + (t3 * t3))) -
    a214:	4b6e      	ldr	r3, [pc, #440]	; (a3d0 <Driving+0x9b0>)
    a216:	681b      	ldr	r3, [r3, #0]
    a218:	4618      	mov	r0, r3
    a21a:	f7f6 fac1 	bl	7a0 <__aeabi_f2d>
    a21e:	4604      	mov	r4, r0
    a220:	460d      	mov	r5, r1
    a222:	4b71      	ldr	r3, [pc, #452]	; (a3e8 <Driving+0x9c8>)
    a224:	ed93 7a00 	vldr	s14, [r3]
    a228:	4b6f      	ldr	r3, [pc, #444]	; (a3e8 <Driving+0x9c8>)
    a22a:	edd3 7a00 	vldr	s15, [r3]
    a22e:	ee27 7a27 	vmul.f32	s14, s14, s15
    a232:	4b70      	ldr	r3, [pc, #448]	; (a3f4 <Driving+0x9d4>)
    a234:	edd3 6a00 	vldr	s13, [r3]
    a238:	4b6e      	ldr	r3, [pc, #440]	; (a3f4 <Driving+0x9d4>)
    a23a:	edd3 7a00 	vldr	s15, [r3]
    a23e:	ee66 7aa7 	vmul.f32	s15, s13, s15
    a242:	ee77 7a27 	vadd.f32	s15, s14, s15
    a246:	ee17 0a90 	vmov	r0, s15
    a24a:	f7f6 faa9 	bl	7a0 <__aeabi_f2d>
    a24e:	4602      	mov	r2, r0
    a250:	460b      	mov	r3, r1
    a252:	4610      	mov	r0, r2
    a254:	4619      	mov	r1, r3
    a256:	f04f 0200 	mov.w	r2, #0
    a25a:	4b68      	ldr	r3, [pc, #416]	; (a3fc <Driving+0x9dc>)
    a25c:	f7f6 faf4 	bl	848 <__aeabi_dmul>
    a260:	4602      	mov	r2, r0
    a262:	460b      	mov	r3, r1
    a264:	4620      	mov	r0, r4
    a266:	4629      	mov	r1, r5
    a268:	f7f6 f93a 	bl	4e0 <__aeabi_dsub>
    a26c:	4602      	mov	r2, r0
    a26e:	460b      	mov	r3, r1
    a270:	4614      	mov	r4, r2
    a272:	461d      	mov	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:322
					(v_next * t3) - (v_prev * t1)) * V_MAX_INVERSE;
    a274:	4b58      	ldr	r3, [pc, #352]	; (a3d8 <Driving+0x9b8>)
    a276:	ed93 7a00 	vldr	s14, [r3]
    a27a:	4b5e      	ldr	r3, [pc, #376]	; (a3f4 <Driving+0x9d4>)
    a27c:	edd3 7a00 	vldr	s15, [r3]
    a280:	ee67 7a27 	vmul.f32	s15, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:321
			t2 = 0;
			t3 = (float)((A_MAX * t1 + v_prev - v_next) * A_MAX_INVERSE);
			if ((v_prev + A_MAX * t1) > V_MAX) {
				t1 = (float)(V_MAX - v_prev) * A_MAX_INVERSE;
				t3 = (float)(V_MAX - v_next) * A_MAX_INVERSE;
				t2 = (float)(ds - (0.5 * A_MAX * ((t1 * t1) + (t3 * t3))) -
    a284:	ee17 0a90 	vmov	r0, s15
    a288:	f7f6 fa8a 	bl	7a0 <__aeabi_f2d>
    a28c:	4602      	mov	r2, r0
    a28e:	460b      	mov	r3, r1
    a290:	4620      	mov	r0, r4
    a292:	4629      	mov	r1, r5
    a294:	f7f6 f924 	bl	4e0 <__aeabi_dsub>
    a298:	4602      	mov	r2, r0
    a29a:	460b      	mov	r3, r1
    a29c:	4614      	mov	r4, r2
    a29e:	461d      	mov	r5, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:322
					(v_next * t3) - (v_prev * t1)) * V_MAX_INVERSE;
    a2a0:	4b4e      	ldr	r3, [pc, #312]	; (a3dc <Driving+0x9bc>)
    a2a2:	ed93 7a00 	vldr	s14, [r3]
    a2a6:	4b50      	ldr	r3, [pc, #320]	; (a3e8 <Driving+0x9c8>)
    a2a8:	edd3 7a00 	vldr	s15, [r3]
    a2ac:	ee67 7a27 	vmul.f32	s15, s14, s15
    a2b0:	ee17 0a90 	vmov	r0, s15
    a2b4:	f7f6 fa74 	bl	7a0 <__aeabi_f2d>
    a2b8:	4602      	mov	r2, r0
    a2ba:	460b      	mov	r3, r1
    a2bc:	4620      	mov	r0, r4
    a2be:	4629      	mov	r1, r5
    a2c0:	f7f6 f90e 	bl	4e0 <__aeabi_dsub>
    a2c4:	4602      	mov	r2, r0
    a2c6:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:321
			t2 = 0;
			t3 = (float)((A_MAX * t1 + v_prev - v_next) * A_MAX_INVERSE);
			if ((v_prev + A_MAX * t1) > V_MAX) {
				t1 = (float)(V_MAX - v_prev) * A_MAX_INVERSE;
				t3 = (float)(V_MAX - v_next) * A_MAX_INVERSE;
				t2 = (float)(ds - (0.5 * A_MAX * ((t1 * t1) + (t3 * t3))) -
    a2c8:	4610      	mov	r0, r2
    a2ca:	4619      	mov	r1, r3
    a2cc:	f7f6 fd7e 	bl	dcc <__aeabi_d2f>
    a2d0:	ee07 0a10 	vmov	s14, r0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:322
					(v_next * t3) - (v_prev * t1)) * V_MAX_INVERSE;
    a2d4:	eef1 7a04 	vmov.f32	s15, #20
    a2d8:	ee67 7a27 	vmul.f32	s15, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:321
			t2 = 0;
			t3 = (float)((A_MAX * t1 + v_prev - v_next) * A_MAX_INVERSE);
			if ((v_prev + A_MAX * t1) > V_MAX) {
				t1 = (float)(V_MAX - v_prev) * A_MAX_INVERSE;
				t3 = (float)(V_MAX - v_next) * A_MAX_INVERSE;
				t2 = (float)(ds - (0.5 * A_MAX * ((t1 * t1) + (t3 * t3))) -
    a2dc:	4b43      	ldr	r3, [pc, #268]	; (a3ec <Driving+0x9cc>)
    a2de:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:324
					(v_next * t3) - (v_prev * t1)) * V_MAX_INVERSE;
			}
			timeWhenWatchingEndOfWall = (float)(t1 + t2 + t3 -
    a2e2:	4b41      	ldr	r3, [pc, #260]	; (a3e8 <Driving+0x9c8>)
    a2e4:	ed93 7a00 	vldr	s14, [r3]
    a2e8:	4b40      	ldr	r3, [pc, #256]	; (a3ec <Driving+0x9cc>)
    a2ea:	edd3 7a00 	vldr	s15, [r3]
    a2ee:	ee37 7a27 	vadd.f32	s14, s14, s15
    a2f2:	4b40      	ldr	r3, [pc, #256]	; (a3f4 <Driving+0x9d4>)
    a2f4:	edd3 7a00 	vldr	s15, [r3]
    a2f8:	ee77 7a27 	vadd.f32	s15, s14, s15
    a2fc:	ee17 0a90 	vmov	r0, s15
    a300:	f7f6 fa4e 	bl	7a0 <__aeabi_f2d>
    a304:	4604      	mov	r4, r0
    a306:	460d      	mov	r5, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:325
				((-v_next + sqrt(v_next * v_next + 2 * A_MAX *
    a308:	4b33      	ldr	r3, [pc, #204]	; (a3d8 <Driving+0x9b8>)
    a30a:	edd3 7a00 	vldr	s15, [r3]
    a30e:	eef1 7a67 	vneg.f32	s15, s15
    a312:	ee17 3a90 	vmov	r3, s15
    a316:	4618      	mov	r0, r3
    a318:	f7f6 fa42 	bl	7a0 <__aeabi_f2d>
    a31c:	4680      	mov	r8, r0
    a31e:	4689      	mov	r9, r1
    a320:	4b2d      	ldr	r3, [pc, #180]	; (a3d8 <Driving+0x9b8>)
    a322:	ed93 7a00 	vldr	s14, [r3]
    a326:	4b2c      	ldr	r3, [pc, #176]	; (a3d8 <Driving+0x9b8>)
    a328:	edd3 7a00 	vldr	s15, [r3]
    a32c:	ee27 7a27 	vmul.f32	s14, s14, s15
    a330:	eddf 7a33 	vldr	s15, [pc, #204]	; a400 <Driving+0x9e0>
    a334:	ee77 7a27 	vadd.f32	s15, s14, s15
    a338:	ee17 0a90 	vmov	r0, s15
    a33c:	f7f6 fa30 	bl	7a0 <__aeabi_f2d>
    a340:	4602      	mov	r2, r0
    a342:	460b      	mov	r3, r1
    a344:	ec43 2b10 	vmov	d0, r2, r3
    a348:	f002 fe7a 	bl	d040 <sqrt>
    a34c:	ec53 2b10 	vmov	r2, r3, d0
    a350:	4640      	mov	r0, r8
    a352:	4649      	mov	r1, r9
    a354:	f7f6 f8c6 	bl	4e4 <__adddf3>
    a358:	4602      	mov	r2, r0
    a35a:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:327
					LAST_WALL_SEGMENT_OBSERVATION_DISTANCE * MAZE_SIZE))
					* A_MAX_INVERSE));
    a35c:	4610      	mov	r0, r2
    a35e:	4619      	mov	r1, r3
    a360:	a315      	add	r3, pc, #84	; (adr r3, a3b8 <Driving+0x998>)
    a362:	e9d3 2300 	ldrd	r2, r3, [r3]
    a366:	f7f6 fa6f 	bl	848 <__aeabi_dmul>
    a36a:	4602      	mov	r2, r0
    a36c:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:324
				t1 = (float)(V_MAX - v_prev) * A_MAX_INVERSE;
				t3 = (float)(V_MAX - v_next) * A_MAX_INVERSE;
				t2 = (float)(ds - (0.5 * A_MAX * ((t1 * t1) + (t3 * t3))) -
					(v_next * t3) - (v_prev * t1)) * V_MAX_INVERSE;
			}
			timeWhenWatchingEndOfWall = (float)(t1 + t2 + t3 -
    a36e:	4620      	mov	r0, r4
    a370:	4629      	mov	r1, r5
    a372:	f7f6 f8b5 	bl	4e0 <__aeabi_dsub>
    a376:	4602      	mov	r2, r0
    a378:	460b      	mov	r3, r1
    a37a:	4610      	mov	r0, r2
    a37c:	4619      	mov	r1, r3
    a37e:	f7f6 fd25 	bl	dcc <__aeabi_d2f>
    a382:	4602      	mov	r2, r0
    a384:	4b1f      	ldr	r3, [pc, #124]	; (a404 <Driving+0x9e4>)
    a386:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:328
				((-v_next + sqrt(v_next * v_next + 2 * A_MAX *
					LAST_WALL_SEGMENT_OBSERVATION_DISTANCE * MAZE_SIZE))
					* A_MAX_INVERSE));
			SegmentTime = 0;
    a388:	4b1f      	ldr	r3, [pc, #124]	; (a408 <Driving+0x9e8>)
    a38a:	f04f 0200 	mov.w	r2, #0
    a38e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:329
			v_ref[1] = 0;
    a390:	4b1e      	ldr	r3, [pc, #120]	; (a40c <Driving+0x9ec>)
    a392:	f04f 0200 	mov.w	r2, #0
    a396:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:330
			SegmentNumber = SegmentNumber + 1;
    a398:	4b0e      	ldr	r3, [pc, #56]	; (a3d4 <Driving+0x9b4>)
    a39a:	781b      	ldrb	r3, [r3, #0]
    a39c:	3301      	adds	r3, #1
    a39e:	b2da      	uxtb	r2, r3
    a3a0:	4b0c      	ldr	r3, [pc, #48]	; (a3d4 <Driving+0x9b4>)
    a3a2:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:331
			SegmentFinished = false;
    a3a4:	4b1a      	ldr	r3, [pc, #104]	; (a410 <Driving+0x9f0>)
    a3a6:	2200      	movs	r2, #0
    a3a8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:332
			NewStraightSegment = true;
    a3aa:	4b1a      	ldr	r3, [pc, #104]	; (a414 <Driving+0x9f4>)
    a3ac:	2201      	movs	r2, #1
    a3ae:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:267
		wall_availability_fusion.wallRightDisappeared = true;
		wall_availability_fusion.wallLeftDisappeared = true;
		/*
		* TURN segment:
		*/
		if (path == 45 || path == -45 ||
    a3b0:	e03e      	b.n	a430 <Driving+0xa10>
    a3b2:	e03d      	b.n	a430 <Driving+0xa10>
    a3b4:	f3af 8000 	nop.w
    a3b8:	c0000000 	.word	0xc0000000
    a3bc:	3fbc710c 	.word	0x3fbc710c
    a3c0:	20000021 	.word	0x20000021
    a3c4:	200009c0 	.word	0x200009c0
    a3c8:	3e3851ec 	.word	0x3e3851ec
    a3cc:	3cf5c28f 	.word	0x3cf5c28f
    a3d0:	200009cc 	.word	0x200009cc
    a3d4:	200009be 	.word	0x200009be
    a3d8:	20000028 	.word	0x20000028
    a3dc:	20000a00 	.word	0x20000a00
    a3e0:	3d638da4 	.word	0x3d638da4
    a3e4:	42100000 	.word	0x42100000
    a3e8:	200009e8 	.word	0x200009e8
    a3ec:	200009ec 	.word	0x200009ec
    a3f0:	3de38866 	.word	0x3de38866
    a3f4:	200009f0 	.word	0x200009f0
    a3f8:	3e4ccccd 	.word	0x3e4ccccd
    a3fc:	40120000 	.word	0x40120000
    a400:	3e4710cb 	.word	0x3e4710cb
    a404:	200009f4 	.word	0x200009f4
    a408:	20000a2c 	.word	0x20000a2c
    a40c:	200009f8 	.word	0x200009f8
    a410:	20000020 	.word	0x20000020
    a414:	200009bc 	.word	0x200009bc
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:335
			SegmentNumber = SegmentNumber + 1;
			SegmentFinished = false;
			NewStraightSegment = true;

		}
	}else if(SegmentNumber >= MazeSegmentsToBeDriven.numberOfSegments && SegmentFinished == true){
    a418:	f897 23d8 	ldrb.w	r2, [r7, #984]	; 0x3d8
    a41c:	4ba9      	ldr	r3, [pc, #676]	; (a6c4 <Driving+0xca4>)
    a41e:	781b      	ldrb	r3, [r3, #0]
    a420:	429a      	cmp	r2, r3
    a422:	d805      	bhi.n	a430 <Driving+0xa10>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:335 (discriminator 1)
    a424:	4ba8      	ldr	r3, [pc, #672]	; (a6c8 <Driving+0xca8>)
    a426:	781b      	ldrb	r3, [r3, #0]
    a428:	2b00      	cmp	r3, #0
    a42a:	d001      	beq.n	a430 <Driving+0xa10>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:336
		return true;
    a42c:	2301      	movs	r3, #1
    a42e:	e2d6      	b.n	a9de <Driving+0xfbe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:343

	/*
	* Driving a straight segment,
	* the velocity profile is updated every sample time.
	*/
	if (SegmentType == true) {
    a430:	4ba6      	ldr	r3, [pc, #664]	; (a6cc <Driving+0xcac>)
    a432:	781b      	ldrb	r3, [r3, #0]
    a434:	2b00      	cmp	r3, #0
    a436:	d074      	beq.n	a522 <Driving+0xb02>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:344
		if (SegmentTime <= t1) {
    a438:	4ba5      	ldr	r3, [pc, #660]	; (a6d0 <Driving+0xcb0>)
    a43a:	ed93 7a00 	vldr	s14, [r3]
    a43e:	4ba5      	ldr	r3, [pc, #660]	; (a6d4 <Driving+0xcb4>)
    a440:	edd3 7a00 	vldr	s15, [r3]
    a444:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a44c:	d80a      	bhi.n	a464 <Driving+0xa44>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:345
			v_ref[0] = (v_ref[0] + A_MAX * DT);
    a44e:	4ba2      	ldr	r3, [pc, #648]	; (a6d8 <Driving+0xcb8>)
    a450:	ed93 7a00 	vldr	s14, [r3]
    a454:	eddf 7aa1 	vldr	s15, [pc, #644]	; a6dc <Driving+0xcbc>
    a458:	ee77 7a27 	vadd.f32	s15, s14, s15
    a45c:	4b9e      	ldr	r3, [pc, #632]	; (a6d8 <Driving+0xcb8>)
    a45e:	edc3 7a00 	vstr	s15, [r3]
    a462:	e05e      	b.n	a522 <Driving+0xb02>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:347
		}
		else if (SegmentTime <= t1 + t2) {
    a464:	4b9b      	ldr	r3, [pc, #620]	; (a6d4 <Driving+0xcb4>)
    a466:	ed93 7a00 	vldr	s14, [r3]
    a46a:	4b9d      	ldr	r3, [pc, #628]	; (a6e0 <Driving+0xcc0>)
    a46c:	edd3 7a00 	vldr	s15, [r3]
    a470:	ee37 7a27 	vadd.f32	s14, s14, s15
    a474:	4b96      	ldr	r3, [pc, #600]	; (a6d0 <Driving+0xcb0>)
    a476:	edd3 7a00 	vldr	s15, [r3]
    a47a:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a47e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a482:	db03      	blt.n	a48c <Driving+0xa6c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:348
			v_ref[0] = V_MAX;
    a484:	4b94      	ldr	r3, [pc, #592]	; (a6d8 <Driving+0xcb8>)
    a486:	4a97      	ldr	r2, [pc, #604]	; (a6e4 <Driving+0xcc4>)
    a488:	601a      	str	r2, [r3, #0]
    a48a:	e04a      	b.n	a522 <Driving+0xb02>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:350
		}
		else if (SegmentTime <= t1 + t2 + t3){
    a48c:	4b91      	ldr	r3, [pc, #580]	; (a6d4 <Driving+0xcb4>)
    a48e:	ed93 7a00 	vldr	s14, [r3]
    a492:	4b93      	ldr	r3, [pc, #588]	; (a6e0 <Driving+0xcc0>)
    a494:	edd3 7a00 	vldr	s15, [r3]
    a498:	ee37 7a27 	vadd.f32	s14, s14, s15
    a49c:	4b92      	ldr	r3, [pc, #584]	; (a6e8 <Driving+0xcc8>)
    a49e:	edd3 7a00 	vldr	s15, [r3]
    a4a2:	ee37 7a27 	vadd.f32	s14, s14, s15
    a4a6:	4b8a      	ldr	r3, [pc, #552]	; (a6d0 <Driving+0xcb0>)
    a4a8:	edd3 7a00 	vldr	s15, [r3]
    a4ac:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a4b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a4b4:	db0a      	blt.n	a4cc <Driving+0xaac>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:351
			v_ref[0] = (float)(v_ref[0] - A_MAX * DT);
    a4b6:	4b88      	ldr	r3, [pc, #544]	; (a6d8 <Driving+0xcb8>)
    a4b8:	ed93 7a00 	vldr	s14, [r3]
    a4bc:	eddf 7a87 	vldr	s15, [pc, #540]	; a6dc <Driving+0xcbc>
    a4c0:	ee77 7a67 	vsub.f32	s15, s14, s15
    a4c4:	4b84      	ldr	r3, [pc, #528]	; (a6d8 <Driving+0xcb8>)
    a4c6:	edc3 7a00 	vstr	s15, [r3]
    a4ca:	e02a      	b.n	a522 <Driving+0xb02>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:353
		}
		else if(SegmentTime <= t1 + t2 + t3 +
    a4cc:	4b81      	ldr	r3, [pc, #516]	; (a6d4 <Driving+0xcb4>)
    a4ce:	ed93 7a00 	vldr	s14, [r3]
    a4d2:	4b83      	ldr	r3, [pc, #524]	; (a6e0 <Driving+0xcc0>)
    a4d4:	edd3 7a00 	vldr	s15, [r3]
    a4d8:	ee37 7a27 	vadd.f32	s14, s14, s15
    a4dc:	4b82      	ldr	r3, [pc, #520]	; (a6e8 <Driving+0xcc8>)
    a4de:	edd3 7a00 	vldr	s15, [r3]
    a4e2:	ee37 7a27 	vadd.f32	s14, s14, s15
    a4e6:	eef6 7a00 	vmov.f32	s15, #96	; 0x60
    a4ea:	ee37 7a27 	vadd.f32	s14, s14, s15
    a4ee:	4b78      	ldr	r3, [pc, #480]	; (a6d0 <Driving+0xcb0>)
    a4f0:	edd3 7a00 	vldr	s15, [r3]
    a4f4:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a4f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a4fc:	db04      	blt.n	a508 <Driving+0xae8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:355
				SAEFTY_EXTRA_TIME_DRIVING_STRAIGHT_TO_DETECT_END_OF_WALL){
			v_ref[0] = v_next;
    a4fe:	4b7b      	ldr	r3, [pc, #492]	; (a6ec <Driving+0xccc>)
    a500:	681a      	ldr	r2, [r3, #0]
    a502:	4b75      	ldr	r3, [pc, #468]	; (a6d8 <Driving+0xcb8>)
    a504:	601a      	str	r2, [r3, #0]
    a506:	e00c      	b.n	a522 <Driving+0xb02>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:359
		}
		else{
			/* No end of wall is detected! -> error state: STOP*/
			v_ref[0] = 0;
    a508:	4b73      	ldr	r3, [pc, #460]	; (a6d8 <Driving+0xcb8>)
    a50a:	f04f 0200 	mov.w	r2, #0
    a50e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:360
			SegmentFinished = true;
    a510:	4b6d      	ldr	r3, [pc, #436]	; (a6c8 <Driving+0xca8>)
    a512:	2201      	movs	r2, #1
    a514:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:361
			SegmentNumber = MazeSegmentsToBeDriven.numberOfSegments;
    a516:	f897 23d8 	ldrb.w	r2, [r7, #984]	; 0x3d8
    a51a:	4b6a      	ldr	r3, [pc, #424]	; (a6c4 <Driving+0xca4>)
    a51c:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:362
			return true;
    a51e:	2301      	movs	r3, #1
    a520:	e25d      	b.n	a9de <Driving+0xfbe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:365
		}
	}
	v_prev = v_ref[0];
    a522:	4b6d      	ldr	r3, [pc, #436]	; (a6d8 <Driving+0xcb8>)
    a524:	681a      	ldr	r2, [r3, #0]
    a526:	4b72      	ldr	r3, [pc, #456]	; (a6f0 <Driving+0xcd0>)
    a528:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:366
	ds_driven = ds_driven + (v_ref[0] * DT);
    a52a:	4b6b      	ldr	r3, [pc, #428]	; (a6d8 <Driving+0xcb8>)
    a52c:	ed93 7a00 	vldr	s14, [r3]
    a530:	eddf 7a70 	vldr	s15, [pc, #448]	; a6f4 <Driving+0xcd4>
    a534:	ee27 7a27 	vmul.f32	s14, s14, s15
    a538:	4b6f      	ldr	r3, [pc, #444]	; (a6f8 <Driving+0xcd8>)
    a53a:	edd3 7a00 	vldr	s15, [r3]
    a53e:	ee77 7a27 	vadd.f32	s15, s14, s15
    a542:	4b6d      	ldr	r3, [pc, #436]	; (a6f8 <Driving+0xcd8>)
    a544:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:367
	ds_before_curve = ds_before_curve + (v_est[0] * DT);
    a548:	4b6c      	ldr	r3, [pc, #432]	; (a6fc <Driving+0xcdc>)
    a54a:	ed93 7a00 	vldr	s14, [r3]
    a54e:	eddf 7a69 	vldr	s15, [pc, #420]	; a6f4 <Driving+0xcd4>
    a552:	ee27 7a27 	vmul.f32	s14, s14, s15
    a556:	4b6a      	ldr	r3, [pc, #424]	; (a700 <Driving+0xce0>)
    a558:	edd3 7a00 	vldr	s15, [r3]
    a55c:	ee77 7a27 	vadd.f32	s15, s14, s15
    a560:	4b67      	ldr	r3, [pc, #412]	; (a700 <Driving+0xce0>)
    a562:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:369

	VelocityEstimation(&NewStraightSegment, wall_availability_fusion.wallRightDisappeared,
    a566:	4b67      	ldr	r3, [pc, #412]	; (a704 <Driving+0xce4>)
    a568:	781a      	ldrb	r2, [r3, #0]
    a56a:	4b66      	ldr	r3, [pc, #408]	; (a704 <Driving+0xce4>)
    a56c:	785b      	ldrb	r3, [r3, #1]
    a56e:	4966      	ldr	r1, [pc, #408]	; (a708 <Driving+0xce8>)
    a570:	6809      	ldr	r1, [r1, #0]
    a572:	4866      	ldr	r0, [pc, #408]	; (a70c <Driving+0xcec>)
    a574:	9000      	str	r0, [sp, #0]
    a576:	4866      	ldr	r0, [pc, #408]	; (a710 <Driving+0xcf0>)
    a578:	9001      	str	r0, [sp, #4]
    a57a:	4860      	ldr	r0, [pc, #384]	; (a6fc <Driving+0xcdc>)
    a57c:	9002      	str	r0, [sp, #8]
    a57e:	4865      	ldr	r0, [pc, #404]	; (a714 <Driving+0xcf4>)
    a580:	9003      	str	r0, [sp, #12]
    a582:	9104      	str	r1, [sp, #16]
    a584:	4964      	ldr	r1, [pc, #400]	; (a718 <Driving+0xcf8>)
    a586:	9105      	str	r1, [sp, #20]
    a588:	4964      	ldr	r1, [pc, #400]	; (a71c <Driving+0xcfc>)
    a58a:	9106      	str	r1, [sp, #24]
    a58c:	4964      	ldr	r1, [pc, #400]	; (a720 <Driving+0xd00>)
    a58e:	9107      	str	r1, [sp, #28]
    a590:	4964      	ldr	r1, [pc, #400]	; (a724 <Driving+0xd04>)
    a592:	9108      	str	r1, [sp, #32]
    a594:	4964      	ldr	r1, [pc, #400]	; (a728 <Driving+0xd08>)
    a596:	9109      	str	r1, [sp, #36]	; 0x24
    a598:	4864      	ldr	r0, [pc, #400]	; (a72c <Driving+0xd0c>)
    a59a:	4611      	mov	r1, r2
    a59c:	461a      	mov	r2, r3
    a59e:	4b64      	ldr	r3, [pc, #400]	; (a730 <Driving+0xd10>)
    a5a0:	f002 f8aa 	bl	c6f8 <VelocityEstimation>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:377

	/*
	* If the subsequent segment is a turn, the last side distance sensor values are buffered.
	* Driving fast, the sensor may have to be changed and ajusted to the forward sloped sensors.
	*/
	if(NewStraightSegment){
    a5a4:	4b61      	ldr	r3, [pc, #388]	; (a72c <Driving+0xd0c>)
    a5a6:	781b      	ldrb	r3, [r3, #0]
    a5a8:	2b00      	cmp	r3, #0
    a5aa:	d008      	beq.n	a5be <Driving+0xb9e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:378
		d_right_history[0] = distance.SideRight;
    a5ac:	4b61      	ldr	r3, [pc, #388]	; (a734 <Driving+0xd14>)
    a5ae:	681a      	ldr	r2, [r3, #0]
    a5b0:	4b61      	ldr	r3, [pc, #388]	; (a738 <Driving+0xd18>)
    a5b2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:379
		d_left_history[0] = distance.SideLeft;
    a5b4:	4b5f      	ldr	r3, [pc, #380]	; (a734 <Driving+0xd14>)
    a5b6:	685a      	ldr	r2, [r3, #4]
    a5b8:	4b60      	ldr	r3, [pc, #384]	; (a73c <Driving+0xd1c>)
    a5ba:	601a      	str	r2, [r3, #0]
    a5bc:	e037      	b.n	a62e <Driving+0xc0e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:381
	}else{
		d_right_history[1] = d_right_history[0];
    a5be:	4b5e      	ldr	r3, [pc, #376]	; (a738 <Driving+0xd18>)
    a5c0:	681a      	ldr	r2, [r3, #0]
    a5c2:	4b5d      	ldr	r3, [pc, #372]	; (a738 <Driving+0xd18>)
    a5c4:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:382
		d_right_history[0] = distance.SideRight;
    a5c6:	4b5b      	ldr	r3, [pc, #364]	; (a734 <Driving+0xd14>)
    a5c8:	681a      	ldr	r2, [r3, #0]
    a5ca:	4b5b      	ldr	r3, [pc, #364]	; (a738 <Driving+0xd18>)
    a5cc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:383
		distance_HP.Right = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Right +
    a5ce:	4b5c      	ldr	r3, [pc, #368]	; (a740 <Driving+0xd20>)
    a5d0:	ed93 7a00 	vldr	s14, [r3]
    a5d4:	eddf 7a5b 	vldr	s15, [pc, #364]	; a744 <Driving+0xd24>
    a5d8:	ee27 7a27 	vmul.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:384
				d_right_history[0] - d_right_history[1]);
    a5dc:	4b56      	ldr	r3, [pc, #344]	; (a738 <Driving+0xd18>)
    a5de:	edd3 7a00 	vldr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:383
		d_right_history[0] = distance.SideRight;
		d_left_history[0] = distance.SideLeft;
	}else{
		d_right_history[1] = d_right_history[0];
		d_right_history[0] = distance.SideRight;
		distance_HP.Right = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Right +
    a5e2:	ee37 7a27 	vadd.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:384
				d_right_history[0] - d_right_history[1]);
    a5e6:	4b54      	ldr	r3, [pc, #336]	; (a738 <Driving+0xd18>)
    a5e8:	edd3 7a01 	vldr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:383
		d_right_history[0] = distance.SideRight;
		d_left_history[0] = distance.SideLeft;
	}else{
		d_right_history[1] = d_right_history[0];
		d_right_history[0] = distance.SideRight;
		distance_HP.Right = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Right +
    a5ec:	ee77 7a67 	vsub.f32	s15, s14, s15
    a5f0:	4b53      	ldr	r3, [pc, #332]	; (a740 <Driving+0xd20>)
    a5f2:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:385
				d_right_history[0] - d_right_history[1]);
		d_left_history[1] = d_left_history[0];
    a5f6:	4b51      	ldr	r3, [pc, #324]	; (a73c <Driving+0xd1c>)
    a5f8:	681a      	ldr	r2, [r3, #0]
    a5fa:	4b50      	ldr	r3, [pc, #320]	; (a73c <Driving+0xd1c>)
    a5fc:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:386
		d_left_history[0] = distance.SideLeft;
    a5fe:	4b4d      	ldr	r3, [pc, #308]	; (a734 <Driving+0xd14>)
    a600:	685a      	ldr	r2, [r3, #4]
    a602:	4b4e      	ldr	r3, [pc, #312]	; (a73c <Driving+0xd1c>)
    a604:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:387
		distance_HP.Left = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Left +
    a606:	4b4e      	ldr	r3, [pc, #312]	; (a740 <Driving+0xd20>)
    a608:	ed93 7a01 	vldr	s14, [r3, #4]
    a60c:	eddf 7a4d 	vldr	s15, [pc, #308]	; a744 <Driving+0xd24>
    a610:	ee27 7a27 	vmul.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:388
				d_left_history[0] - d_left_history[1]);
    a614:	4b49      	ldr	r3, [pc, #292]	; (a73c <Driving+0xd1c>)
    a616:	edd3 7a00 	vldr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:387
		d_right_history[0] = distance.SideRight;
		distance_HP.Right = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Right +
				d_right_history[0] - d_right_history[1]);
		d_left_history[1] = d_left_history[0];
		d_left_history[0] = distance.SideLeft;
		distance_HP.Left = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Left +
    a61a:	ee37 7a27 	vadd.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:388
				d_left_history[0] - d_left_history[1]);
    a61e:	4b47      	ldr	r3, [pc, #284]	; (a73c <Driving+0xd1c>)
    a620:	edd3 7a01 	vldr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:387
		d_right_history[0] = distance.SideRight;
		distance_HP.Right = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Right +
				d_right_history[0] - d_right_history[1]);
		d_left_history[1] = d_left_history[0];
		d_left_history[0] = distance.SideLeft;
		distance_HP.Left = (float)(DISTANCE_HP_LAST_VALUE_FACTOR * distance_HP.Left +
    a624:	ee77 7a67 	vsub.f32	s15, s14, s15
    a628:	4b45      	ldr	r3, [pc, #276]	; (a740 <Driving+0xd20>)
    a62a:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:491
		 * Exact end of segment trigger, detection
		 * It is assumed that the MC car reaches the end of a segment faster than theoretically calculated.
		 */

		/* STRAIGHT segment: */
		watchingWall = false;
    a62e:	4b46      	ldr	r3, [pc, #280]	; (a748 <Driving+0xd28>)
    a630:	2200      	movs	r2, #0
    a632:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:492
		if (SegmentType == true && SegmentNumber < MazeSegmentsToBeDriven.numberOfSegments &&
    a634:	4b25      	ldr	r3, [pc, #148]	; (a6cc <Driving+0xcac>)
    a636:	781b      	ldrb	r3, [r3, #0]
    a638:	2b00      	cmp	r3, #0
    a63a:	f000 80b1 	beq.w	a7a0 <Driving+0xd80>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:492 (discriminator 1)
    a63e:	f897 23d8 	ldrb.w	r2, [r7, #984]	; 0x3d8
    a642:	4b20      	ldr	r3, [pc, #128]	; (a6c4 <Driving+0xca4>)
    a644:	781b      	ldrb	r3, [r3, #0]
    a646:	429a      	cmp	r2, r3
    a648:	f240 80aa 	bls.w	a7a0 <Driving+0xd80>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:493 (discriminator 1)
			(path_next == 45 || path_next == 90 || path_next == 135 || path_next == 180 ||
    a64c:	4b3f      	ldr	r3, [pc, #252]	; (a74c <Driving+0xd2c>)
    a64e:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:492 (discriminator 1)
		 * It is assumed that the MC car reaches the end of a segment faster than theoretically calculated.
		 */

		/* STRAIGHT segment: */
		watchingWall = false;
		if (SegmentType == true && SegmentNumber < MazeSegmentsToBeDriven.numberOfSegments &&
    a650:	2b2d      	cmp	r3, #45	; 0x2d
    a652:	d020      	beq.n	a696 <Driving+0xc76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:493
			(path_next == 45 || path_next == 90 || path_next == 135 || path_next == 180 ||
    a654:	4b3d      	ldr	r3, [pc, #244]	; (a74c <Driving+0xd2c>)
    a656:	681b      	ldr	r3, [r3, #0]
    a658:	2b5a      	cmp	r3, #90	; 0x5a
    a65a:	d01c      	beq.n	a696 <Driving+0xc76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:493 (discriminator 1)
    a65c:	4b3b      	ldr	r3, [pc, #236]	; (a74c <Driving+0xd2c>)
    a65e:	681b      	ldr	r3, [r3, #0]
    a660:	2b87      	cmp	r3, #135	; 0x87
    a662:	d018      	beq.n	a696 <Driving+0xc76>
    a664:	4b39      	ldr	r3, [pc, #228]	; (a74c <Driving+0xd2c>)
    a666:	681b      	ldr	r3, [r3, #0]
    a668:	2bb4      	cmp	r3, #180	; 0xb4
    a66a:	d014      	beq.n	a696 <Driving+0xc76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:494 (discriminator 1)
			 path_next == -45 || path_next == -90 || path_next == -135 || path_next == -180)) {
    a66c:	4b37      	ldr	r3, [pc, #220]	; (a74c <Driving+0xd2c>)
    a66e:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:493 (discriminator 1)
		 */

		/* STRAIGHT segment: */
		watchingWall = false;
		if (SegmentType == true && SegmentNumber < MazeSegmentsToBeDriven.numberOfSegments &&
			(path_next == 45 || path_next == 90 || path_next == 135 || path_next == 180 ||
    a670:	f113 0f2d 	cmn.w	r3, #45	; 0x2d
    a674:	d00f      	beq.n	a696 <Driving+0xc76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:494
			 path_next == -45 || path_next == -90 || path_next == -135 || path_next == -180)) {
    a676:	4b35      	ldr	r3, [pc, #212]	; (a74c <Driving+0xd2c>)
    a678:	681b      	ldr	r3, [r3, #0]
    a67a:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    a67e:	d00a      	beq.n	a696 <Driving+0xc76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:494 (discriminator 1)
    a680:	4b32      	ldr	r3, [pc, #200]	; (a74c <Driving+0xd2c>)
    a682:	681b      	ldr	r3, [r3, #0]
    a684:	f113 0f87 	cmn.w	r3, #135	; 0x87
    a688:	d005      	beq.n	a696 <Driving+0xc76>
    a68a:	4b30      	ldr	r3, [pc, #192]	; (a74c <Driving+0xd2c>)
    a68c:	681b      	ldr	r3, [r3, #0]
    a68e:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    a692:	f040 8085 	bne.w	a7a0 <Driving+0xd80>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:496

				if(SegmentTime > timeWhenWatchingEndOfWall){
    a696:	4b0e      	ldr	r3, [pc, #56]	; (a6d0 <Driving+0xcb0>)
    a698:	ed93 7a00 	vldr	s14, [r3]
    a69c:	4b2c      	ldr	r3, [pc, #176]	; (a750 <Driving+0xd30>)
    a69e:	edd3 7a00 	vldr	s15, [r3]
    a6a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a6a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a6aa:	dd02      	ble.n	a6b2 <Driving+0xc92>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:497
					watchingWall = true;
    a6ac:	4b26      	ldr	r3, [pc, #152]	; (a748 <Driving+0xd28>)
    a6ae:	2201      	movs	r2, #1
    a6b0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:502
				}

				/* Disappearance of wall detected with HP filter */
				#ifdef USE_HP_FOR_END_OF_WALL_DETECTION
					if (path_next > 0) { 		// left turn
    a6b2:	4b26      	ldr	r3, [pc, #152]	; (a74c <Driving+0xd2c>)
    a6b4:	681b      	ldr	r3, [r3, #0]
    a6b6:	2b00      	cmp	r3, #0
    a6b8:	dd4e      	ble.n	a758 <Driving+0xd38>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:503
						d_hp_filtered = distance_HP.Left;
    a6ba:	4b21      	ldr	r3, [pc, #132]	; (a740 <Driving+0xd20>)
    a6bc:	685a      	ldr	r2, [r3, #4]
    a6be:	4b25      	ldr	r3, [pc, #148]	; (a754 <Driving+0xd34>)
    a6c0:	601a      	str	r2, [r3, #0]
    a6c2:	e051      	b.n	a768 <Driving+0xd48>
    a6c4:	200009be 	.word	0x200009be
    a6c8:	20000020 	.word	0x20000020
    a6cc:	20000021 	.word	0x20000021
    a6d0:	20000a2c 	.word	0x20000a2c
    a6d4:	200009e8 	.word	0x200009e8
    a6d8:	200009f8 	.word	0x200009f8
    a6dc:	3b9374bd 	.word	0x3b9374bd
    a6e0:	200009ec 	.word	0x200009ec
    a6e4:	3e4ccccd 	.word	0x3e4ccccd
    a6e8:	200009f0 	.word	0x200009f0
    a6ec:	20000028 	.word	0x20000028
    a6f0:	20000a00 	.word	0x20000a00
    a6f4:	3a03126f 	.word	0x3a03126f
    a6f8:	200009d0 	.word	0x200009d0
    a6fc:	20000a04 	.word	0x20000a04
    a700:	20000024 	.word	0x20000024
    a704:	200009e0 	.word	0x200009e0
    a708:	2000002c 	.word	0x2000002c
    a70c:	20000ad4 	.word	0x20000ad4
    a710:	20000acc 	.word	0x20000acc
    a714:	20000af4 	.word	0x20000af4
    a718:	20000a48 	.word	0x20000a48
    a71c:	20000ad8 	.word	0x20000ad8
    a720:	20000adc 	.word	0x20000adc
    a724:	20000ae4 	.word	0x20000ae4
    a728:	20000ae0 	.word	0x20000ae0
    a72c:	200009bc 	.word	0x200009bc
    a730:	20000ad0 	.word	0x20000ad0
    a734:	20000a30 	.word	0x20000a30
    a738:	20000a68 	.word	0x20000a68
    a73c:	20000a70 	.word	0x20000a70
    a740:	20000a7c 	.word	0x20000a7c
    a744:	3f666666 	.word	0x3f666666
    a748:	200009bd 	.word	0x200009bd
    a74c:	200009c4 	.word	0x200009c4
    a750:	200009f4 	.word	0x200009f4
    a754:	20000a78 	.word	0x20000a78
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:505
					}
					else if (path_next < 0) { 	// right turn
    a758:	4ba4      	ldr	r3, [pc, #656]	; (a9ec <Driving+0xfcc>)
    a75a:	681b      	ldr	r3, [r3, #0]
    a75c:	2b00      	cmp	r3, #0
    a75e:	da03      	bge.n	a768 <Driving+0xd48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:506
						d_hp_filtered = distance_HP.Right;
    a760:	4ba3      	ldr	r3, [pc, #652]	; (a9f0 <Driving+0xfd0>)
    a762:	681a      	ldr	r2, [r3, #0]
    a764:	4ba3      	ldr	r3, [pc, #652]	; (a9f4 <Driving+0xfd4>)
    a766:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:509
					}

					if (watchingWall && d_hp_filtered > WALL_DISAPPERARANCE_THRESHOLD) {
    a768:	4ba3      	ldr	r3, [pc, #652]	; (a9f8 <Driving+0xfd8>)
    a76a:	781b      	ldrb	r3, [r3, #0]
    a76c:	2b00      	cmp	r3, #0
    a76e:	d016      	beq.n	a79e <Driving+0xd7e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:509 (discriminator 1)
    a770:	4ba0      	ldr	r3, [pc, #640]	; (a9f4 <Driving+0xfd4>)
    a772:	ed93 7a00 	vldr	s14, [r3]
    a776:	eef0 7a00 	vmov.f32	s15, #0
    a77a:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a77e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a782:	dc00      	bgt.n	a786 <Driving+0xd66>
    a784:	e0b0      	b.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:516
							#ifndef CAMERA_RECORDING_LEDS_OFF
								LED_RED_F_L_On();
								LED_RED_F_R_On();
							#endif
						#endif
						SegmentFinished = true;
    a786:	4b9d      	ldr	r3, [pc, #628]	; (a9fc <Driving+0xfdc>)
    a788:	2201      	movs	r2, #1
    a78a:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:517
						ds_before_curve = 0;
    a78c:	4b9c      	ldr	r3, [pc, #624]	; (aa00 <Driving+0xfe0>)
    a78e:	f04f 0200 	mov.w	r2, #0
    a792:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:518
						d_hp_filtered = 0;
    a794:	4b97      	ldr	r3, [pc, #604]	; (a9f4 <Driving+0xfd4>)
    a796:	f04f 0200 	mov.w	r2, #0
    a79a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:509
					}
					else if (path_next < 0) { 	// right turn
						d_hp_filtered = distance_HP.Right;
					}

					if (watchingWall && d_hp_filtered > WALL_DISAPPERARANCE_THRESHOLD) {
    a79c:	e0a4      	b.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:509 (discriminator 2)
    a79e:	e0a3      	b.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:530
						ds_before_curve = 0;
					}
				#endif

			/* last STRAIGHT segment: */
			}else if(SegmentType == true && SegmentTime >= (t1 + t2 + t3) &&
    a7a0:	4b98      	ldr	r3, [pc, #608]	; (aa04 <Driving+0xfe4>)
    a7a2:	781b      	ldrb	r3, [r3, #0]
    a7a4:	2b00      	cmp	r3, #0
    a7a6:	d021      	beq.n	a7ec <Driving+0xdcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:530 (discriminator 1)
    a7a8:	4b97      	ldr	r3, [pc, #604]	; (aa08 <Driving+0xfe8>)
    a7aa:	ed93 7a00 	vldr	s14, [r3]
    a7ae:	4b97      	ldr	r3, [pc, #604]	; (aa0c <Driving+0xfec>)
    a7b0:	edd3 7a00 	vldr	s15, [r3]
    a7b4:	ee37 7a27 	vadd.f32	s14, s14, s15
    a7b8:	4b95      	ldr	r3, [pc, #596]	; (aa10 <Driving+0xff0>)
    a7ba:	edd3 7a00 	vldr	s15, [r3]
    a7be:	ee37 7a27 	vadd.f32	s14, s14, s15
    a7c2:	4b94      	ldr	r3, [pc, #592]	; (aa14 <Driving+0xff4>)
    a7c4:	edd3 7a00 	vldr	s15, [r3]
    a7c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a7cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a7d0:	d80c      	bhi.n	a7ec <Driving+0xdcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:531 (discriminator 1)
					SegmentNumber >= MazeSegmentsToBeDriven.numberOfSegments){
    a7d2:	f897 23d8 	ldrb.w	r2, [r7, #984]	; 0x3d8
    a7d6:	4b90      	ldr	r3, [pc, #576]	; (aa18 <Driving+0xff8>)
    a7d8:	781b      	ldrb	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:530 (discriminator 1)
						ds_before_curve = 0;
					}
				#endif

			/* last STRAIGHT segment: */
			}else if(SegmentType == true && SegmentTime >= (t1 + t2 + t3) &&
    a7da:	429a      	cmp	r2, r3
    a7dc:	d806      	bhi.n	a7ec <Driving+0xdcc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:532
					SegmentNumber >= MazeSegmentsToBeDriven.numberOfSegments){
				SegmentFinished = true;
    a7de:	4b87      	ldr	r3, [pc, #540]	; (a9fc <Driving+0xfdc>)
    a7e0:	2201      	movs	r2, #1
    a7e2:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:533
				ds_before_curve = DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE + 0.01f; //add to ensure criterion of new segment computation
    a7e4:	4b86      	ldr	r3, [pc, #536]	; (aa00 <Driving+0xfe0>)
    a7e6:	4a8d      	ldr	r2, [pc, #564]	; (aa1c <Driving+0xffc>)
    a7e8:	601a      	str	r2, [r3, #0]
    a7ea:	e07d      	b.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:536

			/* TURN segment on the spot: */
			}else if(SegmentType == false && (path == 900 || path == -900) && SegmentTime >= (t1 + t2 + t3) ){
    a7ec:	4b85      	ldr	r3, [pc, #532]	; (aa04 <Driving+0xfe4>)
    a7ee:	781b      	ldrb	r3, [r3, #0]
    a7f0:	f083 0301 	eor.w	r3, r3, #1
    a7f4:	b2db      	uxtb	r3, r3
    a7f6:	2b00      	cmp	r3, #0
    a7f8:	d054      	beq.n	a8a4 <Driving+0xe84>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:536 (discriminator 1)
    a7fa:	4b89      	ldr	r3, [pc, #548]	; (aa20 <Driving+0x1000>)
    a7fc:	681b      	ldr	r3, [r3, #0]
    a7fe:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    a802:	d004      	beq.n	a80e <Driving+0xdee>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:536 (discriminator 2)
    a804:	4b86      	ldr	r3, [pc, #536]	; (aa20 <Driving+0x1000>)
    a806:	681b      	ldr	r3, [r3, #0]
    a808:	f513 7f61 	cmn.w	r3, #900	; 0x384
    a80c:	d14a      	bne.n	a8a4 <Driving+0xe84>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:536 (discriminator 1)
    a80e:	4b7e      	ldr	r3, [pc, #504]	; (aa08 <Driving+0xfe8>)
    a810:	ed93 7a00 	vldr	s14, [r3]
    a814:	4b7d      	ldr	r3, [pc, #500]	; (aa0c <Driving+0xfec>)
    a816:	edd3 7a00 	vldr	s15, [r3]
    a81a:	ee37 7a27 	vadd.f32	s14, s14, s15
    a81e:	4b7c      	ldr	r3, [pc, #496]	; (aa10 <Driving+0xff0>)
    a820:	edd3 7a00 	vldr	s15, [r3]
    a824:	ee37 7a27 	vadd.f32	s14, s14, s15
    a828:	4b7a      	ldr	r3, [pc, #488]	; (aa14 <Driving+0xff4>)
    a82a:	edd3 7a00 	vldr	s15, [r3]
    a82e:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a832:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a836:	d835      	bhi.n	a8a4 <Driving+0xe84>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:537
				if(((path == 900) && ((q[2])>(SegmentTargets.q_theta[SegmentNumber]))) ||
    a838:	4b79      	ldr	r3, [pc, #484]	; (aa20 <Driving+0x1000>)
    a83a:	681b      	ldr	r3, [r3, #0]
    a83c:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    a840:	d10f      	bne.n	a862 <Driving+0xe42>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:537 (discriminator 1)
    a842:	4b78      	ldr	r3, [pc, #480]	; (aa24 <Driving+0x1004>)
    a844:	ed93 7a02 	vldr	s14, [r3, #8]
    a848:	4b73      	ldr	r3, [pc, #460]	; (aa18 <Driving+0xff8>)
    a84a:	781b      	ldrb	r3, [r3, #0]
    a84c:	4a76      	ldr	r2, [pc, #472]	; (aa28 <Driving+0x1008>)
    a84e:	3352      	adds	r3, #82	; 0x52
    a850:	009b      	lsls	r3, r3, #2
    a852:	4413      	add	r3, r2
    a854:	edd3 7a00 	vldr	s15, [r3]
    a858:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a85c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a860:	dc15      	bgt.n	a88e <Driving+0xe6e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:538 (discriminator 2)
						((path == -900) && ((q[2])<(SegmentTargets.q_theta[SegmentNumber])))){
    a862:	4b6f      	ldr	r3, [pc, #444]	; (aa20 <Driving+0x1000>)
    a864:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:537 (discriminator 2)
				SegmentFinished = true;
				ds_before_curve = DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE + 0.01f; //add to ensure criterion of new segment computation

			/* TURN segment on the spot: */
			}else if(SegmentType == false && (path == 900 || path == -900) && SegmentTime >= (t1 + t2 + t3) ){
				if(((path == 900) && ((q[2])>(SegmentTargets.q_theta[SegmentNumber]))) ||
    a866:	f513 7f61 	cmn.w	r3, #900	; 0x384
    a86a:	d11a      	bne.n	a8a2 <Driving+0xe82>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:538
						((path == -900) && ((q[2])<(SegmentTargets.q_theta[SegmentNumber])))){
    a86c:	4b6d      	ldr	r3, [pc, #436]	; (aa24 <Driving+0x1004>)
    a86e:	ed93 7a02 	vldr	s14, [r3, #8]
    a872:	4b69      	ldr	r3, [pc, #420]	; (aa18 <Driving+0xff8>)
    a874:	781b      	ldrb	r3, [r3, #0]
    a876:	4a6c      	ldr	r2, [pc, #432]	; (aa28 <Driving+0x1008>)
    a878:	3352      	adds	r3, #82	; 0x52
    a87a:	009b      	lsls	r3, r3, #2
    a87c:	4413      	add	r3, r2
    a87e:	edd3 7a00 	vldr	s15, [r3]
    a882:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a88a:	d400      	bmi.n	a88e <Driving+0xe6e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:537
				SegmentFinished = true;
				ds_before_curve = DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE + 0.01f; //add to ensure criterion of new segment computation

			/* TURN segment on the spot: */
			}else if(SegmentType == false && (path == 900 || path == -900) && SegmentTime >= (t1 + t2 + t3) ){
				if(((path == 900) && ((q[2])>(SegmentTargets.q_theta[SegmentNumber]))) ||
    a88c:	e02c      	b.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:540
						((path == -900) && ((q[2])<(SegmentTargets.q_theta[SegmentNumber])))){
					#if KDS_BUILD
						set_VREF(0, 0);
    a88e:	ed9f 0a67 	vldr	s0, [pc, #412]	; aa2c <Driving+0x100c>
    a892:	eddf 0a66 	vldr	s1, [pc, #408]	; aa2c <Driving+0x100c>
    a896:	f7f9 fbff 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:542
					#endif
					SegmentFinished = true;
    a89a:	4b58      	ldr	r3, [pc, #352]	; (a9fc <Driving+0xfdc>)
    a89c:	2201      	movs	r2, #1
    a89e:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:537
				SegmentFinished = true;
				ds_before_curve = DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE + 0.01f; //add to ensure criterion of new segment computation

			/* TURN segment on the spot: */
			}else if(SegmentType == false && (path == 900 || path == -900) && SegmentTime >= (t1 + t2 + t3) ){
				if(((path == 900) && ((q[2])>(SegmentTargets.q_theta[SegmentNumber]))) ||
    a8a0:	e022      	b.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:537 (discriminator 1)
    a8a2:	e021      	b.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:548
				}



			/* TURN segment: */
			}else if (SegmentType == false && SegmentTime >= (t1 + t2 + t3)){
    a8a4:	4b57      	ldr	r3, [pc, #348]	; (aa04 <Driving+0xfe4>)
    a8a6:	781b      	ldrb	r3, [r3, #0]
    a8a8:	f083 0301 	eor.w	r3, r3, #1
    a8ac:	b2db      	uxtb	r3, r3
    a8ae:	2b00      	cmp	r3, #0
    a8b0:	d01a      	beq.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:548 (discriminator 1)
    a8b2:	4b55      	ldr	r3, [pc, #340]	; (aa08 <Driving+0xfe8>)
    a8b4:	ed93 7a00 	vldr	s14, [r3]
    a8b8:	4b54      	ldr	r3, [pc, #336]	; (aa0c <Driving+0xfec>)
    a8ba:	edd3 7a00 	vldr	s15, [r3]
    a8be:	ee37 7a27 	vadd.f32	s14, s14, s15
    a8c2:	4b53      	ldr	r3, [pc, #332]	; (aa10 <Driving+0xff0>)
    a8c4:	edd3 7a00 	vldr	s15, [r3]
    a8c8:	ee37 7a27 	vadd.f32	s14, s14, s15
    a8cc:	4b51      	ldr	r3, [pc, #324]	; (aa14 <Driving+0xff4>)
    a8ce:	edd3 7a00 	vldr	s15, [r3]
    a8d2:	eeb4 7ae7 	vcmpe.f32	s14, s15
    a8d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    a8da:	d805      	bhi.n	a8e8 <Driving+0xec8>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:549
				SegmentFinished = true;
    a8dc:	4b47      	ldr	r3, [pc, #284]	; (a9fc <Driving+0xfdc>)
    a8de:	2201      	movs	r2, #1
    a8e0:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:550
				ds_before_curve = DISTANCE_TO_BE_DRIVEN_BEFORE_CURVE + 0.01f; //add to ensure criterion of new segment computation
    a8e2:	4b47      	ldr	r3, [pc, #284]	; (aa00 <Driving+0xfe0>)
    a8e4:	4a4d      	ldr	r2, [pc, #308]	; (aa1c <Driving+0xffc>)
    a8e6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:560
					#endif
				#endif
			}
	#endif

	TrackingControl(SegmentType, watchingWall, &wallCenterDivergence, &weightDistanceSensor, v_ref, v_est, q_r, q, M, U_mot, vc_dot, vc_logging);
    a8e8:	4b46      	ldr	r3, [pc, #280]	; (aa04 <Driving+0xfe4>)
    a8ea:	781a      	ldrb	r2, [r3, #0]
    a8ec:	4b42      	ldr	r3, [pc, #264]	; (a9f8 <Driving+0xfd8>)
    a8ee:	781b      	ldrb	r3, [r3, #0]
    a8f0:	494f      	ldr	r1, [pc, #316]	; (aa30 <Driving+0x1010>)
    a8f2:	9100      	str	r1, [sp, #0]
    a8f4:	494f      	ldr	r1, [pc, #316]	; (aa34 <Driving+0x1014>)
    a8f6:	9101      	str	r1, [sp, #4]
    a8f8:	494f      	ldr	r1, [pc, #316]	; (aa38 <Driving+0x1018>)
    a8fa:	9102      	str	r1, [sp, #8]
    a8fc:	4949      	ldr	r1, [pc, #292]	; (aa24 <Driving+0x1004>)
    a8fe:	9103      	str	r1, [sp, #12]
    a900:	494e      	ldr	r1, [pc, #312]	; (aa3c <Driving+0x101c>)
    a902:	9104      	str	r1, [sp, #16]
    a904:	494e      	ldr	r1, [pc, #312]	; (aa40 <Driving+0x1020>)
    a906:	9105      	str	r1, [sp, #20]
    a908:	494e      	ldr	r1, [pc, #312]	; (aa44 <Driving+0x1024>)
    a90a:	9106      	str	r1, [sp, #24]
    a90c:	494e      	ldr	r1, [pc, #312]	; (aa48 <Driving+0x1028>)
    a90e:	9107      	str	r1, [sp, #28]
    a910:	4610      	mov	r0, r2
    a912:	4619      	mov	r1, r3
    a914:	4a4d      	ldr	r2, [pc, #308]	; (aa4c <Driving+0x102c>)
    a916:	4b4e      	ldr	r3, [pc, #312]	; (aa50 <Driving+0x1030>)
    a918:	f001 f942 	bl	bba0 <TrackingControl>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:563

	#ifdef MICORMOUSE_VERSION_3_0
		MotorCurrentComputationForDesiredTorque(M, I_mot);
    a91c:	4847      	ldr	r0, [pc, #284]	; (aa3c <Driving+0x101c>)
    a91e:	494d      	ldr	r1, [pc, #308]	; (aa54 <Driving+0x1034>)
    a920:	f000 f8b2 	bl	aa88 <MotorCurrentComputationForDesiredTorque>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:566
		#if KDS_BUILD
			#ifdef MOTOR_ENABLE
				setMotorCurrent(I_mot);
    a924:	484b      	ldr	r0, [pc, #300]	; (aa54 <Driving+0x1034>)
    a926:	f000 f8db 	bl	aae0 <setMotorCurrent>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:584
		if (SegmentTime >= (t1 + t2 + t3)) {
			SegmentFinished = true;
		}
	#endif
	/* increase segment time */
	SegmentTime = SegmentTime + DT;
    a92a:	4b3a      	ldr	r3, [pc, #232]	; (aa14 <Driving+0xff4>)
    a92c:	ed93 7a00 	vldr	s14, [r3]
    a930:	eddf 7a49 	vldr	s15, [pc, #292]	; aa58 <Driving+0x1038>
    a934:	ee77 7a27 	vadd.f32	s15, s14, s15
    a938:	4b36      	ldr	r3, [pc, #216]	; (aa14 <Driving+0xff4>)
    a93a:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:587

	#if KDS_BUILD
		if(saveDataCnt >= 0){
    a93e:	4b47      	ldr	r3, [pc, #284]	; (aa5c <Driving+0x103c>)
    a940:	681b      	ldr	r3, [r3, #0]
    a942:	2b09      	cmp	r3, #9
    a944:	dd36      	ble.n	a9b4 <Driving+0xf94>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:588
			saveData(&wallCenterDivergence, weightDistanceSensor, v_ref, v_est, q_r, q, &distance_HP, x_IMU_dot_test, x_enc_test, I_mot_ist,
    a946:	4b42      	ldr	r3, [pc, #264]	; (aa50 <Driving+0x1030>)
    a948:	edd3 5a00 	vldr	s11, [r3]
    a94c:	4b44      	ldr	r3, [pc, #272]	; (aa60 <Driving+0x1040>)
    a94e:	ed93 6a00 	vldr	s12, [r3]
    a952:	4b44      	ldr	r3, [pc, #272]	; (aa64 <Driving+0x1044>)
    a954:	edd3 6a00 	vldr	s13, [r3]
    a958:	4b26      	ldr	r3, [pc, #152]	; (a9f4 <Driving+0xfd4>)
    a95a:	ed93 7a00 	vldr	s14, [r3]
    a95e:	4b27      	ldr	r3, [pc, #156]	; (a9fc <Driving+0xfdc>)
    a960:	781b      	ldrb	r3, [r3, #0]
    a962:	4a41      	ldr	r2, [pc, #260]	; (aa68 <Driving+0x1048>)
    a964:	edd2 7a00 	vldr	s15, [r2]
    a968:	4a2e      	ldr	r2, [pc, #184]	; (aa24 <Driving+0x1004>)
    a96a:	9200      	str	r2, [sp, #0]
    a96c:	4a20      	ldr	r2, [pc, #128]	; (a9f0 <Driving+0xfd0>)
    a96e:	9201      	str	r2, [sp, #4]
    a970:	4a3e      	ldr	r2, [pc, #248]	; (aa6c <Driving+0x104c>)
    a972:	9202      	str	r2, [sp, #8]
    a974:	4a3e      	ldr	r2, [pc, #248]	; (aa70 <Driving+0x1050>)
    a976:	9203      	str	r2, [sp, #12]
    a978:	9304      	str	r3, [sp, #16]
    a97a:	4b3e      	ldr	r3, [pc, #248]	; (aa74 <Driving+0x1054>)
    a97c:	9305      	str	r3, [sp, #20]
    a97e:	4b3e      	ldr	r3, [pc, #248]	; (aa78 <Driving+0x1058>)
    a980:	9306      	str	r3, [sp, #24]
    a982:	4b3e      	ldr	r3, [pc, #248]	; (aa7c <Driving+0x105c>)
    a984:	9307      	str	r3, [sp, #28]
    a986:	4b30      	ldr	r3, [pc, #192]	; (aa48 <Driving+0x1028>)
    a988:	9308      	str	r3, [sp, #32]
    a98a:	4b32      	ldr	r3, [pc, #200]	; (aa54 <Driving+0x1034>)
    a98c:	9309      	str	r3, [sp, #36]	; 0x24
    a98e:	482f      	ldr	r0, [pc, #188]	; (aa4c <Driving+0x102c>)
    a990:	eeb0 0a65 	vmov.f32	s0, s11
    a994:	4926      	ldr	r1, [pc, #152]	; (aa30 <Driving+0x1010>)
    a996:	4a27      	ldr	r2, [pc, #156]	; (aa34 <Driving+0x1014>)
    a998:	4b27      	ldr	r3, [pc, #156]	; (aa38 <Driving+0x1018>)
    a99a:	eef0 0a46 	vmov.f32	s1, s12
    a99e:	eeb0 1a66 	vmov.f32	s2, s13
    a9a2:	eef0 1a47 	vmov.f32	s3, s14
    a9a6:	eeb0 2a67 	vmov.f32	s4, s15
    a9aa:	f7f9 f84f 	bl	3a4c <saveData>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:591
					&distanceLP, d_hp_filtered, SegmentFinished, gyroXY, &distanceBandpass, &wallStateDistanceSensors,
					vc_logging, I_mot, u_bat);
			saveDataCnt = 0;
    a9ae:	4b2b      	ldr	r3, [pc, #172]	; (aa5c <Driving+0x103c>)
    a9b0:	2200      	movs	r2, #0
    a9b2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:593
		}
		saveDataCnt ++;
    a9b4:	4b29      	ldr	r3, [pc, #164]	; (aa5c <Driving+0x103c>)
    a9b6:	681b      	ldr	r3, [r3, #0]
    a9b8:	1c5a      	adds	r2, r3, #1
    a9ba:	4b28      	ldr	r3, [pc, #160]	; (aa5c <Driving+0x103c>)
    a9bc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:596
	#endif

	NewStraightSegment = false;
    a9be:	4b30      	ldr	r3, [pc, #192]	; (aa80 <Driving+0x1060>)
    a9c0:	2200      	movs	r2, #0
    a9c2:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:603
	#if KDS_BUILD && 0
		FC1_GetCounterValue(&timeCounter);
	#endif

	#if KDS_BUILD
		 I_LED_R_SetVal();I_LED_L_SetVal();//I_LED_MR_SetVal();I_LED_ML_SetVal();
    a9c4:	4b2f      	ldr	r3, [pc, #188]	; (aa84 <Driving+0x1064>)
    a9c6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
    a9ca:	4618      	mov	r0, r3
    a9cc:	f7fc fbe8 	bl	71a0 <BitIoLdd38_SetVal>
    a9d0:	4b2c      	ldr	r3, [pc, #176]	; (aa84 <Driving+0x1064>)
    a9d2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    a9d6:	4618      	mov	r0, r3
    a9d8:	f7fc fac2 	bl	6f60 <BitIoLdd35_SetVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:606
	#endif

	return false;
    a9dc:	2300      	movs	r3, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:607
} /*end of Driving(MazeSegmentsToBeDriven)*/
    a9de:	4618      	mov	r0, r3
    a9e0:	46bd      	mov	sp, r7
    a9e2:	e8bd 43b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, lr}
    a9e6:	b004      	add	sp, #16
    a9e8:	4770      	bx	lr
    a9ea:	bf00      	nop
    a9ec:	200009c4 	.word	0x200009c4
    a9f0:	20000a7c 	.word	0x20000a7c
    a9f4:	20000a78 	.word	0x20000a78
    a9f8:	200009bd 	.word	0x200009bd
    a9fc:	20000020 	.word	0x20000020
    aa00:	20000024 	.word	0x20000024
    aa04:	20000021 	.word	0x20000021
    aa08:	200009e8 	.word	0x200009e8
    aa0c:	200009ec 	.word	0x200009ec
    aa10:	200009f0 	.word	0x200009f0
    aa14:	20000a2c 	.word	0x20000a2c
    aa18:	200009be 	.word	0x200009be
    aa1c:	3c23d70a 	.word	0x3c23d70a
    aa20:	200009c0 	.word	0x200009c0
    aa24:	20000008 	.word	0x20000008
    aa28:	200005e0 	.word	0x200005e0
    aa2c:	00000000 	.word	0x00000000
    aa30:	200009f8 	.word	0x200009f8
    aa34:	20000a04 	.word	0x20000a04
    aa38:	20000014 	.word	0x20000014
    aa3c:	20000a14 	.word	0x20000a14
    aa40:	20000a1c 	.word	0x20000a1c
    aa44:	200005d0 	.word	0x200005d0
    aa48:	20000aec 	.word	0x20000aec
    aa4c:	20000ad0 	.word	0x20000ad0
    aa50:	20000ad4 	.word	0x20000ad4
    aa54:	20000a24 	.word	0x20000a24
    aa58:	3a03126f 	.word	0x3a03126f
    aa5c:	200005c8 	.word	0x200005c8
    aa60:	20000ad8 	.word	0x20000ad8
    aa64:	20000adc 	.word	0x20000adc
    aa68:	20000ae0 	.word	0x20000ae0
    aa6c:	20000af4 	.word	0x20000af4
    aa70:	20000a48 	.word	0x20000a48
    aa74:	20000ae4 	.word	0x20000ae4
    aa78:	20000aa4 	.word	0x20000aa4
    aa7c:	20000ac4 	.word	0x20000ac4
    aa80:	200009bc 	.word	0x200009bc
    aa84:	20000480 	.word	0x20000480

0000aa88 <MotorCurrentComputationForDesiredTorque>:
MotorCurrentComputationForDesiredTorque():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:620
		}
		return;
}
#else
	/* Calculates motor current for desired torque */
	void MotorCurrentComputationForDesiredTorque(float M[2], float I_mot[2]){
    aa88:	b480      	push	{r7}
    aa8a:	b085      	sub	sp, #20
    aa8c:	af00      	add	r7, sp, #0
    aa8e:	6078      	str	r0, [r7, #4]
    aa90:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:621
		for (int i = 0; i < 2; i++) {
    aa92:	2300      	movs	r3, #0
    aa94:	60fb      	str	r3, [r7, #12]
    aa96:	e012      	b.n	aabe <MotorCurrentComputationForDesiredTorque+0x36>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:622 (discriminator 2)
			I_mot[i] = Km_INVERSE * M[i];
    aa98:	68fb      	ldr	r3, [r7, #12]
    aa9a:	009b      	lsls	r3, r3, #2
    aa9c:	683a      	ldr	r2, [r7, #0]
    aa9e:	4413      	add	r3, r2
    aaa0:	68fa      	ldr	r2, [r7, #12]
    aaa2:	0092      	lsls	r2, r2, #2
    aaa4:	6879      	ldr	r1, [r7, #4]
    aaa6:	440a      	add	r2, r1
    aaa8:	ed92 7a00 	vldr	s14, [r2]
    aaac:	eddf 7a08 	vldr	s15, [pc, #32]	; aad0 <MotorCurrentComputationForDesiredTorque+0x48>
    aab0:	ee67 7a27 	vmul.f32	s15, s14, s15
    aab4:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:621 (discriminator 2)
		return;
}
#else
	/* Calculates motor current for desired torque */
	void MotorCurrentComputationForDesiredTorque(float M[2], float I_mot[2]){
		for (int i = 0; i < 2; i++) {
    aab8:	68fb      	ldr	r3, [r7, #12]
    aaba:	3301      	adds	r3, #1
    aabc:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:621 (discriminator 1)
    aabe:	68fb      	ldr	r3, [r7, #12]
    aac0:	2b01      	cmp	r3, #1
    aac2:	dde9      	ble.n	aa98 <MotorCurrentComputationForDesiredTorque+0x10>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:625
			I_mot[i] = Km_INVERSE * M[i];

		}
		return;
    aac4:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:626
	}
    aac6:	3714      	adds	r7, #20
    aac8:	46bd      	mov	sp, r7
    aaca:	f85d 7b04 	ldr.w	r7, [sp], #4
    aace:	4770      	bx	lr
    aad0:	3f0346dc 	.word	0x3f0346dc

0000aad4 <setBias>:
setBias():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:630
#endif

#if KDS_BUILD
	void setBias(void){
    aad4:	b580      	push	{r7, lr}
    aad6:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:631
		setBiasRaw();
    aad8:	f002 f8fa 	bl	ccd0 <setBiasRaw>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:632
	}
    aadc:	bd80      	pop	{r7, pc}
    aade:	bf00      	nop

0000aae0 <setMotorCurrent>:
setMotorCurrent():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:668
			}
		}

	#else
		/* Negative current for driving backwards is also possible. */
		void setMotorCurrent(float I_mot[2]){
    aae0:	b580      	push	{r7, lr}
    aae2:	b082      	sub	sp, #8
    aae4:	af00      	add	r7, sp, #0
    aae6:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:669
			set_VREF((I_mot[0]*TORQUE_TO_VREF),(I_mot[1]*TORQUE_TO_VREF));
    aae8:	687b      	ldr	r3, [r7, #4]
    aaea:	ed93 7a00 	vldr	s14, [r3]
    aaee:	eddf 7a0a 	vldr	s15, [pc, #40]	; ab18 <setMotorCurrent+0x38>
    aaf2:	ee27 7a27 	vmul.f32	s14, s14, s15
    aaf6:	687b      	ldr	r3, [r7, #4]
    aaf8:	3304      	adds	r3, #4
    aafa:	edd3 6a00 	vldr	s13, [r3]
    aafe:	eddf 7a06 	vldr	s15, [pc, #24]	; ab18 <setMotorCurrent+0x38>
    ab02:	ee66 7aa7 	vmul.f32	s15, s13, s15
    ab06:	eeb0 0a47 	vmov.f32	s0, s14
    ab0a:	eef0 0a67 	vmov.f32	s1, s15
    ab0e:	f7f9 fac3 	bl	4098 <set_VREF>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/Driving.c:670
		}
    ab12:	3708      	adds	r7, #8
    ab14:	46bd      	mov	sp, r7
    ab16:	bd80      	pop	{r7, pc}
    ab18:	4019999a 	.word	0x4019999a

0000ab1c <HeadingDirectionComputation>:
HeadingDirectionComputation():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:21
 *  	       **|**
 *  	         3
 * 		      (3/2*pi)
 *
 */
int8_t HeadingDirectionComputation(float q_theta){
    ab1c:	b480      	push	{r7}
    ab1e:	b085      	sub	sp, #20
    ab20:	af00      	add	r7, sp, #0
    ab22:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:22
	int8_t quadrant = 0;
    ab26:	2300      	movs	r3, #0
    ab28:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:23
	for(int j = -MAX_NO_OF_360TURNS_IN_MAZE * 4; j <= MAX_NO_OF_360TURNS_IN_MAZE * 4; j++){
    ab2a:	f06f 0313 	mvn.w	r3, #19
    ab2e:	60bb      	str	r3, [r7, #8]
    ab30:	e04c      	b.n	abcc <HeadingDirectionComputation+0xb0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:24
		if((j * PI_HALF) - THETA_REFERENCE_TOLERANCE  < q_theta &&
    ab32:	68bb      	ldr	r3, [r7, #8]
    ab34:	ee07 3a90 	vmov	s15, r3
    ab38:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    ab3c:	eddf 7a29 	vldr	s15, [pc, #164]	; abe4 <HeadingDirectionComputation+0xc8>
    ab40:	ee27 7a27 	vmul.f32	s14, s14, s15
    ab44:	eddf 7a28 	vldr	s15, [pc, #160]	; abe8 <HeadingDirectionComputation+0xcc>
    ab48:	ee37 7a67 	vsub.f32	s14, s14, s15
    ab4c:	edd7 7a01 	vldr	s15, [r7, #4]
    ab50:	eeb4 7ae7 	vcmpe.f32	s14, s15
    ab54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ab58:	d535      	bpl.n	abc6 <HeadingDirectionComputation+0xaa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:25 (discriminator 1)
				q_theta < (j * PI_HALF) + THETA_REFERENCE_TOLERANCE){
    ab5a:	68bb      	ldr	r3, [r7, #8]
    ab5c:	ee07 3a90 	vmov	s15, r3
    ab60:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    ab64:	eddf 7a1f 	vldr	s15, [pc, #124]	; abe4 <HeadingDirectionComputation+0xc8>
    ab68:	ee27 7a27 	vmul.f32	s14, s14, s15
    ab6c:	eddf 7a1e 	vldr	s15, [pc, #120]	; abe8 <HeadingDirectionComputation+0xcc>
    ab70:	ee37 7a27 	vadd.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:24 (discriminator 1)
 *
 */
int8_t HeadingDirectionComputation(float q_theta){
	int8_t quadrant = 0;
	for(int j = -MAX_NO_OF_360TURNS_IN_MAZE * 4; j <= MAX_NO_OF_360TURNS_IN_MAZE * 4; j++){
		if((j * PI_HALF) - THETA_REFERENCE_TOLERANCE  < q_theta &&
    ab74:	edd7 7a01 	vldr	s15, [r7, #4]
    ab78:	eeb4 7ae7 	vcmpe.f32	s14, s15
    ab7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ab80:	dd21      	ble.n	abc6 <HeadingDirectionComputation+0xaa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:26
				q_theta < (j * PI_HALF) + THETA_REFERENCE_TOLERANCE){
			quadrant = j % 4;
    ab82:	68ba      	ldr	r2, [r7, #8]
    ab84:	4b19      	ldr	r3, [pc, #100]	; (abec <HeadingDirectionComputation+0xd0>)
    ab86:	4013      	ands	r3, r2
    ab88:	2b00      	cmp	r3, #0
    ab8a:	da03      	bge.n	ab94 <HeadingDirectionComputation+0x78>
    ab8c:	3b01      	subs	r3, #1
    ab8e:	f063 0303 	orn	r3, r3, #3
    ab92:	3301      	adds	r3, #1
    ab94:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:27
			if (quadrant < 0){ // abs() and orientation correction for negative theta
    ab96:	f997 300f 	ldrsb.w	r3, [r7, #15]
    ab9a:	2b00      	cmp	r3, #0
    ab9c:	da13      	bge.n	abc6 <HeadingDirectionComputation+0xaa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:28
				if (quadrant == -3){
    ab9e:	f997 300f 	ldrsb.w	r3, [r7, #15]
    aba2:	f113 0f03 	cmn.w	r3, #3
    aba6:	d102      	bne.n	abae <HeadingDirectionComputation+0x92>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:29
					quadrant = 1;
    aba8:	2301      	movs	r3, #1
    abaa:	73fb      	strb	r3, [r7, #15]
    abac:	e00b      	b.n	abc6 <HeadingDirectionComputation+0xaa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:30
				}else if(quadrant == -1){
    abae:	f997 300f 	ldrsb.w	r3, [r7, #15]
    abb2:	f1b3 3fff 	cmp.w	r3, #4294967295
    abb6:	d102      	bne.n	abbe <HeadingDirectionComputation+0xa2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:31
					quadrant = 3;
    abb8:	2303      	movs	r3, #3
    abba:	73fb      	strb	r3, [r7, #15]
    abbc:	e003      	b.n	abc6 <HeadingDirectionComputation+0xaa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:33
				}else{
					quadrant = -quadrant;
    abbe:	7bfb      	ldrb	r3, [r7, #15]
    abc0:	425b      	negs	r3, r3
    abc2:	b2db      	uxtb	r3, r3
    abc4:	73fb      	strb	r3, [r7, #15]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:23
 * 		      (3/2*pi)
 *
 */
int8_t HeadingDirectionComputation(float q_theta){
	int8_t quadrant = 0;
	for(int j = -MAX_NO_OF_360TURNS_IN_MAZE * 4; j <= MAX_NO_OF_360TURNS_IN_MAZE * 4; j++){
    abc6:	68bb      	ldr	r3, [r7, #8]
    abc8:	3301      	adds	r3, #1
    abca:	60bb      	str	r3, [r7, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:23 (discriminator 1)
    abcc:	68bb      	ldr	r3, [r7, #8]
    abce:	2b14      	cmp	r3, #20
    abd0:	ddaf      	ble.n	ab32 <HeadingDirectionComputation+0x16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:38
					quadrant = -quadrant;
				}
			}
		}
	}
	return quadrant;
    abd2:	7bfb      	ldrb	r3, [r7, #15]
    abd4:	b25b      	sxtb	r3, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:39
}
    abd6:	4618      	mov	r0, r3
    abd8:	3714      	adds	r7, #20
    abda:	46bd      	mov	sp, r7
    abdc:	f85d 7b04 	ldr.w	r7, [sp], #4
    abe0:	4770      	bx	lr
    abe2:	bf00      	nop
    abe4:	3fc90fdb 	.word	0x3fc90fdb
    abe8:	3e4ccccd 	.word	0x3e4ccccd
    abec:	80000003 	.word	0x80000003

0000abf0 <SegmentTargetComputation>:
SegmentTargetComputation():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:42

/** Only for orthogonal maze segments for now! */
bool SegmentTargetComputation(Maze_segments MazeSegmentsToBeDriven, Segment_targets *SegmentTargets){
    abf0:	b084      	sub	sp, #16
    abf2:	b5b0      	push	{r4, r5, r7, lr}
    abf4:	b082      	sub	sp, #8
    abf6:	af00      	add	r7, sp, #0
    abf8:	f107 0c18 	add.w	ip, r7, #24
    abfc:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:43
	int8_t quadrant = 0;
    ac00:	2300      	movs	r3, #0
    ac02:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:44
	for(int i = 1; i <= MazeSegmentsToBeDriven.numberOfSegments; i++){
    ac04:	2301      	movs	r3, #1
    ac06:	607b      	str	r3, [r7, #4]
    ac08:	f000 bfb0 	b.w	bb6c <SegmentTargetComputation+0xf7c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:46
		// Determine heading direction
		quadrant = HeadingDirectionComputation(SegmentTargets->q_theta[i-1]);
    ac0c:	687b      	ldr	r3, [r7, #4]
    ac0e:	3b01      	subs	r3, #1
    ac10:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ac14:	3352      	adds	r3, #82	; 0x52
    ac16:	009b      	lsls	r3, r3, #2
    ac18:	4413      	add	r3, r2
    ac1a:	edd3 7a00 	vldr	s15, [r3]
    ac1e:	eeb0 0a67 	vmov.f32	s0, s15
    ac22:	f7ff ff7b 	bl	ab1c <HeadingDirectionComputation>
    ac26:	4603      	mov	r3, r0
    ac28:	70fb      	strb	r3, [r7, #3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:51

		/**
		* TURN segment:
		*/
		if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 45 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -45 ||
    ac2a:	687b      	ldr	r3, [r7, #4]
    ac2c:	1e5a      	subs	r2, r3, #1
    ac2e:	4613      	mov	r3, r2
    ac30:	005b      	lsls	r3, r3, #1
    ac32:	4413      	add	r3, r2
    ac34:	00db      	lsls	r3, r3, #3
    ac36:	f107 0218 	add.w	r2, r7, #24
    ac3a:	4413      	add	r3, r2
    ac3c:	681b      	ldr	r3, [r3, #0]
    ac3e:	2b2d      	cmp	r3, #45	; 0x2d
    ac40:	d072      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:51 (discriminator 1)
    ac42:	687b      	ldr	r3, [r7, #4]
    ac44:	1e5a      	subs	r2, r3, #1
    ac46:	4613      	mov	r3, r2
    ac48:	005b      	lsls	r3, r3, #1
    ac4a:	4413      	add	r3, r2
    ac4c:	00db      	lsls	r3, r3, #3
    ac4e:	f107 0c18 	add.w	ip, r7, #24
    ac52:	4463      	add	r3, ip
    ac54:	681b      	ldr	r3, [r3, #0]
    ac56:	f113 0f2d 	cmn.w	r3, #45	; 0x2d
    ac5a:	d065      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:52 (discriminator 1)
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90 ||
    ac5c:	687b      	ldr	r3, [r7, #4]
    ac5e:	1e5a      	subs	r2, r3, #1
    ac60:	4613      	mov	r3, r2
    ac62:	005b      	lsls	r3, r3, #1
    ac64:	4413      	add	r3, r2
    ac66:	00db      	lsls	r3, r3, #3
    ac68:	f107 0218 	add.w	r2, r7, #24
    ac6c:	4413      	add	r3, r2
    ac6e:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:51 (discriminator 1)
		quadrant = HeadingDirectionComputation(SegmentTargets->q_theta[i-1]);

		/**
		* TURN segment:
		*/
		if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 45 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -45 ||
    ac70:	2b5a      	cmp	r3, #90	; 0x5a
    ac72:	d059      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:52
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90 ||
    ac74:	687b      	ldr	r3, [r7, #4]
    ac76:	1e5a      	subs	r2, r3, #1
    ac78:	4613      	mov	r3, r2
    ac7a:	005b      	lsls	r3, r3, #1
    ac7c:	4413      	add	r3, r2
    ac7e:	00db      	lsls	r3, r3, #3
    ac80:	f107 0c18 	add.w	ip, r7, #24
    ac84:	4463      	add	r3, ip
    ac86:	681b      	ldr	r3, [r3, #0]
    ac88:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    ac8c:	d04c      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:53 (discriminator 1)
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 135 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -135 ||
    ac8e:	687b      	ldr	r3, [r7, #4]
    ac90:	1e5a      	subs	r2, r3, #1
    ac92:	4613      	mov	r3, r2
    ac94:	005b      	lsls	r3, r3, #1
    ac96:	4413      	add	r3, r2
    ac98:	00db      	lsls	r3, r3, #3
    ac9a:	f107 0218 	add.w	r2, r7, #24
    ac9e:	4413      	add	r3, r2
    aca0:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:52 (discriminator 1)

		/**
		* TURN segment:
		*/
		if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 45 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -45 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90 ||
    aca2:	2b87      	cmp	r3, #135	; 0x87
    aca4:	d040      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:53
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 135 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -135 ||
    aca6:	687b      	ldr	r3, [r7, #4]
    aca8:	1e5a      	subs	r2, r3, #1
    acaa:	4613      	mov	r3, r2
    acac:	005b      	lsls	r3, r3, #1
    acae:	4413      	add	r3, r2
    acb0:	00db      	lsls	r3, r3, #3
    acb2:	f107 0c18 	add.w	ip, r7, #24
    acb6:	4463      	add	r3, ip
    acb8:	681b      	ldr	r3, [r3, #0]
    acba:	f113 0f87 	cmn.w	r3, #135	; 0x87
    acbe:	d033      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:54 (discriminator 1)
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180 ||
    acc0:	687b      	ldr	r3, [r7, #4]
    acc2:	1e5a      	subs	r2, r3, #1
    acc4:	4613      	mov	r3, r2
    acc6:	005b      	lsls	r3, r3, #1
    acc8:	4413      	add	r3, r2
    acca:	00db      	lsls	r3, r3, #3
    accc:	f107 0218 	add.w	r2, r7, #24
    acd0:	4413      	add	r3, r2
    acd2:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:53 (discriminator 1)
		/**
		* TURN segment:
		*/
		if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 45 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -45 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 135 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -135 ||
    acd4:	2bb4      	cmp	r3, #180	; 0xb4
    acd6:	d027      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:54
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180 ||
    acd8:	687b      	ldr	r3, [r7, #4]
    acda:	1e5a      	subs	r2, r3, #1
    acdc:	4613      	mov	r3, r2
    acde:	005b      	lsls	r3, r3, #1
    ace0:	4413      	add	r3, r2
    ace2:	00db      	lsls	r3, r3, #3
    ace4:	f107 0c18 	add.w	ip, r7, #24
    ace8:	4463      	add	r3, ip
    acea:	681b      	ldr	r3, [r3, #0]
    acec:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    acf0:	d01a      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:55 (discriminator 1)
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
    acf2:	687b      	ldr	r3, [r7, #4]
    acf4:	1e5a      	subs	r2, r3, #1
    acf6:	4613      	mov	r3, r2
    acf8:	005b      	lsls	r3, r3, #1
    acfa:	4413      	add	r3, r2
    acfc:	00db      	lsls	r3, r3, #3
    acfe:	f107 0218 	add.w	r2, r7, #24
    ad02:	4413      	add	r3, r2
    ad04:	681b      	ldr	r3, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:54 (discriminator 1)
		* TURN segment:
		*/
		if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 45 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -45 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 135 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -135 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180 ||
    ad06:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    ad0a:	d00d      	beq.n	ad28 <SegmentTargetComputation+0x138>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:55
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
    ad0c:	687b      	ldr	r3, [r7, #4]
    ad0e:	1e5a      	subs	r2, r3, #1
    ad10:	4613      	mov	r3, r2
    ad12:	005b      	lsls	r3, r3, #1
    ad14:	4413      	add	r3, r2
    ad16:	00db      	lsls	r3, r3, #3
    ad18:	f107 0c18 	add.w	ip, r7, #24
    ad1c:	4463      	add	r3, ip
    ad1e:	681b      	ldr	r3, [r3, #0]
    ad20:	f513 7f61 	cmn.w	r3, #900	; 0x384
    ad24:	f040 8608 	bne.w	b938 <SegmentTargetComputation+0xd48>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:56
					if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
    ad28:	687b      	ldr	r3, [r7, #4]
    ad2a:	1e5a      	subs	r2, r3, #1
    ad2c:	4613      	mov	r3, r2
    ad2e:	005b      	lsls	r3, r3, #1
    ad30:	4413      	add	r3, r2
    ad32:	00db      	lsls	r3, r3, #3
    ad34:	f107 0218 	add.w	r2, r7, #24
    ad38:	4413      	add	r3, r2
    ad3a:	681b      	ldr	r3, [r3, #0]
    ad3c:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    ad40:	d00c      	beq.n	ad5c <SegmentTargetComputation+0x16c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:56 (discriminator 1)
    ad42:	687b      	ldr	r3, [r7, #4]
    ad44:	1e5a      	subs	r2, r3, #1
    ad46:	4613      	mov	r3, r2
    ad48:	005b      	lsls	r3, r3, #1
    ad4a:	4413      	add	r3, r2
    ad4c:	00db      	lsls	r3, r3, #3
    ad4e:	f107 0c18 	add.w	ip, r7, #24
    ad52:	4463      	add	r3, ip
    ad54:	681b      	ldr	r3, [r3, #0]
    ad56:	f513 7f61 	cmn.w	r3, #900	; 0x384
    ad5a:	d140      	bne.n	adde <SegmentTargetComputation+0x1ee>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:57
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
    ad5c:	687b      	ldr	r3, [r7, #4]
    ad5e:	3b01      	subs	r3, #1
    ad60:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ad64:	3352      	adds	r3, #82	; 0x52
    ad66:	009b      	lsls	r3, r3, #2
    ad68:	4413      	add	r3, r2
    ad6a:	681b      	ldr	r3, [r3, #0]
    ad6c:	4618      	mov	r0, r3
    ad6e:	f7f5 fd17 	bl	7a0 <__aeabi_f2d>
    ad72:	4604      	mov	r4, r0
    ad74:	460d      	mov	r5, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:58
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*0.1*DEGREES_TO_RAD);
    ad76:	687b      	ldr	r3, [r7, #4]
    ad78:	1e5a      	subs	r2, r3, #1
    ad7a:	4613      	mov	r3, r2
    ad7c:	005b      	lsls	r3, r3, #1
    ad7e:	4413      	add	r3, r2
    ad80:	00db      	lsls	r3, r3, #3
    ad82:	f107 0218 	add.w	r2, r7, #24
    ad86:	4413      	add	r3, r2
    ad88:	681b      	ldr	r3, [r3, #0]
    ad8a:	4618      	mov	r0, r3
    ad8c:	f7f5 fcf6 	bl	77c <__aeabi_i2d>
    ad90:	4602      	mov	r2, r0
    ad92:	460b      	mov	r3, r1
    ad94:	4610      	mov	r0, r2
    ad96:	4619      	mov	r1, r3
    ad98:	a3d7      	add	r3, pc, #860	; (adr r3, b0f8 <SegmentTargetComputation+0x508>)
    ad9a:	e9d3 2300 	ldrd	r2, r3, [r3]
    ad9e:	f7f5 fd53 	bl	848 <__aeabi_dmul>
    ada2:	4602      	mov	r2, r0
    ada4:	460b      	mov	r3, r1
    ada6:	4610      	mov	r0, r2
    ada8:	4619      	mov	r1, r3
    adaa:	a3d5      	add	r3, pc, #852	; (adr r3, b100 <SegmentTargetComputation+0x510>)
    adac:	e9d3 2300 	ldrd	r2, r3, [r3]
    adb0:	f7f5 fd4a 	bl	848 <__aeabi_dmul>
    adb4:	4602      	mov	r2, r0
    adb6:	460b      	mov	r3, r1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:57
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 135 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -135 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180 ||
				MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
					if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
    adb8:	4620      	mov	r0, r4
    adba:	4629      	mov	r1, r5
    adbc:	f7f5 fb92 	bl	4e4 <__adddf3>
    adc0:	4602      	mov	r2, r0
    adc2:	460b      	mov	r3, r1
    adc4:	4610      	mov	r0, r2
    adc6:	4619      	mov	r1, r3
    adc8:	f7f6 f800 	bl	dcc <__aeabi_d2f>
    adcc:	4602      	mov	r2, r0
    adce:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    add2:	687b      	ldr	r3, [r7, #4]
    add4:	3352      	adds	r3, #82	; 0x52
    add6:	009b      	lsls	r3, r3, #2
    add8:	440b      	add	r3, r1
    adda:	601a      	str	r2, [r3, #0]
    addc:	e024      	b.n	ae28 <SegmentTargetComputation+0x238>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:61
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*0.1*DEGREES_TO_RAD);
					}
					else{
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
    adde:	687b      	ldr	r3, [r7, #4]
    ade0:	3b01      	subs	r3, #1
    ade2:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ade6:	3352      	adds	r3, #82	; 0x52
    ade8:	009b      	lsls	r3, r3, #2
    adea:	4413      	add	r3, r2
    adec:	ed93 7a00 	vldr	s14, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:62
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*DEGREES_TO_RAD);
    adf0:	687b      	ldr	r3, [r7, #4]
    adf2:	1e5a      	subs	r2, r3, #1
    adf4:	4613      	mov	r3, r2
    adf6:	005b      	lsls	r3, r3, #1
    adf8:	4413      	add	r3, r2
    adfa:	00db      	lsls	r3, r3, #3
    adfc:	f107 0c18 	add.w	ip, r7, #24
    ae00:	4463      	add	r3, ip
    ae02:	681b      	ldr	r3, [r3, #0]
    ae04:	ee07 3a90 	vmov	s15, r3
    ae08:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    ae0c:	eddf 7ab8 	vldr	s15, [pc, #736]	; b0f0 <SegmentTargetComputation+0x500>
    ae10:	ee66 7aa7 	vmul.f32	s15, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:61
					if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900 || MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*0.1*DEGREES_TO_RAD);
					}
					else{
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
    ae14:	ee77 7a27 	vadd.f32	s15, s14, s15
    ae18:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ae1c:	687b      	ldr	r3, [r7, #4]
    ae1e:	3352      	adds	r3, #82	; 0x52
    ae20:	009b      	lsls	r3, r3, #2
    ae22:	4413      	add	r3, r2
    ae24:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:64
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*DEGREES_TO_RAD);
					}
					if(quadrant == 0){
    ae28:	f997 3003 	ldrsb.w	r3, [r7, #3]
    ae2c:	2b00      	cmp	r3, #0
    ae2e:	f040 816b 	bne.w	b108 <SegmentTargetComputation+0x518>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:65
						if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90){
    ae32:	687b      	ldr	r3, [r7, #4]
    ae34:	1e5a      	subs	r2, r3, #1
    ae36:	4613      	mov	r3, r2
    ae38:	005b      	lsls	r3, r3, #1
    ae3a:	4413      	add	r3, r2
    ae3c:	00db      	lsls	r3, r3, #3
    ae3e:	f107 0218 	add.w	r2, r7, #24
    ae42:	4413      	add	r3, r2
    ae44:	681b      	ldr	r3, [r3, #0]
    ae46:	2b5a      	cmp	r3, #90	; 0x5a
    ae48:	d143      	bne.n	aed2 <SegmentTargetComputation+0x2e2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:66
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + 0.5*MAZE_SIZE);
    ae4a:	687b      	ldr	r3, [r7, #4]
    ae4c:	3b01      	subs	r3, #1
    ae4e:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ae52:	009b      	lsls	r3, r3, #2
    ae54:	4413      	add	r3, r2
    ae56:	681b      	ldr	r3, [r3, #0]
    ae58:	4618      	mov	r0, r3
    ae5a:	f7f5 fca1 	bl	7a0 <__aeabi_f2d>
    ae5e:	4602      	mov	r2, r0
    ae60:	460b      	mov	r3, r1
    ae62:	4610      	mov	r0, r2
    ae64:	4619      	mov	r1, r3
    ae66:	a3a0      	add	r3, pc, #640	; (adr r3, b0e8 <SegmentTargetComputation+0x4f8>)
    ae68:	e9d3 2300 	ldrd	r2, r3, [r3]
    ae6c:	f7f5 fb3a 	bl	4e4 <__adddf3>
    ae70:	4602      	mov	r2, r0
    ae72:	460b      	mov	r3, r1
    ae74:	4610      	mov	r0, r2
    ae76:	4619      	mov	r1, r3
    ae78:	f7f5 ffa8 	bl	dcc <__aeabi_d2f>
    ae7c:	4602      	mov	r2, r0
    ae7e:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    ae82:	687b      	ldr	r3, [r7, #4]
    ae84:	009b      	lsls	r3, r3, #2
    ae86:	440b      	add	r3, r1
    ae88:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:67
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + 0.5*MAZE_SIZE);
    ae8a:	687b      	ldr	r3, [r7, #4]
    ae8c:	3b01      	subs	r3, #1
    ae8e:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ae92:	3328      	adds	r3, #40	; 0x28
    ae94:	009b      	lsls	r3, r3, #2
    ae96:	4413      	add	r3, r2
    ae98:	685b      	ldr	r3, [r3, #4]
    ae9a:	4618      	mov	r0, r3
    ae9c:	f7f5 fc80 	bl	7a0 <__aeabi_f2d>
    aea0:	4602      	mov	r2, r0
    aea2:	460b      	mov	r3, r1
    aea4:	4610      	mov	r0, r2
    aea6:	4619      	mov	r1, r3
    aea8:	a38f      	add	r3, pc, #572	; (adr r3, b0e8 <SegmentTargetComputation+0x4f8>)
    aeaa:	e9d3 2300 	ldrd	r2, r3, [r3]
    aeae:	f7f5 fb19 	bl	4e4 <__adddf3>
    aeb2:	4602      	mov	r2, r0
    aeb4:	460b      	mov	r3, r1
    aeb6:	4610      	mov	r0, r2
    aeb8:	4619      	mov	r1, r3
    aeba:	f7f5 ff87 	bl	dcc <__aeabi_d2f>
    aebe:	4602      	mov	r2, r0
    aec0:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    aec4:	687b      	ldr	r3, [r7, #4]
    aec6:	3328      	adds	r3, #40	; 0x28
    aec8:	009b      	lsls	r3, r3, #2
    aeca:	440b      	add	r3, r1
    aecc:	605a      	str	r2, [r3, #4]
    aece:	f000 bd32 	b.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:68
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90){
    aed2:	687b      	ldr	r3, [r7, #4]
    aed4:	1e5a      	subs	r2, r3, #1
    aed6:	4613      	mov	r3, r2
    aed8:	005b      	lsls	r3, r3, #1
    aeda:	4413      	add	r3, r2
    aedc:	00db      	lsls	r3, r3, #3
    aede:	f107 0c18 	add.w	ip, r7, #24
    aee2:	4463      	add	r3, ip
    aee4:	681b      	ldr	r3, [r3, #0]
    aee6:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    aeea:	d143      	bne.n	af74 <SegmentTargetComputation+0x384>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:69
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + 0.5*MAZE_SIZE);
    aeec:	687b      	ldr	r3, [r7, #4]
    aeee:	3b01      	subs	r3, #1
    aef0:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    aef4:	009b      	lsls	r3, r3, #2
    aef6:	4413      	add	r3, r2
    aef8:	681b      	ldr	r3, [r3, #0]
    aefa:	4618      	mov	r0, r3
    aefc:	f7f5 fc50 	bl	7a0 <__aeabi_f2d>
    af00:	4602      	mov	r2, r0
    af02:	460b      	mov	r3, r1
    af04:	4610      	mov	r0, r2
    af06:	4619      	mov	r1, r3
    af08:	a377      	add	r3, pc, #476	; (adr r3, b0e8 <SegmentTargetComputation+0x4f8>)
    af0a:	e9d3 2300 	ldrd	r2, r3, [r3]
    af0e:	f7f5 fae9 	bl	4e4 <__adddf3>
    af12:	4602      	mov	r2, r0
    af14:	460b      	mov	r3, r1
    af16:	4610      	mov	r0, r2
    af18:	4619      	mov	r1, r3
    af1a:	f7f5 ff57 	bl	dcc <__aeabi_d2f>
    af1e:	4602      	mov	r2, r0
    af20:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    af24:	687b      	ldr	r3, [r7, #4]
    af26:	009b      	lsls	r3, r3, #2
    af28:	440b      	add	r3, r1
    af2a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:70
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - 0.5*MAZE_SIZE);
    af2c:	687b      	ldr	r3, [r7, #4]
    af2e:	3b01      	subs	r3, #1
    af30:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    af34:	3328      	adds	r3, #40	; 0x28
    af36:	009b      	lsls	r3, r3, #2
    af38:	4413      	add	r3, r2
    af3a:	685b      	ldr	r3, [r3, #4]
    af3c:	4618      	mov	r0, r3
    af3e:	f7f5 fc2f 	bl	7a0 <__aeabi_f2d>
    af42:	4602      	mov	r2, r0
    af44:	460b      	mov	r3, r1
    af46:	4610      	mov	r0, r2
    af48:	4619      	mov	r1, r3
    af4a:	a367      	add	r3, pc, #412	; (adr r3, b0e8 <SegmentTargetComputation+0x4f8>)
    af4c:	e9d3 2300 	ldrd	r2, r3, [r3]
    af50:	f7f5 fac6 	bl	4e0 <__aeabi_dsub>
    af54:	4602      	mov	r2, r0
    af56:	460b      	mov	r3, r1
    af58:	4610      	mov	r0, r2
    af5a:	4619      	mov	r1, r3
    af5c:	f7f5 ff36 	bl	dcc <__aeabi_d2f>
    af60:	4602      	mov	r2, r0
    af62:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    af66:	687b      	ldr	r3, [r7, #4]
    af68:	3328      	adds	r3, #40	; 0x28
    af6a:	009b      	lsls	r3, r3, #2
    af6c:	440b      	add	r3, r1
    af6e:	605a      	str	r2, [r3, #4]
    af70:	f000 bce1 	b.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:71
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900){
    af74:	687b      	ldr	r3, [r7, #4]
    af76:	1e5a      	subs	r2, r3, #1
    af78:	4613      	mov	r3, r2
    af7a:	005b      	lsls	r3, r3, #1
    af7c:	4413      	add	r3, r2
    af7e:	00db      	lsls	r3, r3, #3
    af80:	f107 0218 	add.w	r2, r7, #24
    af84:	4413      	add	r3, r2
    af86:	681b      	ldr	r3, [r3, #0]
    af88:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    af8c:	d11d      	bne.n	afca <SegmentTargetComputation+0x3da>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:72
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    af8e:	687b      	ldr	r3, [r7, #4]
    af90:	3b01      	subs	r3, #1
    af92:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    af96:	009b      	lsls	r3, r3, #2
    af98:	4413      	add	r3, r2
    af9a:	681a      	ldr	r2, [r3, #0]
    af9c:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    afa0:	687b      	ldr	r3, [r7, #4]
    afa2:	009b      	lsls	r3, r3, #2
    afa4:	440b      	add	r3, r1
    afa6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:73
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    afa8:	687b      	ldr	r3, [r7, #4]
    afaa:	3b01      	subs	r3, #1
    afac:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    afb0:	3328      	adds	r3, #40	; 0x28
    afb2:	009b      	lsls	r3, r3, #2
    afb4:	4413      	add	r3, r2
    afb6:	685a      	ldr	r2, [r3, #4]
    afb8:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    afbc:	687b      	ldr	r3, [r7, #4]
    afbe:	3328      	adds	r3, #40	; 0x28
    afc0:	009b      	lsls	r3, r3, #2
    afc2:	440b      	add	r3, r1
    afc4:	605a      	str	r2, [r3, #4]
    afc6:	f000 bcb6 	b.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:74
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
    afca:	687b      	ldr	r3, [r7, #4]
    afcc:	1e5a      	subs	r2, r3, #1
    afce:	4613      	mov	r3, r2
    afd0:	005b      	lsls	r3, r3, #1
    afd2:	4413      	add	r3, r2
    afd4:	00db      	lsls	r3, r3, #3
    afd6:	f107 0c18 	add.w	ip, r7, #24
    afda:	4463      	add	r3, ip
    afdc:	681b      	ldr	r3, [r3, #0]
    afde:	f513 7f61 	cmn.w	r3, #900	; 0x384
    afe2:	d11d      	bne.n	b020 <SegmentTargetComputation+0x430>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:75
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    afe4:	687b      	ldr	r3, [r7, #4]
    afe6:	3b01      	subs	r3, #1
    afe8:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    afec:	009b      	lsls	r3, r3, #2
    afee:	4413      	add	r3, r2
    aff0:	681a      	ldr	r2, [r3, #0]
    aff2:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    aff6:	687b      	ldr	r3, [r7, #4]
    aff8:	009b      	lsls	r3, r3, #2
    affa:	440b      	add	r3, r1
    affc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:76
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    affe:	687b      	ldr	r3, [r7, #4]
    b000:	3b01      	subs	r3, #1
    b002:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b006:	3328      	adds	r3, #40	; 0x28
    b008:	009b      	lsls	r3, r3, #2
    b00a:	4413      	add	r3, r2
    b00c:	685a      	ldr	r2, [r3, #4]
    b00e:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b012:	687b      	ldr	r3, [r7, #4]
    b014:	3328      	adds	r3, #40	; 0x28
    b016:	009b      	lsls	r3, r3, #2
    b018:	440b      	add	r3, r1
    b01a:	605a      	str	r2, [r3, #4]
    b01c:	f000 bc8b 	b.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:77
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180){
    b020:	687b      	ldr	r3, [r7, #4]
    b022:	1e5a      	subs	r2, r3, #1
    b024:	4613      	mov	r3, r2
    b026:	005b      	lsls	r3, r3, #1
    b028:	4413      	add	r3, r2
    b02a:	00db      	lsls	r3, r3, #3
    b02c:	f107 0218 	add.w	r2, r7, #24
    b030:	4413      	add	r3, r2
    b032:	681b      	ldr	r3, [r3, #0]
    b034:	2bb4      	cmp	r3, #180	; 0xb4
    b036:	d123      	bne.n	b080 <SegmentTargetComputation+0x490>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:78
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b038:	687b      	ldr	r3, [r7, #4]
    b03a:	3b01      	subs	r3, #1
    b03c:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b040:	009b      	lsls	r3, r3, #2
    b042:	4413      	add	r3, r2
    b044:	681a      	ldr	r2, [r3, #0]
    b046:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b04a:	687b      	ldr	r3, [r7, #4]
    b04c:	009b      	lsls	r3, r3, #2
    b04e:	440b      	add	r3, r1
    b050:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:79
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + MAZE_SIZE);
    b052:	687b      	ldr	r3, [r7, #4]
    b054:	3b01      	subs	r3, #1
    b056:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b05a:	3328      	adds	r3, #40	; 0x28
    b05c:	009b      	lsls	r3, r3, #2
    b05e:	4413      	add	r3, r2
    b060:	ed93 7a01 	vldr	s14, [r3, #4]
    b064:	eddf 7a23 	vldr	s15, [pc, #140]	; b0f4 <SegmentTargetComputation+0x504>
    b068:	ee77 7a27 	vadd.f32	s15, s14, s15
    b06c:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b070:	687b      	ldr	r3, [r7, #4]
    b072:	3328      	adds	r3, #40	; 0x28
    b074:	009b      	lsls	r3, r3, #2
    b076:	4413      	add	r3, r2
    b078:	edc3 7a01 	vstr	s15, [r3, #4]
    b07c:	f000 bc5b 	b.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:80
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
    b080:	687b      	ldr	r3, [r7, #4]
    b082:	1e5a      	subs	r2, r3, #1
    b084:	4613      	mov	r3, r2
    b086:	005b      	lsls	r3, r3, #1
    b088:	4413      	add	r3, r2
    b08a:	00db      	lsls	r3, r3, #3
    b08c:	f107 0c18 	add.w	ip, r7, #24
    b090:	4463      	add	r3, ip
    b092:	681b      	ldr	r3, [r3, #0]
    b094:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    b098:	f040 844d 	bne.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:81
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b09c:	687b      	ldr	r3, [r7, #4]
    b09e:	3b01      	subs	r3, #1
    b0a0:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b0a4:	009b      	lsls	r3, r3, #2
    b0a6:	4413      	add	r3, r2
    b0a8:	681a      	ldr	r2, [r3, #0]
    b0aa:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b0ae:	687b      	ldr	r3, [r7, #4]
    b0b0:	009b      	lsls	r3, r3, #2
    b0b2:	440b      	add	r3, r1
    b0b4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:82
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - MAZE_SIZE);
    b0b6:	687b      	ldr	r3, [r7, #4]
    b0b8:	3b01      	subs	r3, #1
    b0ba:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b0be:	3328      	adds	r3, #40	; 0x28
    b0c0:	009b      	lsls	r3, r3, #2
    b0c2:	4413      	add	r3, r2
    b0c4:	ed93 7a01 	vldr	s14, [r3, #4]
    b0c8:	eddf 7a0a 	vldr	s15, [pc, #40]	; b0f4 <SegmentTargetComputation+0x504>
    b0cc:	ee77 7a67 	vsub.f32	s15, s14, s15
    b0d0:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b0d4:	687b      	ldr	r3, [r7, #4]
    b0d6:	3328      	adds	r3, #40	; 0x28
    b0d8:	009b      	lsls	r3, r3, #2
    b0da:	4413      	add	r3, r2
    b0dc:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:64
					}
					else{
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*DEGREES_TO_RAD);
					}
					if(quadrant == 0){
    b0e0:	f000 bd41 	b.w	bb66 <SegmentTargetComputation+0xf76>
    b0e4:	f3af 8000 	nop.w
    b0e8:	80000000 	.word	0x80000000
    b0ec:	3fb70a3d 	.word	0x3fb70a3d
    b0f0:	3c8efa35 	.word	0x3c8efa35
    b0f4:	3e3851ec 	.word	0x3e3851ec
    b0f8:	9999999a 	.word	0x9999999a
    b0fc:	3fb99999 	.word	0x3fb99999
    b100:	a0000000 	.word	0xa0000000
    b104:	3f91df46 	.word	0x3f91df46
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:84
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + MAZE_SIZE);
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - MAZE_SIZE);
						}
					}else if(quadrant == 1){
    b108:	f997 3003 	ldrsb.w	r3, [r7, #3]
    b10c:	2b01      	cmp	r3, #1
    b10e:	f040 8156 	bne.w	b3be <SegmentTargetComputation+0x7ce>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:85
						if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90){
    b112:	687b      	ldr	r3, [r7, #4]
    b114:	1e5a      	subs	r2, r3, #1
    b116:	4613      	mov	r3, r2
    b118:	005b      	lsls	r3, r3, #1
    b11a:	4413      	add	r3, r2
    b11c:	00db      	lsls	r3, r3, #3
    b11e:	f107 0218 	add.w	r2, r7, #24
    b122:	4413      	add	r3, r2
    b124:	681b      	ldr	r3, [r3, #0]
    b126:	2b5a      	cmp	r3, #90	; 0x5a
    b128:	d144      	bne.n	b1b4 <SegmentTargetComputation+0x5c4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:86
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - 0.5*MAZE_SIZE);
    b12a:	687b      	ldr	r3, [r7, #4]
    b12c:	3b01      	subs	r3, #1
    b12e:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b132:	009b      	lsls	r3, r3, #2
    b134:	4413      	add	r3, r2
    b136:	681b      	ldr	r3, [r3, #0]
    b138:	4618      	mov	r0, r3
    b13a:	f7f5 fb31 	bl	7a0 <__aeabi_f2d>
    b13e:	4602      	mov	r2, r0
    b140:	460b      	mov	r3, r1
    b142:	4610      	mov	r0, r2
    b144:	4619      	mov	r1, r3
    b146:	f20f 43c8 	addw	r3, pc, #1224	; 0x4c8
    b14a:	e9d3 2300 	ldrd	r2, r3, [r3]
    b14e:	f7f5 f9c7 	bl	4e0 <__aeabi_dsub>
    b152:	4602      	mov	r2, r0
    b154:	460b      	mov	r3, r1
    b156:	4610      	mov	r0, r2
    b158:	4619      	mov	r1, r3
    b15a:	f7f5 fe37 	bl	dcc <__aeabi_d2f>
    b15e:	4602      	mov	r2, r0
    b160:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b164:	687b      	ldr	r3, [r7, #4]
    b166:	009b      	lsls	r3, r3, #2
    b168:	440b      	add	r3, r1
    b16a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:87
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + 0.5*MAZE_SIZE);
    b16c:	687b      	ldr	r3, [r7, #4]
    b16e:	3b01      	subs	r3, #1
    b170:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b174:	3328      	adds	r3, #40	; 0x28
    b176:	009b      	lsls	r3, r3, #2
    b178:	4413      	add	r3, r2
    b17a:	685b      	ldr	r3, [r3, #4]
    b17c:	4618      	mov	r0, r3
    b17e:	f7f5 fb0f 	bl	7a0 <__aeabi_f2d>
    b182:	4602      	mov	r2, r0
    b184:	460b      	mov	r3, r1
    b186:	4610      	mov	r0, r2
    b188:	4619      	mov	r1, r3
    b18a:	f20f 4384 	addw	r3, pc, #1156	; 0x484
    b18e:	e9d3 2300 	ldrd	r2, r3, [r3]
    b192:	f7f5 f9a7 	bl	4e4 <__adddf3>
    b196:	4602      	mov	r2, r0
    b198:	460b      	mov	r3, r1
    b19a:	4610      	mov	r0, r2
    b19c:	4619      	mov	r1, r3
    b19e:	f7f5 fe15 	bl	dcc <__aeabi_d2f>
    b1a2:	4602      	mov	r2, r0
    b1a4:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b1a8:	687b      	ldr	r3, [r7, #4]
    b1aa:	3328      	adds	r3, #40	; 0x28
    b1ac:	009b      	lsls	r3, r3, #2
    b1ae:	440b      	add	r3, r1
    b1b0:	605a      	str	r2, [r3, #4]
    b1b2:	e3c0      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:88
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90){
    b1b4:	687b      	ldr	r3, [r7, #4]
    b1b6:	1e5a      	subs	r2, r3, #1
    b1b8:	4613      	mov	r3, r2
    b1ba:	005b      	lsls	r3, r3, #1
    b1bc:	4413      	add	r3, r2
    b1be:	00db      	lsls	r3, r3, #3
    b1c0:	f107 0c18 	add.w	ip, r7, #24
    b1c4:	4463      	add	r3, ip
    b1c6:	681b      	ldr	r3, [r3, #0]
    b1c8:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    b1cc:	d143      	bne.n	b256 <SegmentTargetComputation+0x666>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:89
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + 0.5*MAZE_SIZE);
    b1ce:	687b      	ldr	r3, [r7, #4]
    b1d0:	3b01      	subs	r3, #1
    b1d2:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b1d6:	009b      	lsls	r3, r3, #2
    b1d8:	4413      	add	r3, r2
    b1da:	681b      	ldr	r3, [r3, #0]
    b1dc:	4618      	mov	r0, r3
    b1de:	f7f5 fadf 	bl	7a0 <__aeabi_f2d>
    b1e2:	4602      	mov	r2, r0
    b1e4:	460b      	mov	r3, r1
    b1e6:	4610      	mov	r0, r2
    b1e8:	4619      	mov	r1, r3
    b1ea:	f20f 4324 	addw	r3, pc, #1060	; 0x424
    b1ee:	e9d3 2300 	ldrd	r2, r3, [r3]
    b1f2:	f7f5 f977 	bl	4e4 <__adddf3>
    b1f6:	4602      	mov	r2, r0
    b1f8:	460b      	mov	r3, r1
    b1fa:	4610      	mov	r0, r2
    b1fc:	4619      	mov	r1, r3
    b1fe:	f7f5 fde5 	bl	dcc <__aeabi_d2f>
    b202:	4602      	mov	r2, r0
    b204:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b208:	687b      	ldr	r3, [r7, #4]
    b20a:	009b      	lsls	r3, r3, #2
    b20c:	440b      	add	r3, r1
    b20e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:90
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + 0.5*MAZE_SIZE);
    b210:	687b      	ldr	r3, [r7, #4]
    b212:	3b01      	subs	r3, #1
    b214:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b218:	3328      	adds	r3, #40	; 0x28
    b21a:	009b      	lsls	r3, r3, #2
    b21c:	4413      	add	r3, r2
    b21e:	685b      	ldr	r3, [r3, #4]
    b220:	4618      	mov	r0, r3
    b222:	f7f5 fabd 	bl	7a0 <__aeabi_f2d>
    b226:	4602      	mov	r2, r0
    b228:	460b      	mov	r3, r1
    b22a:	4610      	mov	r0, r2
    b22c:	4619      	mov	r1, r3
    b22e:	a3f8      	add	r3, pc, #992	; (adr r3, b610 <SegmentTargetComputation+0xa20>)
    b230:	e9d3 2300 	ldrd	r2, r3, [r3]
    b234:	f7f5 f956 	bl	4e4 <__adddf3>
    b238:	4602      	mov	r2, r0
    b23a:	460b      	mov	r3, r1
    b23c:	4610      	mov	r0, r2
    b23e:	4619      	mov	r1, r3
    b240:	f7f5 fdc4 	bl	dcc <__aeabi_d2f>
    b244:	4602      	mov	r2, r0
    b246:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b24a:	687b      	ldr	r3, [r7, #4]
    b24c:	3328      	adds	r3, #40	; 0x28
    b24e:	009b      	lsls	r3, r3, #2
    b250:	440b      	add	r3, r1
    b252:	605a      	str	r2, [r3, #4]
    b254:	e36f      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:91
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900){
    b256:	687b      	ldr	r3, [r7, #4]
    b258:	1e5a      	subs	r2, r3, #1
    b25a:	4613      	mov	r3, r2
    b25c:	005b      	lsls	r3, r3, #1
    b25e:	4413      	add	r3, r2
    b260:	00db      	lsls	r3, r3, #3
    b262:	f107 0218 	add.w	r2, r7, #24
    b266:	4413      	add	r3, r2
    b268:	681b      	ldr	r3, [r3, #0]
    b26a:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    b26e:	d11c      	bne.n	b2aa <SegmentTargetComputation+0x6ba>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:92
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b270:	687b      	ldr	r3, [r7, #4]
    b272:	3b01      	subs	r3, #1
    b274:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b278:	009b      	lsls	r3, r3, #2
    b27a:	4413      	add	r3, r2
    b27c:	681a      	ldr	r2, [r3, #0]
    b27e:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b282:	687b      	ldr	r3, [r7, #4]
    b284:	009b      	lsls	r3, r3, #2
    b286:	440b      	add	r3, r1
    b288:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:93
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b28a:	687b      	ldr	r3, [r7, #4]
    b28c:	3b01      	subs	r3, #1
    b28e:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b292:	3328      	adds	r3, #40	; 0x28
    b294:	009b      	lsls	r3, r3, #2
    b296:	4413      	add	r3, r2
    b298:	685a      	ldr	r2, [r3, #4]
    b29a:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b29e:	687b      	ldr	r3, [r7, #4]
    b2a0:	3328      	adds	r3, #40	; 0x28
    b2a2:	009b      	lsls	r3, r3, #2
    b2a4:	440b      	add	r3, r1
    b2a6:	605a      	str	r2, [r3, #4]
    b2a8:	e345      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:94
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
    b2aa:	687b      	ldr	r3, [r7, #4]
    b2ac:	1e5a      	subs	r2, r3, #1
    b2ae:	4613      	mov	r3, r2
    b2b0:	005b      	lsls	r3, r3, #1
    b2b2:	4413      	add	r3, r2
    b2b4:	00db      	lsls	r3, r3, #3
    b2b6:	f107 0c18 	add.w	ip, r7, #24
    b2ba:	4463      	add	r3, ip
    b2bc:	681b      	ldr	r3, [r3, #0]
    b2be:	f513 7f61 	cmn.w	r3, #900	; 0x384
    b2c2:	d11c      	bne.n	b2fe <SegmentTargetComputation+0x70e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:95
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b2c4:	687b      	ldr	r3, [r7, #4]
    b2c6:	3b01      	subs	r3, #1
    b2c8:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b2cc:	009b      	lsls	r3, r3, #2
    b2ce:	4413      	add	r3, r2
    b2d0:	681a      	ldr	r2, [r3, #0]
    b2d2:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b2d6:	687b      	ldr	r3, [r7, #4]
    b2d8:	009b      	lsls	r3, r3, #2
    b2da:	440b      	add	r3, r1
    b2dc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:96
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b2de:	687b      	ldr	r3, [r7, #4]
    b2e0:	3b01      	subs	r3, #1
    b2e2:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b2e6:	3328      	adds	r3, #40	; 0x28
    b2e8:	009b      	lsls	r3, r3, #2
    b2ea:	4413      	add	r3, r2
    b2ec:	685a      	ldr	r2, [r3, #4]
    b2ee:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b2f2:	687b      	ldr	r3, [r7, #4]
    b2f4:	3328      	adds	r3, #40	; 0x28
    b2f6:	009b      	lsls	r3, r3, #2
    b2f8:	440b      	add	r3, r1
    b2fa:	605a      	str	r2, [r3, #4]
    b2fc:	e31b      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:97
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180){
    b2fe:	687b      	ldr	r3, [r7, #4]
    b300:	1e5a      	subs	r2, r3, #1
    b302:	4613      	mov	r3, r2
    b304:	005b      	lsls	r3, r3, #1
    b306:	4413      	add	r3, r2
    b308:	00db      	lsls	r3, r3, #3
    b30a:	f107 0218 	add.w	r2, r7, #24
    b30e:	4413      	add	r3, r2
    b310:	681b      	ldr	r3, [r3, #0]
    b312:	2bb4      	cmp	r3, #180	; 0xb4
    b314:	d122      	bne.n	b35c <SegmentTargetComputation+0x76c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:98
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - MAZE_SIZE);
    b316:	687b      	ldr	r3, [r7, #4]
    b318:	3b01      	subs	r3, #1
    b31a:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b31e:	009b      	lsls	r3, r3, #2
    b320:	4413      	add	r3, r2
    b322:	ed93 7a00 	vldr	s14, [r3]
    b326:	eddf 7abc 	vldr	s15, [pc, #752]	; b618 <SegmentTargetComputation+0xa28>
    b32a:	ee77 7a67 	vsub.f32	s15, s14, s15
    b32e:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b332:	687b      	ldr	r3, [r7, #4]
    b334:	009b      	lsls	r3, r3, #2
    b336:	4413      	add	r3, r2
    b338:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:99
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b33c:	687b      	ldr	r3, [r7, #4]
    b33e:	3b01      	subs	r3, #1
    b340:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b344:	3328      	adds	r3, #40	; 0x28
    b346:	009b      	lsls	r3, r3, #2
    b348:	4413      	add	r3, r2
    b34a:	685a      	ldr	r2, [r3, #4]
    b34c:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b350:	687b      	ldr	r3, [r7, #4]
    b352:	3328      	adds	r3, #40	; 0x28
    b354:	009b      	lsls	r3, r3, #2
    b356:	440b      	add	r3, r1
    b358:	605a      	str	r2, [r3, #4]
    b35a:	e2ec      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:100
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
    b35c:	687b      	ldr	r3, [r7, #4]
    b35e:	1e5a      	subs	r2, r3, #1
    b360:	4613      	mov	r3, r2
    b362:	005b      	lsls	r3, r3, #1
    b364:	4413      	add	r3, r2
    b366:	00db      	lsls	r3, r3, #3
    b368:	f107 0c18 	add.w	ip, r7, #24
    b36c:	4463      	add	r3, ip
    b36e:	681b      	ldr	r3, [r3, #0]
    b370:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    b374:	f040 82df 	bne.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:101
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + MAZE_SIZE);
    b378:	687b      	ldr	r3, [r7, #4]
    b37a:	3b01      	subs	r3, #1
    b37c:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b380:	009b      	lsls	r3, r3, #2
    b382:	4413      	add	r3, r2
    b384:	ed93 7a00 	vldr	s14, [r3]
    b388:	eddf 7aa3 	vldr	s15, [pc, #652]	; b618 <SegmentTargetComputation+0xa28>
    b38c:	ee77 7a27 	vadd.f32	s15, s14, s15
    b390:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b394:	687b      	ldr	r3, [r7, #4]
    b396:	009b      	lsls	r3, r3, #2
    b398:	4413      	add	r3, r2
    b39a:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:102
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b39e:	687b      	ldr	r3, [r7, #4]
    b3a0:	3b01      	subs	r3, #1
    b3a2:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b3a6:	3328      	adds	r3, #40	; 0x28
    b3a8:	009b      	lsls	r3, r3, #2
    b3aa:	4413      	add	r3, r2
    b3ac:	685a      	ldr	r2, [r3, #4]
    b3ae:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b3b2:	687b      	ldr	r3, [r7, #4]
    b3b4:	3328      	adds	r3, #40	; 0x28
    b3b6:	009b      	lsls	r3, r3, #2
    b3b8:	440b      	add	r3, r1
    b3ba:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:64
					}
					else{
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*DEGREES_TO_RAD);
					}
					if(quadrant == 0){
    b3bc:	e3d3      	b.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:104
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + MAZE_SIZE);
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
						}
					}else if(quadrant == 2){
    b3be:	f997 3003 	ldrsb.w	r3, [r7, #3]
    b3c2:	2b02      	cmp	r3, #2
    b3c4:	f040 815b 	bne.w	b67e <SegmentTargetComputation+0xa8e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:105
						if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90){
    b3c8:	687b      	ldr	r3, [r7, #4]
    b3ca:	1e5a      	subs	r2, r3, #1
    b3cc:	4613      	mov	r3, r2
    b3ce:	005b      	lsls	r3, r3, #1
    b3d0:	4413      	add	r3, r2
    b3d2:	00db      	lsls	r3, r3, #3
    b3d4:	f107 0218 	add.w	r2, r7, #24
    b3d8:	4413      	add	r3, r2
    b3da:	681b      	ldr	r3, [r3, #0]
    b3dc:	2b5a      	cmp	r3, #90	; 0x5a
    b3de:	d142      	bne.n	b466 <SegmentTargetComputation+0x876>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:106
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - 0.5*MAZE_SIZE);
    b3e0:	687b      	ldr	r3, [r7, #4]
    b3e2:	3b01      	subs	r3, #1
    b3e4:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b3e8:	009b      	lsls	r3, r3, #2
    b3ea:	4413      	add	r3, r2
    b3ec:	681b      	ldr	r3, [r3, #0]
    b3ee:	4618      	mov	r0, r3
    b3f0:	f7f5 f9d6 	bl	7a0 <__aeabi_f2d>
    b3f4:	4602      	mov	r2, r0
    b3f6:	460b      	mov	r3, r1
    b3f8:	4610      	mov	r0, r2
    b3fa:	4619      	mov	r1, r3
    b3fc:	a384      	add	r3, pc, #528	; (adr r3, b610 <SegmentTargetComputation+0xa20>)
    b3fe:	e9d3 2300 	ldrd	r2, r3, [r3]
    b402:	f7f5 f86d 	bl	4e0 <__aeabi_dsub>
    b406:	4602      	mov	r2, r0
    b408:	460b      	mov	r3, r1
    b40a:	4610      	mov	r0, r2
    b40c:	4619      	mov	r1, r3
    b40e:	f7f5 fcdd 	bl	dcc <__aeabi_d2f>
    b412:	4602      	mov	r2, r0
    b414:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b418:	687b      	ldr	r3, [r7, #4]
    b41a:	009b      	lsls	r3, r3, #2
    b41c:	440b      	add	r3, r1
    b41e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:107
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - 0.5*MAZE_SIZE);
    b420:	687b      	ldr	r3, [r7, #4]
    b422:	3b01      	subs	r3, #1
    b424:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b428:	3328      	adds	r3, #40	; 0x28
    b42a:	009b      	lsls	r3, r3, #2
    b42c:	4413      	add	r3, r2
    b42e:	685b      	ldr	r3, [r3, #4]
    b430:	4618      	mov	r0, r3
    b432:	f7f5 f9b5 	bl	7a0 <__aeabi_f2d>
    b436:	4602      	mov	r2, r0
    b438:	460b      	mov	r3, r1
    b43a:	4610      	mov	r0, r2
    b43c:	4619      	mov	r1, r3
    b43e:	a374      	add	r3, pc, #464	; (adr r3, b610 <SegmentTargetComputation+0xa20>)
    b440:	e9d3 2300 	ldrd	r2, r3, [r3]
    b444:	f7f5 f84c 	bl	4e0 <__aeabi_dsub>
    b448:	4602      	mov	r2, r0
    b44a:	460b      	mov	r3, r1
    b44c:	4610      	mov	r0, r2
    b44e:	4619      	mov	r1, r3
    b450:	f7f5 fcbc 	bl	dcc <__aeabi_d2f>
    b454:	4602      	mov	r2, r0
    b456:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b45a:	687b      	ldr	r3, [r7, #4]
    b45c:	3328      	adds	r3, #40	; 0x28
    b45e:	009b      	lsls	r3, r3, #2
    b460:	440b      	add	r3, r1
    b462:	605a      	str	r2, [r3, #4]
    b464:	e267      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:108
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90){
    b466:	687b      	ldr	r3, [r7, #4]
    b468:	1e5a      	subs	r2, r3, #1
    b46a:	4613      	mov	r3, r2
    b46c:	005b      	lsls	r3, r3, #1
    b46e:	4413      	add	r3, r2
    b470:	00db      	lsls	r3, r3, #3
    b472:	f107 0c18 	add.w	ip, r7, #24
    b476:	4463      	add	r3, ip
    b478:	681b      	ldr	r3, [r3, #0]
    b47a:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    b47e:	d142      	bne.n	b506 <SegmentTargetComputation+0x916>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:109
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - 0.5*MAZE_SIZE);
    b480:	687b      	ldr	r3, [r7, #4]
    b482:	3b01      	subs	r3, #1
    b484:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b488:	009b      	lsls	r3, r3, #2
    b48a:	4413      	add	r3, r2
    b48c:	681b      	ldr	r3, [r3, #0]
    b48e:	4618      	mov	r0, r3
    b490:	f7f5 f986 	bl	7a0 <__aeabi_f2d>
    b494:	4602      	mov	r2, r0
    b496:	460b      	mov	r3, r1
    b498:	4610      	mov	r0, r2
    b49a:	4619      	mov	r1, r3
    b49c:	a35c      	add	r3, pc, #368	; (adr r3, b610 <SegmentTargetComputation+0xa20>)
    b49e:	e9d3 2300 	ldrd	r2, r3, [r3]
    b4a2:	f7f5 f81d 	bl	4e0 <__aeabi_dsub>
    b4a6:	4602      	mov	r2, r0
    b4a8:	460b      	mov	r3, r1
    b4aa:	4610      	mov	r0, r2
    b4ac:	4619      	mov	r1, r3
    b4ae:	f7f5 fc8d 	bl	dcc <__aeabi_d2f>
    b4b2:	4602      	mov	r2, r0
    b4b4:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b4b8:	687b      	ldr	r3, [r7, #4]
    b4ba:	009b      	lsls	r3, r3, #2
    b4bc:	440b      	add	r3, r1
    b4be:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:110
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + 0.5*MAZE_SIZE);
    b4c0:	687b      	ldr	r3, [r7, #4]
    b4c2:	3b01      	subs	r3, #1
    b4c4:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b4c8:	3328      	adds	r3, #40	; 0x28
    b4ca:	009b      	lsls	r3, r3, #2
    b4cc:	4413      	add	r3, r2
    b4ce:	685b      	ldr	r3, [r3, #4]
    b4d0:	4618      	mov	r0, r3
    b4d2:	f7f5 f965 	bl	7a0 <__aeabi_f2d>
    b4d6:	4602      	mov	r2, r0
    b4d8:	460b      	mov	r3, r1
    b4da:	4610      	mov	r0, r2
    b4dc:	4619      	mov	r1, r3
    b4de:	a34c      	add	r3, pc, #304	; (adr r3, b610 <SegmentTargetComputation+0xa20>)
    b4e0:	e9d3 2300 	ldrd	r2, r3, [r3]
    b4e4:	f7f4 fffe 	bl	4e4 <__adddf3>
    b4e8:	4602      	mov	r2, r0
    b4ea:	460b      	mov	r3, r1
    b4ec:	4610      	mov	r0, r2
    b4ee:	4619      	mov	r1, r3
    b4f0:	f7f5 fc6c 	bl	dcc <__aeabi_d2f>
    b4f4:	4602      	mov	r2, r0
    b4f6:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b4fa:	687b      	ldr	r3, [r7, #4]
    b4fc:	3328      	adds	r3, #40	; 0x28
    b4fe:	009b      	lsls	r3, r3, #2
    b500:	440b      	add	r3, r1
    b502:	605a      	str	r2, [r3, #4]
    b504:	e217      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:111
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900){
    b506:	687b      	ldr	r3, [r7, #4]
    b508:	1e5a      	subs	r2, r3, #1
    b50a:	4613      	mov	r3, r2
    b50c:	005b      	lsls	r3, r3, #1
    b50e:	4413      	add	r3, r2
    b510:	00db      	lsls	r3, r3, #3
    b512:	f107 0218 	add.w	r2, r7, #24
    b516:	4413      	add	r3, r2
    b518:	681b      	ldr	r3, [r3, #0]
    b51a:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    b51e:	d11c      	bne.n	b55a <SegmentTargetComputation+0x96a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:112
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b520:	687b      	ldr	r3, [r7, #4]
    b522:	3b01      	subs	r3, #1
    b524:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b528:	009b      	lsls	r3, r3, #2
    b52a:	4413      	add	r3, r2
    b52c:	681a      	ldr	r2, [r3, #0]
    b52e:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b532:	687b      	ldr	r3, [r7, #4]
    b534:	009b      	lsls	r3, r3, #2
    b536:	440b      	add	r3, r1
    b538:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:113
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b53a:	687b      	ldr	r3, [r7, #4]
    b53c:	3b01      	subs	r3, #1
    b53e:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b542:	3328      	adds	r3, #40	; 0x28
    b544:	009b      	lsls	r3, r3, #2
    b546:	4413      	add	r3, r2
    b548:	685a      	ldr	r2, [r3, #4]
    b54a:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b54e:	687b      	ldr	r3, [r7, #4]
    b550:	3328      	adds	r3, #40	; 0x28
    b552:	009b      	lsls	r3, r3, #2
    b554:	440b      	add	r3, r1
    b556:	605a      	str	r2, [r3, #4]
    b558:	e1ed      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:114
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
    b55a:	687b      	ldr	r3, [r7, #4]
    b55c:	1e5a      	subs	r2, r3, #1
    b55e:	4613      	mov	r3, r2
    b560:	005b      	lsls	r3, r3, #1
    b562:	4413      	add	r3, r2
    b564:	00db      	lsls	r3, r3, #3
    b566:	f107 0c18 	add.w	ip, r7, #24
    b56a:	4463      	add	r3, ip
    b56c:	681b      	ldr	r3, [r3, #0]
    b56e:	f513 7f61 	cmn.w	r3, #900	; 0x384
    b572:	d11c      	bne.n	b5ae <SegmentTargetComputation+0x9be>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:115
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b574:	687b      	ldr	r3, [r7, #4]
    b576:	3b01      	subs	r3, #1
    b578:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b57c:	009b      	lsls	r3, r3, #2
    b57e:	4413      	add	r3, r2
    b580:	681a      	ldr	r2, [r3, #0]
    b582:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b586:	687b      	ldr	r3, [r7, #4]
    b588:	009b      	lsls	r3, r3, #2
    b58a:	440b      	add	r3, r1
    b58c:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:116
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b58e:	687b      	ldr	r3, [r7, #4]
    b590:	3b01      	subs	r3, #1
    b592:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b596:	3328      	adds	r3, #40	; 0x28
    b598:	009b      	lsls	r3, r3, #2
    b59a:	4413      	add	r3, r2
    b59c:	685a      	ldr	r2, [r3, #4]
    b59e:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b5a2:	687b      	ldr	r3, [r7, #4]
    b5a4:	3328      	adds	r3, #40	; 0x28
    b5a6:	009b      	lsls	r3, r3, #2
    b5a8:	440b      	add	r3, r1
    b5aa:	605a      	str	r2, [r3, #4]
    b5ac:	e1c3      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:117
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180){
    b5ae:	687b      	ldr	r3, [r7, #4]
    b5b0:	1e5a      	subs	r2, r3, #1
    b5b2:	4613      	mov	r3, r2
    b5b4:	005b      	lsls	r3, r3, #1
    b5b6:	4413      	add	r3, r2
    b5b8:	00db      	lsls	r3, r3, #3
    b5ba:	f107 0218 	add.w	r2, r7, #24
    b5be:	4413      	add	r3, r2
    b5c0:	681b      	ldr	r3, [r3, #0]
    b5c2:	2bb4      	cmp	r3, #180	; 0xb4
    b5c4:	d12a      	bne.n	b61c <SegmentTargetComputation+0xa2c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:118
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b5c6:	687b      	ldr	r3, [r7, #4]
    b5c8:	3b01      	subs	r3, #1
    b5ca:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b5ce:	009b      	lsls	r3, r3, #2
    b5d0:	4413      	add	r3, r2
    b5d2:	681a      	ldr	r2, [r3, #0]
    b5d4:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b5d8:	687b      	ldr	r3, [r7, #4]
    b5da:	009b      	lsls	r3, r3, #2
    b5dc:	440b      	add	r3, r1
    b5de:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:119
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - MAZE_SIZE);
    b5e0:	687b      	ldr	r3, [r7, #4]
    b5e2:	3b01      	subs	r3, #1
    b5e4:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b5e8:	3328      	adds	r3, #40	; 0x28
    b5ea:	009b      	lsls	r3, r3, #2
    b5ec:	4413      	add	r3, r2
    b5ee:	ed93 7a01 	vldr	s14, [r3, #4]
    b5f2:	eddf 7a09 	vldr	s15, [pc, #36]	; b618 <SegmentTargetComputation+0xa28>
    b5f6:	ee77 7a67 	vsub.f32	s15, s14, s15
    b5fa:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b5fe:	687b      	ldr	r3, [r7, #4]
    b600:	3328      	adds	r3, #40	; 0x28
    b602:	009b      	lsls	r3, r3, #2
    b604:	4413      	add	r3, r2
    b606:	edc3 7a01 	vstr	s15, [r3, #4]
    b60a:	e194      	b.n	b936 <SegmentTargetComputation+0xd46>
    b60c:	f3af 8000 	nop.w
    b610:	80000000 	.word	0x80000000
    b614:	3fb70a3d 	.word	0x3fb70a3d
    b618:	3e3851ec 	.word	0x3e3851ec
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:120
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
    b61c:	687b      	ldr	r3, [r7, #4]
    b61e:	1e5a      	subs	r2, r3, #1
    b620:	4613      	mov	r3, r2
    b622:	005b      	lsls	r3, r3, #1
    b624:	4413      	add	r3, r2
    b626:	00db      	lsls	r3, r3, #3
    b628:	f107 0c18 	add.w	ip, r7, #24
    b62c:	4463      	add	r3, ip
    b62e:	681b      	ldr	r3, [r3, #0]
    b630:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    b634:	f040 817f 	bne.w	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:121
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b638:	687b      	ldr	r3, [r7, #4]
    b63a:	3b01      	subs	r3, #1
    b63c:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b640:	009b      	lsls	r3, r3, #2
    b642:	4413      	add	r3, r2
    b644:	681a      	ldr	r2, [r3, #0]
    b646:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b64a:	687b      	ldr	r3, [r7, #4]
    b64c:	009b      	lsls	r3, r3, #2
    b64e:	440b      	add	r3, r1
    b650:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:122
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + MAZE_SIZE);
    b652:	687b      	ldr	r3, [r7, #4]
    b654:	3b01      	subs	r3, #1
    b656:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b65a:	3328      	adds	r3, #40	; 0x28
    b65c:	009b      	lsls	r3, r3, #2
    b65e:	4413      	add	r3, r2
    b660:	ed93 7a01 	vldr	s14, [r3, #4]
    b664:	ed5f 7a14 	vldr	s15, [pc, #-80]	; b618 <SegmentTargetComputation+0xa28>
    b668:	ee77 7a27 	vadd.f32	s15, s14, s15
    b66c:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b670:	687b      	ldr	r3, [r7, #4]
    b672:	3328      	adds	r3, #40	; 0x28
    b674:	009b      	lsls	r3, r3, #2
    b676:	4413      	add	r3, r2
    b678:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:64
					}
					else{
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*DEGREES_TO_RAD);
					}
					if(quadrant == 0){
    b67c:	e273      	b.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:124
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - MAZE_SIZE);
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + MAZE_SIZE);
						}
					}else if (quadrant == 3){
    b67e:	f997 3003 	ldrsb.w	r3, [r7, #3]
    b682:	2b03      	cmp	r3, #3
    b684:	f040 8155 	bne.w	b932 <SegmentTargetComputation+0xd42>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:125
						if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 90){
    b688:	687b      	ldr	r3, [r7, #4]
    b68a:	1e5a      	subs	r2, r3, #1
    b68c:	4613      	mov	r3, r2
    b68e:	005b      	lsls	r3, r3, #1
    b690:	4413      	add	r3, r2
    b692:	00db      	lsls	r3, r3, #3
    b694:	f107 0218 	add.w	r2, r7, #24
    b698:	4413      	add	r3, r2
    b69a:	681b      	ldr	r3, [r3, #0]
    b69c:	2b5a      	cmp	r3, #90	; 0x5a
    b69e:	d144      	bne.n	b72a <SegmentTargetComputation+0xb3a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:126
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + 0.5*MAZE_SIZE);
    b6a0:	687b      	ldr	r3, [r7, #4]
    b6a2:	3b01      	subs	r3, #1
    b6a4:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b6a8:	009b      	lsls	r3, r3, #2
    b6aa:	4413      	add	r3, r2
    b6ac:	681b      	ldr	r3, [r3, #0]
    b6ae:	4618      	mov	r0, r3
    b6b0:	f7f5 f876 	bl	7a0 <__aeabi_f2d>
    b6b4:	4602      	mov	r2, r0
    b6b6:	460b      	mov	r3, r1
    b6b8:	4610      	mov	r0, r2
    b6ba:	4619      	mov	r1, r3
    b6bc:	f20f 43d4 	addw	r3, pc, #1236	; 0x4d4
    b6c0:	e9d3 2300 	ldrd	r2, r3, [r3]
    b6c4:	f7f4 ff0e 	bl	4e4 <__adddf3>
    b6c8:	4602      	mov	r2, r0
    b6ca:	460b      	mov	r3, r1
    b6cc:	4610      	mov	r0, r2
    b6ce:	4619      	mov	r1, r3
    b6d0:	f7f5 fb7c 	bl	dcc <__aeabi_d2f>
    b6d4:	4602      	mov	r2, r0
    b6d6:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b6da:	687b      	ldr	r3, [r7, #4]
    b6dc:	009b      	lsls	r3, r3, #2
    b6de:	440b      	add	r3, r1
    b6e0:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:127
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - 0.5*MAZE_SIZE);
    b6e2:	687b      	ldr	r3, [r7, #4]
    b6e4:	3b01      	subs	r3, #1
    b6e6:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b6ea:	3328      	adds	r3, #40	; 0x28
    b6ec:	009b      	lsls	r3, r3, #2
    b6ee:	4413      	add	r3, r2
    b6f0:	685b      	ldr	r3, [r3, #4]
    b6f2:	4618      	mov	r0, r3
    b6f4:	f7f5 f854 	bl	7a0 <__aeabi_f2d>
    b6f8:	4602      	mov	r2, r0
    b6fa:	460b      	mov	r3, r1
    b6fc:	4610      	mov	r0, r2
    b6fe:	4619      	mov	r1, r3
    b700:	f20f 4390 	addw	r3, pc, #1168	; 0x490
    b704:	e9d3 2300 	ldrd	r2, r3, [r3]
    b708:	f7f4 feea 	bl	4e0 <__aeabi_dsub>
    b70c:	4602      	mov	r2, r0
    b70e:	460b      	mov	r3, r1
    b710:	4610      	mov	r0, r2
    b712:	4619      	mov	r1, r3
    b714:	f7f5 fb5a 	bl	dcc <__aeabi_d2f>
    b718:	4602      	mov	r2, r0
    b71a:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b71e:	687b      	ldr	r3, [r7, #4]
    b720:	3328      	adds	r3, #40	; 0x28
    b722:	009b      	lsls	r3, r3, #2
    b724:	440b      	add	r3, r1
    b726:	605a      	str	r2, [r3, #4]
    b728:	e105      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:128
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -90){
    b72a:	687b      	ldr	r3, [r7, #4]
    b72c:	1e5a      	subs	r2, r3, #1
    b72e:	4613      	mov	r3, r2
    b730:	005b      	lsls	r3, r3, #1
    b732:	4413      	add	r3, r2
    b734:	00db      	lsls	r3, r3, #3
    b736:	f107 0c18 	add.w	ip, r7, #24
    b73a:	4463      	add	r3, ip
    b73c:	681b      	ldr	r3, [r3, #0]
    b73e:	f113 0f5a 	cmn.w	r3, #90	; 0x5a
    b742:	d143      	bne.n	b7cc <SegmentTargetComputation+0xbdc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:129
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - 0.5*MAZE_SIZE);
    b744:	687b      	ldr	r3, [r7, #4]
    b746:	3b01      	subs	r3, #1
    b748:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b74c:	009b      	lsls	r3, r3, #2
    b74e:	4413      	add	r3, r2
    b750:	681b      	ldr	r3, [r3, #0]
    b752:	4618      	mov	r0, r3
    b754:	f7f5 f824 	bl	7a0 <__aeabi_f2d>
    b758:	4602      	mov	r2, r0
    b75a:	460b      	mov	r3, r1
    b75c:	4610      	mov	r0, r2
    b75e:	4619      	mov	r1, r3
    b760:	f20f 4330 	addw	r3, pc, #1072	; 0x430
    b764:	e9d3 2300 	ldrd	r2, r3, [r3]
    b768:	f7f4 feba 	bl	4e0 <__aeabi_dsub>
    b76c:	4602      	mov	r2, r0
    b76e:	460b      	mov	r3, r1
    b770:	4610      	mov	r0, r2
    b772:	4619      	mov	r1, r3
    b774:	f7f5 fb2a 	bl	dcc <__aeabi_d2f>
    b778:	4602      	mov	r2, r0
    b77a:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b77e:	687b      	ldr	r3, [r7, #4]
    b780:	009b      	lsls	r3, r3, #2
    b782:	440b      	add	r3, r1
    b784:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:130
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - 0.5*MAZE_SIZE);
    b786:	687b      	ldr	r3, [r7, #4]
    b788:	3b01      	subs	r3, #1
    b78a:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b78e:	3328      	adds	r3, #40	; 0x28
    b790:	009b      	lsls	r3, r3, #2
    b792:	4413      	add	r3, r2
    b794:	685b      	ldr	r3, [r3, #4]
    b796:	4618      	mov	r0, r3
    b798:	f7f5 f802 	bl	7a0 <__aeabi_f2d>
    b79c:	4602      	mov	r2, r0
    b79e:	460b      	mov	r3, r1
    b7a0:	4610      	mov	r0, r2
    b7a2:	4619      	mov	r1, r3
    b7a4:	a3fb      	add	r3, pc, #1004	; (adr r3, bb94 <SegmentTargetComputation+0xfa4>)
    b7a6:	e9d3 2300 	ldrd	r2, r3, [r3]
    b7aa:	f7f4 fe99 	bl	4e0 <__aeabi_dsub>
    b7ae:	4602      	mov	r2, r0
    b7b0:	460b      	mov	r3, r1
    b7b2:	4610      	mov	r0, r2
    b7b4:	4619      	mov	r1, r3
    b7b6:	f7f5 fb09 	bl	dcc <__aeabi_d2f>
    b7ba:	4602      	mov	r2, r0
    b7bc:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b7c0:	687b      	ldr	r3, [r7, #4]
    b7c2:	3328      	adds	r3, #40	; 0x28
    b7c4:	009b      	lsls	r3, r3, #2
    b7c6:	440b      	add	r3, r1
    b7c8:	605a      	str	r2, [r3, #4]
    b7ca:	e0b4      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:131
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 900){
    b7cc:	687b      	ldr	r3, [r7, #4]
    b7ce:	1e5a      	subs	r2, r3, #1
    b7d0:	4613      	mov	r3, r2
    b7d2:	005b      	lsls	r3, r3, #1
    b7d4:	4413      	add	r3, r2
    b7d6:	00db      	lsls	r3, r3, #3
    b7d8:	f107 0218 	add.w	r2, r7, #24
    b7dc:	4413      	add	r3, r2
    b7de:	681b      	ldr	r3, [r3, #0]
    b7e0:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
    b7e4:	d11c      	bne.n	b820 <SegmentTargetComputation+0xc30>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:132
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b7e6:	687b      	ldr	r3, [r7, #4]
    b7e8:	3b01      	subs	r3, #1
    b7ea:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b7ee:	009b      	lsls	r3, r3, #2
    b7f0:	4413      	add	r3, r2
    b7f2:	681a      	ldr	r2, [r3, #0]
    b7f4:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b7f8:	687b      	ldr	r3, [r7, #4]
    b7fa:	009b      	lsls	r3, r3, #2
    b7fc:	440b      	add	r3, r1
    b7fe:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:133
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b800:	687b      	ldr	r3, [r7, #4]
    b802:	3b01      	subs	r3, #1
    b804:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b808:	3328      	adds	r3, #40	; 0x28
    b80a:	009b      	lsls	r3, r3, #2
    b80c:	4413      	add	r3, r2
    b80e:	685a      	ldr	r2, [r3, #4]
    b810:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b814:	687b      	ldr	r3, [r7, #4]
    b816:	3328      	adds	r3, #40	; 0x28
    b818:	009b      	lsls	r3, r3, #2
    b81a:	440b      	add	r3, r1
    b81c:	605a      	str	r2, [r3, #4]
    b81e:	e08a      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:134
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -900){
    b820:	687b      	ldr	r3, [r7, #4]
    b822:	1e5a      	subs	r2, r3, #1
    b824:	4613      	mov	r3, r2
    b826:	005b      	lsls	r3, r3, #1
    b828:	4413      	add	r3, r2
    b82a:	00db      	lsls	r3, r3, #3
    b82c:	f107 0c18 	add.w	ip, r7, #24
    b830:	4463      	add	r3, ip
    b832:	681b      	ldr	r3, [r3, #0]
    b834:	f513 7f61 	cmn.w	r3, #900	; 0x384
    b838:	d11c      	bne.n	b874 <SegmentTargetComputation+0xc84>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:135
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1]);
    b83a:	687b      	ldr	r3, [r7, #4]
    b83c:	3b01      	subs	r3, #1
    b83e:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b842:	009b      	lsls	r3, r3, #2
    b844:	4413      	add	r3, r2
    b846:	681a      	ldr	r2, [r3, #0]
    b848:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b84c:	687b      	ldr	r3, [r7, #4]
    b84e:	009b      	lsls	r3, r3, #2
    b850:	440b      	add	r3, r1
    b852:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:136
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b854:	687b      	ldr	r3, [r7, #4]
    b856:	3b01      	subs	r3, #1
    b858:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b85c:	3328      	adds	r3, #40	; 0x28
    b85e:	009b      	lsls	r3, r3, #2
    b860:	4413      	add	r3, r2
    b862:	685a      	ldr	r2, [r3, #4]
    b864:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b868:	687b      	ldr	r3, [r7, #4]
    b86a:	3328      	adds	r3, #40	; 0x28
    b86c:	009b      	lsls	r3, r3, #2
    b86e:	440b      	add	r3, r1
    b870:	605a      	str	r2, [r3, #4]
    b872:	e060      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:137
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == 180){
    b874:	687b      	ldr	r3, [r7, #4]
    b876:	1e5a      	subs	r2, r3, #1
    b878:	4613      	mov	r3, r2
    b87a:	005b      	lsls	r3, r3, #1
    b87c:	4413      	add	r3, r2
    b87e:	00db      	lsls	r3, r3, #3
    b880:	f107 0218 	add.w	r2, r7, #24
    b884:	4413      	add	r3, r2
    b886:	681b      	ldr	r3, [r3, #0]
    b888:	2bb4      	cmp	r3, #180	; 0xb4
    b88a:	d122      	bne.n	b8d2 <SegmentTargetComputation+0xce2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:138
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + MAZE_SIZE);
    b88c:	687b      	ldr	r3, [r7, #4]
    b88e:	3b01      	subs	r3, #1
    b890:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b894:	009b      	lsls	r3, r3, #2
    b896:	4413      	add	r3, r2
    b898:	ed93 7a00 	vldr	s14, [r3]
    b89c:	eddf 7abc 	vldr	s15, [pc, #752]	; bb90 <SegmentTargetComputation+0xfa0>
    b8a0:	ee77 7a27 	vadd.f32	s15, s14, s15
    b8a4:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b8a8:	687b      	ldr	r3, [r7, #4]
    b8aa:	009b      	lsls	r3, r3, #2
    b8ac:	4413      	add	r3, r2
    b8ae:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:139
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b8b2:	687b      	ldr	r3, [r7, #4]
    b8b4:	3b01      	subs	r3, #1
    b8b6:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b8ba:	3328      	adds	r3, #40	; 0x28
    b8bc:	009b      	lsls	r3, r3, #2
    b8be:	4413      	add	r3, r2
    b8c0:	685a      	ldr	r2, [r3, #4]
    b8c2:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b8c6:	687b      	ldr	r3, [r7, #4]
    b8c8:	3328      	adds	r3, #40	; 0x28
    b8ca:	009b      	lsls	r3, r3, #2
    b8cc:	440b      	add	r3, r1
    b8ce:	605a      	str	r2, [r3, #4]
    b8d0:	e031      	b.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:140
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
    b8d2:	687b      	ldr	r3, [r7, #4]
    b8d4:	1e5a      	subs	r2, r3, #1
    b8d6:	4613      	mov	r3, r2
    b8d8:	005b      	lsls	r3, r3, #1
    b8da:	4413      	add	r3, r2
    b8dc:	00db      	lsls	r3, r3, #3
    b8de:	f107 0c18 	add.w	ip, r7, #24
    b8e2:	4463      	add	r3, ip
    b8e4:	681b      	ldr	r3, [r3, #0]
    b8e6:	f113 0fb4 	cmn.w	r3, #180	; 0xb4
    b8ea:	d124      	bne.n	b936 <SegmentTargetComputation+0xd46>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:141
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - MAZE_SIZE);
    b8ec:	687b      	ldr	r3, [r7, #4]
    b8ee:	3b01      	subs	r3, #1
    b8f0:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b8f4:	009b      	lsls	r3, r3, #2
    b8f6:	4413      	add	r3, r2
    b8f8:	ed93 7a00 	vldr	s14, [r3]
    b8fc:	eddf 7aa4 	vldr	s15, [pc, #656]	; bb90 <SegmentTargetComputation+0xfa0>
    b900:	ee77 7a67 	vsub.f32	s15, s14, s15
    b904:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b908:	687b      	ldr	r3, [r7, #4]
    b90a:	009b      	lsls	r3, r3, #2
    b90c:	4413      	add	r3, r2
    b90e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:142
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
    b912:	687b      	ldr	r3, [r7, #4]
    b914:	3b01      	subs	r3, #1
    b916:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b91a:	3328      	adds	r3, #40	; 0x28
    b91c:	009b      	lsls	r3, r3, #2
    b91e:	4413      	add	r3, r2
    b920:	685a      	ldr	r2, [r3, #4]
    b922:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b926:	687b      	ldr	r3, [r7, #4]
    b928:	3328      	adds	r3, #40	; 0x28
    b92a:	009b      	lsls	r3, r3, #2
    b92c:	440b      	add	r3, r1
    b92e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:64
					}
					else{
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*DEGREES_TO_RAD);
					}
					if(quadrant == 0){
    b930:	e119      	b.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:145
						}else if(MazeSegmentsToBeDriven.segments[i-1].SingleSegment == -180){
							SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - MAZE_SIZE);
							SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1]);
						}
					}else{
						return false; 
    b932:	2300      	movs	r3, #0
    b934:	e122      	b.n	bb7c <SegmentTargetComputation+0xf8c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:64
					}
					else{
						SegmentTargets->q_theta[i] = (float)(SegmentTargets->q_theta[i-1] +
								MazeSegmentsToBeDriven.segments[i-1].SingleSegment*DEGREES_TO_RAD);
					}
					if(quadrant == 0){
    b936:	e116      	b.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:152
		}
		/**
		* STRAIGHT segment:
		*/
		else{
			if(quadrant == 0){
    b938:	f997 3003 	ldrsb.w	r3, [r7, #3]
    b93c:	2b00      	cmp	r3, #0
    b93e:	d141      	bne.n	b9c4 <SegmentTargetComputation+0xdd4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:153
				SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] + MazeSegmentsToBeDriven.segments[i-1].SingleSegment * MAZE_SIZE);
    b940:	687b      	ldr	r3, [r7, #4]
    b942:	3b01      	subs	r3, #1
    b944:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b948:	009b      	lsls	r3, r3, #2
    b94a:	4413      	add	r3, r2
    b94c:	ed93 7a00 	vldr	s14, [r3]
    b950:	687b      	ldr	r3, [r7, #4]
    b952:	1e5a      	subs	r2, r3, #1
    b954:	4613      	mov	r3, r2
    b956:	005b      	lsls	r3, r3, #1
    b958:	4413      	add	r3, r2
    b95a:	00db      	lsls	r3, r3, #3
    b95c:	f107 0218 	add.w	r2, r7, #24
    b960:	4413      	add	r3, r2
    b962:	681b      	ldr	r3, [r3, #0]
    b964:	ee07 3a90 	vmov	s15, r3
    b968:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    b96c:	eddf 7a88 	vldr	s15, [pc, #544]	; bb90 <SegmentTargetComputation+0xfa0>
    b970:	ee66 7aa7 	vmul.f32	s15, s13, s15
    b974:	ee77 7a27 	vadd.f32	s15, s14, s15
    b978:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b97c:	687b      	ldr	r3, [r7, #4]
    b97e:	009b      	lsls	r3, r3, #2
    b980:	4413      	add	r3, r2
    b982:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:154
				SegmentTargets->q_y[i] = SegmentTargets->q_y[i-1];
    b986:	687b      	ldr	r3, [r7, #4]
    b988:	3b01      	subs	r3, #1
    b98a:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b98e:	3328      	adds	r3, #40	; 0x28
    b990:	009b      	lsls	r3, r3, #2
    b992:	4413      	add	r3, r2
    b994:	685a      	ldr	r2, [r3, #4]
    b996:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b99a:	687b      	ldr	r3, [r7, #4]
    b99c:	3328      	adds	r3, #40	; 0x28
    b99e:	009b      	lsls	r3, r3, #2
    b9a0:	440b      	add	r3, r1
    b9a2:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:155
				SegmentTargets->q_theta[i] = SegmentTargets->q_theta[i-1];
    b9a4:	687b      	ldr	r3, [r7, #4]
    b9a6:	3b01      	subs	r3, #1
    b9a8:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b9ac:	3352      	adds	r3, #82	; 0x52
    b9ae:	009b      	lsls	r3, r3, #2
    b9b0:	4413      	add	r3, r2
    b9b2:	681a      	ldr	r2, [r3, #0]
    b9b4:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b9b8:	687b      	ldr	r3, [r7, #4]
    b9ba:	3352      	adds	r3, #82	; 0x52
    b9bc:	009b      	lsls	r3, r3, #2
    b9be:	440b      	add	r3, r1
    b9c0:	601a      	str	r2, [r3, #0]
    b9c2:	e0d0      	b.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:156
			}else if(quadrant == 1){
    b9c4:	f997 3003 	ldrsb.w	r3, [r7, #3]
    b9c8:	2b01      	cmp	r3, #1
    b9ca:	d141      	bne.n	ba50 <SegmentTargetComputation+0xe60>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:157
				SegmentTargets->q_x[i] = SegmentTargets->q_x[i-1];
    b9cc:	687b      	ldr	r3, [r7, #4]
    b9ce:	3b01      	subs	r3, #1
    b9d0:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b9d4:	009b      	lsls	r3, r3, #2
    b9d6:	4413      	add	r3, r2
    b9d8:	681a      	ldr	r2, [r3, #0]
    b9da:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    b9de:	687b      	ldr	r3, [r7, #4]
    b9e0:	009b      	lsls	r3, r3, #2
    b9e2:	440b      	add	r3, r1
    b9e4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:158
				SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] + MazeSegmentsToBeDriven.segments[i-1].SingleSegment * MAZE_SIZE);
    b9e6:	687b      	ldr	r3, [r7, #4]
    b9e8:	3b01      	subs	r3, #1
    b9ea:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    b9ee:	3328      	adds	r3, #40	; 0x28
    b9f0:	009b      	lsls	r3, r3, #2
    b9f2:	4413      	add	r3, r2
    b9f4:	ed93 7a01 	vldr	s14, [r3, #4]
    b9f8:	687b      	ldr	r3, [r7, #4]
    b9fa:	1e5a      	subs	r2, r3, #1
    b9fc:	4613      	mov	r3, r2
    b9fe:	005b      	lsls	r3, r3, #1
    ba00:	4413      	add	r3, r2
    ba02:	00db      	lsls	r3, r3, #3
    ba04:	f107 0218 	add.w	r2, r7, #24
    ba08:	4413      	add	r3, r2
    ba0a:	681b      	ldr	r3, [r3, #0]
    ba0c:	ee07 3a90 	vmov	s15, r3
    ba10:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    ba14:	eddf 7a5e 	vldr	s15, [pc, #376]	; bb90 <SegmentTargetComputation+0xfa0>
    ba18:	ee66 7aa7 	vmul.f32	s15, s13, s15
    ba1c:	ee77 7a27 	vadd.f32	s15, s14, s15
    ba20:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ba24:	687b      	ldr	r3, [r7, #4]
    ba26:	3328      	adds	r3, #40	; 0x28
    ba28:	009b      	lsls	r3, r3, #2
    ba2a:	4413      	add	r3, r2
    ba2c:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:159
				SegmentTargets->q_theta[i] = SegmentTargets->q_theta[i-1];
    ba30:	687b      	ldr	r3, [r7, #4]
    ba32:	3b01      	subs	r3, #1
    ba34:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ba38:	3352      	adds	r3, #82	; 0x52
    ba3a:	009b      	lsls	r3, r3, #2
    ba3c:	4413      	add	r3, r2
    ba3e:	681a      	ldr	r2, [r3, #0]
    ba40:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    ba44:	687b      	ldr	r3, [r7, #4]
    ba46:	3352      	adds	r3, #82	; 0x52
    ba48:	009b      	lsls	r3, r3, #2
    ba4a:	440b      	add	r3, r1
    ba4c:	601a      	str	r2, [r3, #0]
    ba4e:	e08a      	b.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:160
			}else if(quadrant == 2){
    ba50:	f997 3003 	ldrsb.w	r3, [r7, #3]
    ba54:	2b02      	cmp	r3, #2
    ba56:	d141      	bne.n	badc <SegmentTargetComputation+0xeec>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:161
				SegmentTargets->q_x[i] = (float)(SegmentTargets->q_x[i-1] - MazeSegmentsToBeDriven.segments[i-1].SingleSegment * MAZE_SIZE);
    ba58:	687b      	ldr	r3, [r7, #4]
    ba5a:	3b01      	subs	r3, #1
    ba5c:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ba60:	009b      	lsls	r3, r3, #2
    ba62:	4413      	add	r3, r2
    ba64:	ed93 7a00 	vldr	s14, [r3]
    ba68:	687b      	ldr	r3, [r7, #4]
    ba6a:	1e5a      	subs	r2, r3, #1
    ba6c:	4613      	mov	r3, r2
    ba6e:	005b      	lsls	r3, r3, #1
    ba70:	4413      	add	r3, r2
    ba72:	00db      	lsls	r3, r3, #3
    ba74:	f107 0218 	add.w	r2, r7, #24
    ba78:	4413      	add	r3, r2
    ba7a:	681b      	ldr	r3, [r3, #0]
    ba7c:	ee07 3a90 	vmov	s15, r3
    ba80:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    ba84:	eddf 7a42 	vldr	s15, [pc, #264]	; bb90 <SegmentTargetComputation+0xfa0>
    ba88:	ee66 7aa7 	vmul.f32	s15, s13, s15
    ba8c:	ee77 7a67 	vsub.f32	s15, s14, s15
    ba90:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    ba94:	687b      	ldr	r3, [r7, #4]
    ba96:	009b      	lsls	r3, r3, #2
    ba98:	4413      	add	r3, r2
    ba9a:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:162
				SegmentTargets->q_y[i] = SegmentTargets->q_y[i-1];
    ba9e:	687b      	ldr	r3, [r7, #4]
    baa0:	3b01      	subs	r3, #1
    baa2:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    baa6:	3328      	adds	r3, #40	; 0x28
    baa8:	009b      	lsls	r3, r3, #2
    baaa:	4413      	add	r3, r2
    baac:	685a      	ldr	r2, [r3, #4]
    baae:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    bab2:	687b      	ldr	r3, [r7, #4]
    bab4:	3328      	adds	r3, #40	; 0x28
    bab6:	009b      	lsls	r3, r3, #2
    bab8:	440b      	add	r3, r1
    baba:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:163
				SegmentTargets->q_theta[i] = SegmentTargets->q_theta[i-1];
    babc:	687b      	ldr	r3, [r7, #4]
    babe:	3b01      	subs	r3, #1
    bac0:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    bac4:	3352      	adds	r3, #82	; 0x52
    bac6:	009b      	lsls	r3, r3, #2
    bac8:	4413      	add	r3, r2
    baca:	681a      	ldr	r2, [r3, #0]
    bacc:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    bad0:	687b      	ldr	r3, [r7, #4]
    bad2:	3352      	adds	r3, #82	; 0x52
    bad4:	009b      	lsls	r3, r3, #2
    bad6:	440b      	add	r3, r1
    bad8:	601a      	str	r2, [r3, #0]
    bada:	e044      	b.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:164
			}else if (quadrant == 3){
    badc:	f997 3003 	ldrsb.w	r3, [r7, #3]
    bae0:	2b03      	cmp	r3, #3
    bae2:	d140      	bne.n	bb66 <SegmentTargetComputation+0xf76>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:165
				SegmentTargets->q_x[i] = SegmentTargets->q_x[i-1];
    bae4:	687b      	ldr	r3, [r7, #4]
    bae6:	3b01      	subs	r3, #1
    bae8:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    baec:	009b      	lsls	r3, r3, #2
    baee:	4413      	add	r3, r2
    baf0:	681a      	ldr	r2, [r3, #0]
    baf2:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    baf6:	687b      	ldr	r3, [r7, #4]
    baf8:	009b      	lsls	r3, r3, #2
    bafa:	440b      	add	r3, r1
    bafc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:166
				SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - MazeSegmentsToBeDriven.segments[i-1].SingleSegment * MAZE_SIZE);
    bafe:	687b      	ldr	r3, [r7, #4]
    bb00:	3b01      	subs	r3, #1
    bb02:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    bb06:	3328      	adds	r3, #40	; 0x28
    bb08:	009b      	lsls	r3, r3, #2
    bb0a:	4413      	add	r3, r2
    bb0c:	ed93 7a01 	vldr	s14, [r3, #4]
    bb10:	687b      	ldr	r3, [r7, #4]
    bb12:	1e5a      	subs	r2, r3, #1
    bb14:	4613      	mov	r3, r2
    bb16:	005b      	lsls	r3, r3, #1
    bb18:	4413      	add	r3, r2
    bb1a:	00db      	lsls	r3, r3, #3
    bb1c:	f107 0218 	add.w	r2, r7, #24
    bb20:	4413      	add	r3, r2
    bb22:	681b      	ldr	r3, [r3, #0]
    bb24:	ee07 3a90 	vmov	s15, r3
    bb28:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    bb2c:	eddf 7a18 	vldr	s15, [pc, #96]	; bb90 <SegmentTargetComputation+0xfa0>
    bb30:	ee66 7aa7 	vmul.f32	s15, s13, s15
    bb34:	ee77 7a67 	vsub.f32	s15, s14, s15
    bb38:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    bb3c:	687b      	ldr	r3, [r7, #4]
    bb3e:	3328      	adds	r3, #40	; 0x28
    bb40:	009b      	lsls	r3, r3, #2
    bb42:	4413      	add	r3, r2
    bb44:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:167
				SegmentTargets->q_theta[i] = SegmentTargets->q_theta[i-1];
    bb48:	687b      	ldr	r3, [r7, #4]
    bb4a:	3b01      	subs	r3, #1
    bb4c:	f8d7 23dc 	ldr.w	r2, [r7, #988]	; 0x3dc
    bb50:	3352      	adds	r3, #82	; 0x52
    bb52:	009b      	lsls	r3, r3, #2
    bb54:	4413      	add	r3, r2
    bb56:	681a      	ldr	r2, [r3, #0]
    bb58:	f8d7 13dc 	ldr.w	r1, [r7, #988]	; 0x3dc
    bb5c:	687b      	ldr	r3, [r7, #4]
    bb5e:	3352      	adds	r3, #82	; 0x52
    bb60:	009b      	lsls	r3, r3, #2
    bb62:	440b      	add	r3, r1
    bb64:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:44
}

/** Only for orthogonal maze segments for now! */
bool SegmentTargetComputation(Maze_segments MazeSegmentsToBeDriven, Segment_targets *SegmentTargets){
	int8_t quadrant = 0;
	for(int i = 1; i <= MazeSegmentsToBeDriven.numberOfSegments; i++){
    bb66:	687b      	ldr	r3, [r7, #4]
    bb68:	3301      	adds	r3, #1
    bb6a:	607b      	str	r3, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:44 (discriminator 1)
    bb6c:	f897 33d8 	ldrb.w	r3, [r7, #984]	; 0x3d8
    bb70:	461a      	mov	r2, r3
    bb72:	687b      	ldr	r3, [r7, #4]
    bb74:	429a      	cmp	r2, r3
    bb76:	f6bf a849 	bge.w	ac0c <SegmentTargetComputation+0x1c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:171
				SegmentTargets->q_y[i] = (float)(SegmentTargets->q_y[i-1] - MazeSegmentsToBeDriven.segments[i-1].SingleSegment * MAZE_SIZE);
				SegmentTargets->q_theta[i] = SegmentTargets->q_theta[i-1];
			}
		}
	}
	return true;
    bb7a:	2301      	movs	r3, #1
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/SegmentTargetComputation.c:172
 }
    bb7c:	4618      	mov	r0, r3
    bb7e:	3708      	adds	r7, #8
    bb80:	46bd      	mov	sp, r7
    bb82:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
    bb86:	b004      	add	sp, #16
    bb88:	4770      	bx	lr
    bb8a:	bf00      	nop
    bb8c:	f3af 8000 	nop.w
    bb90:	3e3851ec 	.word	0x3e3851ec
    bb94:	80000000 	.word	0x80000000
    bb98:	3fb70a3d 	.word	0x3fb70a3d
$t():
    bb9c:	f3af 8000 	nop.w

0000bba0 <TrackingControl>:
TrackingControl():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:73
int i, k;
float sum;
float MbarTimesU[2] = { 0, 0 };

void TrackingControl(bool SegmentType, bool watchingWall, float *wallCenterDivergence, float *weightDistanceSensor, float v_r[2], float v_est[2],
		float q_r[3], float q[3], float M[2], float U_mot[2], float vc_dot[2], float vc_logging[2]) {
    bba0:	b5f0      	push	{r4, r5, r6, r7, lr}
    bba2:	ed2d 8b02 	vpush	{d8}
    bba6:	b085      	sub	sp, #20
    bba8:	af00      	add	r7, sp, #0
    bbaa:	60ba      	str	r2, [r7, #8]
    bbac:	607b      	str	r3, [r7, #4]
    bbae:	4603      	mov	r3, r0
    bbb0:	73fb      	strb	r3, [r7, #15]
    bbb2:	460b      	mov	r3, r1
    bbb4:	73bb      	strb	r3, [r7, #14]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:84
	/* 
	* Calculate velocity and position of the robot in an inertial Cartesian frame
	*
	* q_dot = S * v_est
	*/
	for (i = 0; i < 3; i++) { //row
    bbb6:	4b94      	ldr	r3, [pc, #592]	; (be08 <TrackingControl+0x268>)
    bbb8:	2200      	movs	r2, #0
    bbba:	601a      	str	r2, [r3, #0]
    bbbc:	e039      	b.n	bc32 <TrackingControl+0x92>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:85
		sum = 0;
    bbbe:	4b93      	ldr	r3, [pc, #588]	; (be0c <TrackingControl+0x26c>)
    bbc0:	f04f 0200 	mov.w	r2, #0
    bbc4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:86
		for (k = 0; k < 2; k++) {
    bbc6:	4b92      	ldr	r3, [pc, #584]	; (be10 <TrackingControl+0x270>)
    bbc8:	2200      	movs	r2, #0
    bbca:	601a      	str	r2, [r3, #0]
    bbcc:	e020      	b.n	bc10 <TrackingControl+0x70>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:87 (discriminator 2)
			sum = sum + S[i][k] * v_est[k];
    bbce:	4b8e      	ldr	r3, [pc, #568]	; (be08 <TrackingControl+0x268>)
    bbd0:	6819      	ldr	r1, [r3, #0]
    bbd2:	4b8f      	ldr	r3, [pc, #572]	; (be10 <TrackingControl+0x270>)
    bbd4:	681b      	ldr	r3, [r3, #0]
    bbd6:	4a8f      	ldr	r2, [pc, #572]	; (be14 <TrackingControl+0x274>)
    bbd8:	0049      	lsls	r1, r1, #1
    bbda:	440b      	add	r3, r1
    bbdc:	009b      	lsls	r3, r3, #2
    bbde:	4413      	add	r3, r2
    bbe0:	ed93 7a00 	vldr	s14, [r3]
    bbe4:	4b8a      	ldr	r3, [pc, #552]	; (be10 <TrackingControl+0x270>)
    bbe6:	681b      	ldr	r3, [r3, #0]
    bbe8:	009b      	lsls	r3, r3, #2
    bbea:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    bbec:	4413      	add	r3, r2
    bbee:	edd3 7a00 	vldr	s15, [r3]
    bbf2:	ee27 7a27 	vmul.f32	s14, s14, s15
    bbf6:	4b85      	ldr	r3, [pc, #532]	; (be0c <TrackingControl+0x26c>)
    bbf8:	edd3 7a00 	vldr	s15, [r3]
    bbfc:	ee77 7a27 	vadd.f32	s15, s14, s15
    bc00:	4b82      	ldr	r3, [pc, #520]	; (be0c <TrackingControl+0x26c>)
    bc02:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:86 (discriminator 2)
	*
	* q_dot = S * v_est
	*/
	for (i = 0; i < 3; i++) { //row
		sum = 0;
		for (k = 0; k < 2; k++) {
    bc06:	4b82      	ldr	r3, [pc, #520]	; (be10 <TrackingControl+0x270>)
    bc08:	681b      	ldr	r3, [r3, #0]
    bc0a:	1c5a      	adds	r2, r3, #1
    bc0c:	4b80      	ldr	r3, [pc, #512]	; (be10 <TrackingControl+0x270>)
    bc0e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:86 (discriminator 1)
    bc10:	4b7f      	ldr	r3, [pc, #508]	; (be10 <TrackingControl+0x270>)
    bc12:	681b      	ldr	r3, [r3, #0]
    bc14:	2b01      	cmp	r3, #1
    bc16:	ddda      	ble.n	bbce <TrackingControl+0x2e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:89
			sum = sum + S[i][k] * v_est[k];
		}
		q_dot[i] = sum;
    bc18:	4b7b      	ldr	r3, [pc, #492]	; (be08 <TrackingControl+0x268>)
    bc1a:	681b      	ldr	r3, [r3, #0]
    bc1c:	4a7b      	ldr	r2, [pc, #492]	; (be0c <TrackingControl+0x26c>)
    bc1e:	6812      	ldr	r2, [r2, #0]
    bc20:	497d      	ldr	r1, [pc, #500]	; (be18 <TrackingControl+0x278>)
    bc22:	009b      	lsls	r3, r3, #2
    bc24:	440b      	add	r3, r1
    bc26:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:84
	/* 
	* Calculate velocity and position of the robot in an inertial Cartesian frame
	*
	* q_dot = S * v_est
	*/
	for (i = 0; i < 3; i++) { //row
    bc28:	4b77      	ldr	r3, [pc, #476]	; (be08 <TrackingControl+0x268>)
    bc2a:	681b      	ldr	r3, [r3, #0]
    bc2c:	1c5a      	adds	r2, r3, #1
    bc2e:	4b76      	ldr	r3, [pc, #472]	; (be08 <TrackingControl+0x268>)
    bc30:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:84 (discriminator 1)
    bc32:	4b75      	ldr	r3, [pc, #468]	; (be08 <TrackingControl+0x268>)
    bc34:	681b      	ldr	r3, [r3, #0]
    bc36:	2b02      	cmp	r3, #2
    bc38:	ddc1      	ble.n	bbbe <TrackingControl+0x1e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:92
			sum = sum + S[i][k] * v_est[k];
		}
		q_dot[i] = sum;
	}
	/* integration */
	for (i = 0; i < 3; i++) { //row
    bc3a:	4b73      	ldr	r3, [pc, #460]	; (be08 <TrackingControl+0x268>)
    bc3c:	2200      	movs	r2, #0
    bc3e:	601a      	str	r2, [r3, #0]
    bc40:	e01f      	b.n	bc82 <TrackingControl+0xe2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:93 (discriminator 2)
		q[i] = q[i] + q_dot[i] * DT;
    bc42:	4b71      	ldr	r3, [pc, #452]	; (be08 <TrackingControl+0x268>)
    bc44:	681b      	ldr	r3, [r3, #0]
    bc46:	009b      	lsls	r3, r3, #2
    bc48:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    bc4a:	4413      	add	r3, r2
    bc4c:	4a6e      	ldr	r2, [pc, #440]	; (be08 <TrackingControl+0x268>)
    bc4e:	6812      	ldr	r2, [r2, #0]
    bc50:	0092      	lsls	r2, r2, #2
    bc52:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
    bc54:	440a      	add	r2, r1
    bc56:	ed92 7a00 	vldr	s14, [r2]
    bc5a:	4a6b      	ldr	r2, [pc, #428]	; (be08 <TrackingControl+0x268>)
    bc5c:	6812      	ldr	r2, [r2, #0]
    bc5e:	496e      	ldr	r1, [pc, #440]	; (be18 <TrackingControl+0x278>)
    bc60:	0092      	lsls	r2, r2, #2
    bc62:	440a      	add	r2, r1
    bc64:	edd2 6a00 	vldr	s13, [r2]
    bc68:	eddf 7a6c 	vldr	s15, [pc, #432]	; be1c <TrackingControl+0x27c>
    bc6c:	ee66 7aa7 	vmul.f32	s15, s13, s15
    bc70:	ee77 7a27 	vadd.f32	s15, s14, s15
    bc74:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:92 (discriminator 2)
			sum = sum + S[i][k] * v_est[k];
		}
		q_dot[i] = sum;
	}
	/* integration */
	for (i = 0; i < 3; i++) { //row
    bc78:	4b63      	ldr	r3, [pc, #396]	; (be08 <TrackingControl+0x268>)
    bc7a:	681b      	ldr	r3, [r3, #0]
    bc7c:	1c5a      	adds	r2, r3, #1
    bc7e:	4b62      	ldr	r3, [pc, #392]	; (be08 <TrackingControl+0x268>)
    bc80:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:92 (discriminator 1)
    bc82:	4b61      	ldr	r3, [pc, #388]	; (be08 <TrackingControl+0x268>)
    bc84:	681b      	ldr	r3, [r3, #0]
    bc86:	2b02      	cmp	r3, #2
    bc88:	dddb      	ble.n	bc42 <TrackingControl+0xa2>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:103
	 * depending on position and attitude
	 * q[0] and q[1] are overwritten here
	 */
	#ifndef TAKE_NO_DISTANCE_SENSORS_INTO_ACCOUNT
		//if(SegmentType && !watchingWall){
		if(SegmentType){
    bc8a:	7bfb      	ldrb	r3, [r7, #15]
    bc8c:	2b00      	cmp	r3, #0
    bc8e:	f000 8172 	beq.w	bf76 <TrackingControl+0x3d6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:104
			quadrant = HeadingDirectionComputation(q_r[2]); /* Only for orthogonal maze segments for now! */
    bc92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    bc94:	3308      	adds	r3, #8
    bc96:	edd3 7a00 	vldr	s15, [r3]
    bc9a:	eeb0 0a67 	vmov.f32	s0, s15
    bc9e:	f7fe ff3d 	bl	ab1c <HeadingDirectionComputation>
    bca2:	4603      	mov	r3, r0
    bca4:	b2da      	uxtb	r2, r3
    bca6:	4b5e      	ldr	r3, [pc, #376]	; (be20 <TrackingControl+0x280>)
    bca8:	701a      	strb	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:105
			if(quadrant == 0){ // 0 deg
    bcaa:	4b5d      	ldr	r3, [pc, #372]	; (be20 <TrackingControl+0x280>)
    bcac:	781b      	ldrb	r3, [r3, #0]
    bcae:	2b00      	cmp	r3, #0
    bcb0:	d150      	bne.n	bd54 <TrackingControl+0x1b4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:106
				q[1] = (float)((q_r[1] - *wallCenterDivergence * 0.001) * (*weightDistanceSensor) + q[1] * (1-*weightDistanceSensor)); // from mm to m conversion
    bcb2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bcb4:	1d1e      	adds	r6, r3, #4
    bcb6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    bcb8:	3304      	adds	r3, #4
    bcba:	681b      	ldr	r3, [r3, #0]
    bcbc:	4618      	mov	r0, r3
    bcbe:	f7f4 fd6f 	bl	7a0 <__aeabi_f2d>
    bcc2:	4604      	mov	r4, r0
    bcc4:	460d      	mov	r5, r1
    bcc6:	68bb      	ldr	r3, [r7, #8]
    bcc8:	681b      	ldr	r3, [r3, #0]
    bcca:	4618      	mov	r0, r3
    bccc:	f7f4 fd68 	bl	7a0 <__aeabi_f2d>
    bcd0:	4602      	mov	r2, r0
    bcd2:	460b      	mov	r3, r1
    bcd4:	4610      	mov	r0, r2
    bcd6:	4619      	mov	r1, r3
    bcd8:	a349      	add	r3, pc, #292	; (adr r3, be00 <TrackingControl+0x260>)
    bcda:	e9d3 2300 	ldrd	r2, r3, [r3]
    bcde:	f7f4 fdb3 	bl	848 <__aeabi_dmul>
    bce2:	4602      	mov	r2, r0
    bce4:	460b      	mov	r3, r1
    bce6:	4620      	mov	r0, r4
    bce8:	4629      	mov	r1, r5
    bcea:	f7f4 fbf9 	bl	4e0 <__aeabi_dsub>
    bcee:	4602      	mov	r2, r0
    bcf0:	460b      	mov	r3, r1
    bcf2:	4614      	mov	r4, r2
    bcf4:	461d      	mov	r5, r3
    bcf6:	687b      	ldr	r3, [r7, #4]
    bcf8:	681b      	ldr	r3, [r3, #0]
    bcfa:	4618      	mov	r0, r3
    bcfc:	f7f4 fd50 	bl	7a0 <__aeabi_f2d>
    bd00:	4602      	mov	r2, r0
    bd02:	460b      	mov	r3, r1
    bd04:	4620      	mov	r0, r4
    bd06:	4629      	mov	r1, r5
    bd08:	f7f4 fd9e 	bl	848 <__aeabi_dmul>
    bd0c:	4602      	mov	r2, r0
    bd0e:	460b      	mov	r3, r1
    bd10:	4614      	mov	r4, r2
    bd12:	461d      	mov	r5, r3
    bd14:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bd16:	3304      	adds	r3, #4
    bd18:	ed93 7a00 	vldr	s14, [r3]
    bd1c:	687b      	ldr	r3, [r7, #4]
    bd1e:	edd3 7a00 	vldr	s15, [r3]
    bd22:	eef7 6a00 	vmov.f32	s13, #112	; 0x70
    bd26:	ee76 7ae7 	vsub.f32	s15, s13, s15
    bd2a:	ee67 7a27 	vmul.f32	s15, s14, s15
    bd2e:	ee17 0a90 	vmov	r0, s15
    bd32:	f7f4 fd35 	bl	7a0 <__aeabi_f2d>
    bd36:	4602      	mov	r2, r0
    bd38:	460b      	mov	r3, r1
    bd3a:	4620      	mov	r0, r4
    bd3c:	4629      	mov	r1, r5
    bd3e:	f7f4 fbd1 	bl	4e4 <__adddf3>
    bd42:	4602      	mov	r2, r0
    bd44:	460b      	mov	r3, r1
    bd46:	4610      	mov	r0, r2
    bd48:	4619      	mov	r1, r3
    bd4a:	f7f5 f83f 	bl	dcc <__aeabi_d2f>
    bd4e:	4603      	mov	r3, r0
    bd50:	6033      	str	r3, [r6, #0]
    bd52:	e110      	b.n	bf76 <TrackingControl+0x3d6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:107
			}else if(quadrant == 2){ // 180 deg
    bd54:	4b32      	ldr	r3, [pc, #200]	; (be20 <TrackingControl+0x280>)
    bd56:	781b      	ldrb	r3, [r3, #0]
    bd58:	2b02      	cmp	r3, #2
    bd5a:	d163      	bne.n	be24 <TrackingControl+0x284>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:108
				q[1] = (float)((q_r[1] + *wallCenterDivergence * 0.001) * (*weightDistanceSensor) + q[1] * (1-*weightDistanceSensor));
    bd5c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bd5e:	1d1e      	adds	r6, r3, #4
    bd60:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    bd62:	3304      	adds	r3, #4
    bd64:	681b      	ldr	r3, [r3, #0]
    bd66:	4618      	mov	r0, r3
    bd68:	f7f4 fd1a 	bl	7a0 <__aeabi_f2d>
    bd6c:	4604      	mov	r4, r0
    bd6e:	460d      	mov	r5, r1
    bd70:	68bb      	ldr	r3, [r7, #8]
    bd72:	681b      	ldr	r3, [r3, #0]
    bd74:	4618      	mov	r0, r3
    bd76:	f7f4 fd13 	bl	7a0 <__aeabi_f2d>
    bd7a:	4602      	mov	r2, r0
    bd7c:	460b      	mov	r3, r1
    bd7e:	4610      	mov	r0, r2
    bd80:	4619      	mov	r1, r3
    bd82:	a31f      	add	r3, pc, #124	; (adr r3, be00 <TrackingControl+0x260>)
    bd84:	e9d3 2300 	ldrd	r2, r3, [r3]
    bd88:	f7f4 fd5e 	bl	848 <__aeabi_dmul>
    bd8c:	4602      	mov	r2, r0
    bd8e:	460b      	mov	r3, r1
    bd90:	4620      	mov	r0, r4
    bd92:	4629      	mov	r1, r5
    bd94:	f7f4 fba6 	bl	4e4 <__adddf3>
    bd98:	4602      	mov	r2, r0
    bd9a:	460b      	mov	r3, r1
    bd9c:	4614      	mov	r4, r2
    bd9e:	461d      	mov	r5, r3
    bda0:	687b      	ldr	r3, [r7, #4]
    bda2:	681b      	ldr	r3, [r3, #0]
    bda4:	4618      	mov	r0, r3
    bda6:	f7f4 fcfb 	bl	7a0 <__aeabi_f2d>
    bdaa:	4602      	mov	r2, r0
    bdac:	460b      	mov	r3, r1
    bdae:	4620      	mov	r0, r4
    bdb0:	4629      	mov	r1, r5
    bdb2:	f7f4 fd49 	bl	848 <__aeabi_dmul>
    bdb6:	4602      	mov	r2, r0
    bdb8:	460b      	mov	r3, r1
    bdba:	4614      	mov	r4, r2
    bdbc:	461d      	mov	r5, r3
    bdbe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bdc0:	3304      	adds	r3, #4
    bdc2:	ed93 7a00 	vldr	s14, [r3]
    bdc6:	687b      	ldr	r3, [r7, #4]
    bdc8:	edd3 7a00 	vldr	s15, [r3]
    bdcc:	eef7 6a00 	vmov.f32	s13, #112	; 0x70
    bdd0:	ee76 7ae7 	vsub.f32	s15, s13, s15
    bdd4:	ee67 7a27 	vmul.f32	s15, s14, s15
    bdd8:	ee17 0a90 	vmov	r0, s15
    bddc:	f7f4 fce0 	bl	7a0 <__aeabi_f2d>
    bde0:	4602      	mov	r2, r0
    bde2:	460b      	mov	r3, r1
    bde4:	4620      	mov	r0, r4
    bde6:	4629      	mov	r1, r5
    bde8:	f7f4 fb7c 	bl	4e4 <__adddf3>
    bdec:	4602      	mov	r2, r0
    bdee:	460b      	mov	r3, r1
    bdf0:	4610      	mov	r0, r2
    bdf2:	4619      	mov	r1, r3
    bdf4:	f7f4 ffea 	bl	dcc <__aeabi_d2f>
    bdf8:	4603      	mov	r3, r0
    bdfa:	6033      	str	r3, [r6, #0]
    bdfc:	e0bb      	b.n	bf76 <TrackingControl+0x3d6>
    bdfe:	bf00      	nop
    be00:	d2f1a9fc 	.word	0xd2f1a9fc
    be04:	3f50624d 	.word	0x3f50624d
    be08:	20023674 	.word	0x20023674
    be0c:	2002366c 	.word	0x2002366c
    be10:	20023670 	.word	0x20023670
    be14:	20000030 	.word	0x20000030
    be18:	20000b34 	.word	0x20000b34
    be1c:	3a03126f 	.word	0x3a03126f
    be20:	20000b40 	.word	0x20000b40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:109
			}else if(quadrant == 1){ // 90 deg
    be24:	4b2a      	ldr	r3, [pc, #168]	; (bed0 <TrackingControl+0x330>)
    be26:	781b      	ldrb	r3, [r3, #0]
    be28:	2b01      	cmp	r3, #1
    be2a:	d153      	bne.n	bed4 <TrackingControl+0x334>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:110
				q[0] = (float)((q_r[0] + *wallCenterDivergence * 0.001) * (*weightDistanceSensor) + q[0] * (1-*weightDistanceSensor));
    be2c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    be2e:	681b      	ldr	r3, [r3, #0]
    be30:	4618      	mov	r0, r3
    be32:	f7f4 fcb5 	bl	7a0 <__aeabi_f2d>
    be36:	4604      	mov	r4, r0
    be38:	460d      	mov	r5, r1
    be3a:	68bb      	ldr	r3, [r7, #8]
    be3c:	681b      	ldr	r3, [r3, #0]
    be3e:	4618      	mov	r0, r3
    be40:	f7f4 fcae 	bl	7a0 <__aeabi_f2d>
    be44:	4602      	mov	r2, r0
    be46:	460b      	mov	r3, r1
    be48:	4610      	mov	r0, r2
    be4a:	4619      	mov	r1, r3
    be4c:	a31e      	add	r3, pc, #120	; (adr r3, bec8 <TrackingControl+0x328>)
    be4e:	e9d3 2300 	ldrd	r2, r3, [r3]
    be52:	f7f4 fcf9 	bl	848 <__aeabi_dmul>
    be56:	4602      	mov	r2, r0
    be58:	460b      	mov	r3, r1
    be5a:	4620      	mov	r0, r4
    be5c:	4629      	mov	r1, r5
    be5e:	f7f4 fb41 	bl	4e4 <__adddf3>
    be62:	4602      	mov	r2, r0
    be64:	460b      	mov	r3, r1
    be66:	4614      	mov	r4, r2
    be68:	461d      	mov	r5, r3
    be6a:	687b      	ldr	r3, [r7, #4]
    be6c:	681b      	ldr	r3, [r3, #0]
    be6e:	4618      	mov	r0, r3
    be70:	f7f4 fc96 	bl	7a0 <__aeabi_f2d>
    be74:	4602      	mov	r2, r0
    be76:	460b      	mov	r3, r1
    be78:	4620      	mov	r0, r4
    be7a:	4629      	mov	r1, r5
    be7c:	f7f4 fce4 	bl	848 <__aeabi_dmul>
    be80:	4602      	mov	r2, r0
    be82:	460b      	mov	r3, r1
    be84:	4614      	mov	r4, r2
    be86:	461d      	mov	r5, r3
    be88:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    be8a:	ed93 7a00 	vldr	s14, [r3]
    be8e:	687b      	ldr	r3, [r7, #4]
    be90:	edd3 7a00 	vldr	s15, [r3]
    be94:	eef7 6a00 	vmov.f32	s13, #112	; 0x70
    be98:	ee76 7ae7 	vsub.f32	s15, s13, s15
    be9c:	ee67 7a27 	vmul.f32	s15, s14, s15
    bea0:	ee17 0a90 	vmov	r0, s15
    bea4:	f7f4 fc7c 	bl	7a0 <__aeabi_f2d>
    bea8:	4602      	mov	r2, r0
    beaa:	460b      	mov	r3, r1
    beac:	4620      	mov	r0, r4
    beae:	4629      	mov	r1, r5
    beb0:	f7f4 fb18 	bl	4e4 <__adddf3>
    beb4:	4602      	mov	r2, r0
    beb6:	460b      	mov	r3, r1
    beb8:	4610      	mov	r0, r2
    beba:	4619      	mov	r1, r3
    bebc:	f7f4 ff86 	bl	dcc <__aeabi_d2f>
    bec0:	4602      	mov	r2, r0
    bec2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bec4:	601a      	str	r2, [r3, #0]
    bec6:	e056      	b.n	bf76 <TrackingControl+0x3d6>
    bec8:	d2f1a9fc 	.word	0xd2f1a9fc
    becc:	3f50624d 	.word	0x3f50624d
    bed0:	20000b40 	.word	0x20000b40
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:111
			}else if (quadrant == 3){ // 270 deg
    bed4:	4bbc      	ldr	r3, [pc, #752]	; (c1c8 <TrackingControl+0x628>)
    bed6:	781b      	ldrb	r3, [r3, #0]
    bed8:	2b03      	cmp	r3, #3
    beda:	d14c      	bne.n	bf76 <TrackingControl+0x3d6>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:112
				q[0] = (float)((q_r[0] - *wallCenterDivergence * 0.001) * (*weightDistanceSensor) + q[0] * (1-*weightDistanceSensor));
    bedc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    bede:	681b      	ldr	r3, [r3, #0]
    bee0:	4618      	mov	r0, r3
    bee2:	f7f4 fc5d 	bl	7a0 <__aeabi_f2d>
    bee6:	4604      	mov	r4, r0
    bee8:	460d      	mov	r5, r1
    beea:	68bb      	ldr	r3, [r7, #8]
    beec:	681b      	ldr	r3, [r3, #0]
    beee:	4618      	mov	r0, r3
    bef0:	f7f4 fc56 	bl	7a0 <__aeabi_f2d>
    bef4:	4602      	mov	r2, r0
    bef6:	460b      	mov	r3, r1
    bef8:	4610      	mov	r0, r2
    befa:	4619      	mov	r1, r3
    befc:	a3b0      	add	r3, pc, #704	; (adr r3, c1c0 <TrackingControl+0x620>)
    befe:	e9d3 2300 	ldrd	r2, r3, [r3]
    bf02:	f7f4 fca1 	bl	848 <__aeabi_dmul>
    bf06:	4602      	mov	r2, r0
    bf08:	460b      	mov	r3, r1
    bf0a:	4620      	mov	r0, r4
    bf0c:	4629      	mov	r1, r5
    bf0e:	f7f4 fae7 	bl	4e0 <__aeabi_dsub>
    bf12:	4602      	mov	r2, r0
    bf14:	460b      	mov	r3, r1
    bf16:	4614      	mov	r4, r2
    bf18:	461d      	mov	r5, r3
    bf1a:	687b      	ldr	r3, [r7, #4]
    bf1c:	681b      	ldr	r3, [r3, #0]
    bf1e:	4618      	mov	r0, r3
    bf20:	f7f4 fc3e 	bl	7a0 <__aeabi_f2d>
    bf24:	4602      	mov	r2, r0
    bf26:	460b      	mov	r3, r1
    bf28:	4620      	mov	r0, r4
    bf2a:	4629      	mov	r1, r5
    bf2c:	f7f4 fc8c 	bl	848 <__aeabi_dmul>
    bf30:	4602      	mov	r2, r0
    bf32:	460b      	mov	r3, r1
    bf34:	4614      	mov	r4, r2
    bf36:	461d      	mov	r5, r3
    bf38:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bf3a:	ed93 7a00 	vldr	s14, [r3]
    bf3e:	687b      	ldr	r3, [r7, #4]
    bf40:	edd3 7a00 	vldr	s15, [r3]
    bf44:	eef7 6a00 	vmov.f32	s13, #112	; 0x70
    bf48:	ee76 7ae7 	vsub.f32	s15, s13, s15
    bf4c:	ee67 7a27 	vmul.f32	s15, s14, s15
    bf50:	ee17 0a90 	vmov	r0, s15
    bf54:	f7f4 fc24 	bl	7a0 <__aeabi_f2d>
    bf58:	4602      	mov	r2, r0
    bf5a:	460b      	mov	r3, r1
    bf5c:	4620      	mov	r0, r4
    bf5e:	4629      	mov	r1, r5
    bf60:	f7f4 fac0 	bl	4e4 <__adddf3>
    bf64:	4602      	mov	r2, r0
    bf66:	460b      	mov	r3, r1
    bf68:	4610      	mov	r0, r2
    bf6a:	4619      	mov	r1, r3
    bf6c:	f7f4 ff2e 	bl	dcc <__aeabi_d2f>
    bf70:	4602      	mov	r2, r0
    bf72:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bf74:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:121

	/* Update matrices */

	/* S is a Jacobian matrix that transforms velocities in mobile base
	 * coordinates v to velocities in Cartesian coordinates q_dot. */
	S[0][0] = cos_lut(q[2] * (float) RAD_TO_DEGREES);
    bf76:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bf78:	3308      	adds	r3, #8
    bf7a:	ed93 7a00 	vldr	s14, [r3]
    bf7e:	eddf 7a93 	vldr	s15, [pc, #588]	; c1cc <TrackingControl+0x62c>
    bf82:	ee67 7a27 	vmul.f32	s15, s14, s15
    bf86:	eeb0 0a67 	vmov.f32	s0, s15
    bf8a:	f000 ffbb 	bl	cf04 <cos_lut>
    bf8e:	eef0 7a40 	vmov.f32	s15, s0
    bf92:	4b8f      	ldr	r3, [pc, #572]	; (c1d0 <TrackingControl+0x630>)
    bf94:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:123
	S[0][1] = (-DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
				sin_lut(q[2] * (float) RAD_TO_DEGREES));
    bf98:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bf9a:	3308      	adds	r3, #8
    bf9c:	ed93 7a00 	vldr	s14, [r3]
    bfa0:	eddf 7a8a 	vldr	s15, [pc, #552]	; c1cc <TrackingControl+0x62c>
    bfa4:	ee67 7a27 	vmul.f32	s15, s14, s15
    bfa8:	eeb0 0a67 	vmov.f32	s0, s15
    bfac:	f000 ff22 	bl	cdf4 <sin_lut>
    bfb0:	eeb0 7a40 	vmov.f32	s14, s0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:122
	/* Update matrices */

	/* S is a Jacobian matrix that transforms velocities in mobile base
	 * coordinates v to velocities in Cartesian coordinates q_dot. */
	S[0][0] = cos_lut(q[2] * (float) RAD_TO_DEGREES);
	S[0][1] = (-DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
    bfb4:	eddf 7a87 	vldr	s15, [pc, #540]	; c1d4 <TrackingControl+0x634>
    bfb8:	ee67 7a27 	vmul.f32	s15, s14, s15
    bfbc:	4b84      	ldr	r3, [pc, #528]	; (c1d0 <TrackingControl+0x630>)
    bfbe:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:124
				sin_lut(q[2] * (float) RAD_TO_DEGREES));
	S[1][0] = sin_lut(q[2] * (float) RAD_TO_DEGREES);
    bfc2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bfc4:	3308      	adds	r3, #8
    bfc6:	ed93 7a00 	vldr	s14, [r3]
    bfca:	eddf 7a80 	vldr	s15, [pc, #512]	; c1cc <TrackingControl+0x62c>
    bfce:	ee67 7a27 	vmul.f32	s15, s14, s15
    bfd2:	eeb0 0a67 	vmov.f32	s0, s15
    bfd6:	f000 ff0d 	bl	cdf4 <sin_lut>
    bfda:	eef0 7a40 	vmov.f32	s15, s0
    bfde:	4b7c      	ldr	r3, [pc, #496]	; (c1d0 <TrackingControl+0x630>)
    bfe0:	edc3 7a02 	vstr	s15, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:126
	S[1][1] = DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
				cos_lut(q[2] * (float) RAD_TO_DEGREES);
    bfe4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    bfe6:	3308      	adds	r3, #8
    bfe8:	ed93 7a00 	vldr	s14, [r3]
    bfec:	eddf 7a77 	vldr	s15, [pc, #476]	; c1cc <TrackingControl+0x62c>
    bff0:	ee67 7a27 	vmul.f32	s15, s14, s15
    bff4:	eeb0 0a67 	vmov.f32	s0, s15
    bff8:	f000 ff84 	bl	cf04 <cos_lut>
    bffc:	eeb0 7a40 	vmov.f32	s14, s0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:125
	 * coordinates v to velocities in Cartesian coordinates q_dot. */
	S[0][0] = cos_lut(q[2] * (float) RAD_TO_DEGREES);
	S[0][1] = (-DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
				sin_lut(q[2] * (float) RAD_TO_DEGREES));
	S[1][0] = sin_lut(q[2] * (float) RAD_TO_DEGREES);
	S[1][1] = DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
    c000:	eddf 7a75 	vldr	s15, [pc, #468]	; c1d8 <TrackingControl+0x638>
    c004:	ee67 7a27 	vmul.f32	s15, s14, s15
    c008:	4b71      	ldr	r3, [pc, #452]	; (c1d0 <TrackingControl+0x630>)
    c00a:	edc3 7a03 	vstr	s15, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:130
				cos_lut(q[2] * (float) RAD_TO_DEGREES);
	//S[2][0] = 0;
	//S[2][1] = 1;

	S_r[0][0] = cos_lut(q_r[2] * (float) RAD_TO_DEGREES);
    c00e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    c010:	3308      	adds	r3, #8
    c012:	ed93 7a00 	vldr	s14, [r3]
    c016:	eddf 7a6d 	vldr	s15, [pc, #436]	; c1cc <TrackingControl+0x62c>
    c01a:	ee67 7a27 	vmul.f32	s15, s14, s15
    c01e:	eeb0 0a67 	vmov.f32	s0, s15
    c022:	f000 ff6f 	bl	cf04 <cos_lut>
    c026:	eef0 7a40 	vmov.f32	s15, s0
    c02a:	4b6c      	ldr	r3, [pc, #432]	; (c1dc <TrackingControl+0x63c>)
    c02c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:132
	S_r[0][1] = -DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
				sin_lut(q_r[2] * (float) RAD_TO_DEGREES);
    c030:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    c032:	3308      	adds	r3, #8
    c034:	ed93 7a00 	vldr	s14, [r3]
    c038:	eddf 7a64 	vldr	s15, [pc, #400]	; c1cc <TrackingControl+0x62c>
    c03c:	ee67 7a27 	vmul.f32	s15, s14, s15
    c040:	eeb0 0a67 	vmov.f32	s0, s15
    c044:	f000 fed6 	bl	cdf4 <sin_lut>
    c048:	eeb0 7a40 	vmov.f32	s14, s0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:131
				cos_lut(q[2] * (float) RAD_TO_DEGREES);
	//S[2][0] = 0;
	//S[2][1] = 1;

	S_r[0][0] = cos_lut(q_r[2] * (float) RAD_TO_DEGREES);
	S_r[0][1] = -DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
    c04c:	eddf 7a61 	vldr	s15, [pc, #388]	; c1d4 <TrackingControl+0x634>
    c050:	ee67 7a27 	vmul.f32	s15, s14, s15
    c054:	4b61      	ldr	r3, [pc, #388]	; (c1dc <TrackingControl+0x63c>)
    c056:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:133
				sin_lut(q_r[2] * (float) RAD_TO_DEGREES);
	S_r[1][0] = sin_lut(q_r[2] * (float) RAD_TO_DEGREES);
    c05a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    c05c:	3308      	adds	r3, #8
    c05e:	ed93 7a00 	vldr	s14, [r3]
    c062:	eddf 7a5a 	vldr	s15, [pc, #360]	; c1cc <TrackingControl+0x62c>
    c066:	ee67 7a27 	vmul.f32	s15, s14, s15
    c06a:	eeb0 0a67 	vmov.f32	s0, s15
    c06e:	f000 fec1 	bl	cdf4 <sin_lut>
    c072:	eef0 7a40 	vmov.f32	s15, s0
    c076:	4b59      	ldr	r3, [pc, #356]	; (c1dc <TrackingControl+0x63c>)
    c078:	edc3 7a02 	vstr	s15, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:135
	S_r[1][1] = DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
				cos_lut(q_r[2] * (float) RAD_TO_DEGREES);
    c07c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    c07e:	3308      	adds	r3, #8
    c080:	ed93 7a00 	vldr	s14, [r3]
    c084:	eddf 7a51 	vldr	s15, [pc, #324]	; c1cc <TrackingControl+0x62c>
    c088:	ee67 7a27 	vmul.f32	s15, s14, s15
    c08c:	eeb0 0a67 	vmov.f32	s0, s15
    c090:	f000 ff38 	bl	cf04 <cos_lut>
    c094:	eeb0 7a40 	vmov.f32	s14, s0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:134

	S_r[0][0] = cos_lut(q_r[2] * (float) RAD_TO_DEGREES);
	S_r[0][1] = -DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
				sin_lut(q_r[2] * (float) RAD_TO_DEGREES);
	S_r[1][0] = sin_lut(q_r[2] * (float) RAD_TO_DEGREES);
	S_r[1][1] = DISTANCE_BETWEEN_WHEEL_AXIS_AND_CENTER_OF_MASS *
    c098:	eddf 7a4f 	vldr	s15, [pc, #316]	; c1d8 <TrackingControl+0x638>
    c09c:	ee67 7a27 	vmul.f32	s15, s14, s15
    c0a0:	4b4e      	ldr	r3, [pc, #312]	; (c1dc <TrackingControl+0x63c>)
    c0a2:	edc3 7a03 	vstr	s15, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:140
				cos_lut(q_r[2] * (float) RAD_TO_DEGREES);
	//S_r[2][0] = 0;
	//S_r[2][1] = 1;

	/* matrix for tracking error calculation */
	T_e[0][0] = cos_lut(q[2] * (float) RAD_TO_DEGREES);
    c0a6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c0a8:	3308      	adds	r3, #8
    c0aa:	ed93 7a00 	vldr	s14, [r3]
    c0ae:	eddf 7a47 	vldr	s15, [pc, #284]	; c1cc <TrackingControl+0x62c>
    c0b2:	ee67 7a27 	vmul.f32	s15, s14, s15
    c0b6:	eeb0 0a67 	vmov.f32	s0, s15
    c0ba:	f000 ff23 	bl	cf04 <cos_lut>
    c0be:	eef0 7a40 	vmov.f32	s15, s0
    c0c2:	4b47      	ldr	r3, [pc, #284]	; (c1e0 <TrackingControl+0x640>)
    c0c4:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:141
	T_e[0][1] = sin_lut(q[2] * (float) RAD_TO_DEGREES);
    c0c8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c0ca:	3308      	adds	r3, #8
    c0cc:	ed93 7a00 	vldr	s14, [r3]
    c0d0:	eddf 7a3e 	vldr	s15, [pc, #248]	; c1cc <TrackingControl+0x62c>
    c0d4:	ee67 7a27 	vmul.f32	s15, s14, s15
    c0d8:	eeb0 0a67 	vmov.f32	s0, s15
    c0dc:	f000 fe8a 	bl	cdf4 <sin_lut>
    c0e0:	eef0 7a40 	vmov.f32	s15, s0
    c0e4:	4b3e      	ldr	r3, [pc, #248]	; (c1e0 <TrackingControl+0x640>)
    c0e6:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:143
	//T_e[0][2] = 0;
	T_e[1][0] = - sin_lut(q[2] * (float) RAD_TO_DEGREES);
    c0ea:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c0ec:	3308      	adds	r3, #8
    c0ee:	ed93 7a00 	vldr	s14, [r3]
    c0f2:	eddf 7a36 	vldr	s15, [pc, #216]	; c1cc <TrackingControl+0x62c>
    c0f6:	ee67 7a27 	vmul.f32	s15, s14, s15
    c0fa:	eeb0 0a67 	vmov.f32	s0, s15
    c0fe:	f000 fe79 	bl	cdf4 <sin_lut>
    c102:	eef0 7a40 	vmov.f32	s15, s0
    c106:	eef1 7a67 	vneg.f32	s15, s15
    c10a:	4b35      	ldr	r3, [pc, #212]	; (c1e0 <TrackingControl+0x640>)
    c10c:	edc3 7a03 	vstr	s15, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:144
	T_e[1][1] = cos_lut(q[2] * (float) RAD_TO_DEGREES);
    c110:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c112:	3308      	adds	r3, #8
    c114:	ed93 7a00 	vldr	s14, [r3]
    c118:	eddf 7a2c 	vldr	s15, [pc, #176]	; c1cc <TrackingControl+0x62c>
    c11c:	ee67 7a27 	vmul.f32	s15, s14, s15
    c120:	eeb0 0a67 	vmov.f32	s0, s15
    c124:	f000 feee 	bl	cf04 <cos_lut>
    c128:	eef0 7a40 	vmov.f32	s15, s0
    c12c:	4b2c      	ldr	r3, [pc, #176]	; (c1e0 <TrackingControl+0x640>)
    c12e:	edc3 7a04 	vstr	s15, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:154

	/*
	 * reference cart
	 * q_r_dot = S_r * v_r 
	 */
	for (i = 0; i < 3; i++) {
    c132:	4b2c      	ldr	r3, [pc, #176]	; (c1e4 <TrackingControl+0x644>)
    c134:	2200      	movs	r2, #0
    c136:	601a      	str	r2, [r3, #0]
    c138:	e039      	b.n	c1ae <TrackingControl+0x60e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:155
		sum = 0;
    c13a:	4b2b      	ldr	r3, [pc, #172]	; (c1e8 <TrackingControl+0x648>)
    c13c:	f04f 0200 	mov.w	r2, #0
    c140:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:156
		for (k = 0; k < 2; k++) {
    c142:	4b2a      	ldr	r3, [pc, #168]	; (c1ec <TrackingControl+0x64c>)
    c144:	2200      	movs	r2, #0
    c146:	601a      	str	r2, [r3, #0]
    c148:	e020      	b.n	c18c <TrackingControl+0x5ec>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:157 (discriminator 2)
			sum = sum + S_r[i][k] * v_r[k];
    c14a:	4b26      	ldr	r3, [pc, #152]	; (c1e4 <TrackingControl+0x644>)
    c14c:	6819      	ldr	r1, [r3, #0]
    c14e:	4b27      	ldr	r3, [pc, #156]	; (c1ec <TrackingControl+0x64c>)
    c150:	681b      	ldr	r3, [r3, #0]
    c152:	4a22      	ldr	r2, [pc, #136]	; (c1dc <TrackingControl+0x63c>)
    c154:	0049      	lsls	r1, r1, #1
    c156:	440b      	add	r3, r1
    c158:	009b      	lsls	r3, r3, #2
    c15a:	4413      	add	r3, r2
    c15c:	ed93 7a00 	vldr	s14, [r3]
    c160:	4b22      	ldr	r3, [pc, #136]	; (c1ec <TrackingControl+0x64c>)
    c162:	681b      	ldr	r3, [r3, #0]
    c164:	009b      	lsls	r3, r3, #2
    c166:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    c168:	4413      	add	r3, r2
    c16a:	edd3 7a00 	vldr	s15, [r3]
    c16e:	ee27 7a27 	vmul.f32	s14, s14, s15
    c172:	4b1d      	ldr	r3, [pc, #116]	; (c1e8 <TrackingControl+0x648>)
    c174:	edd3 7a00 	vldr	s15, [r3]
    c178:	ee77 7a27 	vadd.f32	s15, s14, s15
    c17c:	4b1a      	ldr	r3, [pc, #104]	; (c1e8 <TrackingControl+0x648>)
    c17e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:156 (discriminator 2)
	 * reference cart
	 * q_r_dot = S_r * v_r 
	 */
	for (i = 0; i < 3; i++) {
		sum = 0;
		for (k = 0; k < 2; k++) {
    c182:	4b1a      	ldr	r3, [pc, #104]	; (c1ec <TrackingControl+0x64c>)
    c184:	681b      	ldr	r3, [r3, #0]
    c186:	1c5a      	adds	r2, r3, #1
    c188:	4b18      	ldr	r3, [pc, #96]	; (c1ec <TrackingControl+0x64c>)
    c18a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:156 (discriminator 1)
    c18c:	4b17      	ldr	r3, [pc, #92]	; (c1ec <TrackingControl+0x64c>)
    c18e:	681b      	ldr	r3, [r3, #0]
    c190:	2b01      	cmp	r3, #1
    c192:	ddda      	ble.n	c14a <TrackingControl+0x5aa>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:159
			sum = sum + S_r[i][k] * v_r[k];
		}
		q_r_dot[i] = sum;
    c194:	4b13      	ldr	r3, [pc, #76]	; (c1e4 <TrackingControl+0x644>)
    c196:	681b      	ldr	r3, [r3, #0]
    c198:	4a13      	ldr	r2, [pc, #76]	; (c1e8 <TrackingControl+0x648>)
    c19a:	6812      	ldr	r2, [r2, #0]
    c19c:	4914      	ldr	r1, [pc, #80]	; (c1f0 <TrackingControl+0x650>)
    c19e:	009b      	lsls	r3, r3, #2
    c1a0:	440b      	add	r3, r1
    c1a2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:154

	/*
	 * reference cart
	 * q_r_dot = S_r * v_r 
	 */
	for (i = 0; i < 3; i++) {
    c1a4:	4b0f      	ldr	r3, [pc, #60]	; (c1e4 <TrackingControl+0x644>)
    c1a6:	681b      	ldr	r3, [r3, #0]
    c1a8:	1c5a      	adds	r2, r3, #1
    c1aa:	4b0e      	ldr	r3, [pc, #56]	; (c1e4 <TrackingControl+0x644>)
    c1ac:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:154 (discriminator 1)
    c1ae:	4b0d      	ldr	r3, [pc, #52]	; (c1e4 <TrackingControl+0x644>)
    c1b0:	681b      	ldr	r3, [r3, #0]
    c1b2:	2b02      	cmp	r3, #2
    c1b4:	ddc1      	ble.n	c13a <TrackingControl+0x59a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:163
		}
		q_r_dot[i] = sum;
	}

	/* integration */
	for (i = 0; i < 3; i++) {
    c1b6:	4b0b      	ldr	r3, [pc, #44]	; (c1e4 <TrackingControl+0x644>)
    c1b8:	2200      	movs	r2, #0
    c1ba:	601a      	str	r2, [r3, #0]
    c1bc:	e03a      	b.n	c234 <TrackingControl+0x694>
    c1be:	bf00      	nop
    c1c0:	d2f1a9fc 	.word	0xd2f1a9fc
    c1c4:	3f50624d 	.word	0x3f50624d
    c1c8:	20000b40 	.word	0x20000b40
    c1cc:	42652ee1 	.word	0x42652ee1
    c1d0:	20000030 	.word	0x20000030
    c1d4:	bb449ba6 	.word	0xbb449ba6
    c1d8:	3b449ba6 	.word	0x3b449ba6
    c1dc:	20000048 	.word	0x20000048
    c1e0:	20000060 	.word	0x20000060
    c1e4:	20023674 	.word	0x20023674
    c1e8:	2002366c 	.word	0x2002366c
    c1ec:	20023670 	.word	0x20023670
    c1f0:	20000afc 	.word	0x20000afc
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:164 (discriminator 2)
		q_r[i] = q_r[i] + q_r_dot[i] * DT;
    c1f4:	4bb5      	ldr	r3, [pc, #724]	; (c4cc <TrackingControl+0x92c>)
    c1f6:	681b      	ldr	r3, [r3, #0]
    c1f8:	009b      	lsls	r3, r3, #2
    c1fa:	6bba      	ldr	r2, [r7, #56]	; 0x38
    c1fc:	4413      	add	r3, r2
    c1fe:	4ab3      	ldr	r2, [pc, #716]	; (c4cc <TrackingControl+0x92c>)
    c200:	6812      	ldr	r2, [r2, #0]
    c202:	0092      	lsls	r2, r2, #2
    c204:	6bb9      	ldr	r1, [r7, #56]	; 0x38
    c206:	440a      	add	r2, r1
    c208:	ed92 7a00 	vldr	s14, [r2]
    c20c:	4aaf      	ldr	r2, [pc, #700]	; (c4cc <TrackingControl+0x92c>)
    c20e:	6812      	ldr	r2, [r2, #0]
    c210:	49af      	ldr	r1, [pc, #700]	; (c4d0 <TrackingControl+0x930>)
    c212:	0092      	lsls	r2, r2, #2
    c214:	440a      	add	r2, r1
    c216:	edd2 6a00 	vldr	s13, [r2]
    c21a:	eddf 7aae 	vldr	s15, [pc, #696]	; c4d4 <TrackingControl+0x934>
    c21e:	ee66 7aa7 	vmul.f32	s15, s13, s15
    c222:	ee77 7a27 	vadd.f32	s15, s14, s15
    c226:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:163 (discriminator 2)
		}
		q_r_dot[i] = sum;
	}

	/* integration */
	for (i = 0; i < 3; i++) {
    c22a:	4ba8      	ldr	r3, [pc, #672]	; (c4cc <TrackingControl+0x92c>)
    c22c:	681b      	ldr	r3, [r3, #0]
    c22e:	1c5a      	adds	r2, r3, #1
    c230:	4ba6      	ldr	r3, [pc, #664]	; (c4cc <TrackingControl+0x92c>)
    c232:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:163 (discriminator 1)
    c234:	4ba5      	ldr	r3, [pc, #660]	; (c4cc <TrackingControl+0x92c>)
    c236:	681b      	ldr	r3, [r3, #0]
    c238:	2b02      	cmp	r3, #2
    c23a:	dddb      	ble.n	c1f4 <TrackingControl+0x654>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:168
		q_r[i] = q_r[i] + q_r_dot[i] * DT;
	}

	/* tracking control update */
	for (i = 0; i < 3; i++) {
    c23c:	4ba3      	ldr	r3, [pc, #652]	; (c4cc <TrackingControl+0x92c>)
    c23e:	2200      	movs	r2, #0
    c240:	601a      	str	r2, [r3, #0]
    c242:	e044      	b.n	c2ce <TrackingControl+0x72e>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:169
		sum = 0;
    c244:	4ba4      	ldr	r3, [pc, #656]	; (c4d8 <TrackingControl+0x938>)
    c246:	f04f 0200 	mov.w	r2, #0
    c24a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:170
		for (k = 0; k < 3; k++) {
    c24c:	4ba3      	ldr	r3, [pc, #652]	; (c4dc <TrackingControl+0x93c>)
    c24e:	2200      	movs	r2, #0
    c250:	601a      	str	r2, [r3, #0]
    c252:	e02b      	b.n	c2ac <TrackingControl+0x70c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:171 (discriminator 2)
			sum = sum + (T_e[i][k] * (q_r[k] - q[k]));
    c254:	4b9d      	ldr	r3, [pc, #628]	; (c4cc <TrackingControl+0x92c>)
    c256:	681a      	ldr	r2, [r3, #0]
    c258:	4ba0      	ldr	r3, [pc, #640]	; (c4dc <TrackingControl+0x93c>)
    c25a:	6818      	ldr	r0, [r3, #0]
    c25c:	49a0      	ldr	r1, [pc, #640]	; (c4e0 <TrackingControl+0x940>)
    c25e:	4613      	mov	r3, r2
    c260:	005b      	lsls	r3, r3, #1
    c262:	4413      	add	r3, r2
    c264:	4403      	add	r3, r0
    c266:	009b      	lsls	r3, r3, #2
    c268:	440b      	add	r3, r1
    c26a:	ed93 7a00 	vldr	s14, [r3]
    c26e:	4b9b      	ldr	r3, [pc, #620]	; (c4dc <TrackingControl+0x93c>)
    c270:	681b      	ldr	r3, [r3, #0]
    c272:	009b      	lsls	r3, r3, #2
    c274:	6bba      	ldr	r2, [r7, #56]	; 0x38
    c276:	4413      	add	r3, r2
    c278:	edd3 6a00 	vldr	s13, [r3]
    c27c:	4b97      	ldr	r3, [pc, #604]	; (c4dc <TrackingControl+0x93c>)
    c27e:	681b      	ldr	r3, [r3, #0]
    c280:	009b      	lsls	r3, r3, #2
    c282:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    c284:	4413      	add	r3, r2
    c286:	edd3 7a00 	vldr	s15, [r3]
    c28a:	ee76 7ae7 	vsub.f32	s15, s13, s15
    c28e:	ee27 7a27 	vmul.f32	s14, s14, s15
    c292:	4b91      	ldr	r3, [pc, #580]	; (c4d8 <TrackingControl+0x938>)
    c294:	edd3 7a00 	vldr	s15, [r3]
    c298:	ee77 7a27 	vadd.f32	s15, s14, s15
    c29c:	4b8e      	ldr	r3, [pc, #568]	; (c4d8 <TrackingControl+0x938>)
    c29e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:170 (discriminator 2)
	}

	/* tracking control update */
	for (i = 0; i < 3; i++) {
		sum = 0;
		for (k = 0; k < 3; k++) {
    c2a2:	4b8e      	ldr	r3, [pc, #568]	; (c4dc <TrackingControl+0x93c>)
    c2a4:	681b      	ldr	r3, [r3, #0]
    c2a6:	1c5a      	adds	r2, r3, #1
    c2a8:	4b8c      	ldr	r3, [pc, #560]	; (c4dc <TrackingControl+0x93c>)
    c2aa:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:170 (discriminator 1)
    c2ac:	4b8b      	ldr	r3, [pc, #556]	; (c4dc <TrackingControl+0x93c>)
    c2ae:	681b      	ldr	r3, [r3, #0]
    c2b0:	2b02      	cmp	r3, #2
    c2b2:	ddcf      	ble.n	c254 <TrackingControl+0x6b4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:173
			sum = sum + (T_e[i][k] * (q_r[k] - q[k]));
		}
		e_p[i] = sum;
    c2b4:	4b85      	ldr	r3, [pc, #532]	; (c4cc <TrackingControl+0x92c>)
    c2b6:	681b      	ldr	r3, [r3, #0]
    c2b8:	4a87      	ldr	r2, [pc, #540]	; (c4d8 <TrackingControl+0x938>)
    c2ba:	6812      	ldr	r2, [r2, #0]
    c2bc:	4989      	ldr	r1, [pc, #548]	; (c4e4 <TrackingControl+0x944>)
    c2be:	009b      	lsls	r3, r3, #2
    c2c0:	440b      	add	r3, r1
    c2c2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:168
	for (i = 0; i < 3; i++) {
		q_r[i] = q_r[i] + q_r_dot[i] * DT;
	}

	/* tracking control update */
	for (i = 0; i < 3; i++) {
    c2c4:	4b81      	ldr	r3, [pc, #516]	; (c4cc <TrackingControl+0x92c>)
    c2c6:	681b      	ldr	r3, [r3, #0]
    c2c8:	1c5a      	adds	r2, r3, #1
    c2ca:	4b80      	ldr	r3, [pc, #512]	; (c4cc <TrackingControl+0x92c>)
    c2cc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:168 (discriminator 1)
    c2ce:	4b7f      	ldr	r3, [pc, #508]	; (c4cc <TrackingControl+0x92c>)
    c2d0:	681b      	ldr	r3, [r3, #0]
    c2d2:	2b02      	cmp	r3, #2
    c2d4:	ddb6      	ble.n	c244 <TrackingControl+0x6a4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:177
		}
		e_p[i] = sum;
	}

	/* store previous vc */
	vc_prev[0] = vc[0];
    c2d6:	4b84      	ldr	r3, [pc, #528]	; (c4e8 <TrackingControl+0x948>)
    c2d8:	681a      	ldr	r2, [r3, #0]
    c2da:	4b84      	ldr	r3, [pc, #528]	; (c4ec <TrackingControl+0x94c>)
    c2dc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:178
	vc_prev[1] = vc[1];
    c2de:	4b82      	ldr	r3, [pc, #520]	; (c4e8 <TrackingControl+0x948>)
    c2e0:	685a      	ldr	r2, [r3, #4]
    c2e2:	4b82      	ldr	r3, [pc, #520]	; (c4ec <TrackingControl+0x94c>)
    c2e4:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:181

	/* vc computation */
	if (SegmentType){ // straight segment
    c2e6:	7bfb      	ldrb	r3, [r7, #15]
    c2e8:	2b00      	cmp	r3, #0
    c2ea:	d047      	beq.n	c37c <TrackingControl+0x7dc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:182
		vc[0] = v_r[0] * cos_lut(e_p[2] * (float) RAD_TO_DEGREES) + K1 * e_p[0];
    c2ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c2ee:	ed93 8a00 	vldr	s16, [r3]
    c2f2:	4b7c      	ldr	r3, [pc, #496]	; (c4e4 <TrackingControl+0x944>)
    c2f4:	ed93 7a02 	vldr	s14, [r3, #8]
    c2f8:	eddf 7a7d 	vldr	s15, [pc, #500]	; c4f0 <TrackingControl+0x950>
    c2fc:	ee67 7a27 	vmul.f32	s15, s14, s15
    c300:	eeb0 0a67 	vmov.f32	s0, s15
    c304:	f000 fdfe 	bl	cf04 <cos_lut>
    c308:	eef0 7a40 	vmov.f32	s15, s0
    c30c:	ee28 7a27 	vmul.f32	s14, s16, s15
    c310:	4b74      	ldr	r3, [pc, #464]	; (c4e4 <TrackingControl+0x944>)
    c312:	edd3 6a00 	vldr	s13, [r3]
    c316:	eef3 7a04 	vmov.f32	s15, #52	; 0x34
    c31a:	ee66 7aa7 	vmul.f32	s15, s13, s15
    c31e:	ee77 7a27 	vadd.f32	s15, s14, s15
    c322:	4b71      	ldr	r3, [pc, #452]	; (c4e8 <TrackingControl+0x948>)
    c324:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:183
		vc[1] = v_r[1] + K2 * v_r[0] * e_p[1] + K3 * v_r[0] * sin_lut(e_p[2] * (float) RAD_TO_DEGREES);
    c328:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c32a:	3304      	adds	r3, #4
    c32c:	ed93 7a00 	vldr	s14, [r3]
    c330:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c332:	edd3 6a00 	vldr	s13, [r3]
    c336:	eddf 7a6f 	vldr	s15, [pc, #444]	; c4f4 <TrackingControl+0x954>
    c33a:	ee66 6aa7 	vmul.f32	s13, s13, s15
    c33e:	4b69      	ldr	r3, [pc, #420]	; (c4e4 <TrackingControl+0x944>)
    c340:	edd3 7a01 	vldr	s15, [r3, #4]
    c344:	ee66 7aa7 	vmul.f32	s15, s13, s15
    c348:	ee37 8a27 	vadd.f32	s16, s14, s15
    c34c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c34e:	edd3 8a00 	vldr	s17, [r3]
    c352:	4b64      	ldr	r3, [pc, #400]	; (c4e4 <TrackingControl+0x944>)
    c354:	ed93 7a02 	vldr	s14, [r3, #8]
    c358:	eddf 7a65 	vldr	s15, [pc, #404]	; c4f0 <TrackingControl+0x950>
    c35c:	ee67 7a27 	vmul.f32	s15, s14, s15
    c360:	eeb0 0a67 	vmov.f32	s0, s15
    c364:	f000 fd46 	bl	cdf4 <sin_lut>
    c368:	eef0 7a40 	vmov.f32	s15, s0
    c36c:	ee68 7aa7 	vmul.f32	s15, s17, s15
    c370:	ee78 7a27 	vadd.f32	s15, s16, s15
    c374:	4b5c      	ldr	r3, [pc, #368]	; (c4e8 <TrackingControl+0x948>)
    c376:	edc3 7a01 	vstr	s15, [r3, #4]
    c37a:	e04a      	b.n	c412 <TrackingControl+0x872>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:186
	}
	else{
		vc[0] = v_r[0] * cos_lut(e_p[2] * (float) RAD_TO_DEGREES) + K1_CURVE * e_p[0];
    c37c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c37e:	ed93 8a00 	vldr	s16, [r3]
    c382:	4b58      	ldr	r3, [pc, #352]	; (c4e4 <TrackingControl+0x944>)
    c384:	ed93 7a02 	vldr	s14, [r3, #8]
    c388:	eddf 7a59 	vldr	s15, [pc, #356]	; c4f0 <TrackingControl+0x950>
    c38c:	ee67 7a27 	vmul.f32	s15, s14, s15
    c390:	eeb0 0a67 	vmov.f32	s0, s15
    c394:	f000 fdb6 	bl	cf04 <cos_lut>
    c398:	eef0 7a40 	vmov.f32	s15, s0
    c39c:	ee28 7a27 	vmul.f32	s14, s16, s15
    c3a0:	4b50      	ldr	r3, [pc, #320]	; (c4e4 <TrackingControl+0x944>)
    c3a2:	edd3 6a00 	vldr	s13, [r3]
    c3a6:	eddf 7a54 	vldr	s15, [pc, #336]	; c4f8 <TrackingControl+0x958>
    c3aa:	ee66 7aa7 	vmul.f32	s15, s13, s15
    c3ae:	ee77 7a27 	vadd.f32	s15, s14, s15
    c3b2:	4b4d      	ldr	r3, [pc, #308]	; (c4e8 <TrackingControl+0x948>)
    c3b4:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:187
		vc[1] = v_r[1] + K2_CURVE * v_r[0] * e_p[1] + K3_CURVE * v_r[0] * sin_lut(e_p[2] * (float) RAD_TO_DEGREES);
    c3b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c3ba:	3304      	adds	r3, #4
    c3bc:	ed93 7a00 	vldr	s14, [r3]
    c3c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c3c2:	edd3 6a00 	vldr	s13, [r3]
    c3c6:	eef3 7a0e 	vmov.f32	s15, #62	; 0x3e
    c3ca:	ee66 6aa7 	vmul.f32	s13, s13, s15
    c3ce:	4b45      	ldr	r3, [pc, #276]	; (c4e4 <TrackingControl+0x944>)
    c3d0:	edd3 7a01 	vldr	s15, [r3, #4]
    c3d4:	ee66 7aa7 	vmul.f32	s15, s13, s15
    c3d8:	ee37 8a27 	vadd.f32	s16, s14, s15
    c3dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    c3de:	ed93 7a00 	vldr	s14, [r3]
    c3e2:	eddf 7a46 	vldr	s15, [pc, #280]	; c4fc <TrackingControl+0x95c>
    c3e6:	ee67 8a27 	vmul.f32	s17, s14, s15
    c3ea:	4b3e      	ldr	r3, [pc, #248]	; (c4e4 <TrackingControl+0x944>)
    c3ec:	ed93 7a02 	vldr	s14, [r3, #8]
    c3f0:	eddf 7a3f 	vldr	s15, [pc, #252]	; c4f0 <TrackingControl+0x950>
    c3f4:	ee67 7a27 	vmul.f32	s15, s14, s15
    c3f8:	eeb0 0a67 	vmov.f32	s0, s15
    c3fc:	f000 fcfa 	bl	cdf4 <sin_lut>
    c400:	eef0 7a40 	vmov.f32	s15, s0
    c404:	ee68 7aa7 	vmul.f32	s15, s17, s15
    c408:	ee78 7a27 	vadd.f32	s15, s16, s15
    c40c:	4b36      	ldr	r3, [pc, #216]	; (c4e8 <TrackingControl+0x948>)
    c40e:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:191
	}

	/* vc derivative calculation */
	for (i = 0; i < 2; i++) {
    c412:	4b2e      	ldr	r3, [pc, #184]	; (c4cc <TrackingControl+0x92c>)
    c414:	2200      	movs	r2, #0
    c416:	601a      	str	r2, [r3, #0]
    c418:	e01f      	b.n	c45a <TrackingControl+0x8ba>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:192 (discriminator 2)
		vc_dot[i] = (vc[i] - vc_prev[i]) * DT_INVERSE;
    c41a:	4b2c      	ldr	r3, [pc, #176]	; (c4cc <TrackingControl+0x92c>)
    c41c:	681b      	ldr	r3, [r3, #0]
    c41e:	009b      	lsls	r3, r3, #2
    c420:	6cba      	ldr	r2, [r7, #72]	; 0x48
    c422:	4413      	add	r3, r2
    c424:	4a29      	ldr	r2, [pc, #164]	; (c4cc <TrackingControl+0x92c>)
    c426:	6812      	ldr	r2, [r2, #0]
    c428:	492f      	ldr	r1, [pc, #188]	; (c4e8 <TrackingControl+0x948>)
    c42a:	0092      	lsls	r2, r2, #2
    c42c:	440a      	add	r2, r1
    c42e:	ed92 7a00 	vldr	s14, [r2]
    c432:	4a26      	ldr	r2, [pc, #152]	; (c4cc <TrackingControl+0x92c>)
    c434:	6812      	ldr	r2, [r2, #0]
    c436:	492d      	ldr	r1, [pc, #180]	; (c4ec <TrackingControl+0x94c>)
    c438:	0092      	lsls	r2, r2, #2
    c43a:	440a      	add	r2, r1
    c43c:	edd2 7a00 	vldr	s15, [r2]
    c440:	ee37 7a67 	vsub.f32	s14, s14, s15
    c444:	eddf 7a2e 	vldr	s15, [pc, #184]	; c500 <TrackingControl+0x960>
    c448:	ee67 7a27 	vmul.f32	s15, s14, s15
    c44c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:191 (discriminator 2)
		vc[0] = v_r[0] * cos_lut(e_p[2] * (float) RAD_TO_DEGREES) + K1_CURVE * e_p[0];
		vc[1] = v_r[1] + K2_CURVE * v_r[0] * e_p[1] + K3_CURVE * v_r[0] * sin_lut(e_p[2] * (float) RAD_TO_DEGREES);
	}

	/* vc derivative calculation */
	for (i = 0; i < 2; i++) {
    c450:	4b1e      	ldr	r3, [pc, #120]	; (c4cc <TrackingControl+0x92c>)
    c452:	681b      	ldr	r3, [r3, #0]
    c454:	1c5a      	adds	r2, r3, #1
    c456:	4b1d      	ldr	r3, [pc, #116]	; (c4cc <TrackingControl+0x92c>)
    c458:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:191 (discriminator 1)
    c45a:	4b1c      	ldr	r3, [pc, #112]	; (c4cc <TrackingControl+0x92c>)
    c45c:	681b      	ldr	r3, [r3, #0]
    c45e:	2b01      	cmp	r3, #1
    c460:	dddb      	ble.n	c41a <TrackingControl+0x87a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:196
		vc_dot[i] = (vc[i] - vc_prev[i]) * DT_INVERSE;
	}
	
	/* proposed nonlinear feedback acceleration control input */
	for (i = 0; i < 2; i++) {
    c462:	4b1a      	ldr	r3, [pc, #104]	; (c4cc <TrackingControl+0x92c>)
    c464:	2200      	movs	r2, #0
    c466:	601a      	str	r2, [r3, #0]
    c468:	e094      	b.n	c594 <TrackingControl+0x9f4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:197
		sum = 0;
    c46a:	4b1b      	ldr	r3, [pc, #108]	; (c4d8 <TrackingControl+0x938>)
    c46c:	f04f 0200 	mov.w	r2, #0
    c470:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:198
		for (k = 0; k < 2; k++) {
    c472:	4b1a      	ldr	r3, [pc, #104]	; (c4dc <TrackingControl+0x93c>)
    c474:	2200      	movs	r2, #0
    c476:	601a      	str	r2, [r3, #0]
    c478:	e070      	b.n	c55c <TrackingControl+0x9bc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:199
			if(SegmentType){
    c47a:	7bfb      	ldrb	r3, [r7, #15]
    c47c:	2b00      	cmp	r3, #0
    c47e:	d043      	beq.n	c508 <TrackingControl+0x968>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:200
				sum = sum + (K4eye[i][k] * (vc[k] - v_est[k]));
    c480:	4b12      	ldr	r3, [pc, #72]	; (c4cc <TrackingControl+0x92c>)
    c482:	6819      	ldr	r1, [r3, #0]
    c484:	4b15      	ldr	r3, [pc, #84]	; (c4dc <TrackingControl+0x93c>)
    c486:	681b      	ldr	r3, [r3, #0]
    c488:	4a1e      	ldr	r2, [pc, #120]	; (c504 <TrackingControl+0x964>)
    c48a:	0049      	lsls	r1, r1, #1
    c48c:	440b      	add	r3, r1
    c48e:	009b      	lsls	r3, r3, #2
    c490:	4413      	add	r3, r2
    c492:	ed93 7a00 	vldr	s14, [r3]
    c496:	4b11      	ldr	r3, [pc, #68]	; (c4dc <TrackingControl+0x93c>)
    c498:	681b      	ldr	r3, [r3, #0]
    c49a:	4a13      	ldr	r2, [pc, #76]	; (c4e8 <TrackingControl+0x948>)
    c49c:	009b      	lsls	r3, r3, #2
    c49e:	4413      	add	r3, r2
    c4a0:	edd3 6a00 	vldr	s13, [r3]
    c4a4:	4b0d      	ldr	r3, [pc, #52]	; (c4dc <TrackingControl+0x93c>)
    c4a6:	681b      	ldr	r3, [r3, #0]
    c4a8:	009b      	lsls	r3, r3, #2
    c4aa:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    c4ac:	4413      	add	r3, r2
    c4ae:	edd3 7a00 	vldr	s15, [r3]
    c4b2:	ee76 7ae7 	vsub.f32	s15, s13, s15
    c4b6:	ee27 7a27 	vmul.f32	s14, s14, s15
    c4ba:	4b07      	ldr	r3, [pc, #28]	; (c4d8 <TrackingControl+0x938>)
    c4bc:	edd3 7a00 	vldr	s15, [r3]
    c4c0:	ee77 7a27 	vadd.f32	s15, s14, s15
    c4c4:	4b04      	ldr	r3, [pc, #16]	; (c4d8 <TrackingControl+0x938>)
    c4c6:	edc3 7a00 	vstr	s15, [r3]
    c4ca:	e042      	b.n	c552 <TrackingControl+0x9b2>
    c4cc:	20023674 	.word	0x20023674
    c4d0:	20000afc 	.word	0x20000afc
    c4d4:	3a03126f 	.word	0x3a03126f
    c4d8:	2002366c 	.word	0x2002366c
    c4dc:	20023670 	.word	0x20023670
    c4e0:	20000060 	.word	0x20000060
    c4e4:	20000b08 	.word	0x20000b08
    c4e8:	20000b14 	.word	0x20000b14
    c4ec:	20000b1c 	.word	0x20000b1c
    c4f0:	42652ee1 	.word	0x42652ee1
    c4f4:	43c80000 	.word	0x43c80000
    c4f8:	42480000 	.word	0x42480000
    c4fc:	420c0000 	.word	0x420c0000
    c500:	44fa0000 	.word	0x44fa0000
    c504:	0000deec 	.word	0x0000deec
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:202
			}else{
				sum = sum + (K4eyeCurve[i][k] * (vc[k] - v_est[k]));
    c508:	4b71      	ldr	r3, [pc, #452]	; (c6d0 <TrackingControl+0xb30>)
    c50a:	6819      	ldr	r1, [r3, #0]
    c50c:	4b71      	ldr	r3, [pc, #452]	; (c6d4 <TrackingControl+0xb34>)
    c50e:	681b      	ldr	r3, [r3, #0]
    c510:	4a71      	ldr	r2, [pc, #452]	; (c6d8 <TrackingControl+0xb38>)
    c512:	0049      	lsls	r1, r1, #1
    c514:	440b      	add	r3, r1
    c516:	009b      	lsls	r3, r3, #2
    c518:	4413      	add	r3, r2
    c51a:	ed93 7a00 	vldr	s14, [r3]
    c51e:	4b6d      	ldr	r3, [pc, #436]	; (c6d4 <TrackingControl+0xb34>)
    c520:	681b      	ldr	r3, [r3, #0]
    c522:	4a6e      	ldr	r2, [pc, #440]	; (c6dc <TrackingControl+0xb3c>)
    c524:	009b      	lsls	r3, r3, #2
    c526:	4413      	add	r3, r2
    c528:	edd3 6a00 	vldr	s13, [r3]
    c52c:	4b69      	ldr	r3, [pc, #420]	; (c6d4 <TrackingControl+0xb34>)
    c52e:	681b      	ldr	r3, [r3, #0]
    c530:	009b      	lsls	r3, r3, #2
    c532:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    c534:	4413      	add	r3, r2
    c536:	edd3 7a00 	vldr	s15, [r3]
    c53a:	ee76 7ae7 	vsub.f32	s15, s13, s15
    c53e:	ee27 7a27 	vmul.f32	s14, s14, s15
    c542:	4b67      	ldr	r3, [pc, #412]	; (c6e0 <TrackingControl+0xb40>)
    c544:	edd3 7a00 	vldr	s15, [r3]
    c548:	ee77 7a27 	vadd.f32	s15, s14, s15
    c54c:	4b64      	ldr	r3, [pc, #400]	; (c6e0 <TrackingControl+0xb40>)
    c54e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:198
	}
	
	/* proposed nonlinear feedback acceleration control input */
	for (i = 0; i < 2; i++) {
		sum = 0;
		for (k = 0; k < 2; k++) {
    c552:	4b60      	ldr	r3, [pc, #384]	; (c6d4 <TrackingControl+0xb34>)
    c554:	681b      	ldr	r3, [r3, #0]
    c556:	1c5a      	adds	r2, r3, #1
    c558:	4b5e      	ldr	r3, [pc, #376]	; (c6d4 <TrackingControl+0xb34>)
    c55a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:198 (discriminator 1)
    c55c:	4b5d      	ldr	r3, [pc, #372]	; (c6d4 <TrackingControl+0xb34>)
    c55e:	681b      	ldr	r3, [r3, #0]
    c560:	2b01      	cmp	r3, #1
    c562:	dd8a      	ble.n	c47a <TrackingControl+0x8da>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:205
				sum = sum + (K4eye[i][k] * (vc[k] - v_est[k]));
			}else{
				sum = sum + (K4eyeCurve[i][k] * (vc[k] - v_est[k]));
			}
		}
		u[i] = sum + vc_dot[i];
    c564:	4b5a      	ldr	r3, [pc, #360]	; (c6d0 <TrackingControl+0xb30>)
    c566:	681b      	ldr	r3, [r3, #0]
    c568:	4a59      	ldr	r2, [pc, #356]	; (c6d0 <TrackingControl+0xb30>)
    c56a:	6812      	ldr	r2, [r2, #0]
    c56c:	0092      	lsls	r2, r2, #2
    c56e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
    c570:	440a      	add	r2, r1
    c572:	ed92 7a00 	vldr	s14, [r2]
    c576:	4a5a      	ldr	r2, [pc, #360]	; (c6e0 <TrackingControl+0xb40>)
    c578:	edd2 7a00 	vldr	s15, [r2]
    c57c:	ee77 7a27 	vadd.f32	s15, s14, s15
    c580:	4a58      	ldr	r2, [pc, #352]	; (c6e4 <TrackingControl+0xb44>)
    c582:	009b      	lsls	r3, r3, #2
    c584:	4413      	add	r3, r2
    c586:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:196
	for (i = 0; i < 2; i++) {
		vc_dot[i] = (vc[i] - vc_prev[i]) * DT_INVERSE;
	}
	
	/* proposed nonlinear feedback acceleration control input */
	for (i = 0; i < 2; i++) {
    c58a:	4b51      	ldr	r3, [pc, #324]	; (c6d0 <TrackingControl+0xb30>)
    c58c:	681b      	ldr	r3, [r3, #0]
    c58e:	1c5a      	adds	r2, r3, #1
    c590:	4b4f      	ldr	r3, [pc, #316]	; (c6d0 <TrackingControl+0xb30>)
    c592:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:196 (discriminator 1)
    c594:	4b4e      	ldr	r3, [pc, #312]	; (c6d0 <TrackingControl+0xb30>)
    c596:	681b      	ldr	r3, [r3, #0]
    c598:	2b01      	cmp	r3, #1
    c59a:	f77f af66 	ble.w	c46a <TrackingControl+0x8ca>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:209
		}
		u[i] = sum + vc_dot[i];
	}
	/* input vector (torque) */
	// ToDo: Bbar^-1 and Mbar are constant -> could be merged.
	for (i = 0; i < 2; i++) {
    c59e:	4b4c      	ldr	r3, [pc, #304]	; (c6d0 <TrackingControl+0xb30>)
    c5a0:	2200      	movs	r2, #0
    c5a2:	601a      	str	r2, [r3, #0]
    c5a4:	e039      	b.n	c61a <TrackingControl+0xa7a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:210
		sum = 0;
    c5a6:	4b4e      	ldr	r3, [pc, #312]	; (c6e0 <TrackingControl+0xb40>)
    c5a8:	f04f 0200 	mov.w	r2, #0
    c5ac:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:211
		for (k = 0; k < 2; k++) {
    c5ae:	4b49      	ldr	r3, [pc, #292]	; (c6d4 <TrackingControl+0xb34>)
    c5b0:	2200      	movs	r2, #0
    c5b2:	601a      	str	r2, [r3, #0]
    c5b4:	e020      	b.n	c5f8 <TrackingControl+0xa58>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:212 (discriminator 2)
			sum = sum + (Mbar[i][k] * u[k]);
    c5b6:	4b46      	ldr	r3, [pc, #280]	; (c6d0 <TrackingControl+0xb30>)
    c5b8:	6819      	ldr	r1, [r3, #0]
    c5ba:	4b46      	ldr	r3, [pc, #280]	; (c6d4 <TrackingControl+0xb34>)
    c5bc:	681b      	ldr	r3, [r3, #0]
    c5be:	4a4a      	ldr	r2, [pc, #296]	; (c6e8 <TrackingControl+0xb48>)
    c5c0:	0049      	lsls	r1, r1, #1
    c5c2:	440b      	add	r3, r1
    c5c4:	009b      	lsls	r3, r3, #2
    c5c6:	4413      	add	r3, r2
    c5c8:	ed93 7a00 	vldr	s14, [r3]
    c5cc:	4b41      	ldr	r3, [pc, #260]	; (c6d4 <TrackingControl+0xb34>)
    c5ce:	681b      	ldr	r3, [r3, #0]
    c5d0:	4a44      	ldr	r2, [pc, #272]	; (c6e4 <TrackingControl+0xb44>)
    c5d2:	009b      	lsls	r3, r3, #2
    c5d4:	4413      	add	r3, r2
    c5d6:	edd3 7a00 	vldr	s15, [r3]
    c5da:	ee27 7a27 	vmul.f32	s14, s14, s15
    c5de:	4b40      	ldr	r3, [pc, #256]	; (c6e0 <TrackingControl+0xb40>)
    c5e0:	edd3 7a00 	vldr	s15, [r3]
    c5e4:	ee77 7a27 	vadd.f32	s15, s14, s15
    c5e8:	4b3d      	ldr	r3, [pc, #244]	; (c6e0 <TrackingControl+0xb40>)
    c5ea:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:211 (discriminator 2)
	}
	/* input vector (torque) */
	// ToDo: Bbar^-1 and Mbar are constant -> could be merged.
	for (i = 0; i < 2; i++) {
		sum = 0;
		for (k = 0; k < 2; k++) {
    c5ee:	4b39      	ldr	r3, [pc, #228]	; (c6d4 <TrackingControl+0xb34>)
    c5f0:	681b      	ldr	r3, [r3, #0]
    c5f2:	1c5a      	adds	r2, r3, #1
    c5f4:	4b37      	ldr	r3, [pc, #220]	; (c6d4 <TrackingControl+0xb34>)
    c5f6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:211 (discriminator 1)
    c5f8:	4b36      	ldr	r3, [pc, #216]	; (c6d4 <TrackingControl+0xb34>)
    c5fa:	681b      	ldr	r3, [r3, #0]
    c5fc:	2b01      	cmp	r3, #1
    c5fe:	ddda      	ble.n	c5b6 <TrackingControl+0xa16>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:214
			sum = sum + (Mbar[i][k] * u[k]);
		}
		MbarTimesU[i] = sum;
    c600:	4b33      	ldr	r3, [pc, #204]	; (c6d0 <TrackingControl+0xb30>)
    c602:	681b      	ldr	r3, [r3, #0]
    c604:	4a36      	ldr	r2, [pc, #216]	; (c6e0 <TrackingControl+0xb40>)
    c606:	6812      	ldr	r2, [r2, #0]
    c608:	4938      	ldr	r1, [pc, #224]	; (c6ec <TrackingControl+0xb4c>)
    c60a:	009b      	lsls	r3, r3, #2
    c60c:	440b      	add	r3, r1
    c60e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:209
		}
		u[i] = sum + vc_dot[i];
	}
	/* input vector (torque) */
	// ToDo: Bbar^-1 and Mbar are constant -> could be merged.
	for (i = 0; i < 2; i++) {
    c610:	4b2f      	ldr	r3, [pc, #188]	; (c6d0 <TrackingControl+0xb30>)
    c612:	681b      	ldr	r3, [r3, #0]
    c614:	1c5a      	adds	r2, r3, #1
    c616:	4b2e      	ldr	r3, [pc, #184]	; (c6d0 <TrackingControl+0xb30>)
    c618:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:209 (discriminator 1)
    c61a:	4b2d      	ldr	r3, [pc, #180]	; (c6d0 <TrackingControl+0xb30>)
    c61c:	681b      	ldr	r3, [r3, #0]
    c61e:	2b01      	cmp	r3, #1
    c620:	ddc1      	ble.n	c5a6 <TrackingControl+0xa06>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:216
		for (k = 0; k < 2; k++) {
			sum = sum + (Mbar[i][k] * u[k]);
		}
		MbarTimesU[i] = sum;
	}
	for (i = 0; i < 2; i++) {
    c622:	4b2b      	ldr	r3, [pc, #172]	; (c6d0 <TrackingControl+0xb30>)
    c624:	2200      	movs	r2, #0
    c626:	601a      	str	r2, [r3, #0]
    c628:	e03f      	b.n	c6aa <TrackingControl+0xb0a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:217
		sum = 0;
    c62a:	4b2d      	ldr	r3, [pc, #180]	; (c6e0 <TrackingControl+0xb40>)
    c62c:	f04f 0200 	mov.w	r2, #0
    c630:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:218
		for (k = 0; k < 2; k++) {
    c632:	4b28      	ldr	r3, [pc, #160]	; (c6d4 <TrackingControl+0xb34>)
    c634:	2200      	movs	r2, #0
    c636:	601a      	str	r2, [r3, #0]
    c638:	e020      	b.n	c67c <TrackingControl+0xadc>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:219 (discriminator 2)
			sum = sum + (BbarInv[i][k] * MbarTimesU[k]);
    c63a:	4b25      	ldr	r3, [pc, #148]	; (c6d0 <TrackingControl+0xb30>)
    c63c:	6819      	ldr	r1, [r3, #0]
    c63e:	4b25      	ldr	r3, [pc, #148]	; (c6d4 <TrackingControl+0xb34>)
    c640:	681b      	ldr	r3, [r3, #0]
    c642:	4a2b      	ldr	r2, [pc, #172]	; (c6f0 <TrackingControl+0xb50>)
    c644:	0049      	lsls	r1, r1, #1
    c646:	440b      	add	r3, r1
    c648:	009b      	lsls	r3, r3, #2
    c64a:	4413      	add	r3, r2
    c64c:	ed93 7a00 	vldr	s14, [r3]
    c650:	4b20      	ldr	r3, [pc, #128]	; (c6d4 <TrackingControl+0xb34>)
    c652:	681b      	ldr	r3, [r3, #0]
    c654:	4a25      	ldr	r2, [pc, #148]	; (c6ec <TrackingControl+0xb4c>)
    c656:	009b      	lsls	r3, r3, #2
    c658:	4413      	add	r3, r2
    c65a:	edd3 7a00 	vldr	s15, [r3]
    c65e:	ee27 7a27 	vmul.f32	s14, s14, s15
    c662:	4b1f      	ldr	r3, [pc, #124]	; (c6e0 <TrackingControl+0xb40>)
    c664:	edd3 7a00 	vldr	s15, [r3]
    c668:	ee77 7a27 	vadd.f32	s15, s14, s15
    c66c:	4b1c      	ldr	r3, [pc, #112]	; (c6e0 <TrackingControl+0xb40>)
    c66e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:218 (discriminator 2)
		}
		MbarTimesU[i] = sum;
	}
	for (i = 0; i < 2; i++) {
		sum = 0;
		for (k = 0; k < 2; k++) {
    c672:	4b18      	ldr	r3, [pc, #96]	; (c6d4 <TrackingControl+0xb34>)
    c674:	681b      	ldr	r3, [r3, #0]
    c676:	1c5a      	adds	r2, r3, #1
    c678:	4b16      	ldr	r3, [pc, #88]	; (c6d4 <TrackingControl+0xb34>)
    c67a:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:218 (discriminator 1)
    c67c:	4b15      	ldr	r3, [pc, #84]	; (c6d4 <TrackingControl+0xb34>)
    c67e:	681b      	ldr	r3, [r3, #0]
    c680:	2b01      	cmp	r3, #1
    c682:	ddda      	ble.n	c63a <TrackingControl+0xa9a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:221
			sum = sum + (BbarInv[i][k] * MbarTimesU[k]);
		}
		M[i] = sum * 1000; // Nm to mNm conversion as defined in control structure
    c684:	4b12      	ldr	r3, [pc, #72]	; (c6d0 <TrackingControl+0xb30>)
    c686:	681b      	ldr	r3, [r3, #0]
    c688:	009b      	lsls	r3, r3, #2
    c68a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
    c68c:	4413      	add	r3, r2
    c68e:	4a14      	ldr	r2, [pc, #80]	; (c6e0 <TrackingControl+0xb40>)
    c690:	ed92 7a00 	vldr	s14, [r2]
    c694:	eddf 7a17 	vldr	s15, [pc, #92]	; c6f4 <TrackingControl+0xb54>
    c698:	ee67 7a27 	vmul.f32	s15, s14, s15
    c69c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:216
		for (k = 0; k < 2; k++) {
			sum = sum + (Mbar[i][k] * u[k]);
		}
		MbarTimesU[i] = sum;
	}
	for (i = 0; i < 2; i++) {
    c6a0:	4b0b      	ldr	r3, [pc, #44]	; (c6d0 <TrackingControl+0xb30>)
    c6a2:	681b      	ldr	r3, [r3, #0]
    c6a4:	1c5a      	adds	r2, r3, #1
    c6a6:	4b0a      	ldr	r3, [pc, #40]	; (c6d0 <TrackingControl+0xb30>)
    c6a8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:216 (discriminator 1)
    c6aa:	4b09      	ldr	r3, [pc, #36]	; (c6d0 <TrackingControl+0xb30>)
    c6ac:	681b      	ldr	r3, [r3, #0]
    c6ae:	2b01      	cmp	r3, #1
    c6b0:	ddbb      	ble.n	c62a <TrackingControl+0xa8a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:259

			step++;
		}
	#endif
	// assign variables for logging
	vc_logging[0] = vc[0];
    c6b2:	4b0a      	ldr	r3, [pc, #40]	; (c6dc <TrackingControl+0xb3c>)
    c6b4:	681a      	ldr	r2, [r3, #0]
    c6b6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    c6b8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:260
	vc_logging[1] = vc[1];
    c6ba:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    c6bc:	3304      	adds	r3, #4
    c6be:	4a07      	ldr	r2, [pc, #28]	; (c6dc <TrackingControl+0xb3c>)
    c6c0:	6852      	ldr	r2, [r2, #4]
    c6c2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:261
	return;
    c6c4:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/TrackingControl.c:262
}
    c6c6:	3714      	adds	r7, #20
    c6c8:	46bd      	mov	sp, r7
    c6ca:	ecbd 8b02 	vpop	{d8}
    c6ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c6d0:	20023674 	.word	0x20023674
    c6d4:	20023670 	.word	0x20023670
    c6d8:	0000defc 	.word	0x0000defc
    c6dc:	20000b14 	.word	0x20000b14
    c6e0:	2002366c 	.word	0x2002366c
    c6e4:	20000b24 	.word	0x20000b24
    c6e8:	0000df0c 	.word	0x0000df0c
    c6ec:	20000b2c 	.word	0x20000b2c
    c6f0:	0000df1c 	.word	0x0000df1c
    c6f4:	447a0000 	.word	0x447a0000

0000c6f8 <VelocityEstimation>:
VelocityEstimation():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:43
		dataCols = cols;
	}
#endif
	void VelocityEstimation(bool *NewStraightSegment, bool wallRightDisappeared, bool wallLeftDisappeared, float *wallCenterDivergence, float *weightDistanceSensor,
			float *theta, float v_est[2], float I_mot_ist[2], Distance_sensors *distancePointer, Distance_sensors_LP_filtered *distanceLP,
			float *x_IMU_dot_test, float *x_enc_test, float gyroXY[2], float *u_bat_test) {
    c6f8:	b580      	push	{r7, lr}
    c6fa:	b08e      	sub	sp, #56	; 0x38
    c6fc:	af0a      	add	r7, sp, #40	; 0x28
    c6fe:	60f8      	str	r0, [r7, #12]
    c700:	607b      	str	r3, [r7, #4]
    c702:	460b      	mov	r3, r1
    c704:	72fb      	strb	r3, [r7, #11]
    c706:	4613      	mov	r3, r2
    c708:	72bb      	strb	r3, [r7, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:50
		static float imu_data[2] = { 0, 0 };
		static float x_enc[2] = { 0, 0 };

		/* Units convention according to driving control structure */
		#if KDS_BUILD
			ReadDistance(distancePointer, I_mot_ist, u_bat_test);
    c70a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
    c70c:	6a79      	ldr	r1, [r7, #36]	; 0x24
    c70e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    c710:	f000 faac 	bl	cc6c <ReadDistance>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:51
			I_LED_R_ClrVal();I_LED_L_ClrVal();I_LED_MR_ClrVal();I_LED_ML_ClrVal(); // turn IR leds off
    c714:	4b1e      	ldr	r3, [pc, #120]	; (c790 <VelocityEstimation+0x98>)
    c716:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
    c71a:	4618      	mov	r0, r3
    c71c:	f7fa fd30 	bl	7180 <BitIoLdd38_ClrVal>
    c720:	4b1b      	ldr	r3, [pc, #108]	; (c790 <VelocityEstimation+0x98>)
    c722:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    c726:	4618      	mov	r0, r3
    c728:	f7fa fc0a 	bl	6f40 <BitIoLdd35_ClrVal>
    c72c:	4b18      	ldr	r3, [pc, #96]	; (c790 <VelocityEstimation+0x98>)
    c72e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
    c732:	4618      	mov	r0, r3
    c734:	f7fa fcc4 	bl	70c0 <BitIoLdd37_ClrVal>
    c738:	4b15      	ldr	r3, [pc, #84]	; (c790 <VelocityEstimation+0x98>)
    c73a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    c73e:	4618      	mov	r0, r3
    c740:	f7fa fc5e 	bl	7000 <BitIoLdd36_ClrVal>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:52
			ReadIMU(imu_data, gyroXY);
    c744:	4813      	ldr	r0, [pc, #76]	; (c794 <VelocityEstimation+0x9c>)
    c746:	6bb9      	ldr	r1, [r7, #56]	; 0x38
    c748:	f000 fa56 	bl	cbf8 <ReadIMU>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:53
			ReadEncoder(x_enc);
    c74c:	4812      	ldr	r0, [pc, #72]	; (c798 <VelocityEstimation+0xa0>)
    c74e:	f000 fa77 	bl	cc40 <ReadEncoder>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:55

			VelocityCalculation(NewStraightSegment, wallRightDisappeared, wallLeftDisappeared, wallCenterDivergence, weightDistanceSensor,
    c752:	7afa      	ldrb	r2, [r7, #11]
    c754:	7abb      	ldrb	r3, [r7, #10]
    c756:	69b9      	ldr	r1, [r7, #24]
    c758:	9100      	str	r1, [sp, #0]
    c75a:	69f9      	ldr	r1, [r7, #28]
    c75c:	9101      	str	r1, [sp, #4]
    c75e:	6a39      	ldr	r1, [r7, #32]
    c760:	9102      	str	r1, [sp, #8]
    c762:	490c      	ldr	r1, [pc, #48]	; (c794 <VelocityEstimation+0x9c>)
    c764:	9103      	str	r1, [sp, #12]
    c766:	490c      	ldr	r1, [pc, #48]	; (c798 <VelocityEstimation+0xa0>)
    c768:	9104      	str	r1, [sp, #16]
    c76a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    c76c:	9105      	str	r1, [sp, #20]
    c76e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
    c770:	9106      	str	r1, [sp, #24]
    c772:	6b39      	ldr	r1, [r7, #48]	; 0x30
    c774:	9107      	str	r1, [sp, #28]
    c776:	6b79      	ldr	r1, [r7, #52]	; 0x34
    c778:	9108      	str	r1, [sp, #32]
    c77a:	68f8      	ldr	r0, [r7, #12]
    c77c:	4611      	mov	r1, r2
    c77e:	461a      	mov	r2, r3
    c780:	687b      	ldr	r3, [r7, #4]
    c782:	f000 f80d 	bl	c7a0 <VelocityCalculation>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:82
					v_est[0] = 0;
					v_est[1] = 0;
				}
			}
		#endif
	return;
    c786:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:83
	}
    c788:	3710      	adds	r7, #16
    c78a:	46bd      	mov	sp, r7
    c78c:	bd80      	pop	{r7, pc}
    c78e:	bf00      	nop
    c790:	20000480 	.word	0x20000480
    c794:	20000b44 	.word	0x20000b44
    c798:	20000b4c 	.word	0x20000b4c
$d():
    c79c:	00000000 	.word	0x00000000

0000c7a0 <VelocityCalculation>:
VelocityCalculation():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:88

	void VelocityCalculation(bool *NewStraightSegment, bool wallRightDisappeared, bool wallLeftDisappeared, float *wallCenterDivergence, float *weightDistanceSensor,
			float *theta, float v_est[2], float imu_data[2], float x_enc[2], Distance_sensors *distancePointer,
			Distance_sensors_LP_filtered *distanceLP,
			float *x_IMU_dot_test, float *x_enc_test) {
    c7a0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
    c7a4:	b084      	sub	sp, #16
    c7a6:	af00      	add	r7, sp, #0
    c7a8:	60f8      	str	r0, [r7, #12]
    c7aa:	607b      	str	r3, [r7, #4]
    c7ac:	460b      	mov	r3, r1
    c7ae:	72fb      	strb	r3, [r7, #11]
    c7b0:	4613      	mov	r3, r2
    c7b2:	72bb      	strb	r3, [r7, #10]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:119
		static float theta_dot_IMU_est = 0;
		static float IMU_angular_velocity_prev = 0;

		static float shorterDistance = 0;

		if(*NewStraightSegment == true){
    c7b4:	68fb      	ldr	r3, [r7, #12]
    c7b6:	781b      	ldrb	r3, [r3, #0]
    c7b8:	2b00      	cmp	r3, #0
    c7ba:	d01e      	beq.n	c7fa <VelocityCalculation+0x5a>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:120
			distanceLP->Right = distancePointer->SideRight;
    c7bc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c7be:	681a      	ldr	r2, [r3, #0]
    c7c0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c7c2:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:121
			distanceLP->Left = distancePointer->SideLeft;
    c7c4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c7c6:	685a      	ldr	r2, [r3, #4]
    c7c8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c7ca:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:122
			distanceLP->SlopedRight = distancePointer->SideSlopedRight;
    c7cc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c7ce:	7a1b      	ldrb	r3, [r3, #8]
    c7d0:	ee07 3a10 	vmov	s14, r3
    c7d4:	eef8 7a47 	vcvt.f32.u32	s15, s14
    c7d8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c7da:	edc3 7a02 	vstr	s15, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:123
			distanceLP->SlopedLeft = distancePointer->SideSlopedLeft;
    c7de:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c7e0:	7a5b      	ldrb	r3, [r3, #9]
    c7e2:	ee07 3a10 	vmov	s14, r3
    c7e6:	eef8 7a47 	vcvt.f32.u32	s15, s14
    c7ea:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c7ec:	edc3 7a03 	vstr	s15, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:124
			*wallCenterDivergence = 0;
    c7f0:	687b      	ldr	r3, [r7, #4]
    c7f2:	f04f 0200 	mov.w	r2, #0
    c7f6:	601a      	str	r2, [r3, #0]
    c7f8:	e051      	b.n	c89e <VelocityCalculation+0xfe>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:127
		}else{
			/* LP filtering of distance sensors */
			distanceLP->Right = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Right +
    c7fa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c7fc:	ed93 7a00 	vldr	s14, [r3]
    c800:	eddf 7a97 	vldr	s15, [pc, #604]	; ca60 <VelocityCalculation+0x2c0>
    c804:	ee27 7a27 	vmul.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:128
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideRight);
    c808:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c80a:	edd3 6a00 	vldr	s13, [r3]
    c80e:	eddf 7a95 	vldr	s15, [pc, #596]	; ca64 <VelocityCalculation+0x2c4>
    c812:	ee66 7aa7 	vmul.f32	s15, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:127
			distanceLP->SlopedRight = distancePointer->SideSlopedRight;
			distanceLP->SlopedLeft = distancePointer->SideSlopedLeft;
			*wallCenterDivergence = 0;
		}else{
			/* LP filtering of distance sensors */
			distanceLP->Right = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Right +
    c816:	ee77 7a27 	vadd.f32	s15, s14, s15
    c81a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c81c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:129
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideRight);
			distanceLP->Left = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Left +
    c820:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c822:	ed93 7a01 	vldr	s14, [r3, #4]
    c826:	eddf 7a8e 	vldr	s15, [pc, #568]	; ca60 <VelocityCalculation+0x2c0>
    c82a:	ee27 7a27 	vmul.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:130
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideLeft);
    c82e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c830:	edd3 6a01 	vldr	s13, [r3, #4]
    c834:	eddf 7a8b 	vldr	s15, [pc, #556]	; ca64 <VelocityCalculation+0x2c4>
    c838:	ee66 7aa7 	vmul.f32	s15, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:129
			*wallCenterDivergence = 0;
		}else{
			/* LP filtering of distance sensors */
			distanceLP->Right = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Right +
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideRight);
			distanceLP->Left = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Left +
    c83c:	ee77 7a27 	vadd.f32	s15, s14, s15
    c840:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c842:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:131
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideLeft);
			distanceLP->SlopedRight = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->SlopedRight +
    c846:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c848:	ed93 7a02 	vldr	s14, [r3, #8]
    c84c:	eddf 7a84 	vldr	s15, [pc, #528]	; ca60 <VelocityCalculation+0x2c0>
    c850:	ee27 7a27 	vmul.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:132
					(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideSlopedRight);
    c854:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c856:	7a1b      	ldrb	r3, [r3, #8]
    c858:	ee07 3a90 	vmov	s15, r3
    c85c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    c860:	eddf 7a80 	vldr	s15, [pc, #512]	; ca64 <VelocityCalculation+0x2c4>
    c864:	ee66 7aa7 	vmul.f32	s15, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:131
			/* LP filtering of distance sensors */
			distanceLP->Right = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Right +
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideRight);
			distanceLP->Left = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Left +
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideLeft);
			distanceLP->SlopedRight = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->SlopedRight +
    c868:	ee77 7a27 	vadd.f32	s15, s14, s15
    c86c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c86e:	edc3 7a02 	vstr	s15, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:133
					(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideSlopedRight);
			distanceLP->SlopedLeft = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->SlopedLeft +
    c872:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c874:	ed93 7a03 	vldr	s14, [r3, #12]
    c878:	eddf 7a79 	vldr	s15, [pc, #484]	; ca60 <VelocityCalculation+0x2c0>
    c87c:	ee27 7a27 	vmul.f32	s14, s14, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:134
					(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideSlopedLeft);
    c880:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    c882:	7a5b      	ldrb	r3, [r3, #9]
    c884:	ee07 3a90 	vmov	s15, r3
    c888:	eef8 6ae7 	vcvt.f32.s32	s13, s15
    c88c:	eddf 7a75 	vldr	s15, [pc, #468]	; ca64 <VelocityCalculation+0x2c4>
    c890:	ee66 7aa7 	vmul.f32	s15, s13, s15
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:133
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideRight);
			distanceLP->Left = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->Left +
				(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideLeft);
			distanceLP->SlopedRight = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->SlopedRight +
					(1 - DISTANCE_SENSORS_LP_C1) * distancePointer->SideSlopedRight);
			distanceLP->SlopedLeft = (float)(DISTANCE_SENSORS_LP_C1 * distanceLP->SlopedLeft +
    c894:	ee77 7a27 	vadd.f32	s15, s14, s15
    c898:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c89a:	edc3 7a03 	vstr	s15, [r3, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:143
		#ifndef THETA_DOT_IMU_HP_DISABLE
			theta_dot_IMU_est = (float)(HP_THETA_DOT_IMU * theta_dot_IMU_est + imu_data[1] - IMU_angular_velocity_prev);
			IMU_angular_velocity_prev = imu_data[1];
		#else
			//theta_dot_IMU_est = imu_data[1];
			theta_dot_IMU_est = (float)(0.001 * theta_dot_IMU_est + (1-0.001) * imu_data[1]);
    c89e:	4b72      	ldr	r3, [pc, #456]	; (ca68 <VelocityCalculation+0x2c8>)
    c8a0:	681b      	ldr	r3, [r3, #0]
    c8a2:	4618      	mov	r0, r3
    c8a4:	f7f3 ff7c 	bl	7a0 <__aeabi_f2d>
    c8a8:	4602      	mov	r2, r0
    c8aa:	460b      	mov	r3, r1
    c8ac:	4610      	mov	r0, r2
    c8ae:	4619      	mov	r1, r3
    c8b0:	a365      	add	r3, pc, #404	; (adr r3, ca48 <VelocityCalculation+0x2a8>)
    c8b2:	e9d3 2300 	ldrd	r2, r3, [r3]
    c8b6:	f7f3 ffc7 	bl	848 <__aeabi_dmul>
    c8ba:	4602      	mov	r2, r0
    c8bc:	460b      	mov	r3, r1
    c8be:	4690      	mov	r8, r2
    c8c0:	4699      	mov	r9, r3
    c8c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    c8c4:	3304      	adds	r3, #4
    c8c6:	681b      	ldr	r3, [r3, #0]
    c8c8:	4618      	mov	r0, r3
    c8ca:	f7f3 ff69 	bl	7a0 <__aeabi_f2d>
    c8ce:	4602      	mov	r2, r0
    c8d0:	460b      	mov	r3, r1
    c8d2:	4610      	mov	r0, r2
    c8d4:	4619      	mov	r1, r3
    c8d6:	a35e      	add	r3, pc, #376	; (adr r3, ca50 <VelocityCalculation+0x2b0>)
    c8d8:	e9d3 2300 	ldrd	r2, r3, [r3]
    c8dc:	f7f3 ffb4 	bl	848 <__aeabi_dmul>
    c8e0:	4602      	mov	r2, r0
    c8e2:	460b      	mov	r3, r1
    c8e4:	4640      	mov	r0, r8
    c8e6:	4649      	mov	r1, r9
    c8e8:	f7f3 fdfc 	bl	4e4 <__adddf3>
    c8ec:	4602      	mov	r2, r0
    c8ee:	460b      	mov	r3, r1
    c8f0:	4610      	mov	r0, r2
    c8f2:	4619      	mov	r1, r3
    c8f4:	f7f4 fa6a 	bl	dcc <__aeabi_d2f>
    c8f8:	4602      	mov	r2, r0
    c8fa:	4b5b      	ldr	r3, [pc, #364]	; (ca68 <VelocityCalculation+0x2c8>)
    c8fc:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:195
				else{
					*theta = 0;
				}
			#endif
		#else
			*theta = *theta + theta_dot_IMU_est * DT; // integration;
    c8fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    c900:	ed93 7a00 	vldr	s14, [r3]
    c904:	4b58      	ldr	r3, [pc, #352]	; (ca68 <VelocityCalculation+0x2c8>)
    c906:	edd3 6a00 	vldr	s13, [r3]
    c90a:	eddf 7a58 	vldr	s15, [pc, #352]	; ca6c <VelocityCalculation+0x2cc>
    c90e:	ee66 7aa7 	vmul.f32	s15, s13, s15
    c912:	ee77 7a27 	vadd.f32	s15, s14, s15
    c916:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    c918:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:248
//			*wallCenterDivergence = 0;
//		}
//


		if(distanceLP->Left < distanceLP->Right){
    c91c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c91e:	ed93 7a01 	vldr	s14, [r3, #4]
    c922:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c924:	edd3 7a00 	vldr	s15, [r3]
    c928:	eeb4 7ae7 	vcmpe.f32	s14, s15
    c92c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c930:	d504      	bpl.n	c93c <VelocityCalculation+0x19c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:249
			shorterDistance = distanceLP->Left;
    c932:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c934:	685a      	ldr	r2, [r3, #4]
    c936:	4b4e      	ldr	r3, [pc, #312]	; (ca70 <VelocityCalculation+0x2d0>)
    c938:	601a      	str	r2, [r3, #0]
    c93a:	e003      	b.n	c944 <VelocityCalculation+0x1a4>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:251
		}else{
			shorterDistance = distanceLP->Right;
    c93c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    c93e:	681a      	ldr	r2, [r3, #0]
    c940:	4b4b      	ldr	r3, [pc, #300]	; (ca70 <VelocityCalculation+0x2d0>)
    c942:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:253
		}
		if(shorterDistance <= DISTANCE_WHEN_MCCAR_CENTERED-IMU_BAND_DRIVING_STRAIGHT && shorterDistance > 0){
    c944:	4b4a      	ldr	r3, [pc, #296]	; (ca70 <VelocityCalculation+0x2d0>)
    c946:	ed93 7a00 	vldr	s14, [r3]
    c94a:	eddf 7a4a 	vldr	s15, [pc, #296]	; ca74 <VelocityCalculation+0x2d4>
    c94e:	eeb4 7ae7 	vcmpe.f32	s14, s15
    c952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c956:	f200 8093 	bhi.w	ca80 <VelocityCalculation+0x2e0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:253 (discriminator 1)
    c95a:	4b45      	ldr	r3, [pc, #276]	; (ca70 <VelocityCalculation+0x2d0>)
    c95c:	edd3 7a00 	vldr	s15, [r3]
    c960:	eef5 7ac0 	vcmpe.f32	s15, #0.0
    c964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c968:	f340 808a 	ble.w	ca80 <VelocityCalculation+0x2e0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:260
			//*weightDistanceSensor = (float)(1 - 1/(DISTANCE_WHEN_MCCAR_CENTERED-IMU_BAND_DRIVING_STRAIGHT)*shorterDistance);
			// ellipse weighting
//			*weightDistanceSensor = (float)sqrt((1 - shorterDistance*shorterDistance/
//					((DISTANCE_WHEN_MCCAR_CENTERED-IMU_BAND_DRIVING_STRAIGHT)*(DISTANCE_WHEN_MCCAR_CENTERED-IMU_BAND_DRIVING_STRAIGHT))));
			// square root weighting
			*weightDistanceSensor = (float)(sqrt(-(shorterDistance-DISTANCE_WHEN_MCCAR_CENTERED-IMU_BAND_DRIVING_STRAIGHT))/
    c96c:	4b40      	ldr	r3, [pc, #256]	; (ca70 <VelocityCalculation+0x2d0>)
    c96e:	ed93 7a00 	vldr	s14, [r3]
    c972:	eddf 7a41 	vldr	s15, [pc, #260]	; ca78 <VelocityCalculation+0x2d8>
    c976:	ee77 7a67 	vsub.f32	s15, s14, s15
    c97a:	ee17 0a90 	vmov	r0, s15
    c97e:	f7f3 ff0f 	bl	7a0 <__aeabi_f2d>
    c982:	4602      	mov	r2, r0
    c984:	460b      	mov	r3, r1
    c986:	4610      	mov	r0, r2
    c988:	4619      	mov	r1, r3
    c98a:	f04f 0200 	mov.w	r2, #0
    c98e:	4b3b      	ldr	r3, [pc, #236]	; (ca7c <VelocityCalculation+0x2dc>)
    c990:	f7f3 fda6 	bl	4e0 <__aeabi_dsub>
    c994:	4602      	mov	r2, r0
    c996:	460b      	mov	r3, r1
    c998:	4614      	mov	r4, r2
    c99a:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
    c99e:	ec45 4b10 	vmov	d0, r4, r5
    c9a2:	f000 fb4d 	bl	d040 <sqrt>
    c9a6:	ec53 2b10 	vmov	r2, r3, d0
    c9aa:	4610      	mov	r0, r2
    c9ac:	4619      	mov	r1, r3
    c9ae:	a32a      	add	r3, pc, #168	; (adr r3, ca58 <VelocityCalculation+0x2b8>)
    c9b0:	e9d3 2300 	ldrd	r2, r3, [r3]
    c9b4:	f7f4 f872 	bl	a9c <__aeabi_ddiv>
    c9b8:	4602      	mov	r2, r0
    c9ba:	460b      	mov	r3, r1
    c9bc:	4610      	mov	r0, r2
    c9be:	4619      	mov	r1, r3
    c9c0:	f7f4 fa04 	bl	dcc <__aeabi_d2f>
    c9c4:	4602      	mov	r2, r0
    c9c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c9c8:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:262
					sqrt(DISTANCE_WHEN_MCCAR_CENTERED-IMU_BAND_DRIVING_STRAIGHT));
			if (*weightDistanceSensor < 0){
    c9ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c9cc:	edd3 7a00 	vldr	s15, [r3]
    c9d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
    c9d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c9d8:	d504      	bpl.n	c9e4 <VelocityCalculation+0x244>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:263
				*weightDistanceSensor = 0;
    c9da:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c9dc:	f04f 0200 	mov.w	r2, #0
    c9e0:	601a      	str	r2, [r3, #0]
    c9e2:	e00d      	b.n	ca00 <VelocityCalculation+0x260>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:264
			}else if(*weightDistanceSensor > 1){
    c9e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c9e6:	ed93 7a00 	vldr	s14, [r3]
    c9ea:	eef7 7a00 	vmov.f32	s15, #112	; 0x70
    c9ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
    c9f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c9f6:	dd03      	ble.n	ca00 <VelocityCalculation+0x260>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:265
				*weightDistanceSensor = 1;
    c9f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
    c9fa:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
    c9fe:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:267
			}
			if(distanceLP->Left < distanceLP->Right){
    ca00:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    ca02:	ed93 7a01 	vldr	s14, [r3, #4]
    ca06:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    ca08:	edd3 7a00 	vldr	s15, [r3]
    ca0c:	eeb4 7ae7 	vcmpe.f32	s14, s15
    ca10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ca14:	d50a      	bpl.n	ca2c <VelocityCalculation+0x28c>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:268
				*wallCenterDivergence = shorterDistance - DISTANCE_WHEN_MCCAR_CENTERED;
    ca16:	4b16      	ldr	r3, [pc, #88]	; (ca70 <VelocityCalculation+0x2d0>)
    ca18:	ed93 7a00 	vldr	s14, [r3]
    ca1c:	eddf 7a16 	vldr	s15, [pc, #88]	; ca78 <VelocityCalculation+0x2d8>
    ca20:	ee77 7a67 	vsub.f32	s15, s14, s15
    ca24:	687b      	ldr	r3, [r7, #4]
    ca26:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:267
			if (*weightDistanceSensor < 0){
				*weightDistanceSensor = 0;
			}else if(*weightDistanceSensor > 1){
				*weightDistanceSensor = 1;
			}
			if(distanceLP->Left < distanceLP->Right){
    ca2a:	e031      	b.n	ca90 <VelocityCalculation+0x2f0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:270
				*wallCenterDivergence = shorterDistance - DISTANCE_WHEN_MCCAR_CENTERED;
			}else{
				*wallCenterDivergence = DISTANCE_WHEN_MCCAR_CENTERED - shorterDistance;
    ca2c:	4b10      	ldr	r3, [pc, #64]	; (ca70 <VelocityCalculation+0x2d0>)
    ca2e:	edd3 7a00 	vldr	s15, [r3]
    ca32:	ed9f 7a11 	vldr	s14, [pc, #68]	; ca78 <VelocityCalculation+0x2d8>
    ca36:	ee77 7a67 	vsub.f32	s15, s14, s15
    ca3a:	687b      	ldr	r3, [r7, #4]
    ca3c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:267
			if (*weightDistanceSensor < 0){
				*weightDistanceSensor = 0;
			}else if(*weightDistanceSensor > 1){
				*weightDistanceSensor = 1;
			}
			if(distanceLP->Left < distanceLP->Right){
    ca40:	e026      	b.n	ca90 <VelocityCalculation+0x2f0>
    ca42:	bf00      	nop
    ca44:	f3af 8000 	nop.w
    ca48:	d2f1a9fc 	.word	0xd2f1a9fc
    ca4c:	3f50624d 	.word	0x3f50624d
    ca50:	d916872b 	.word	0xd916872b
    ca54:	3feff7ce 	.word	0x3feff7ce
    ca58:	54c8f94c 	.word	0x54c8f94c
    ca5c:	401edac0 	.word	0x401edac0
    ca60:	3f333333 	.word	0x3f333333
    ca64:	3e99999a 	.word	0x3e99999a
    ca68:	20000b54 	.word	0x20000b54
    ca6c:	3a03126f 	.word	0x3a03126f
    ca70:	20000b58 	.word	0x20000b58
    ca74:	426e0000 	.word	0x426e0000
    ca78:	42700000 	.word	0x42700000
    ca7c:	3fe00000 	.word	0x3fe00000
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:274
			}else{
				*wallCenterDivergence = DISTANCE_WHEN_MCCAR_CENTERED - shorterDistance;
			}
		}else{
			// IMU only
			*weightDistanceSensor = 0;
    ca80:	6abb      	ldr	r3, [r7, #40]	; 0x28
    ca82:	f04f 0200 	mov.w	r2, #0
    ca86:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:275
			*wallCenterDivergence = 0;
    ca88:	687b      	ldr	r3, [r7, #4]
    ca8a:	f04f 0200 	mov.w	r2, #0
    ca8e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:280
		}

	#endif
		/* Encoder */
		x_enc_dot[0] = (x_enc[0] - x_enc_prev[0]) * DT_INVERSE;
    ca90:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    ca92:	ed93 7a00 	vldr	s14, [r3]
    ca96:	4b4b      	ldr	r3, [pc, #300]	; (cbc4 <VelocityCalculation+0x424>)
    ca98:	edd3 7a00 	vldr	s15, [r3]
    ca9c:	ee37 7a67 	vsub.f32	s14, s14, s15
    caa0:	eddf 7a49 	vldr	s15, [pc, #292]	; cbc8 <VelocityCalculation+0x428>
    caa4:	ee67 7a27 	vmul.f32	s15, s14, s15
    caa8:	4b48      	ldr	r3, [pc, #288]	; (cbcc <VelocityCalculation+0x42c>)
    caaa:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:281
		x_enc_dot[1] = (x_enc[1] - x_enc_prev[1]) * DT_INVERSE;
    caae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    cab0:	3304      	adds	r3, #4
    cab2:	ed93 7a00 	vldr	s14, [r3]
    cab6:	4b43      	ldr	r3, [pc, #268]	; (cbc4 <VelocityCalculation+0x424>)
    cab8:	edd3 7a01 	vldr	s15, [r3, #4]
    cabc:	ee37 7a67 	vsub.f32	s14, s14, s15
    cac0:	eddf 7a41 	vldr	s15, [pc, #260]	; cbc8 <VelocityCalculation+0x428>
    cac4:	ee67 7a27 	vmul.f32	s15, s14, s15
    cac8:	4b40      	ldr	r3, [pc, #256]	; (cbcc <VelocityCalculation+0x42c>)
    caca:	edc3 7a01 	vstr	s15, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:282
		x_enc_prev[0] = x_enc[0];
    cace:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    cad0:	681a      	ldr	r2, [r3, #0]
    cad2:	4b3c      	ldr	r3, [pc, #240]	; (cbc4 <VelocityCalculation+0x424>)
    cad4:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:283
		x_enc_prev[1] = x_enc[1];
    cad6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    cad8:	685a      	ldr	r2, [r3, #4]
    cada:	4b3a      	ldr	r3, [pc, #232]	; (cbc4 <VelocityCalculation+0x424>)
    cadc:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:284
		x_enc_fwd_dot = (float)((x_enc_dot[0] + x_enc_dot[1]) * 0.5);
    cade:	4b3b      	ldr	r3, [pc, #236]	; (cbcc <VelocityCalculation+0x42c>)
    cae0:	ed93 7a00 	vldr	s14, [r3]
    cae4:	4b39      	ldr	r3, [pc, #228]	; (cbcc <VelocityCalculation+0x42c>)
    cae6:	edd3 7a01 	vldr	s15, [r3, #4]
    caea:	ee37 7a27 	vadd.f32	s14, s14, s15
    caee:	eef6 7a00 	vmov.f32	s15, #96	; 0x60
    caf2:	ee67 7a27 	vmul.f32	s15, s14, s15
    caf6:	4b36      	ldr	r3, [pc, #216]	; (cbd0 <VelocityCalculation+0x430>)
    caf8:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:287

		/* Forward velocity sensor fusion; HP on IMU signal and LP on encoder signal */
		x_IMU_dot_prev = x_IMU_dot;
    cafc:	4b35      	ldr	r3, [pc, #212]	; (cbd4 <VelocityCalculation+0x434>)
    cafe:	681a      	ldr	r2, [r3, #0]
    cb00:	4b35      	ldr	r3, [pc, #212]	; (cbd8 <VelocityCalculation+0x438>)
    cb02:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:288
		x_IMU_dot = x_IMU_dot + imu_data[0] * DT; // integration
    cb04:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    cb06:	ed93 7a00 	vldr	s14, [r3]
    cb0a:	eddf 7a34 	vldr	s15, [pc, #208]	; cbdc <VelocityCalculation+0x43c>
    cb0e:	ee27 7a27 	vmul.f32	s14, s14, s15
    cb12:	4b30      	ldr	r3, [pc, #192]	; (cbd4 <VelocityCalculation+0x434>)
    cb14:	edd3 7a00 	vldr	s15, [r3]
    cb18:	ee77 7a27 	vadd.f32	s15, s14, s15
    cb1c:	4b2d      	ldr	r3, [pc, #180]	; (cbd4 <VelocityCalculation+0x434>)
    cb1e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:289
		x_IMU_est = (float)(HP_Ximu_dot_C1 * x_IMU_est + x_IMU_dot - x_IMU_dot_prev);
    cb22:	4b2f      	ldr	r3, [pc, #188]	; (cbe0 <VelocityCalculation+0x440>)
    cb24:	ed93 7a00 	vldr	s14, [r3]
    cb28:	eddf 7a2e 	vldr	s15, [pc, #184]	; cbe4 <VelocityCalculation+0x444>
    cb2c:	ee27 7a27 	vmul.f32	s14, s14, s15
    cb30:	4b28      	ldr	r3, [pc, #160]	; (cbd4 <VelocityCalculation+0x434>)
    cb32:	edd3 7a00 	vldr	s15, [r3]
    cb36:	ee37 7a27 	vadd.f32	s14, s14, s15
    cb3a:	4b27      	ldr	r3, [pc, #156]	; (cbd8 <VelocityCalculation+0x438>)
    cb3c:	edd3 7a00 	vldr	s15, [r3]
    cb40:	ee77 7a67 	vsub.f32	s15, s14, s15
    cb44:	4b26      	ldr	r3, [pc, #152]	; (cbe0 <VelocityCalculation+0x440>)
    cb46:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:290
		x_Enc_est = (float)(LP_Xenc_dot_C1 * x_Enc_est + LP_Xenc_dot_C2 * x_enc_fwd_dot);
    cb4a:	4b27      	ldr	r3, [pc, #156]	; (cbe8 <VelocityCalculation+0x448>)
    cb4c:	ed93 7a00 	vldr	s14, [r3]
    cb50:	eddf 7a24 	vldr	s15, [pc, #144]	; cbe4 <VelocityCalculation+0x444>
    cb54:	ee27 7a27 	vmul.f32	s14, s14, s15
    cb58:	4b1d      	ldr	r3, [pc, #116]	; (cbd0 <VelocityCalculation+0x430>)
    cb5a:	edd3 6a00 	vldr	s13, [r3]
    cb5e:	eddf 7a23 	vldr	s15, [pc, #140]	; cbec <VelocityCalculation+0x44c>
    cb62:	ee66 7aa7 	vmul.f32	s15, s13, s15
    cb66:	ee77 7a27 	vadd.f32	s15, s14, s15
    cb6a:	4b1f      	ldr	r3, [pc, #124]	; (cbe8 <VelocityCalculation+0x448>)
    cb6c:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:292

		v_est[0] = (float)(x_IMU_est + x_Enc_est);
    cb70:	4b1b      	ldr	r3, [pc, #108]	; (cbe0 <VelocityCalculation+0x440>)
    cb72:	ed93 7a00 	vldr	s14, [r3]
    cb76:	4b1c      	ldr	r3, [pc, #112]	; (cbe8 <VelocityCalculation+0x448>)
    cb78:	edd3 7a00 	vldr	s15, [r3]
    cb7c:	ee77 7a27 	vadd.f32	s15, s14, s15
    cb80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    cb82:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:293
		v_est[1] = (float)theta_dot_IMU_est;
    cb86:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    cb88:	3304      	adds	r3, #4
    cb8a:	4a19      	ldr	r2, [pc, #100]	; (cbf0 <VelocityCalculation+0x450>)
    cb8c:	6812      	ldr	r2, [r2, #0]
    cb8e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:296
		//v_est[1] = (float)0;

		*x_IMU_dot_test = imu_data[0];
    cb90:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    cb92:	681a      	ldr	r2, [r3, #0]
    cb94:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    cb96:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:297
		*x_enc_test = (float)0.5*(x_enc[0]+x_enc[1]);
    cb98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    cb9a:	ed93 7a00 	vldr	s14, [r3]
    cb9e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    cba0:	3304      	adds	r3, #4
    cba2:	edd3 7a00 	vldr	s15, [r3]
    cba6:	ee37 7a27 	vadd.f32	s14, s14, s15
    cbaa:	eef6 7a00 	vmov.f32	s15, #96	; 0x60
    cbae:	ee67 7a27 	vmul.f32	s15, s14, s15
    cbb2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    cbb4:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:299

		return;
    cbb8:	bf00      	nop
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:300
	}
    cbba:	3710      	adds	r7, #16
    cbbc:	46bd      	mov	sp, r7
    cbbe:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
    cbc2:	bf00      	nop
    cbc4:	20000b5c 	.word	0x20000b5c
    cbc8:	44fa0000 	.word	0x44fa0000
    cbcc:	20000b64 	.word	0x20000b64
    cbd0:	20000b6c 	.word	0x20000b6c
    cbd4:	20000b70 	.word	0x20000b70
    cbd8:	20000b74 	.word	0x20000b74
    cbdc:	3a03126f 	.word	0x3a03126f
    cbe0:	20000b78 	.word	0x20000b78
    cbe4:	3f61c4f2 	.word	0x3f61c4f2
    cbe8:	20000b7c 	.word	0x20000b7c
    cbec:	3df1d870 	.word	0x3df1d870
    cbf0:	20000b54 	.word	0x20000b54
$t():
    cbf4:	f3af 8000 	nop.w

0000cbf8 <ReadIMU>:
ReadIMU():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:371
		return BUFFER_SUCCESS;
	}
	#endif

	#if KDS_BUILD
		void ReadIMU(float imu_data[2], float gyroXY[2]){
    cbf8:	b580      	push	{r7, lr}
    cbfa:	b082      	sub	sp, #8
    cbfc:	af00      	add	r7, sp, #0
    cbfe:	6078      	str	r0, [r7, #4]
    cc00:	6039      	str	r1, [r7, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:372
			calcIMU_data(&imuData);
    cc02:	480e      	ldr	r0, [pc, #56]	; (cc3c <ReadIMU+0x44>)
    cc04:	f7f6 ff00 	bl	3a08 <calcIMU_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:373
			imu_data[0] = imuData.unit_Values.x_Axis_Acc_ms2;
    cc08:	4b0c      	ldr	r3, [pc, #48]	; (cc3c <ReadIMU+0x44>)
    cc0a:	6a1a      	ldr	r2, [r3, #32]
    cc0c:	687b      	ldr	r3, [r7, #4]
    cc0e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:374
			imu_data[1] = -imuData.unit_Values.z_Axis_Gyro_rps;
    cc10:	687b      	ldr	r3, [r7, #4]
    cc12:	3304      	adds	r3, #4
    cc14:	4a09      	ldr	r2, [pc, #36]	; (cc3c <ReadIMU+0x44>)
    cc16:	edd2 7a0a 	vldr	s15, [r2, #40]	; 0x28
    cc1a:	eef1 7a67 	vneg.f32	s15, s15
    cc1e:	edc3 7a00 	vstr	s15, [r3]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:375
			gyroXY[0] = imu_data[0];
    cc22:	687b      	ldr	r3, [r7, #4]
    cc24:	681a      	ldr	r2, [r3, #0]
    cc26:	683b      	ldr	r3, [r7, #0]
    cc28:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:376
			gyroXY[1] = imu_data[1];
    cc2a:	683b      	ldr	r3, [r7, #0]
    cc2c:	3304      	adds	r3, #4
    cc2e:	687a      	ldr	r2, [r7, #4]
    cc30:	6852      	ldr	r2, [r2, #4]
    cc32:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:377
		}
    cc34:	3708      	adds	r7, #8
    cc36:	46bd      	mov	sp, r7
    cc38:	bd80      	pop	{r7, pc}
    cc3a:	bf00      	nop
    cc3c:	20000de4 	.word	0x20000de4

0000cc40 <ReadEncoder>:
ReadEncoder():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:379

		void ReadEncoder(float x_enc[2]){
    cc40:	b580      	push	{r7, lr}
    cc42:	b082      	sub	sp, #8
    cc44:	af00      	add	r7, sp, #0
    cc46:	6078      	str	r0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:380
			calcENC_data(&encData);
    cc48:	4807      	ldr	r0, [pc, #28]	; (cc68 <ReadEncoder+0x28>)
    cc4a:	f7f5 fd85 	bl	2758 <calcENC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:381
			x_enc[0] = encData.uint_Values.m_posR;
    cc4e:	4b06      	ldr	r3, [pc, #24]	; (cc68 <ReadEncoder+0x28>)
    cc50:	689a      	ldr	r2, [r3, #8]
    cc52:	687b      	ldr	r3, [r7, #4]
    cc54:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:382
			x_enc[1] = encData.uint_Values.m_posL;
    cc56:	687b      	ldr	r3, [r7, #4]
    cc58:	3304      	adds	r3, #4
    cc5a:	4a03      	ldr	r2, [pc, #12]	; (cc68 <ReadEncoder+0x28>)
    cc5c:	68d2      	ldr	r2, [r2, #12]
    cc5e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:384

		}
    cc60:	3708      	adds	r7, #8
    cc62:	46bd      	mov	sp, r7
    cc64:	bd80      	pop	{r7, pc}
    cc66:	bf00      	nop
    cc68:	20000e30 	.word	0x20000e30

0000cc6c <ReadDistance>:
ReadDistance():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:386

		void ReadDistance(Distance_sensors *distancePointer, float I_mot_ist[2], float *U_bat){
    cc6c:	b580      	push	{r7, lr}
    cc6e:	b084      	sub	sp, #16
    cc70:	af00      	add	r7, sp, #0
    cc72:	60f8      	str	r0, [r7, #12]
    cc74:	60b9      	str	r1, [r7, #8]
    cc76:	607a      	str	r2, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:387
			calcADC_data(&adcData);
    cc78:	4814      	ldr	r0, [pc, #80]	; (cccc <ReadDistance+0x60>)
    cc7a:	f7f4 fc5d 	bl	1538 <calcADC_data>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:388
			I_mot_ist[0] = adcData.voltage_Values.I_Mot_L;
    cc7e:	4b13      	ldr	r3, [pc, #76]	; (cccc <ReadDistance+0x60>)
    cc80:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    cc82:	68bb      	ldr	r3, [r7, #8]
    cc84:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:389
			I_mot_ist[1] = adcData.voltage_Values.I_Mot_R;
    cc86:	68bb      	ldr	r3, [r7, #8]
    cc88:	3304      	adds	r3, #4
    cc8a:	4a10      	ldr	r2, [pc, #64]	; (cccc <ReadDistance+0x60>)
    cc8c:	6b12      	ldr	r2, [r2, #48]	; 0x30
    cc8e:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:390
			*U_bat = adcData.voltage_Values.v_Bat;
    cc90:	4b0e      	ldr	r3, [pc, #56]	; (cccc <ReadDistance+0x60>)
    cc92:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    cc94:	687b      	ldr	r3, [r7, #4]
    cc96:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:391
			distancePointer->SideLeft = adcData.mm_Values.mm_Left;
    cc98:	4b0c      	ldr	r3, [pc, #48]	; (cccc <ReadDistance+0x60>)
    cc9a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    cc9c:	68fb      	ldr	r3, [r7, #12]
    cc9e:	605a      	str	r2, [r3, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:392
			distancePointer->SideRight = adcData.mm_Values.mm_Right;
    cca0:	4b0a      	ldr	r3, [pc, #40]	; (cccc <ReadDistance+0x60>)
    cca2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    cca4:	68fb      	ldr	r3, [r7, #12]
    cca6:	601a      	str	r2, [r3, #0]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:393
			distancePointer->SideSlopedLeft = adcData.mm_Values.mm_45Left;
    cca8:	4b08      	ldr	r3, [pc, #32]	; (cccc <ReadDistance+0x60>)
    ccaa:	f893 203f 	ldrb.w	r2, [r3, #63]	; 0x3f
    ccae:	68fb      	ldr	r3, [r7, #12]
    ccb0:	725a      	strb	r2, [r3, #9]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:394
			distancePointer->SideSlopedRight = adcData.mm_Values.mm_45Right;
    ccb2:	4b06      	ldr	r3, [pc, #24]	; (cccc <ReadDistance+0x60>)
    ccb4:	f893 203c 	ldrb.w	r2, [r3, #60]	; 0x3c
    ccb8:	68fb      	ldr	r3, [r7, #12]
    ccba:	721a      	strb	r2, [r3, #8]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:395
			distancePointer->FrontLeft = adcData.mm_Values.mm_MiddleL; //only one available
    ccbc:	4b03      	ldr	r3, [pc, #12]	; (cccc <ReadDistance+0x60>)
    ccbe:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
    ccc2:	68fb      	ldr	r3, [r7, #12]
    ccc4:	72da      	strb	r2, [r3, #11]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:396
		}
    ccc6:	3710      	adds	r7, #16
    ccc8:	46bd      	mov	sp, r7
    ccca:	bd80      	pop	{r7, pc}
    cccc:	2000120c 	.word	0x2000120c

0000ccd0 <setBiasRaw>:
setBiasRaw():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:398

		void setBiasRaw(void){
    ccd0:	b580      	push	{r7, lr}
    ccd2:	af00      	add	r7, sp, #0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:401
			//imuData.bias_Values.bias_x_Axis_Gyro_mdps = getGyroBias_X();
			//imuData.bias_Values.bias_z_Axis_Gyro_mdps = getGyroBias_Z();
			imuData.bias_Values.bias_z_Axis_Gyro_mdps = getGyroBias_Z();
    ccd4:	f7f6 fe7c 	bl	39d0 <getGyroBias_Z>
    ccd8:	eef0 7a40 	vmov.f32	s15, s0
    ccdc:	4b05      	ldr	r3, [pc, #20]	; (ccf4 <setBiasRaw+0x24>)
    ccde:	edc3 7a05 	vstr	s15, [r3, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:403
			//imuData.bias_Values.bias_y_Axis_Gyro_mdps = getGyroBias_Y();
			imuData.bias_Values.bias_x_Axis_Acc_mg = getAccBias();
    cce2:	f7f6 fe83 	bl	39ec <getAccBias>
    cce6:	eef0 7a40 	vmov.f32	s15, s0
    ccea:	4b02      	ldr	r3, [pc, #8]	; (ccf4 <setBiasRaw+0x24>)
    ccec:	edc3 7a04 	vstr	s15, [r3, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/VelocityEstimation.c:404
		}
    ccf0:	bd80      	pop	{r7, pc}
    ccf2:	bf00      	nop
    ccf4:	20000de4 	.word	0x20000de4

0000ccf8 <_degrees_value_normalize>:
_degrees_value_normalize():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:169
 * Normalize degree value: 
 * whatever argument is, returning value is in range [0 .. 359].
 *
 */
static T_DFTrigDegrees _degrees_value_normalize(T_DFTrigDegrees angle_degrees)
{
    ccf8:	b480      	push	{r7}
    ccfa:	b085      	sub	sp, #20
    ccfc:	af00      	add	r7, sp, #0
    ccfe:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:171
	//here angle must be positive!!
   if (360 <= angle_degrees){
    cd02:	ed97 7a01 	vldr	s14, [r7, #4]
    cd06:	eddf 7a16 	vldr	s15, [pc, #88]	; cd60 <_degrees_value_normalize+0x68>
    cd0a:	eeb4 7ae7 	vcmpe.f32	s14, s15
    cd0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    cd12:	db1a      	blt.n	cd4a <_degrees_value_normalize+0x52>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:172
		uint32_t int_part = ((uint32_t)angle_degrees) / 360;
    cd14:	edd7 7a01 	vldr	s15, [r7, #4]
    cd18:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    cd1c:	ee17 3a90 	vmov	r3, s15
    cd20:	08da      	lsrs	r2, r3, #3
    cd22:	4b10      	ldr	r3, [pc, #64]	; (cd64 <_degrees_value_normalize+0x6c>)
    cd24:	fba3 1302 	umull	r1, r3, r3, r2
    cd28:	089b      	lsrs	r3, r3, #2
    cd2a:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:173
		angle_degrees = angle_degrees - (float) 360 * int_part;
    cd2c:	68fb      	ldr	r3, [r7, #12]
    cd2e:	ee07 3a90 	vmov	s15, r3
    cd32:	eeb8 7a67 	vcvt.f32.u32	s14, s15
    cd36:	eddf 7a0a 	vldr	s15, [pc, #40]	; cd60 <_degrees_value_normalize+0x68>
    cd3a:	ee67 7a27 	vmul.f32	s15, s14, s15
    cd3e:	ed97 7a01 	vldr	s14, [r7, #4]
    cd42:	ee77 7a67 	vsub.f32	s15, s14, s15
    cd46:	edc7 7a01 	vstr	s15, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:176
   }

   return angle_degrees;
    cd4a:	687b      	ldr	r3, [r7, #4]
    cd4c:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:177
}
    cd50:	eeb0 0a67 	vmov.f32	s0, s15
    cd54:	3714      	adds	r7, #20
    cd56:	46bd      	mov	sp, r7
    cd58:	f85d 7b04 	ldr.w	r7, [sp], #4
    cd5c:	4770      	bx	lr
    cd5e:	bf00      	nop
    cd60:	43b40000 	.word	0x43b40000
    cd64:	16c16c17 	.word	0x16c16c17

0000cd68 <_sin__get_by_deg_0_90>:
_sin__get_by_deg_0_90():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:187
 */
static T_DFTrigValue _sin__get_by_deg_0_90(
      const T_DFTrigLookupTbl   *p_lookup_tbl,
      T_DFTrigDegrees            angle_degrees
      )
{
    cd68:	b480      	push	{r7}
    cd6a:	b087      	sub	sp, #28
    cd6c:	af00      	add	r7, sp, #0
    cd6e:	6078      	str	r0, [r7, #4]
    cd70:	ed87 0a00 	vstr	s0, [r7]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:188
   T_DFTrigValue ret = 0;
    cd74:	f04f 0300 	mov.w	r3, #0
    cd78:	617b      	str	r3, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:191

   //-- in the easiest case, index in the lookup table equals to angle in degrees
   int index = (int) angle_degrees;
    cd7a:	edd7 7a00 	vldr	s15, [r7]
    cd7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    cd82:	ee17 3a90 	vmov	r3, s15
    cd86:	613b      	str	r3, [r7, #16]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:192
   float frac = angle_degrees - index;
    cd88:	693b      	ldr	r3, [r7, #16]
    cd8a:	ee07 3a10 	vmov	s14, r3
    cd8e:	eef8 7ac7 	vcvt.f32.s32	s15, s14
    cd92:	ed97 7a00 	vldr	s14, [r7]
    cd96:	ee77 7a67 	vsub.f32	s15, s14, s15
    cd9a:	edc7 7a03 	vstr	s15, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:195

   //-- get result by given index
   ret = p_lookup_tbl->table[index] + frac*(p_lookup_tbl->table[index+1]- p_lookup_tbl->table[index]);
    cd9e:	687a      	ldr	r2, [r7, #4]
    cda0:	693b      	ldr	r3, [r7, #16]
    cda2:	3302      	adds	r3, #2
    cda4:	009b      	lsls	r3, r3, #2
    cda6:	4413      	add	r3, r2
    cda8:	ed93 7a00 	vldr	s14, [r3]
    cdac:	693b      	ldr	r3, [r7, #16]
    cdae:	3301      	adds	r3, #1
    cdb0:	687a      	ldr	r2, [r7, #4]
    cdb2:	3302      	adds	r3, #2
    cdb4:	009b      	lsls	r3, r3, #2
    cdb6:	4413      	add	r3, r2
    cdb8:	edd3 6a00 	vldr	s13, [r3]
    cdbc:	687a      	ldr	r2, [r7, #4]
    cdbe:	693b      	ldr	r3, [r7, #16]
    cdc0:	3302      	adds	r3, #2
    cdc2:	009b      	lsls	r3, r3, #2
    cdc4:	4413      	add	r3, r2
    cdc6:	edd3 7a00 	vldr	s15, [r3]
    cdca:	ee76 6ae7 	vsub.f32	s13, s13, s15
    cdce:	edd7 7a03 	vldr	s15, [r7, #12]
    cdd2:	ee66 7aa7 	vmul.f32	s15, s13, s15
    cdd6:	ee77 7a27 	vadd.f32	s15, s14, s15
    cdda:	edc7 7a05 	vstr	s15, [r7, #20]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:197

   return ret;
    cdde:	697b      	ldr	r3, [r7, #20]
    cde0:	ee07 3a90 	vmov	s15, r3
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:198
}
    cde4:	eeb0 0a67 	vmov.f32	s0, s15
    cde8:	371c      	adds	r7, #28
    cdea:	46bd      	mov	sp, r7
    cdec:	f85d 7b04 	ldr.w	r7, [sp], #4
    cdf0:	4770      	bx	lr
    cdf2:	bf00      	nop

0000cdf4 <sin_lut>:
sin_lut():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:215
 * See comment in .h file
 */
T_DFTrigValue  sin_lut(
      T_DFTrigDegrees            angle_degrees
      )
{
    cdf4:	b580      	push	{r7, lr}
    cdf6:	b084      	sub	sp, #16
    cdf8:	af00      	add	r7, sp, #0
    cdfa:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:216
   T_DFTrigValue ret = 0;
    cdfe:	f04f 0300 	mov.w	r3, #0
    ce02:	60fb      	str	r3, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:218

   if (angle_degrees < 0) {
    ce04:	edd7 7a01 	vldr	s15, [r7, #4]
    ce08:	eef5 7ac0 	vcmpe.f32	s15, #0.0
    ce0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ce10:	d50c      	bpl.n	ce2c <sin_lut+0x38>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:219
	   return -sin_lut(-angle_degrees);
    ce12:	edd7 7a01 	vldr	s15, [r7, #4]
    ce16:	eef1 7a67 	vneg.f32	s15, s15
    ce1a:	eeb0 0a67 	vmov.f32	s0, s15
    ce1e:	f7ff ffe9 	bl	cdf4 <sin_lut>
    ce22:	eef0 7a40 	vmov.f32	s15, s0
    ce26:	eef1 7a67 	vneg.f32	s15, s15
    ce2a:	e05b      	b.n	cee4 <sin_lut+0xf0>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:223
   }

   //here angle is positive!
   angle_degrees = _degrees_value_normalize(angle_degrees);
    ce2c:	ed97 0a01 	vldr	s0, [r7, #4]
    ce30:	f7ff ff62 	bl	ccf8 <_degrees_value_normalize>
    ce34:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:227

   //-- at this point, angle_degrees is in range [0 .. 359]

   if (angle_degrees < 90){
    ce38:	ed97 7a01 	vldr	s14, [r7, #4]
    ce3c:	eddf 7a2c 	vldr	s15, [pc, #176]	; cef0 <sin_lut+0xfc>
    ce40:	eeb4 7ae7 	vcmpe.f32	s14, s15
    ce44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ce48:	d507      	bpl.n	ce5a <sin_lut+0x66>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:228
      ret =  _sin__get_by_deg_0_90(&sin_lut_table, angle_degrees);
    ce4a:	482a      	ldr	r0, [pc, #168]	; (cef4 <sin_lut+0x100>)
    ce4c:	ed97 0a01 	vldr	s0, [r7, #4]
    ce50:	f7ff ff8a 	bl	cd68 <_sin__get_by_deg_0_90>
    ce54:	ed87 0a03 	vstr	s0, [r7, #12]
    ce58:	e042      	b.n	cee0 <sin_lut+0xec>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:229
   } else if (angle_degrees < 180){
    ce5a:	ed97 7a01 	vldr	s14, [r7, #4]
    ce5e:	eddf 7a26 	vldr	s15, [pc, #152]	; cef8 <sin_lut+0x104>
    ce62:	eeb4 7ae7 	vcmpe.f32	s14, s15
    ce66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ce6a:	d50d      	bpl.n	ce88 <sin_lut+0x94>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:230
      ret =  _sin__get_by_deg_0_90(&sin_lut_table, 180 - angle_degrees);
    ce6c:	ed9f 7a22 	vldr	s14, [pc, #136]	; cef8 <sin_lut+0x104>
    ce70:	edd7 7a01 	vldr	s15, [r7, #4]
    ce74:	ee77 7a67 	vsub.f32	s15, s14, s15
    ce78:	481e      	ldr	r0, [pc, #120]	; (cef4 <sin_lut+0x100>)
    ce7a:	eeb0 0a67 	vmov.f32	s0, s15
    ce7e:	f7ff ff73 	bl	cd68 <_sin__get_by_deg_0_90>
    ce82:	ed87 0a03 	vstr	s0, [r7, #12]
    ce86:	e02b      	b.n	cee0 <sin_lut+0xec>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:231
   } else if (angle_degrees < 270){
    ce88:	ed97 7a01 	vldr	s14, [r7, #4]
    ce8c:	eddf 7a1b 	vldr	s15, [pc, #108]	; cefc <sin_lut+0x108>
    ce90:	eeb4 7ae7 	vcmpe.f32	s14, s15
    ce94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ce98:	d511      	bpl.n	cebe <sin_lut+0xca>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:232
      ret = -_sin__get_by_deg_0_90(&sin_lut_table, angle_degrees - 180);
    ce9a:	ed97 7a01 	vldr	s14, [r7, #4]
    ce9e:	eddf 7a16 	vldr	s15, [pc, #88]	; cef8 <sin_lut+0x104>
    cea2:	ee77 7a67 	vsub.f32	s15, s14, s15
    cea6:	4813      	ldr	r0, [pc, #76]	; (cef4 <sin_lut+0x100>)
    cea8:	eeb0 0a67 	vmov.f32	s0, s15
    ceac:	f7ff ff5c 	bl	cd68 <_sin__get_by_deg_0_90>
    ceb0:	eef0 7a40 	vmov.f32	s15, s0
    ceb4:	eef1 7a67 	vneg.f32	s15, s15
    ceb8:	edc7 7a03 	vstr	s15, [r7, #12]
    cebc:	e010      	b.n	cee0 <sin_lut+0xec>
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:234
   } else {
      ret = -_sin__get_by_deg_0_90(&sin_lut_table, 360 - angle_degrees);
    cebe:	ed9f 7a10 	vldr	s14, [pc, #64]	; cf00 <sin_lut+0x10c>
    cec2:	edd7 7a01 	vldr	s15, [r7, #4]
    cec6:	ee77 7a67 	vsub.f32	s15, s14, s15
    ceca:	480a      	ldr	r0, [pc, #40]	; (cef4 <sin_lut+0x100>)
    cecc:	eeb0 0a67 	vmov.f32	s0, s15
    ced0:	f7ff ff4a 	bl	cd68 <_sin__get_by_deg_0_90>
    ced4:	eef0 7a40 	vmov.f32	s15, s0
    ced8:	eef1 7a67 	vneg.f32	s15, s15
    cedc:	edc7 7a03 	vstr	s15, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:237
   }

   return ret;
    cee0:	edd7 7a03 	vldr	s15, [r7, #12]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:238
}
    cee4:	eeb0 0a67 	vmov.f32	s0, s15
    cee8:	3710      	adds	r7, #16
    ceea:	46bd      	mov	sp, r7
    ceec:	bd80      	pop	{r7, pc}
    ceee:	bf00      	nop
    cef0:	42b40000 	.word	0x42b40000
    cef4:	0000df2c 	.word	0x0000df2c
    cef8:	43340000 	.word	0x43340000
    cefc:	43870000 	.word	0x43870000
    cf00:	43b40000 	.word	0x43b40000

0000cf04 <cos_lut>:
cos_lut():
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:246
 * See comment in .h file
 */
T_DFTrigValue  cos_lut(
      T_DFTrigDegrees            angle_degrees
      )
{
    cf04:	b580      	push	{r7, lr}
    cf06:	b082      	sub	sp, #8
    cf08:	af00      	add	r7, sp, #0
    cf0a:	ed87 0a01 	vstr	s0, [r7, #4]
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:247
   return sin_lut(angle_degrees + 90);
    cf0e:	ed97 7a01 	vldr	s14, [r7, #4]
    cf12:	eddf 7a07 	vldr	s15, [pc, #28]	; cf30 <cos_lut+0x2c>
    cf16:	ee77 7a27 	vadd.f32	s15, s14, s15
    cf1a:	eeb0 0a67 	vmov.f32	s0, s15
    cf1e:	f7ff ff69 	bl	cdf4 <sin_lut>
    cf22:	eef0 7a40 	vmov.f32	s15, s0
C:\Users\Theo\Documents\Fachhochschule\Sem_9\BAT\3_Software\lib\Debug/../src/DrivingControl/dftrig.c:248
}
    cf26:	eeb0 0a67 	vmov.f32	s0, s15
    cf2a:	3708      	adds	r7, #8
    cf2c:	46bd      	mov	sp, r7
    cf2e:	bd80      	pop	{r7, pc}
    cf30:	42b40000 	.word	0x42b40000
$d():
    cf34:	00000000 	.word	0x00000000

0000cf38 <exp>:
exp():
    cf38:	b530      	push	{r4, r5, lr}
    cf3a:	ed2d 8b04 	vpush	{d8-d9}
    cf3e:	eeb0 8a40 	vmov.f32	s16, s0
    cf42:	eef0 8a60 	vmov.f32	s17, s1
    cf46:	4c3a      	ldr	r4, [pc, #232]	; (d030 <exp+0xf8>)
    cf48:	b08b      	sub	sp, #44	; 0x2c
    cf4a:	f000 f935 	bl	d1b8 <__ieee754_exp>
    cf4e:	f994 3000 	ldrsb.w	r3, [r4]
    cf52:	eeb0 9a40 	vmov.f32	s18, s0
    cf56:	eef0 9a60 	vmov.f32	s19, s1
    cf5a:	3301      	adds	r3, #1
    cf5c:	d039      	beq.n	cfd2 <exp+0x9a>
    cf5e:	eeb0 0a48 	vmov.f32	s0, s16
    cf62:	eef0 0a68 	vmov.f32	s1, s17
    cf66:	f000 fbd9 	bl	d71c <finite>
    cf6a:	2800      	cmp	r0, #0
    cf6c:	d031      	beq.n	cfd2 <exp+0x9a>
    cf6e:	ec51 0b18 	vmov	r0, r1, d8
    cf72:	a32b      	add	r3, pc, #172	; (adr r3, d020 <exp+0xe8>)
    cf74:	e9d3 2300 	ldrd	r2, r3, [r3]
    cf78:	f7f3 fef6 	bl	d68 <__aeabi_dcmpgt>
    cf7c:	4605      	mov	r5, r0
    cf7e:	bb80      	cbnz	r0, cfe2 <exp+0xaa>
    cf80:	ec51 0b18 	vmov	r0, r1, d8
    cf84:	a328      	add	r3, pc, #160	; (adr r3, d028 <exp+0xf0>)
    cf86:	e9d3 2300 	ldrd	r2, r3, [r3]
    cf8a:	f7f3 fecf 	bl	d2c <__aeabi_dcmplt>
    cf8e:	b300      	cbz	r0, cfd2 <exp+0x9a>
    cf90:	f994 1000 	ldrsb.w	r1, [r4]
    cf94:	4827      	ldr	r0, [pc, #156]	; (d034 <exp+0xfc>)
    cf96:	9508      	str	r5, [sp, #32]
    cf98:	2200      	movs	r2, #0
    cf9a:	2300      	movs	r3, #0
    cf9c:	2404      	movs	r4, #4
    cf9e:	2902      	cmp	r1, #2
    cfa0:	ed8d 8b04 	vstr	d8, [sp, #16]
    cfa4:	ed8d 8b02 	vstr	d8, [sp, #8]
    cfa8:	e9cd 2306 	strd	r2, r3, [sp, #24]
    cfac:	9400      	str	r4, [sp, #0]
    cfae:	9001      	str	r0, [sp, #4]
    cfb0:	d02f      	beq.n	d012 <exp+0xda>
    cfb2:	4668      	mov	r0, sp
    cfb4:	f000 fbe4 	bl	d780 <matherr>
    cfb8:	b358      	cbz	r0, d012 <exp+0xda>
    cfba:	9b08      	ldr	r3, [sp, #32]
    cfbc:	b11b      	cbz	r3, cfc6 <exp+0x8e>
    cfbe:	f000 fc01 	bl	d7c4 <__errno>
    cfc2:	9b08      	ldr	r3, [sp, #32]
    cfc4:	6003      	str	r3, [r0, #0]
    cfc6:	ed9d 0b06 	vldr	d0, [sp, #24]
    cfca:	b00b      	add	sp, #44	; 0x2c
    cfcc:	ecbd 8b04 	vpop	{d8-d9}
    cfd0:	bd30      	pop	{r4, r5, pc}
    cfd2:	eeb0 0a49 	vmov.f32	s0, s18
    cfd6:	eef0 0a69 	vmov.f32	s1, s19
    cfda:	b00b      	add	sp, #44	; 0x2c
    cfdc:	ecbd 8b04 	vpop	{d8-d9}
    cfe0:	bd30      	pop	{r4, r5, pc}
    cfe2:	4b14      	ldr	r3, [pc, #80]	; (d034 <exp+0xfc>)
    cfe4:	7821      	ldrb	r1, [r4, #0]
    cfe6:	9301      	str	r3, [sp, #4]
    cfe8:	2203      	movs	r2, #3
    cfea:	2300      	movs	r3, #0
    cfec:	ed8d 8b04 	vstr	d8, [sp, #16]
    cff0:	ed8d 8b02 	vstr	d8, [sp, #8]
    cff4:	9200      	str	r2, [sp, #0]
    cff6:	9308      	str	r3, [sp, #32]
    cff8:	b929      	cbnz	r1, d006 <exp+0xce>
    cffa:	4b0f      	ldr	r3, [pc, #60]	; (d038 <exp+0x100>)
    cffc:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
    d000:	e9cd 2306 	strd	r2, r3, [sp, #24]
    d004:	e7d5      	b.n	cfb2 <exp+0x7a>
    d006:	4b0d      	ldr	r3, [pc, #52]	; (d03c <exp+0x104>)
    d008:	2200      	movs	r2, #0
    d00a:	2902      	cmp	r1, #2
    d00c:	e9cd 2306 	strd	r2, r3, [sp, #24]
    d010:	d1cf      	bne.n	cfb2 <exp+0x7a>
    d012:	f000 fbd7 	bl	d7c4 <__errno>
    d016:	2322      	movs	r3, #34	; 0x22
    d018:	6003      	str	r3, [r0, #0]
    d01a:	e7ce      	b.n	cfba <exp+0x82>
    d01c:	f3af 8000 	nop.w
    d020:	fefa39ef 	.word	0xfefa39ef
    d024:	40862e42 	.word	0x40862e42
    d028:	d52d3051 	.word	0xd52d3051
    d02c:	c0874910 	.word	0xc0874910
    d030:	20000084 	.word	0x20000084
    d034:	0000e0a0 	.word	0x0000e0a0
    d038:	47efffff 	.word	0x47efffff
    d03c:	7ff00000 	.word	0x7ff00000

0000d040 <sqrt>:
sqrt():
    d040:	b570      	push	{r4, r5, r6, lr}
    d042:	ed2d 8b04 	vpush	{d8-d9}
    d046:	eeb0 8a40 	vmov.f32	s16, s0
    d04a:	eef0 8a60 	vmov.f32	s17, s1
    d04e:	4e29      	ldr	r6, [pc, #164]	; (d0f4 <sqrt+0xb4>)
    d050:	b08a      	sub	sp, #40	; 0x28
    d052:	f000 fa45 	bl	d4e0 <__ieee754_sqrt>
    d056:	f996 3000 	ldrsb.w	r3, [r6]
    d05a:	eeb0 9a40 	vmov.f32	s18, s0
    d05e:	eef0 9a60 	vmov.f32	s19, s1
    d062:	3301      	adds	r3, #1
    d064:	d00f      	beq.n	d086 <sqrt+0x46>
    d066:	eeb0 0a48 	vmov.f32	s0, s16
    d06a:	eef0 0a68 	vmov.f32	s1, s17
    d06e:	f000 fb5d 	bl	d72c <__fpclassifyd>
    d072:	b140      	cbz	r0, d086 <sqrt+0x46>
    d074:	2400      	movs	r4, #0
    d076:	2500      	movs	r5, #0
    d078:	ec51 0b18 	vmov	r0, r1, d8
    d07c:	4622      	mov	r2, r4
    d07e:	462b      	mov	r3, r5
    d080:	f7f3 fe54 	bl	d2c <__aeabi_dcmplt>
    d084:	b938      	cbnz	r0, d096 <sqrt+0x56>
    d086:	eeb0 0a49 	vmov.f32	s0, s18
    d08a:	eef0 0a69 	vmov.f32	s1, s19
    d08e:	b00a      	add	sp, #40	; 0x28
    d090:	ecbd 8b04 	vpop	{d8-d9}
    d094:	bd70      	pop	{r4, r5, r6, pc}
    d096:	4b18      	ldr	r3, [pc, #96]	; (d0f8 <sqrt+0xb8>)
    d098:	7836      	ldrb	r6, [r6, #0]
    d09a:	9301      	str	r3, [sp, #4]
    d09c:	2201      	movs	r2, #1
    d09e:	2300      	movs	r3, #0
    d0a0:	ed8d 8b04 	vstr	d8, [sp, #16]
    d0a4:	ed8d 8b02 	vstr	d8, [sp, #8]
    d0a8:	9200      	str	r2, [sp, #0]
    d0aa:	9308      	str	r3, [sp, #32]
    d0ac:	b96e      	cbnz	r6, d0ca <sqrt+0x8a>
    d0ae:	e9cd 4506 	strd	r4, r5, [sp, #24]
    d0b2:	4668      	mov	r0, sp
    d0b4:	f000 fb64 	bl	d780 <matherr>
    d0b8:	b188      	cbz	r0, d0de <sqrt+0x9e>
    d0ba:	9b08      	ldr	r3, [sp, #32]
    d0bc:	b9a3      	cbnz	r3, d0e8 <sqrt+0xa8>
    d0be:	ed9d 0b06 	vldr	d0, [sp, #24]
    d0c2:	b00a      	add	sp, #40	; 0x28
    d0c4:	ecbd 8b04 	vpop	{d8-d9}
    d0c8:	bd70      	pop	{r4, r5, r6, pc}
    d0ca:	4620      	mov	r0, r4
    d0cc:	4629      	mov	r1, r5
    d0ce:	4622      	mov	r2, r4
    d0d0:	462b      	mov	r3, r5
    d0d2:	f7f3 fce3 	bl	a9c <__aeabi_ddiv>
    d0d6:	2e02      	cmp	r6, #2
    d0d8:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d0dc:	d1e9      	bne.n	d0b2 <sqrt+0x72>
    d0de:	f000 fb71 	bl	d7c4 <__errno>
    d0e2:	2321      	movs	r3, #33	; 0x21
    d0e4:	6003      	str	r3, [r0, #0]
    d0e6:	e7e8      	b.n	d0ba <sqrt+0x7a>
    d0e8:	f000 fb6c 	bl	d7c4 <__errno>
    d0ec:	9b08      	ldr	r3, [sp, #32]
    d0ee:	6003      	str	r3, [r0, #0]
    d0f0:	e7e5      	b.n	d0be <sqrt+0x7e>
    d0f2:	bf00      	nop
    d0f4:	20000084 	.word	0x20000084
    d0f8:	0000e0a4 	.word	0x0000e0a4

0000d0fc <sqrtf>:
sqrtf():
    d0fc:	b510      	push	{r4, lr}
    d0fe:	ed2d 8b02 	vpush	{d8}
    d102:	4c2a      	ldr	r4, [pc, #168]	; (d1ac <sqrtf+0xb0>)
    d104:	b08a      	sub	sp, #40	; 0x28
    d106:	eeb0 8a40 	vmov.f32	s16, s0
    d10a:	f000 fab5 	bl	d678 <__ieee754_sqrtf>
    d10e:	f994 3000 	ldrsb.w	r3, [r4]
    d112:	3301      	adds	r3, #1
    d114:	eef0 8a40 	vmov.f32	s17, s0
    d118:	d009      	beq.n	d12e <sqrtf+0x32>
    d11a:	eeb0 0a48 	vmov.f32	s0, s16
    d11e:	f000 fb31 	bl	d784 <__fpclassifyf>
    d122:	b120      	cbz	r0, d12e <sqrtf+0x32>
    d124:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
    d128:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    d12c:	d405      	bmi.n	d13a <sqrtf+0x3e>
    d12e:	eeb0 0a68 	vmov.f32	s0, s17
    d132:	b00a      	add	sp, #40	; 0x28
    d134:	ecbd 8b02 	vpop	{d8}
    d138:	bd10      	pop	{r4, pc}
    d13a:	2301      	movs	r3, #1
    d13c:	4a1c      	ldr	r2, [pc, #112]	; (d1b0 <sqrtf+0xb4>)
    d13e:	9300      	str	r3, [sp, #0]
    d140:	ee18 0a10 	vmov	r0, s16
    d144:	2300      	movs	r3, #0
    d146:	9201      	str	r2, [sp, #4]
    d148:	9308      	str	r3, [sp, #32]
    d14a:	f7f3 fb29 	bl	7a0 <__aeabi_f2d>
    d14e:	7824      	ldrb	r4, [r4, #0]
    d150:	e9cd 0104 	strd	r0, r1, [sp, #16]
    d154:	e9cd 0102 	strd	r0, r1, [sp, #8]
    d158:	b99c      	cbnz	r4, d182 <sqrtf+0x86>
    d15a:	2200      	movs	r2, #0
    d15c:	2300      	movs	r3, #0
    d15e:	e9cd 2306 	strd	r2, r3, [sp, #24]
    d162:	4668      	mov	r0, sp
    d164:	f000 fb0c 	bl	d780 <matherr>
    d168:	b1a8      	cbz	r0, d196 <sqrtf+0x9a>
    d16a:	9b08      	ldr	r3, [sp, #32]
    d16c:	b9c3      	cbnz	r3, d1a0 <sqrtf+0xa4>
    d16e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    d172:	f7f3 fe2b 	bl	dcc <__aeabi_d2f>
    d176:	ee00 0a10 	vmov	s0, r0
    d17a:	b00a      	add	sp, #40	; 0x28
    d17c:	ecbd 8b02 	vpop	{d8}
    d180:	bd10      	pop	{r4, pc}
    d182:	2000      	movs	r0, #0
    d184:	2100      	movs	r1, #0
    d186:	4602      	mov	r2, r0
    d188:	460b      	mov	r3, r1
    d18a:	f7f3 fc87 	bl	a9c <__aeabi_ddiv>
    d18e:	2c02      	cmp	r4, #2
    d190:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d194:	d1e5      	bne.n	d162 <sqrtf+0x66>
    d196:	f000 fb15 	bl	d7c4 <__errno>
    d19a:	2321      	movs	r3, #33	; 0x21
    d19c:	6003      	str	r3, [r0, #0]
    d19e:	e7e4      	b.n	d16a <sqrtf+0x6e>
    d1a0:	f000 fb10 	bl	d7c4 <__errno>
    d1a4:	9b08      	ldr	r3, [sp, #32]
    d1a6:	6003      	str	r3, [r0, #0]
    d1a8:	e7e1      	b.n	d16e <sqrtf+0x72>
    d1aa:	bf00      	nop
    d1ac:	20000084 	.word	0x20000084
    d1b0:	0000e0ac 	.word	0x0000e0ac
$d():
    d1b4:	00000000 	.word	0x00000000

0000d1b8 <__ieee754_exp>:
__ieee754_exp():
    d1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d1bc:	ec55 4b10 	vmov	r4, r5, d0
    d1c0:	48b9      	ldr	r0, [pc, #740]	; (d4a8 <__ieee754_exp+0x2f0>)
    d1c2:	f025 4100 	bic.w	r1, r5, #2147483648	; 0x80000000
    d1c6:	4281      	cmp	r1, r0
    d1c8:	b083      	sub	sp, #12
    d1ca:	ea4f 76d5 	mov.w	r6, r5, lsr #31
    d1ce:	d910      	bls.n	d1f2 <__ieee754_exp+0x3a>
    d1d0:	48b6      	ldr	r0, [pc, #728]	; (d4ac <__ieee754_exp+0x2f4>)
    d1d2:	4281      	cmp	r1, r0
    d1d4:	ee10 0a10 	vmov	r0, s0
    d1d8:	4629      	mov	r1, r5
    d1da:	d92a      	bls.n	d232 <__ieee754_exp+0x7a>
    d1dc:	f3c5 0313 	ubfx	r3, r5, #0, #20
    d1e0:	4323      	orrs	r3, r4
    d1e2:	f040 8105 	bne.w	d3f0 <__ieee754_exp+0x238>
    d1e6:	2e00      	cmp	r6, #0
    d1e8:	f040 8129 	bne.w	d43e <__ieee754_exp+0x286>
    d1ec:	b003      	add	sp, #12
    d1ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d1f2:	4baf      	ldr	r3, [pc, #700]	; (d4b0 <__ieee754_exp+0x2f8>)
    d1f4:	4299      	cmp	r1, r3
    d1f6:	f200 80d5 	bhi.w	d3a4 <__ieee754_exp+0x1ec>
    d1fa:	4bae      	ldr	r3, [pc, #696]	; (d4b4 <__ieee754_exp+0x2fc>)
    d1fc:	4299      	cmp	r1, r3
    d1fe:	f200 80ea 	bhi.w	d3d6 <__ieee754_exp+0x21e>
    d202:	a391      	add	r3, pc, #580	; (adr r3, d448 <__ieee754_exp+0x290>)
    d204:	e9d3 2300 	ldrd	r2, r3, [r3]
    d208:	ee10 0a10 	vmov	r0, s0
    d20c:	4629      	mov	r1, r5
    d20e:	f7f3 f969 	bl	4e4 <__adddf3>
    d212:	2200      	movs	r2, #0
    d214:	4ba8      	ldr	r3, [pc, #672]	; (d4b8 <__ieee754_exp+0x300>)
    d216:	f7f3 fda7 	bl	d68 <__aeabi_dcmpgt>
    d21a:	2800      	cmp	r0, #0
    d21c:	f000 815d 	beq.w	d4da <__ieee754_exp+0x322>
    d220:	4620      	mov	r0, r4
    d222:	4629      	mov	r1, r5
    d224:	2200      	movs	r2, #0
    d226:	4ba4      	ldr	r3, [pc, #656]	; (d4b8 <__ieee754_exp+0x300>)
    d228:	f7f3 f95c 	bl	4e4 <__adddf3>
    d22c:	ec41 0b10 	vmov	d0, r0, r1
    d230:	e7dc      	b.n	d1ec <__ieee754_exp+0x34>
    d232:	a387      	add	r3, pc, #540	; (adr r3, d450 <__ieee754_exp+0x298>)
    d234:	e9d3 2300 	ldrd	r2, r3, [r3]
    d238:	f7f3 fd96 	bl	d68 <__aeabi_dcmpgt>
    d23c:	2800      	cmp	r0, #0
    d23e:	f040 80cd 	bne.w	d3dc <__ieee754_exp+0x224>
    d242:	4620      	mov	r0, r4
    d244:	4629      	mov	r1, r5
    d246:	a384      	add	r3, pc, #528	; (adr r3, d458 <__ieee754_exp+0x2a0>)
    d248:	e9d3 2300 	ldrd	r2, r3, [r3]
    d24c:	f7f3 fd6e 	bl	d2c <__aeabi_dcmplt>
    d250:	2800      	cmp	r0, #0
    d252:	f040 80f4 	bne.w	d43e <__ieee754_exp+0x286>
    d256:	a382      	add	r3, pc, #520	; (adr r3, d460 <__ieee754_exp+0x2a8>)
    d258:	e9d3 2300 	ldrd	r2, r3, [r3]
    d25c:	4620      	mov	r0, r4
    d25e:	4629      	mov	r1, r5
    d260:	f7f3 faf2 	bl	848 <__aeabi_dmul>
    d264:	4b95      	ldr	r3, [pc, #596]	; (d4bc <__ieee754_exp+0x304>)
    d266:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
    d26a:	e9d6 2300 	ldrd	r2, r3, [r6]
    d26e:	f7f3 f939 	bl	4e4 <__adddf3>
    d272:	f7f3 fd83 	bl	d7c <__aeabi_d2iz>
    d276:	4680      	mov	r8, r0
    d278:	f7f3 fa80 	bl	77c <__aeabi_i2d>
    d27c:	a37a      	add	r3, pc, #488	; (adr r3, d468 <__ieee754_exp+0x2b0>)
    d27e:	e9d3 2300 	ldrd	r2, r3, [r3]
    d282:	4606      	mov	r6, r0
    d284:	460f      	mov	r7, r1
    d286:	f7f3 fadf 	bl	848 <__aeabi_dmul>
    d28a:	4602      	mov	r2, r0
    d28c:	460b      	mov	r3, r1
    d28e:	4620      	mov	r0, r4
    d290:	4629      	mov	r1, r5
    d292:	f7f3 f925 	bl	4e0 <__aeabi_dsub>
    d296:	a376      	add	r3, pc, #472	; (adr r3, d470 <__ieee754_exp+0x2b8>)
    d298:	e9d3 2300 	ldrd	r2, r3, [r3]
    d29c:	e9cd 0100 	strd	r0, r1, [sp]
    d2a0:	4630      	mov	r0, r6
    d2a2:	4639      	mov	r1, r7
    d2a4:	f7f3 fad0 	bl	848 <__aeabi_dmul>
    d2a8:	4682      	mov	sl, r0
    d2aa:	468b      	mov	fp, r1
    d2ac:	e9dd 0100 	ldrd	r0, r1, [sp]
    d2b0:	4652      	mov	r2, sl
    d2b2:	465b      	mov	r3, fp
    d2b4:	f7f3 f914 	bl	4e0 <__aeabi_dsub>
    d2b8:	4604      	mov	r4, r0
    d2ba:	460d      	mov	r5, r1
    d2bc:	4622      	mov	r2, r4
    d2be:	462b      	mov	r3, r5
    d2c0:	4620      	mov	r0, r4
    d2c2:	4629      	mov	r1, r5
    d2c4:	f7f3 fac0 	bl	848 <__aeabi_dmul>
    d2c8:	a36b      	add	r3, pc, #428	; (adr r3, d478 <__ieee754_exp+0x2c0>)
    d2ca:	e9d3 2300 	ldrd	r2, r3, [r3]
    d2ce:	4606      	mov	r6, r0
    d2d0:	460f      	mov	r7, r1
    d2d2:	f7f3 fab9 	bl	848 <__aeabi_dmul>
    d2d6:	a36a      	add	r3, pc, #424	; (adr r3, d480 <__ieee754_exp+0x2c8>)
    d2d8:	e9d3 2300 	ldrd	r2, r3, [r3]
    d2dc:	f7f3 f900 	bl	4e0 <__aeabi_dsub>
    d2e0:	4632      	mov	r2, r6
    d2e2:	463b      	mov	r3, r7
    d2e4:	f7f3 fab0 	bl	848 <__aeabi_dmul>
    d2e8:	a367      	add	r3, pc, #412	; (adr r3, d488 <__ieee754_exp+0x2d0>)
    d2ea:	e9d3 2300 	ldrd	r2, r3, [r3]
    d2ee:	f7f3 f8f9 	bl	4e4 <__adddf3>
    d2f2:	4632      	mov	r2, r6
    d2f4:	463b      	mov	r3, r7
    d2f6:	f7f3 faa7 	bl	848 <__aeabi_dmul>
    d2fa:	a365      	add	r3, pc, #404	; (adr r3, d490 <__ieee754_exp+0x2d8>)
    d2fc:	e9d3 2300 	ldrd	r2, r3, [r3]
    d300:	f7f3 f8ee 	bl	4e0 <__aeabi_dsub>
    d304:	4632      	mov	r2, r6
    d306:	463b      	mov	r3, r7
    d308:	f7f3 fa9e 	bl	848 <__aeabi_dmul>
    d30c:	a362      	add	r3, pc, #392	; (adr r3, d498 <__ieee754_exp+0x2e0>)
    d30e:	e9d3 2300 	ldrd	r2, r3, [r3]
    d312:	f7f3 f8e7 	bl	4e4 <__adddf3>
    d316:	4632      	mov	r2, r6
    d318:	463b      	mov	r3, r7
    d31a:	f7f3 fa95 	bl	848 <__aeabi_dmul>
    d31e:	4602      	mov	r2, r0
    d320:	460b      	mov	r3, r1
    d322:	4620      	mov	r0, r4
    d324:	4629      	mov	r1, r5
    d326:	f7f3 f8db 	bl	4e0 <__aeabi_dsub>
    d32a:	4606      	mov	r6, r0
    d32c:	460f      	mov	r7, r1
    d32e:	4620      	mov	r0, r4
    d330:	4629      	mov	r1, r5
    d332:	4632      	mov	r2, r6
    d334:	463b      	mov	r3, r7
    d336:	f1b8 0f00 	cmp.w	r8, #0
    d33a:	d060      	beq.n	d3fe <__ieee754_exp+0x246>
    d33c:	f7f3 fa84 	bl	848 <__aeabi_dmul>
    d340:	4632      	mov	r2, r6
    d342:	4604      	mov	r4, r0
    d344:	460d      	mov	r5, r1
    d346:	463b      	mov	r3, r7
    d348:	2000      	movs	r0, #0
    d34a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    d34e:	f7f3 f8c7 	bl	4e0 <__aeabi_dsub>
    d352:	4602      	mov	r2, r0
    d354:	460b      	mov	r3, r1
    d356:	4620      	mov	r0, r4
    d358:	4629      	mov	r1, r5
    d35a:	f7f3 fb9f 	bl	a9c <__aeabi_ddiv>
    d35e:	4602      	mov	r2, r0
    d360:	460b      	mov	r3, r1
    d362:	4650      	mov	r0, sl
    d364:	4659      	mov	r1, fp
    d366:	f7f3 f8bb 	bl	4e0 <__aeabi_dsub>
    d36a:	e9dd 2300 	ldrd	r2, r3, [sp]
    d36e:	f7f3 f8b7 	bl	4e0 <__aeabi_dsub>
    d372:	460b      	mov	r3, r1
    d374:	4602      	mov	r2, r0
    d376:	4950      	ldr	r1, [pc, #320]	; (d4b8 <__ieee754_exp+0x300>)
    d378:	2000      	movs	r0, #0
    d37a:	f7f3 f8b1 	bl	4e0 <__aeabi_dsub>
    d37e:	f46f 737f 	mvn.w	r3, #1020	; 0x3fc
    d382:	4598      	cmp	r8, r3
    d384:	f280 80a2 	bge.w	d4cc <__ieee754_exp+0x314>
    d388:	f508 787a 	add.w	r8, r8, #1000	; 0x3e8
    d38c:	eb01 5108 	add.w	r1, r1, r8, lsl #20
    d390:	2200      	movs	r2, #0
    d392:	f04f 73b8 	mov.w	r3, #24117248	; 0x1700000
    d396:	f7f3 fa57 	bl	848 <__aeabi_dmul>
    d39a:	ec41 0b10 	vmov	d0, r0, r1
    d39e:	b003      	add	sp, #12
    d3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d3a4:	4b46      	ldr	r3, [pc, #280]	; (d4c0 <__ieee754_exp+0x308>)
    d3a6:	4299      	cmp	r1, r3
    d3a8:	f63f af55 	bhi.w	d256 <__ieee754_exp+0x9e>
    d3ac:	4b45      	ldr	r3, [pc, #276]	; (d4c4 <__ieee754_exp+0x30c>)
    d3ae:	00f7      	lsls	r7, r6, #3
    d3b0:	443b      	add	r3, r7
    d3b2:	e9d3 2300 	ldrd	r2, r3, [r3]
    d3b6:	ee10 0a10 	vmov	r0, s0
    d3ba:	4629      	mov	r1, r5
    d3bc:	f7f3 f890 	bl	4e0 <__aeabi_dsub>
    d3c0:	4b41      	ldr	r3, [pc, #260]	; (d4c8 <__ieee754_exp+0x310>)
    d3c2:	f1c6 0801 	rsb	r8, r6, #1
    d3c6:	441f      	add	r7, r3
    d3c8:	e9cd 0100 	strd	r0, r1, [sp]
    d3cc:	e9d7 ab00 	ldrd	sl, fp, [r7]
    d3d0:	ebc6 0808 	rsb	r8, r6, r8
    d3d4:	e76a      	b.n	d2ac <__ieee754_exp+0xf4>
    d3d6:	f04f 0800 	mov.w	r8, #0
    d3da:	e76f      	b.n	d2bc <__ieee754_exp+0x104>
    d3dc:	a11a      	add	r1, pc, #104	; (adr r1, d448 <__ieee754_exp+0x290>)
    d3de:	e9d1 0100 	ldrd	r0, r1, [r1]
    d3e2:	4602      	mov	r2, r0
    d3e4:	460b      	mov	r3, r1
    d3e6:	f7f3 fa2f 	bl	848 <__aeabi_dmul>
    d3ea:	ec41 0b10 	vmov	d0, r0, r1
    d3ee:	e6fd      	b.n	d1ec <__ieee754_exp+0x34>
    d3f0:	4622      	mov	r2, r4
    d3f2:	462b      	mov	r3, r5
    d3f4:	f7f3 f876 	bl	4e4 <__adddf3>
    d3f8:	ec41 0b10 	vmov	d0, r0, r1
    d3fc:	e6f6      	b.n	d1ec <__ieee754_exp+0x34>
    d3fe:	f7f3 fa23 	bl	848 <__aeabi_dmul>
    d402:	2200      	movs	r2, #0
    d404:	4680      	mov	r8, r0
    d406:	4689      	mov	r9, r1
    d408:	4630      	mov	r0, r6
    d40a:	4639      	mov	r1, r7
    d40c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    d410:	f7f3 f866 	bl	4e0 <__aeabi_dsub>
    d414:	4602      	mov	r2, r0
    d416:	460b      	mov	r3, r1
    d418:	4640      	mov	r0, r8
    d41a:	4649      	mov	r1, r9
    d41c:	f7f3 fb3e 	bl	a9c <__aeabi_ddiv>
    d420:	4622      	mov	r2, r4
    d422:	462b      	mov	r3, r5
    d424:	f7f3 f85c 	bl	4e0 <__aeabi_dsub>
    d428:	4602      	mov	r2, r0
    d42a:	460b      	mov	r3, r1
    d42c:	2000      	movs	r0, #0
    d42e:	4922      	ldr	r1, [pc, #136]	; (d4b8 <__ieee754_exp+0x300>)
    d430:	f7f3 f856 	bl	4e0 <__aeabi_dsub>
    d434:	ec41 0b10 	vmov	d0, r0, r1
    d438:	b003      	add	sp, #12
    d43a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d43e:	ed9f 0b18 	vldr	d0, [pc, #96]	; d4a0 <__ieee754_exp+0x2e8>
    d442:	b003      	add	sp, #12
    d444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d448:	8800759c 	.word	0x8800759c
    d44c:	7e37e43c 	.word	0x7e37e43c
    d450:	fefa39ef 	.word	0xfefa39ef
    d454:	40862e42 	.word	0x40862e42
    d458:	d52d3051 	.word	0xd52d3051
    d45c:	c0874910 	.word	0xc0874910
    d460:	652b82fe 	.word	0x652b82fe
    d464:	3ff71547 	.word	0x3ff71547
    d468:	fee00000 	.word	0xfee00000
    d46c:	3fe62e42 	.word	0x3fe62e42
    d470:	35793c76 	.word	0x35793c76
    d474:	3dea39ef 	.word	0x3dea39ef
    d478:	72bea4d0 	.word	0x72bea4d0
    d47c:	3e663769 	.word	0x3e663769
    d480:	c5d26bf1 	.word	0xc5d26bf1
    d484:	3ebbbd41 	.word	0x3ebbbd41
    d488:	af25de2c 	.word	0xaf25de2c
    d48c:	3f11566a 	.word	0x3f11566a
    d490:	16bebd93 	.word	0x16bebd93
    d494:	3f66c16c 	.word	0x3f66c16c
    d498:	5555553e 	.word	0x5555553e
    d49c:	3fc55555 	.word	0x3fc55555
	...
    d4a8:	40862e41 	.word	0x40862e41
    d4ac:	7fefffff 	.word	0x7fefffff
    d4b0:	3fd62e42 	.word	0x3fd62e42
    d4b4:	3e2fffff 	.word	0x3e2fffff
    d4b8:	3ff00000 	.word	0x3ff00000
    d4bc:	0000e0b8 	.word	0x0000e0b8
    d4c0:	3ff0a2b1 	.word	0x3ff0a2b1
    d4c4:	0000e0d8 	.word	0x0000e0d8
    d4c8:	0000e0c8 	.word	0x0000e0c8
    d4cc:	eb01 5108 	add.w	r1, r1, r8, lsl #20
    d4d0:	ec41 0b10 	vmov	d0, r0, r1
    d4d4:	b003      	add	sp, #12
    d4d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d4da:	4680      	mov	r8, r0
    d4dc:	e6ee      	b.n	d2bc <__ieee754_exp+0x104>
$t():
    d4de:	bf00      	nop

0000d4e0 <__ieee754_sqrt>:
__ieee754_sqrt():
    d4e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    d4e4:	ec53 2b10 	vmov	r2, r3, d0
    d4e8:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
    d4ec:	0d24      	lsrs	r4, r4, #20
    d4ee:	4d61      	ldr	r5, [pc, #388]	; (d674 <__ieee754_sqrt+0x194>)
    d4f0:	0524      	lsls	r4, r4, #20
    d4f2:	42ac      	cmp	r4, r5
    d4f4:	ed2d 8b02 	vpush	{d8}
    d4f8:	eeb0 8a40 	vmov.f32	s16, s0
    d4fc:	eef0 8a60 	vmov.f32	s17, s1
    d500:	4619      	mov	r1, r3
    d502:	ee10 0a10 	vmov	r0, s0
    d506:	f000 8094 	beq.w	d632 <__ieee754_sqrt+0x152>
    d50a:	2b00      	cmp	r3, #0
    d50c:	dd74      	ble.n	d5f8 <__ieee754_sqrt+0x118>
    d50e:	151f      	asrs	r7, r3, #20
    d510:	d07d      	beq.n	d60e <__ieee754_sqrt+0x12e>
    d512:	f2a7 37ff 	subw	r7, r7, #1023	; 0x3ff
    d516:	f3c1 0113 	ubfx	r1, r1, #0, #20
    d51a:	07fa      	lsls	r2, r7, #31
    d51c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    d520:	d45f      	bmi.n	d5e2 <__ieee754_sqrt+0x102>
    d522:	0fc3      	lsrs	r3, r0, #31
    d524:	f04f 0c00 	mov.w	ip, #0
    d528:	eb03 0341 	add.w	r3, r3, r1, lsl #1
    d52c:	0042      	lsls	r2, r0, #1
    d52e:	107f      	asrs	r7, r7, #1
    d530:	4665      	mov	r5, ip
    d532:	2016      	movs	r0, #22
    d534:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
    d538:	186c      	adds	r4, r5, r1
    d53a:	429c      	cmp	r4, r3
    d53c:	ea4f 76d2 	mov.w	r6, r2, lsr #31
    d540:	ea4f 0242 	mov.w	r2, r2, lsl #1
    d544:	dc02      	bgt.n	d54c <__ieee754_sqrt+0x6c>
    d546:	1b1b      	subs	r3, r3, r4
    d548:	1865      	adds	r5, r4, r1
    d54a:	448c      	add	ip, r1
    d54c:	3801      	subs	r0, #1
    d54e:	eb06 0343 	add.w	r3, r6, r3, lsl #1
    d552:	ea4f 0151 	mov.w	r1, r1, lsr #1
    d556:	d1ef      	bne.n	d538 <__ieee754_sqrt+0x58>
    d558:	4680      	mov	r8, r0
    d55a:	2620      	movs	r6, #32
    d55c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
    d560:	e009      	b.n	d576 <__ieee754_sqrt+0x96>
    d562:	d023      	beq.n	d5ac <__ieee754_sqrt+0xcc>
    d564:	0fd4      	lsrs	r4, r2, #31
    d566:	3e01      	subs	r6, #1
    d568:	ea4f 0151 	mov.w	r1, r1, lsr #1
    d56c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
    d570:	ea4f 0242 	mov.w	r2, r2, lsl #1
    d574:	d01e      	beq.n	d5b4 <__ieee754_sqrt+0xd4>
    d576:	42ab      	cmp	r3, r5
    d578:	eb01 0408 	add.w	r4, r1, r8
    d57c:	ddf1      	ble.n	d562 <__ieee754_sqrt+0x82>
    d57e:	f004 4900 	and.w	r9, r4, #2147483648	; 0x80000000
    d582:	f1b9 4f00 	cmp.w	r9, #2147483648	; 0x80000000
    d586:	eb04 0801 	add.w	r8, r4, r1
    d58a:	d009      	beq.n	d5a0 <__ieee754_sqrt+0xc0>
    d58c:	46a9      	mov	r9, r5
    d58e:	1b5b      	subs	r3, r3, r5
    d590:	4294      	cmp	r4, r2
    d592:	bf88      	it	hi
    d594:	f103 33ff 	addhi.w	r3, r3, #4294967295
    d598:	1b12      	subs	r2, r2, r4
    d59a:	4408      	add	r0, r1
    d59c:	464d      	mov	r5, r9
    d59e:	e7e1      	b.n	d564 <__ieee754_sqrt+0x84>
    d5a0:	f1b8 0f00 	cmp.w	r8, #0
    d5a4:	dbf2      	blt.n	d58c <__ieee754_sqrt+0xac>
    d5a6:	f105 0901 	add.w	r9, r5, #1
    d5aa:	e7f0      	b.n	d58e <__ieee754_sqrt+0xae>
    d5ac:	4294      	cmp	r4, r2
    d5ae:	d9e6      	bls.n	d57e <__ieee754_sqrt+0x9e>
    d5b0:	461d      	mov	r5, r3
    d5b2:	e7d7      	b.n	d564 <__ieee754_sqrt+0x84>
    d5b4:	431a      	orrs	r2, r3
    d5b6:	d119      	bne.n	d5ec <__ieee754_sqrt+0x10c>
    d5b8:	0846      	lsrs	r6, r0, #1
    d5ba:	ea4f 016c 	mov.w	r1, ip, asr #1
    d5be:	f101 517f 	add.w	r1, r1, #1069547520	; 0x3fc00000
    d5c2:	f01c 0f01 	tst.w	ip, #1
    d5c6:	f501 1100 	add.w	r1, r1, #2097152	; 0x200000
    d5ca:	bf18      	it	ne
    d5cc:	f046 4600 	orrne.w	r6, r6, #2147483648	; 0x80000000
    d5d0:	eb01 5307 	add.w	r3, r1, r7, lsl #20
    d5d4:	4632      	mov	r2, r6
    d5d6:	ec43 2b10 	vmov	d0, r2, r3
    d5da:	ecbd 8b02 	vpop	{d8}
    d5de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    d5e2:	0fc3      	lsrs	r3, r0, #31
    d5e4:	eb03 0141 	add.w	r1, r3, r1, lsl #1
    d5e8:	0040      	lsls	r0, r0, #1
    d5ea:	e79a      	b.n	d522 <__ieee754_sqrt+0x42>
    d5ec:	1c43      	adds	r3, r0, #1
    d5ee:	d02e      	beq.n	d64e <__ieee754_sqrt+0x16e>
    d5f0:	f000 0301 	and.w	r3, r0, #1
    d5f4:	4418      	add	r0, r3
    d5f6:	e7df      	b.n	d5b8 <__ieee754_sqrt+0xd8>
    d5f8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
    d5fc:	4311      	orrs	r1, r2
    d5fe:	d0ec      	beq.n	d5da <__ieee754_sqrt+0xfa>
    d600:	bb63      	cbnz	r3, d65c <__ieee754_sqrt+0x17c>
    d602:	461f      	mov	r7, r3
    d604:	0ac1      	lsrs	r1, r0, #11
    d606:	3f15      	subs	r7, #21
    d608:	0540      	lsls	r0, r0, #21
    d60a:	2900      	cmp	r1, #0
    d60c:	d0fa      	beq.n	d604 <__ieee754_sqrt+0x124>
    d60e:	f411 1380 	ands.w	r3, r1, #1048576	; 0x100000
    d612:	d11f      	bne.n	d654 <__ieee754_sqrt+0x174>
    d614:	0049      	lsls	r1, r1, #1
    d616:	02cc      	lsls	r4, r1, #11
    d618:	f103 0301 	add.w	r3, r3, #1
    d61c:	d5fa      	bpl.n	d614 <__ieee754_sqrt+0x134>
    d61e:	f1c3 0201 	rsb	r2, r3, #1
    d622:	f1c3 0420 	rsb	r4, r3, #32
    d626:	fa20 f404 	lsr.w	r4, r0, r4
    d62a:	4321      	orrs	r1, r4
    d62c:	4417      	add	r7, r2
    d62e:	4098      	lsls	r0, r3
    d630:	e76f      	b.n	d512 <__ieee754_sqrt+0x32>
    d632:	ec51 0b10 	vmov	r0, r1, d0
    d636:	f7f3 f907 	bl	848 <__aeabi_dmul>
    d63a:	ec53 2b18 	vmov	r2, r3, d8
    d63e:	f7f2 ff51 	bl	4e4 <__adddf3>
    d642:	ecbd 8b02 	vpop	{d8}
    d646:	ec41 0b10 	vmov	d0, r0, r1
    d64a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    d64e:	f10c 0c01 	add.w	ip, ip, #1
    d652:	e7b2      	b.n	d5ba <__ieee754_sqrt+0xda>
    d654:	2420      	movs	r4, #32
    d656:	2201      	movs	r2, #1
    d658:	2300      	movs	r3, #0
    d65a:	e7e4      	b.n	d626 <__ieee754_sqrt+0x146>
    d65c:	ec51 0b10 	vmov	r0, r1, d0
    d660:	460b      	mov	r3, r1
    d662:	f7f2 ff3d 	bl	4e0 <__aeabi_dsub>
    d666:	4602      	mov	r2, r0
    d668:	460b      	mov	r3, r1
    d66a:	f7f3 fa17 	bl	a9c <__aeabi_ddiv>
    d66e:	ec41 0b10 	vmov	d0, r0, r1
    d672:	e7b2      	b.n	d5da <__ieee754_sqrt+0xfa>
    d674:	7ff00000 	.word	0x7ff00000

0000d678 <__ieee754_sqrtf>:
__ieee754_sqrtf():
    d678:	ee10 3a10 	vmov	r3, s0
    d67c:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
    d680:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
    d684:	b470      	push	{r4, r5, r6}
    d686:	d230      	bcs.n	d6ea <__ieee754_sqrtf+0x72>
    d688:	b36a      	cbz	r2, d6e6 <__ieee754_sqrtf+0x6e>
    d68a:	2b00      	cmp	r3, #0
    d68c:	db3d      	blt.n	d70a <__ieee754_sqrtf+0x92>
    d68e:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
    d692:	ea4f 51e3 	mov.w	r1, r3, asr #23
    d696:	d32c      	bcc.n	d6f2 <__ieee754_sqrtf+0x7a>
    d698:	f1a1 027f 	sub.w	r2, r1, #127	; 0x7f
    d69c:	f3c3 0316 	ubfx	r3, r3, #0, #23
    d6a0:	07d1      	lsls	r1, r2, #31
    d6a2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
    d6a6:	bf48      	it	mi
    d6a8:	005b      	lslmi	r3, r3, #1
    d6aa:	2500      	movs	r5, #0
    d6ac:	1056      	asrs	r6, r2, #1
    d6ae:	005b      	lsls	r3, r3, #1
    d6b0:	462c      	mov	r4, r5
    d6b2:	2119      	movs	r1, #25
    d6b4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
    d6b8:	18a0      	adds	r0, r4, r2
    d6ba:	4298      	cmp	r0, r3
    d6bc:	dc02      	bgt.n	d6c4 <__ieee754_sqrtf+0x4c>
    d6be:	1a1b      	subs	r3, r3, r0
    d6c0:	1884      	adds	r4, r0, r2
    d6c2:	4415      	add	r5, r2
    d6c4:	3901      	subs	r1, #1
    d6c6:	ea4f 0343 	mov.w	r3, r3, lsl #1
    d6ca:	ea4f 0252 	mov.w	r2, r2, lsr #1
    d6ce:	d1f3      	bne.n	d6b8 <__ieee754_sqrtf+0x40>
    d6d0:	b113      	cbz	r3, d6d8 <__ieee754_sqrtf+0x60>
    d6d2:	f005 0301 	and.w	r3, r5, #1
    d6d6:	441d      	add	r5, r3
    d6d8:	106d      	asrs	r5, r5, #1
    d6da:	f105 557c 	add.w	r5, r5, #1056964608	; 0x3f000000
    d6de:	eb05 55c6 	add.w	r5, r5, r6, lsl #23
    d6e2:	ee00 5a10 	vmov	s0, r5
    d6e6:	bc70      	pop	{r4, r5, r6}
    d6e8:	4770      	bx	lr
    d6ea:	eea0 0a00 	vfma.f32	s0, s0, s0
    d6ee:	bc70      	pop	{r4, r5, r6}
    d6f0:	4770      	bx	lr
    d6f2:	f413 0200 	ands.w	r2, r3, #8388608	; 0x800000
    d6f6:	d10d      	bne.n	d714 <__ieee754_sqrtf+0x9c>
    d6f8:	005b      	lsls	r3, r3, #1
    d6fa:	0218      	lsls	r0, r3, #8
    d6fc:	f102 0201 	add.w	r2, r2, #1
    d700:	d5fa      	bpl.n	d6f8 <__ieee754_sqrtf+0x80>
    d702:	f1c2 0201 	rsb	r2, r2, #1
    d706:	4411      	add	r1, r2
    d708:	e7c6      	b.n	d698 <__ieee754_sqrtf+0x20>
    d70a:	ee30 0a40 	vsub.f32	s0, s0, s0
    d70e:	ee80 0a00 	vdiv.f32	s0, s0, s0
    d712:	e7e8      	b.n	d6e6 <__ieee754_sqrtf+0x6e>
    d714:	2201      	movs	r2, #1
    d716:	4411      	add	r1, r2
    d718:	e7be      	b.n	d698 <__ieee754_sqrtf+0x20>
    d71a:	bf00      	nop

0000d71c <finite>:
finite():
    d71c:	ec53 2b10 	vmov	r2, r3, d0
    d720:	f043 4000 	orr.w	r0, r3, #2147483648	; 0x80000000
    d724:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
    d728:	0fc0      	lsrs	r0, r0, #31
    d72a:	4770      	bx	lr

0000d72c <__fpclassifyd>:
__fpclassifyd():
    d72c:	ec53 2b10 	vmov	r2, r3, d0
    d730:	f033 4100 	bics.w	r1, r3, #2147483648	; 0x80000000
    d734:	b410      	push	{r4}
    d736:	d008      	beq.n	d74a <__fpclassifyd+0x1e>
    d738:	480f      	ldr	r0, [pc, #60]	; (d778 <__fpclassifyd+0x4c>)
    d73a:	f5a1 1480 	sub.w	r4, r1, #1048576	; 0x100000
    d73e:	4284      	cmp	r4, r0
    d740:	d80a      	bhi.n	d758 <__fpclassifyd+0x2c>
    d742:	2004      	movs	r0, #4
    d744:	f85d 4b04 	ldr.w	r4, [sp], #4
    d748:	4770      	bx	lr
    d74a:	2a00      	cmp	r2, #0
    d74c:	bf0c      	ite	eq
    d74e:	2002      	moveq	r0, #2
    d750:	2003      	movne	r0, #3
    d752:	f85d 4b04 	ldr.w	r4, [sp], #4
    d756:	4770      	bx	lr
    d758:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    d75c:	d201      	bcs.n	d762 <__fpclassifyd+0x36>
    d75e:	2003      	movs	r0, #3
    d760:	e7f7      	b.n	d752 <__fpclassifyd+0x26>
    d762:	4806      	ldr	r0, [pc, #24]	; (d77c <__fpclassifyd+0x50>)
    d764:	4281      	cmp	r1, r0
    d766:	d001      	beq.n	d76c <__fpclassifyd+0x40>
    d768:	2000      	movs	r0, #0
    d76a:	e7f2      	b.n	d752 <__fpclassifyd+0x26>
    d76c:	f1d2 0001 	rsbs	r0, r2, #1
    d770:	bf38      	it	cc
    d772:	2000      	movcc	r0, #0
    d774:	e7ed      	b.n	d752 <__fpclassifyd+0x26>
    d776:	bf00      	nop
    d778:	7fdfffff 	.word	0x7fdfffff
    d77c:	7ff00000 	.word	0x7ff00000

0000d780 <matherr>:
matherr():
    d780:	2000      	movs	r0, #0
    d782:	4770      	bx	lr

0000d784 <__fpclassifyf>:
__fpclassifyf():
    d784:	ee10 3a10 	vmov	r3, s0
    d788:	f033 4000 	bics.w	r0, r3, #2147483648	; 0x80000000
    d78c:	d101      	bne.n	d792 <__fpclassifyf+0xe>
    d78e:	2002      	movs	r0, #2
    d790:	4770      	bx	lr
    d792:	f5a0 0300 	sub.w	r3, r0, #8388608	; 0x800000
    d796:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
    d79a:	d201      	bcs.n	d7a0 <__fpclassifyf+0x1c>
    d79c:	2004      	movs	r0, #4
    d79e:	4770      	bx	lr
    d7a0:	4b05      	ldr	r3, [pc, #20]	; (d7b8 <__fpclassifyf+0x34>)
    d7a2:	1e42      	subs	r2, r0, #1
    d7a4:	429a      	cmp	r2, r3
    d7a6:	d801      	bhi.n	d7ac <__fpclassifyf+0x28>
    d7a8:	2003      	movs	r0, #3
    d7aa:	4770      	bx	lr
    d7ac:	f1b0 43ff 	subs.w	r3, r0, #2139095040	; 0x7f800000
    d7b0:	4258      	negs	r0, r3
    d7b2:	4158      	adcs	r0, r3
    d7b4:	4770      	bx	lr
    d7b6:	bf00      	nop
    d7b8:	007ffffe 	.word	0x007ffffe

0000d7bc <atoi>:
atoi():
    d7bc:	2100      	movs	r1, #0
    d7be:	220a      	movs	r2, #10
    d7c0:	f000 b912 	b.w	d9e8 <strtol>

0000d7c4 <__errno>:
__errno():
    d7c4:	4b01      	ldr	r3, [pc, #4]	; (d7cc <__errno+0x8>)
    d7c6:	6818      	ldr	r0, [r3, #0]
    d7c8:	4770      	bx	lr
    d7ca:	bf00      	nop
    d7cc:	200000e8 	.word	0x200000e8

0000d7d0 <exit>:
exit():
    d7d0:	b508      	push	{r3, lr}
    d7d2:	4b07      	ldr	r3, [pc, #28]	; (d7f0 <exit+0x20>)
    d7d4:	4604      	mov	r4, r0
    d7d6:	b113      	cbz	r3, d7de <exit+0xe>
    d7d8:	2100      	movs	r1, #0
    d7da:	f3af 8000 	nop.w
    d7de:	4b05      	ldr	r3, [pc, #20]	; (d7f4 <exit+0x24>)
    d7e0:	6818      	ldr	r0, [r3, #0]
    d7e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
    d7e4:	b103      	cbz	r3, d7e8 <exit+0x18>
    d7e6:	4798      	blx	r3
    d7e8:	4620      	mov	r0, r4
    d7ea:	f000 f90b 	bl	da04 <_exit>
    d7ee:	bf00      	nop
    d7f0:	00000000 	.word	0x00000000
    d7f4:	0000e0ec 	.word	0x0000e0ec

0000d7f8 <__libc_init_array>:
__libc_init_array():
    d7f8:	b570      	push	{r4, r5, r6, lr}
    d7fa:	4b0e      	ldr	r3, [pc, #56]	; (d834 <__libc_init_array+0x3c>)
    d7fc:	4d0e      	ldr	r5, [pc, #56]	; (d838 <__libc_init_array+0x40>)
    d7fe:	1aed      	subs	r5, r5, r3
    d800:	10ad      	asrs	r5, r5, #2
    d802:	2400      	movs	r4, #0
    d804:	461e      	mov	r6, r3
    d806:	42ac      	cmp	r4, r5
    d808:	d004      	beq.n	d814 <__libc_init_array+0x1c>
    d80a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
    d80e:	4790      	blx	r2
    d810:	3401      	adds	r4, #1
    d812:	e7f8      	b.n	d806 <__libc_init_array+0xe>
    d814:	f000 fcee 	bl	e1f4 <_init>
    d818:	4d08      	ldr	r5, [pc, #32]	; (d83c <__libc_init_array+0x44>)
    d81a:	4b09      	ldr	r3, [pc, #36]	; (d840 <__libc_init_array+0x48>)
    d81c:	1aed      	subs	r5, r5, r3
    d81e:	10ad      	asrs	r5, r5, #2
    d820:	2400      	movs	r4, #0
    d822:	461e      	mov	r6, r3
    d824:	42ac      	cmp	r4, r5
    d826:	d004      	beq.n	d832 <__libc_init_array+0x3a>
    d828:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
    d82c:	4790      	blx	r2
    d82e:	3401      	adds	r4, #1
    d830:	e7f8      	b.n	d824 <__libc_init_array+0x2c>
    d832:	bd70      	pop	{r4, r5, r6, pc}
    d834:	0000e214 	.word	0x0000e214
    d838:	0000e214 	.word	0x0000e214
    d83c:	0000e218 	.word	0x0000e218
    d840:	0000e214 	.word	0x0000e214

0000d844 <memcpy>:
memcpy():
    d844:	b510      	push	{r4, lr}
    d846:	2300      	movs	r3, #0
    d848:	4293      	cmp	r3, r2
    d84a:	d003      	beq.n	d854 <memcpy+0x10>
    d84c:	5ccc      	ldrb	r4, [r1, r3]
    d84e:	54c4      	strb	r4, [r0, r3]
    d850:	3301      	adds	r3, #1
    d852:	e7f9      	b.n	d848 <memcpy+0x4>
    d854:	bd10      	pop	{r4, pc}

0000d856 <memset>:
memset():
    d856:	4402      	add	r2, r0
    d858:	4603      	mov	r3, r0
    d85a:	4293      	cmp	r3, r2
    d85c:	d002      	beq.n	d864 <memset+0xe>
    d85e:	f803 1b01 	strb.w	r1, [r3], #1
    d862:	e7fa      	b.n	d85a <memset+0x4>
    d864:	4770      	bx	lr

0000d866 <strchr>:
strchr():
    d866:	b2c9      	uxtb	r1, r1
    d868:	4602      	mov	r2, r0
    d86a:	f810 3b01 	ldrb.w	r3, [r0], #1
    d86e:	b11b      	cbz	r3, d878 <strchr+0x12>
    d870:	428b      	cmp	r3, r1
    d872:	d1f9      	bne.n	d868 <strchr+0x2>
    d874:	4610      	mov	r0, r2
    d876:	4770      	bx	lr
    d878:	2900      	cmp	r1, #0
    d87a:	d0fb      	beq.n	d874 <strchr+0xe>
    d87c:	4618      	mov	r0, r3
    d87e:	4770      	bx	lr

0000d880 <strlen>:
strlen():
    d880:	4603      	mov	r3, r0
    d882:	f813 2b01 	ldrb.w	r2, [r3], #1
    d886:	2a00      	cmp	r2, #0
    d888:	d1fb      	bne.n	d882 <strlen+0x2>
    d88a:	1a18      	subs	r0, r3, r0
    d88c:	3801      	subs	r0, #1
    d88e:	4770      	bx	lr

0000d890 <strncmp>:
strncmp():
    d890:	b570      	push	{r4, r5, r6, lr}
    d892:	b192      	cbz	r2, d8ba <strncmp+0x2a>
    d894:	460b      	mov	r3, r1
    d896:	4605      	mov	r5, r0
    d898:	781c      	ldrb	r4, [r3, #0]
    d89a:	f810 6b01 	ldrb.w	r6, [r0], #1
    d89e:	42b4      	cmp	r4, r6
    d8a0:	f101 0101 	add.w	r1, r1, #1
    d8a4:	d101      	bne.n	d8aa <strncmp+0x1a>
    d8a6:	2a01      	cmp	r2, #1
    d8a8:	d103      	bne.n	d8b2 <strncmp+0x22>
    d8aa:	7828      	ldrb	r0, [r5, #0]
    d8ac:	781b      	ldrb	r3, [r3, #0]
    d8ae:	1ac0      	subs	r0, r0, r3
    d8b0:	bd70      	pop	{r4, r5, r6, pc}
    d8b2:	3a01      	subs	r2, #1
    d8b4:	2c00      	cmp	r4, #0
    d8b6:	d1ed      	bne.n	d894 <strncmp+0x4>
    d8b8:	e7f7      	b.n	d8aa <strncmp+0x1a>
    d8ba:	4610      	mov	r0, r2
    d8bc:	bd70      	pop	{r4, r5, r6, pc}

0000d8be <strncpy>:
strncpy():
    d8be:	b510      	push	{r4, lr}
    d8c0:	4603      	mov	r3, r0
    d8c2:	b132      	cbz	r2, d8d2 <strncpy+0x14>
    d8c4:	f811 4b01 	ldrb.w	r4, [r1], #1
    d8c8:	f803 4b01 	strb.w	r4, [r3], #1
    d8cc:	3a01      	subs	r2, #1
    d8ce:	2c00      	cmp	r4, #0
    d8d0:	d1f7      	bne.n	d8c2 <strncpy+0x4>
    d8d2:	441a      	add	r2, r3
    d8d4:	4293      	cmp	r3, r2
    d8d6:	d003      	beq.n	d8e0 <strncpy+0x22>
    d8d8:	2100      	movs	r1, #0
    d8da:	f803 1b01 	strb.w	r1, [r3], #1
    d8de:	e7f9      	b.n	d8d4 <strncpy+0x16>
    d8e0:	bd10      	pop	{r4, pc}
	...

0000d8e4 <_strtol_r>:
_strtol_r():
    d8e4:	4684      	mov	ip, r0
    d8e6:	483f      	ldr	r0, [pc, #252]	; (d9e4 <_strtol_r+0x100>)
    d8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d8ec:	f8d0 8000 	ldr.w	r8, [r0]
    d8f0:	460e      	mov	r6, r1
    d8f2:	4634      	mov	r4, r6
    d8f4:	f814 5b01 	ldrb.w	r5, [r4], #1
    d8f8:	eb08 0005 	add.w	r0, r8, r5
    d8fc:	7840      	ldrb	r0, [r0, #1]
    d8fe:	f000 0008 	and.w	r0, r0, #8
    d902:	f000 07ff 	and.w	r7, r0, #255	; 0xff
    d906:	b108      	cbz	r0, d90c <_strtol_r+0x28>
    d908:	4626      	mov	r6, r4
    d90a:	e7f2      	b.n	d8f2 <_strtol_r+0xe>
    d90c:	2d2d      	cmp	r5, #45	; 0x2d
    d90e:	d103      	bne.n	d918 <_strtol_r+0x34>
    d910:	1cb4      	adds	r4, r6, #2
    d912:	7875      	ldrb	r5, [r6, #1]
    d914:	2701      	movs	r7, #1
    d916:	e003      	b.n	d920 <_strtol_r+0x3c>
    d918:	2d2b      	cmp	r5, #43	; 0x2b
    d91a:	bf04      	itt	eq
    d91c:	7875      	ldrbeq	r5, [r6, #1]
    d91e:	1cb4      	addeq	r4, r6, #2
    d920:	f033 0010 	bics.w	r0, r3, #16
    d924:	d10d      	bne.n	d942 <_strtol_r+0x5e>
    d926:	2d30      	cmp	r5, #48	; 0x30
    d928:	d108      	bne.n	d93c <_strtol_r+0x58>
    d92a:	7820      	ldrb	r0, [r4, #0]
    d92c:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    d930:	2858      	cmp	r0, #88	; 0x58
    d932:	d151      	bne.n	d9d8 <_strtol_r+0xf4>
    d934:	7865      	ldrb	r5, [r4, #1]
    d936:	2310      	movs	r3, #16
    d938:	3402      	adds	r4, #2
    d93a:	e002      	b.n	d942 <_strtol_r+0x5e>
    d93c:	2b00      	cmp	r3, #0
    d93e:	bf08      	it	eq
    d940:	230a      	moveq	r3, #10
    d942:	2f00      	cmp	r7, #0
    d944:	bf0c      	ite	eq
    d946:	f06f 4a00 	mvneq.w	sl, #2147483648	; 0x80000000
    d94a:	f04f 4a00 	movne.w	sl, #2147483648	; 0x80000000
    d94e:	fbba f9f3 	udiv	r9, sl, r3
    d952:	2600      	movs	r6, #0
    d954:	fb03 aa19 	mls	sl, r3, r9, sl
    d958:	4630      	mov	r0, r6
    d95a:	eb08 0b05 	add.w	fp, r8, r5
    d95e:	f89b b001 	ldrb.w	fp, [fp, #1]
    d962:	f01b 0f04 	tst.w	fp, #4
    d966:	d001      	beq.n	d96c <_strtol_r+0x88>
    d968:	3d30      	subs	r5, #48	; 0x30
    d96a:	e00b      	b.n	d984 <_strtol_r+0xa0>
    d96c:	f01b 0b03 	ands.w	fp, fp, #3
    d970:	d01b      	beq.n	d9aa <_strtol_r+0xc6>
    d972:	f1bb 0f01 	cmp.w	fp, #1
    d976:	bf14      	ite	ne
    d978:	f04f 0b57 	movne.w	fp, #87	; 0x57
    d97c:	f04f 0b37 	moveq.w	fp, #55	; 0x37
    d980:	ebcb 0505 	rsb	r5, fp, r5
    d984:	429d      	cmp	r5, r3
    d986:	da10      	bge.n	d9aa <_strtol_r+0xc6>
    d988:	f1b6 3fff 	cmp.w	r6, #4294967295
    d98c:	d00a      	beq.n	d9a4 <_strtol_r+0xc0>
    d98e:	4548      	cmp	r0, r9
    d990:	d806      	bhi.n	d9a0 <_strtol_r+0xbc>
    d992:	d101      	bne.n	d998 <_strtol_r+0xb4>
    d994:	4555      	cmp	r5, sl
    d996:	dc03      	bgt.n	d9a0 <_strtol_r+0xbc>
    d998:	fb03 5000 	mla	r0, r3, r0, r5
    d99c:	2601      	movs	r6, #1
    d99e:	e001      	b.n	d9a4 <_strtol_r+0xc0>
    d9a0:	f04f 36ff 	mov.w	r6, #4294967295
    d9a4:	f814 5b01 	ldrb.w	r5, [r4], #1
    d9a8:	e7d7      	b.n	d95a <_strtol_r+0x76>
    d9aa:	1c73      	adds	r3, r6, #1
    d9ac:	d10c      	bne.n	d9c8 <_strtol_r+0xe4>
    d9ae:	2f00      	cmp	r7, #0
    d9b0:	f04f 0322 	mov.w	r3, #34	; 0x22
    d9b4:	bf0c      	ite	eq
    d9b6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    d9ba:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
    d9be:	f8cc 3000 	str.w	r3, [ip]
    d9c2:	b92a      	cbnz	r2, d9d0 <_strtol_r+0xec>
    d9c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9c8:	b107      	cbz	r7, d9cc <_strtol_r+0xe8>
    d9ca:	4240      	negs	r0, r0
    d9cc:	b142      	cbz	r2, d9e0 <_strtol_r+0xfc>
    d9ce:	b106      	cbz	r6, d9d2 <_strtol_r+0xee>
    d9d0:	1e61      	subs	r1, r4, #1
    d9d2:	6011      	str	r1, [r2, #0]
    d9d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9d8:	2b00      	cmp	r3, #0
    d9da:	bf08      	it	eq
    d9dc:	2308      	moveq	r3, #8
    d9de:	e7b0      	b.n	d942 <_strtol_r+0x5e>
    d9e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9e4:	200000ec 	.word	0x200000ec

0000d9e8 <strtol>:
strtol():
    d9e8:	b530      	push	{r4, r5, lr}
    d9ea:	4613      	mov	r3, r2
    d9ec:	4a04      	ldr	r2, [pc, #16]	; (da00 <strtol+0x18>)
    d9ee:	4605      	mov	r5, r0
    d9f0:	460c      	mov	r4, r1
    d9f2:	6810      	ldr	r0, [r2, #0]
    d9f4:	4629      	mov	r1, r5
    d9f6:	4622      	mov	r2, r4
    d9f8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    d9fc:	f7ff bf72 	b.w	d8e4 <_strtol_r>
    da00:	200000e8 	.word	0x200000e8

0000da04 <_exit>:
_exit():
    da04:	e7fe      	b.n	da04 <_exit>
    da06:	bf00      	nop
$d():
    da08:	74617453 	.word	0x74617453
    da0c:	00007375 	.word	0x00007375
    da10:	00000a0d 	.word	0x00000a0d
    da14:	75422020 	.word	0x75422020
    da18:	00646c69 	.word	0x00646c69
    da1c:	2074634f 	.word	0x2074634f
    da20:	32203820 	.word	0x32203820
    da24:	00393130 	.word	0x00393130
    da28:	00000020 	.word	0x00000020
    da2c:	333a3031 	.word	0x333a3031
    da30:	39303a30 	.word	0x39303a30
    da34:	00000000 	.word	0x00000000
    da38:	706c6568 	.word	0x706c6568
    da3c:	00000000 	.word	0x00000000
    da40:	54534554 	.word	0x54534554
    da44:	6c656820 	.word	0x6c656820
    da48:	00000070 	.word	0x00000070
    da4c:	2d2d2d2d 	.word	0x2d2d2d2d
    da50:	2d2d2d2d 	.word	0x2d2d2d2d
    da54:	2d2d2d2d 	.word	0x2d2d2d2d
    da58:	2d2d2d2d 	.word	0x2d2d2d2d
    da5c:	2d2d2d2d 	.word	0x2d2d2d2d
    da60:	2d2d2d2d 	.word	0x2d2d2d2d
    da64:	2d2d2d2d 	.word	0x2d2d2d2d
    da68:	2d2d2d2d 	.word	0x2d2d2d2d
    da6c:	2d2d2d2d 	.word	0x2d2d2d2d
    da70:	2d2d2d2d 	.word	0x2d2d2d2d
    da74:	2d2d2d2d 	.word	0x2d2d2d2d
    da78:	2d2d2d2d 	.word	0x2d2d2d2d
    da7c:	2d2d2d2d 	.word	0x2d2d2d2d
    da80:	2d2d2d2d 	.word	0x2d2d2d2d
    da84:	2d2d2d2d 	.word	0x2d2d2d2d
    da88:	00002d2d 	.word	0x00002d2d
    da8c:	4143434d 	.word	0x4143434d
    da90:	32562052 	.word	0x32562052
    da94:	0035372e 	.word	0x0035372e
    da98:	657a614d 	.word	0x657a614d
    da9c:	74616420 	.word	0x74616420
    daa0:	00000061 	.word	0x00000061
    daa4:	646e6553 	.word	0x646e6553
    daa8:	20656d20 	.word	0x20656d20
    daac:	20656874 	.word	0x20656874
    dab0:	63617274 	.word	0x63617274
    dab4:	6e69206b 	.word	0x6e69206b
    dab8:	6d726f66 	.word	0x6d726f66
    dabc:	6f697461 	.word	0x6f697461
    dac0:	0a0d736e 	.word	0x0a0d736e
    dac4:	00000000 	.word	0x00000000
    dac8:	61746144 	.word	0x61746144
    dacc:	6f687320 	.word	0x6f687320
    dad0:	20646c75 	.word	0x20646c75
    dad4:	65766168 	.word	0x65766168
    dad8:	65687420 	.word	0x65687420
    dadc:	756c6320 	.word	0x756c6320
    dae0:	72657473 	.word	0x72657473
    dae4:	3a666f20 	.word	0x3a666f20
    dae8:	00000000 	.word	0x00000000
    daec:	6d756e24 	.word	0x6d756e24
    daf0:	20726562 	.word	0x20726562
    daf4:	7320666f 	.word	0x7320666f
    daf8:	656d6765 	.word	0x656d6765
    dafc:	3b73746e 	.word	0x3b73746e
    db00:	00000020 	.word	0x00000020
    db04:	733b233b 	.word	0x733b233b
    db08:	656d6765 	.word	0x656d6765
    db0c:	6e20746e 	.word	0x6e20746e
    db10:	65626d75 	.word	0x65626d75
    db14:	00003b72 	.word	0x00003b72
    db18:	626d756e 	.word	0x626d756e
    db1c:	6f207265 	.word	0x6f207265
    db20:	69662066 	.word	0x69662066
    db24:	2073646c 	.word	0x2073646c
    db28:	20726f66 	.word	0x20726f66
    db2c:	73696874 	.word	0x73696874
    db30:	67657320 	.word	0x67657320
    db34:	746e656d 	.word	0x746e656d
    db38:	0000003b 	.word	0x0000003b
    db3c:	6c6c6177 	.word	0x6c6c6177
    db40:	67697220 	.word	0x67697220
    db44:	62287468 	.word	0x62287468
    db48:	296c6f6f 	.word	0x296c6f6f
    db4c:	6177202c 	.word	0x6177202c
    db50:	6c206c6c 	.word	0x6c206c6c
    db54:	28746665 	.word	0x28746665
    db58:	6c6f6f62 	.word	0x6c6f6f62
    db5c:	2e2e3b29 	.word	0x2e2e3b29
    db60:	3b2e2e2e 	.word	0x3b2e2e2e
    db64:	00000000 	.word	0x00000000
    db68:	35353224 	.word	0x35353224
    db6c:	0000003b 	.word	0x0000003b
    db70:	74617473 	.word	0x74617473
    db74:	00007375 	.word	0x00007375
    db78:	00000024 	.word	0x00000024
    db7c:	65636552 	.word	0x65636552
    db80:	64657669 	.word	0x64657669
    db84:	65687420 	.word	0x65687420
    db88:	61727420 	.word	0x61727420
    db8c:	69206b63 	.word	0x69206b63
    db90:	0d6f666e 	.word	0x0d6f666e
    db94:	0000000a 	.word	0x0000000a
    db98:	6e6f7257 	.word	0x6e6f7257
    db9c:	61442067 	.word	0x61442067
    dba0:	20216174 	.word	0x20216174
    dba4:	61656c50 	.word	0x61656c50
    dba8:	72206573 	.word	0x72206573
    dbac:	6e657365 	.word	0x6e657365
    dbb0:	68742064 	.word	0x68742064
    dbb4:	72542065 	.word	0x72542065
    dbb8:	206b6361 	.word	0x206b6361
    dbbc:	61746144 	.word	0x61746144
    dbc0:	00000000 	.word	0x00000000
    dbc4:	00000020 	.word	0x00000020
    dbc8:	706c6568 	.word	0x706c6568
    dbcc:	00000000 	.word	0x00000000
    dbd0:	5f534c43 	.word	0x5f534c43
    dbd4:	20454c42 	.word	0x20454c42
    dbd8:	706c6568 	.word	0x706c6568
    dbdc:	00000000 	.word	0x00000000
    dbe0:	00000a0d 	.word	0x00000a0d
    dbe4:	2d2d2d2d 	.word	0x2d2d2d2d
    dbe8:	2d2d2d2d 	.word	0x2d2d2d2d
    dbec:	2d2d2d2d 	.word	0x2d2d2d2d
    dbf0:	2d2d2d2d 	.word	0x2d2d2d2d
    dbf4:	2d2d2d2d 	.word	0x2d2d2d2d
    dbf8:	2d2d2d2d 	.word	0x2d2d2d2d
    dbfc:	2d2d2d2d 	.word	0x2d2d2d2d
    dc00:	2d2d2d2d 	.word	0x2d2d2d2d
    dc04:	2d2d2d2d 	.word	0x2d2d2d2d
    dc08:	2d2d2d2d 	.word	0x2d2d2d2d
    dc0c:	2d2d2d2d 	.word	0x2d2d2d2d
    dc10:	2d2d2d2d 	.word	0x2d2d2d2d
    dc14:	2d2d2d2d 	.word	0x2d2d2d2d
    dc18:	2d2d2d2d 	.word	0x2d2d2d2d
    dc1c:	2d2d2d2d 	.word	0x2d2d2d2d
    dc20:	00002d2d 	.word	0x00002d2d
    dc24:	5020794d 	.word	0x5020794d
    dc28:	656a6f72 	.word	0x656a6f72
    dc2c:	4e207463 	.word	0x4e207463
    dc30:	00656d61 	.word	0x00656d61
    dc34:	5f534c43 	.word	0x5f534c43
    dc38:	00454c42 	.word	0x00454c42
    dc3c:	756f7247 	.word	0x756f7247
    dc40:	666f2070 	.word	0x666f2070
    dc44:	534c4320 	.word	0x534c4320
    dc48:	454c425f 	.word	0x454c425f
    dc4c:	6d6f6320 	.word	0x6d6f6320
    dc50:	646e616d 	.word	0x646e616d
    dc54:	000a0d73 	.word	0x000a0d73
    dc58:	65682020 	.word	0x65682020
    dc5c:	737c706c 	.word	0x737c706c
    dc60:	75746174 	.word	0x75746174
    dc64:	00000073 	.word	0x00000073
    dc68:	6e697250 	.word	0x6e697250
    dc6c:	65682074 	.word	0x65682074
    dc70:	6f20706c 	.word	0x6f20706c
    dc74:	74732072 	.word	0x74732072
    dc78:	73757461 	.word	0x73757461
    dc7c:	666e6920 	.word	0x666e6920
    dc80:	616d726f 	.word	0x616d726f
    dc84:	6e6f6974 	.word	0x6e6f6974
    dc88:	00000a0d 	.word	0x00000a0d
    dc8c:	74617473 	.word	0x74617473
    dc90:	00007375 	.word	0x00007375
    dc94:	5f534c43 	.word	0x5f534c43
    dc98:	20454c42 	.word	0x20454c42
    dc9c:	74617473 	.word	0x74617473
    dca0:	00007375 	.word	0x00007375
    dca4:	3e444d43 	.word	0x3e444d43
    dca8:	00000020 	.word	0x00000020
    dcac:	75422020 	.word	0x75422020
    dcb0:	00646c69 	.word	0x00646c69
    dcb4:	2074634f 	.word	0x2074634f
    dcb8:	32203420 	.word	0x32203420
    dcbc:	00393130 	.word	0x00393130
    dcc0:	00000020 	.word	0x00000020
    dcc4:	353a3431 	.word	0x353a3431
    dcc8:	32353a32 	.word	0x32353a32
    dccc:	00000000 	.word	0x00000000
    dcd0:	202a2a2a 	.word	0x202a2a2a
    dcd4:	6c696146 	.word	0x6c696146
    dcd8:	6f206465 	.word	0x6f206465
    dcdc:	6e752072 	.word	0x6e752072
    dce0:	776f6e6b 	.word	0x776f6e6b
    dce4:	6f63206e 	.word	0x6f63206e
    dce8:	6e616d6d 	.word	0x6e616d6d
    dcec:	00203a64 	.word	0x00203a64
    dcf0:	202a2a2a 	.word	0x202a2a2a
    dcf4:	65707954 	.word	0x65707954
    dcf8:	00000020 	.word	0x00000020
    dcfc:	206f7420 	.word	0x206f7420
    dd00:	20746567 	.word	0x20746567
    dd04:	696c2061 	.word	0x696c2061
    dd08:	6f207473 	.word	0x6f207473
    dd0c:	76612066 	.word	0x76612066
    dd10:	616c6961 	.word	0x616c6961
    dd14:	20656c62 	.word	0x20656c62
    dd18:	6d6d6f63 	.word	0x6d6d6f63
    dd1c:	73646e61 	.word	0x73646e61
    dd20:	00000a0d 	.word	0x00000a0d
    dd24:	2a2a0a0d 	.word	0x2a2a0a0d
    dd28:	6e45202a 	.word	0x6e45202a
    dd2c:	64612064 	.word	0x64612064
    dd30:	73657264 	.word	0x73657264
    dd34:	756d2073 	.word	0x756d2073
    dd38:	62207473 	.word	0x62207473
    dd3c:	616c2065 	.word	0x616c2065
    dd40:	72656772 	.word	0x72656772
    dd44:	20726f20 	.word	0x20726f20
    dd48:	61757165 	.word	0x61757165
    dd4c:	6874206c 	.word	0x6874206c
    dd50:	73206e61 	.word	0x73206e61
    dd54:	74726174 	.word	0x74726174
    dd58:	64646120 	.word	0x64646120
    dd5c:	73736572 	.word	0x73736572
    dd60:	00000a0d 	.word	0x00000a0d
    dd64:	2a2a0a0d 	.word	0x2a2a0a0d
    dd68:	6552202a 	.word	0x6552202a
    dd6c:	66206461 	.word	0x66206461
    dd70:	656c6961 	.word	0x656c6961
    dd74:	0a0d2164 	.word	0x0a0d2164
    dd78:	00000000 	.word	0x00000000
    dd7c:	2a2a0a0d 	.word	0x2a2a0a0d
    dd80:	6146202a 	.word	0x6146202a
    dd84:	72756c69 	.word	0x72756c69
    dd88:	65722065 	.word	0x65722065
    dd8c:	6e696461 	.word	0x6e696461
    dd90:	656d2067 	.word	0x656d2067
    dd94:	79726f6d 	.word	0x79726f6d
    dd98:	6f6c6220 	.word	0x6f6c6220
    dd9c:	0d216b63 	.word	0x0d216b63
    dda0:	0000000a 	.word	0x0000000a
    dda4:	00007830 	.word	0x00007830
    dda8:	00202d2d 	.word	0x00202d2d
    ddac:	3732332d 	.word	0x3732332d
    ddb0:	00003836 	.word	0x00003836
    ddb4:	3431322d 	.word	0x3431322d
    ddb8:	33383437 	.word	0x33383437
    ddbc:	00383436 	.word	0x00383436
    ddc0:	00000000 	.word	0x00000000
    ddc4:	0000002d 	.word	0x0000002d

0000ddc8 <ClockGenModeMatrix>:
    ddc8:	00010000 00030001 00040004 00040004     ................
    ddd8:	00010000 00030002 00040004 00040004     ................
    dde8:	00010001 00010002 00010001 00010001     ................
    ddf8:	00010000 00030001 00040004 00040004     ................
    de08:	00010000 00030001 00050004 00060006     ................
    de18:	00040004 00040004 00050004 00060006     ................
    de28:	00040004 00040004 00050004 00070006     ................
    de38:	00060006 00060006 00060006 00070006     ................

0000de48 <CPU_ClockConfigDescriptors>:
    de48:	1a000097 46010024 00800000 000c0000     ....$..F........
    de58:	00010000 01150000 03938700              ............

0000de64 <CPU_DefaultFEI>:
    de64:	00008004 00020000                       ........

0000de6c <CPU_DefaultFBI>:
    de6c:	00008044 00020000                       D.......

0000de74 <CPU_DefaultBLPI>:
    de74:	00008244 00020000                       D.......

0000de7c <CPU_DefaultFEE>:
    de7c:	0000a418 00020000                       ........

0000de84 <CPU_DefaultFBE>:
    de84:	0000a498 00020000                       ........

0000de8c <CPU_DefaultBLPE>:
    de8c:	0000a658 00020000                       X.......

0000de94 <CPU_DefaultPBE>:
    de94:	0100a480 00020058                       ....X...

0000de9c <CPU_DefaultPEE>:
    de9c:	0100a418 00020058                       ....X...

0000dea4 <CPU_ClockGenModeRegs>:
    dea4:	0000de64 0000de6c 0000de74 0000de7c     d...l...t...|...
    deb4:	0000de84 0000de8c 0000de94 0000de9c     ................

0000dec4 <CmdParserTable>:
    dec4:	00002f11 00000000                       ./......

0000decc <ChannelToPin>:
    decc:	11031300 00000012                       ........

0000ded4 <ChannelToPin>:
    ded4:	0c131401 0000000d                       ........

0000dedc <CLS_BLE_stdio>:
    dedc:	00007f91 00007fb5 00007fb5 00007fd5     ................

0000deec <K4eye>:
    deec:	41700000 00000000 00000000 41700000     ..pA..........pA

0000defc <K4eyeCurve>:
    defc:	41a00000 00000000 00000000 41a00000     ...A...........A

0000df0c <Mbar>:
    df0c:	3d591687 00000000 00000000 37eedfbe     ..Y=...........7

0000df1c <BbarInv>:
    df1c:	3bd4fdf4 3e90b216 3bd4fdf4 be90b216     ...;...>...;....

0000df2c <sin_lut_table>:
    df2c:	3f800000 3f800000 00000000 3c8ef859     ...?...?....Y..<
    df3c:	3d0ef2c6 3d565e3a 3d8edc7b 3db27eb6     ...=:^V={..=.~.=
    df4c:	3dd61305 3df996a2 3e0e8365 3e20305b     ...=...=e..>[0 >
    df5c:	3e31d0d4 3e43636f 3e54e6cd 3e665992     ..1>ocC>..T>.Yf>
    df6c:	3e77ba60 3e8483ee 3e8d2057 3e95b1be     `.w>...>W .>...>
    df7c:	3e9e377a 3ea6b0df 3eaf1d44 3eb77c01     z7.>...>D..>.|.>
    df8c:	3ebfcc6f 3ec80de9 3ed03fc9 3ed8616c     o..>...>.?.>la.>
    df9c:	3ee0722f 3ee87171 3ef05e94 3ef838f7     /r.>qq.>.^.>.8.>
    dfac:	3f000000 3f03d989 3f07a8ca 3f0b6d77     ...?...?...?wm.?
    dfbc:	3f0f2744 3f12d5e8 3f167918 3f1a108d     D'.?...?.y.?...?
    dfcc:	3f1d9bfe 3f211b24 3f248dbb 3f27f37c     ...?$.!?..$?|.'?
    dfdc:	3f2b4c25 3f2e9772 3f31d522 3f3504f3     %L+?r..?".1?..5?
    dfec:	3f3826a7 3f3b39ff 3f3e3ebd 3f4134a6     .&8?.9;?.>>?.4A?
    dffc:	3f441b7d 3f46f30a 3f49bb13 3f4c7360     }.D?..F?..I?`sL?
    e00c:	3f4f1bbd 3f51b3f3 3f543bce 3f56b31d     ..O?..Q?.;T?..V?
    e01c:	3f5919ae 3f5b6f51 3f5db3d7 3f5fe714     ..Y?Qo[?..]?.._?
    e02c:	3f6208da 3f641901 3f66175e 3f6803ca     ..b?..d?^.f?..h?
    e03c:	3f69de1d 3f6ba635 3f6d5bec 3f6eff20     ..i?5.k?.[m? .n?
    e04c:	3f708fb2 3f720d81 3f737871 3f74d063     ..p?..r?qxs?c.t?
    e05c:	3f76153f 3f7746ea 3f78654d 3f797051     ?.v?.Fw?Mex?Qpy?
    e06c:	3f7a67e2 3f7b4beb 3f7c1c5c 3f7cd925     .gz?.K{?\.|?%.|?
    e07c:	3f7d8235 3f7e1781 3f7e98fd 3f7f069e     5.}?..~?..~?...?
    e08c:	3f7f605c 3f7fa62f 3f7fd814 3f7ff605     \`.?/..?...?...?
    e09c:	3f800000 00707865 74727173 00000000     ...?exp.sqrt....
    e0ac:	74727173 00000066 00000000              sqrtf.......

0000e0b8 <halF>:
    e0b8:	00000000 3fe00000 00000000 bfe00000     .......?........

0000e0c8 <ln2LO>:
    e0c8:	35793c76 3dea39ef 35793c76 bdea39ef     v<y5.9.=v<y5.9..

0000e0d8 <ln2HI>:
    e0d8:	fee00000 3fe62e42 fee00000 bfe62e42     ....B..?....B...
    e0e8:	00000043                                C...

0000e0ec <_global_impure_ptr>:
    e0ec:	20000088                                ... 

0000e0f0 <_ctype_>:
    e0f0:	20202000 20202020 28282020 20282828     .         ((((( 
    e100:	20202020 20202020 20202020 20202020                     
    e110:	10108820 10101010 10101010 10101010      ...............
    e120:	04040410 04040404 10040404 10101010     ................
    e130:	41411010 41414141 01010101 01010101     ..AAAAAA........
    e140:	01010101 01010101 01010101 10101010     ................
    e150:	42421010 42424242 02020202 02020202     ..BBBBBB........
    e160:	02020202 02020202 02020202 10101010     ................
    e170:	00000020 00000000 00000000 00000000      ...............
	...

0000e1f4 <_init>:
$t():
    e1f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e1f6:	bf00      	nop
    e1f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e1fa:	bc08      	pop	{r3}
    e1fc:	469e      	mov	lr, r3
    e1fe:	4770      	bx	lr

0000e200 <_fini>:
    e200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e202:	bf00      	nop
    e204:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e206:	bc08      	pop	{r3}
    e208:	469e      	mov	lr, r3
    e20a:	4770      	bx	lr
